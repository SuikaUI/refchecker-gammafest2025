Compositional Human Pose Regression
Xiao Sun1, Jiaxiang Shang1, Shuang Liang2∗, Yichen Wei1
1Microsoft Research, 2 Tongji University
{xias, yichenw}@microsoft.com, , 
Regression based methods are not performing as well as
detection based methods for human pose estimation. A central problem is that the structural information in the pose
is not well exploited in the previous regression methods.
In this work, we propose a structure-aware regression approach. It adopts a reparameterized pose representation using bones instead of joints. It exploits the joint connection
structure to deﬁne a compositional loss function that encodes the long range interactions in the pose. It is simple,
effective, and general for both 2D and 3D pose estimation
in a uniﬁed setting. Comprehensive evaluation validates the
effectiveness of our approach. It signiﬁcantly advances the
state-of-the-art on Human3.6M and is competitive with
state-of-the-art results on MPII .
1. Introduction
Human pose estimation has been extensively studied for
both 3D and 2D . Recently, deep convolutional neutral networks (CNNs) have achieved signiﬁcant progresses.
Existing approaches fall into two categories: detection
based and regression based. Detection based methods generate a likelihood heat map for each joint and locate the joint
as the point with the maximum value in the map. These heat
maps are usually noisy and multi-mode. The ambiguity is
reduced by exploiting the dependence between the joints in
various ways. A prevalent family of state-of-the-art methods adopt a multi-stage architecture,
where the output of the previous stage is used as input to
enhance the learning of the next stage. These methods are
dominant for 2D pose estimation . However, they do not
easily generalize to 3D pose estimation, because the 3D heat
maps are too demanding for memory and computation.
Regression based methods directly map the input image
to the output joints. They directly target at the task and they
are general for both 3D and 2D pose estimation. Nevertheless, they are not performing as well as detection based
∗Corresponding author.
methods. As an evidence, only one method in the 2D
pose benchmark is regression based. While they are
widely used for 3D pose estimation , the performance is not satisfactory. A central problem
is that they simply minimize the per-joint location errors independently but ignore the internal structures of the pose.
In other words, joint dependence is not well exploited.
In this work, we propose a structure-aware approach,
called compositional pose regression. It is based on two
ideas. First, it uses bones instead of joints as pose representation, because the bones are more primitive, more stable,
and easier to learn than joints. Second, it exploits the joint
connection structure to deﬁne a compositional loss function
that encodes long range interactions between the bones.
The approach is simple, effective and efﬁcient. It only
re-parameterizes the pose representation, which is the network output, and enhances the loss function, which relates
the output to ground truth. It does not alter other algorithm
design choices and is compatible with such choices, such as
network architecture. It can be easily adapted into any existing regression approaches with little overhead for memory
and computation, in both training and inference.
The approach is general and can be used for both 3D and
2D pose regression, indistinguishably. Moreover, 2D and
3D data can be easily mixed simultaneously in the training.
For the ﬁrst time, it is shown that such directly mixed learning is effective. This property makes our approach different
from all existing ones that target at either 3D or 2D task.
The effectiveness of our approach is validated by comprehensive evaluation with a few new metrics, rigorous ablation study and comparison with state-of-the-art on both
3D and 2D benchmarks. Speciﬁcally, it advances the stateof-the-art on 3D Human3.6M dataset by a large margin
and achieves a record of 59.1 mm average joint error, about
12% relatively better that state-of-the-art.
On 2D MPII
dataset , it achieves 86.4% (PCKh 0.5). It is the bestperforming regression based method and on bar with the
state-of-the-art detection based methods. As a by-product,
our approach generates high quality 3D poses for in the wild
images, indicating the potential of our approach for transfer
learning of 3D pose estimation in the wild.
 
2. Related Work
Human pose estimation has been extensively studied for
years. A complete review is beyond the scope of this work.
We refer the readers to for a detailed survey.
The previous works are reviewed from two perspectives
related to this work. First is how to exploit the joint dependency for 3D and 2D pose estimation. Second is how to
exploit “in the wild” 2D data for 3D pose estimation.
3D Pose Estimation Some methods use two separate
steps. They ﬁrst perform 2D joint prediction and then reconstruct the 3D pose via optimization or search. There is
no end-to-end learning. Zhou et al. combines uncertainty maps of the 2D joints location and a sparsity-driven
3D geometric prior to infer the 3D joint location via an EM
algorithm. Chen et al. searches a large 3D pose library
and uses the estimated 2D pose as query. Bogo et al. ﬁt a
recently published statistical body shape model to the
2D joints. Jahangiri et al. generates multiple hypotheses from 2D joints using a novel generative model.
Some methods implicitly learn the pose structure from
Tekin et al. represents the 3D pose with an
over-complete dictionary. A high-dimensional latent pose
representation is learned to account for joint dependencies.
Pavlakos et al. extends the Hourglass framework
from 2D to 3D. A coarse-to-ﬁne approach is used to address the large dimensionality increase. Li et al. uses
an image-pose embedding sub-network to regularize the 3D
pose prediction.
Above works do not use prior knowledge in 3D model.
Such prior knowledge is ﬁrstly used in by embedding a kinematic model layer into deep neutral networks and
estimating model parameters instead of joints. The geometric structure is better preserved. Yet, the kinematic model
parameterization is highly nonlinear and its optimization in
deep networks is hard. Also, the methods are limited for a
fully speciﬁed kinematic model (ﬁxed bone length, known
scale). They do not generalize to 2D pose estimation, where
a good 2D kinematic model does not exist.
2D Pose Estimation Before the deep learning era, many
methods use graphical models to represent the structures in
the joints. Pictorial structure model is one of the earliest. There is a lot of extensions .
Pose estimation is formulated as inference problems on the
graph. A common drawback is that the inference is usually
complex, slow, and hard to integrate with deep networks.
Recently, the graphical models have been integrated into
deep networks in various ways. Tompson et al. ﬁrstly
combine a convolutional network with a graphical model
for human pose estimation. Ouyang et al. joints feature extraction, part deformation handling, occlusion handling and classiﬁcation all into deep learning framework.
Chu et al. introduce a geometrical transform kernels in
CNN framework that can pass informations between different joint heat maps. Both features and their relationships
are jointly learned in a end-to-end learning system. Yang et
al. combine deep CNNs with the expressive deformable
mixture of parts to regularize the output.
Another category of methods use a multi-stage architecture . The results of the previous
stage are used as inputs to enhance or regularize the learning of the next stage. Newell et al. introduce an Stacked
Hourglass architecture that better capture the various spatial
relationships associated with the body. Chu et al. further extend with a multi-context attention mechanism.
Bulat et al. propose a detection-followed-by-regression
CNN cascade. Wei et al. design a sequential architecture composed of convolutional networks that directly
operate on belief maps from previous stages. Gkioxari et
al. predict joint heat maps sequentially and conditionally according to their difﬁculties. All such methods learn
the joint dependency from data, implicitly.
Different to all above 3D and 2D methods, our approach
explicitly exploits the joint connection structure in the pose.
It does not make further assumptions and does not involve
complex algorithm design. It only changes the pose representation and enhances the loss function. It is simple, effective, and can be combined with existing techniques.
Leveraging in the wild 2D data for 3D pose estimation
3D pose capturing is difﬁcult. The largest 3D human pose
dataset Human3.6M is still limited in that the subjects,
the environment, and the poses have limited complexity and
variations. Models trained on such data do not generalize
well to other domains, such as in the wild images.
In contrast, in the wild images and 2D pose annotation
are abundant. Many works leverage the 2D data for 3D pose
estimation. Most of them consist of two separate steps.
Some methods ﬁrstly generate the 2D pose results (joint
locations or heat maps) and then use them as input for recovering the 3D pose. The information in the 2D images is
discarded in the second step. Bogo et al. ﬁrst use Deep-
Cut to generate 2D joint location, then ﬁt with a 3D
body shape model. Moreno et al. use CPM to
detect 2D position of human joints, and then use these observations to infer 3D pose via distance matrix regression.
Zhou et al. use Hourglass to generate 2D joint
heat maps and then coupled with a geometric prior and Jahangiri et al. also use Hourglass to predict 2D joint heat
maps and then infer multiple 3D hypotheses from them. Wu
et al. propose 3D interpreter network that sequentially
estimates 2D keypoint heat maps and 3D object structure.
Some methods ﬁrstly train the deep network model on
2D data and ﬁne-tune the model on 3D data. The information in 2D data is partially retained by the pre-training, but
not fully exploited as the second ﬁne-tuning step cannot use
2D data. Pavlakos et al. extends Hourglass model
for 3D volumetric prediction. 2D heat maps are used as intermediate supervision. Tome et al. extends CPM 
to 3D by adding a probabilistic 3D pose model to the CPM.
Some methods train both 2D and 3D pose networks simultaneously by sharing intermediate CNN features . Yet, they use separate networks for 2D and 3D tasks.
Unlike the above methods, our approach treats the 2D
and 3D data in the same way and combine them in a uni-
ﬁed training framework. The abundant information in the
2D data is fully exploited during training. As a result, our
method achieves strong performance on both 3D and 2D
benchmarks. As a by-product, it generates plausible and
convincing 3D pose results for in the wild images.
Some methods use synthetic datasets which are generated from deforming a human template model with known
ground truth . These methods are complementary to
the others as they focus on data augmentation.
3. Compositional Pose Regression
Given an image of a person, the pose estimation problem
is to obtain the 2D (or 3D) position of all the K joints, J =
{Jk|k = 1, ..., K}. Typically, the coordinate unit is pixel
for 2D and millimeter (mm) for 3D.
Without loss of generality, the joints are deﬁned with respect to a constant origin point in the image coordinate system. For convenience, let the origin be J0. Speciﬁcally,
for 2D pose estimation, it is the top-left point of the image. For 3D pose estimation, it is the ground truth pelvis
joint .
For regression learning, normalization is necessary to
compensate for the differences in magnitude of the variables. We use the standard normalization by subtraction of
mean and division of standard deviation. For a variable var,
it is normalized as
var = N(var) = var −mean(vargt)
std(vargt)
The inverse function for unnormalization is
var = N −1( ˜
var·std(vargt)+mean(vargt). (2)
Note that both mean(∗) and std(∗) are constants and
calculated from the ground truth training samples. The predicted output from the network is assumed already normalized. Both functions N(∗) and N −1(∗) are parameter free
and embedded in the network. For notation simplicity, we
var for N(var).
3.1. Direct Joint Regression: A Baseline
Most previous regression based methods directly minimize the squared difference of the predicted and ground truth joints. In experiments, we found
that the absolute difference (L1 norm) performs better. In
our direct joint regression baseline, the joint loss is
||˜Jk −˜Jgt
Note that both the prediction and ground truth are normalized.
There is a clear drawback in loss Eq.(3). The joints are
independently estimated. The joint correlation, or the internal structure in the pose, is not well exploited. For example,
certain geometric constraints (e.g., bone length is ﬁxed) are
not satisﬁed.
Previous works only evaluate the joint location accuracy.
This is also limited because the internal structures in the
pose are not well evaluated.
3.2. A Bone Based Representation
We show that a simple reparameterization of the pose
is effective to address the above issues. As shown in Figure 1(left), a pose is structured as a tree. Without loss of
generality, let pelvis be the the root joint J1 and tree edges
be directed from the root to the end joints such as wrists and
ankles. Let the function parent(k) return the index of parent joint for kth joint. For notation consistency, let the parent of the root joint J1 be the origin J0, i.e., parent(1) = 0.
Now, for kth joint, we deﬁne its associated bone as a
directed vector pointing from it to its parent,
Bk = Jparent(k) −Jk.
The joints J are deﬁned in the global coordinate system. In contrast, bones B = {Bk|k = 1, ..., K} are more
primitive and deﬁned in the local coordinate systems. Representing the pose using bones brings several beneﬁts.
Stability Bones are more stable than joints and easier to
learn. Figure 1 (middle and right) shows that the standard
deviation of bones is much smaller than that of their corresponding joints, especially for parts (ankle, wrist, head) far
away from the root pelvis, in both 3D (Human 3.6M )
and 2D datasets (MPII ).
Geometric convenience Bones can encode the geometric structure and express the geometric constraints more
easily than joints. For example, constraint of “bone length
is ﬁxed” involves one bone but two joints.
Constraint
of “joint rotation angle is in limited range” involves two
bones but three joints. Such observations motivate us to
propose new evaluation metrics for geometric validity, as
elaborated in Section 5. Experiments show that bone based
representation is better than joint based representation on
such metrics.
Application convenience Many pose-driven applications only need the local bones instead of the global joints.
For example, the local and relative “elbow to wrist” motion
can sufﬁciently represent a “pointing” gesture that would be
useful for certain human computer interaction scenarios.
Shoulder.R
Shoulder.L
Figure 1. Left: a human pose is represented as either joints J or bones B. Middle/Right: standard deviations of bones and joints for the
3D Human3.6M dataset and 2D MPII dataset .
3.3. Compositional Loss Function
Similar to the joint loss in Eq. (3), bones can be learnt by
minimizing the bone loss function
|| ˜Bk −˜Bgt
However, there is a clear drawback in this loss.
the bones are local and independently estimated in Eq. (5),
the errors in the individual bone predictions would propagate along the skeleton and accumulate into large errors for
joints at the far end. For example, in order to predict Jwrist,
we need to concatenate Bwrist, Belbow,...,Bpelvis. Errors
in these bones will accumulate and affect the accuracy of
Jwrist in a random manner.
To address the problem, long range objectives should be
considered in the loss. Long range errors should be balanced over the intermediate bones. In this way, bones are
jointly optimized. Speciﬁcally, let Ju and Jv be two arbitrary joints. Suppose the path from Ju to Jv along the skeleton tree has M joints. Let the function I(m) return the index of the mth joint on the path, e.g., I(1) = u, I(M) = v.
Note that M and I(∗) are constants but depend on u and v.
Such dependence is omitted in the notations for clarity.
The long range, relative joint position ∆Ju,v is the summation of the bones along the path, as
JI(m+1) −JI(m)
sgn(parent(I(m)), I(m + 1)) · N −1( ˜BI(m)).
The function sgn(∗, ∗) indicates whether the bone
BI(m) direction is along the path direction. It returns 1
when parent(I(m)) = I(m + 1) and −1 otherwise. Note
that the network predicted bone ˜B(∗) is normalized, as in
Eq. (6). It is unnormalized via Eq. (2) before summation.
Eq.(6) is differentiable with respect to the bones. It is
efﬁcient and has no free parameters. It is implemented as a
special compositional layer in the neutral networks.
The ground truth relative position is
Then, given a joint pair set P, the compositional loss
function is deﬁned as
In this way, every joint pair (u, v) constrains the bones
along the path from u to v. Each bone is constrained by
multiple paths given a large number of joint pairs. The errors are better balanced over the bones during learning.
The joint pair set P can be arbitrary. To validate the
effectiveness of Eq.(8), we test four variants:
• Pjoint = {(u, 0)|u = 1, ..., K}. It only considers the
global joint locations. It is similar to joint loss Eq.(3).
• Pbone = {(u, parent(u))|u = 1, ..., K}. It only considers the bones. It degenerates to the bone loss Eq.(5).
• Pboth = Pjoint
S Pbone. It combines the above two
and veriﬁes whether Eq.(8) is effective.
• Pall = {(u, v)|u < v, u, v = 1, ..., K}. It contains all
joint pairs. The pose structure is fully exploited.
4. Uniﬁed 2D and 3D Pose Regression
All the notations and equations in Section 3 are applicable for both 3D and 2D pose estimation in the same way.
The output pose dimension is either 3K or 2K.
Training using mixed 3D and 2D data is straightforward.
All the variables, such as joint J, bone B, and relative joint
position ∆Ju,v, are decomposed into xy part and z part.
The loss functions can be similarly decomposed. For example, for compositional loss function Eq.(8), we have
L(B, P) = Lxy(B, P) + Lz(B, P).
The xy term Lxy(∗, ∗) is always valid for both 3D and
2D samples. The z term Lz(∗, ∗) is only computed for 3D
samples and set to 0 for 2D samples. In the latter case, no
gradient is back-propagated from Lz(∗, ∗).
Note that the xy part and z part variables have different
dimensions. xy is in image coordinate frame and the unit
is in pixel. z is in camera coordinate frame and the unit is
metric (millimeters in our case). This is no problem. During
training, they are appropriately normalized (Eq.(8), Eq.(1))
or unnormalized (Eq.(6), Eq.(2)). During inference, in order
to recover the 3D metric coordinates, the xy part is backprojected into camera space using known camera intrinsic
parameters and a perspecitive projection model.
Training We use the state-of-the-art ResNet-50 .
The model is pre-trained on ImageNet classiﬁcation
dataset . The last fully connected layer is then modiﬁed
to output 3K (or 2K) coordinates and the model is ﬁnetuned on our target task and data. The training is the same
for all the tasks (3D, 2D, mixed). SGD is used for optimization. There are 25 epoches. The base learning rate is 0.03. It
drops to 0.003 after 10 epoches and 0.0003 after another 10
epoches. Mini-batch size is 64. Two GPUs are used. Weight
decay is 0.0002. Momentum is 0.9. Batch-normalization
 is used. Implementation is in Caffe .
Data Processing and Augmentation The input image
is normalized to 224 × 224. Data augmentation includes
random translation(±2% of the image size), scale(±25%),
rotation(±30 degrees) and ﬂip. For MPII dataset, the training data are augmented by 20 times.
For Human3.6M
dataset, the training data are augmented by 4 times. For
mixed 2D-3D task, each mini-batch consists of half 2D and
half 3D samples, randomly sampled and shufﬂed.
5. Experiments
Our approach is evaluated on 3D and 2D human pose
benchmarks.
Human3.6M is the largest 3D human
pose benchmark. The dataset is captured in controlled environment. The image appearance of the subjects and the
background is simple. Accurate 3D human joint locations
are obtained from motion capture devices.
MPII is the benchmark dataset for 2D human pose
estimation. It includes about 25k images and 40k annotated
2D poses. 25k of them are for training and another 7k of
the remaining are for testing. The images were collected
from YouTube videos covering daily human activities with
complex poses and image appearances.
5.1. Comprehensive Evaluation Metrics
For 3D human pose estimation, previous works use the mean per
joint position error (MPJPE). We call this metric Joint Error. Some works ﬁrstly align the predicted 3D pose and ground truth 3D pose with a rigid trans-
CNN prediction
loss function
L(J ), Eq.(3)
Ours (joint)
L(B, Pjoint), Eq.(8)
Ours (bone)
L(B, Pbone), Eq.(8)
Ours (both)
L(B, Pboth), Eq.(8)
Ours (all)
L(B, Pall), Eq.(8)
Table 1. The baseline and four variants of our method.
formation using Procrustes Analysis and then compute
MPJPE. We call this metric PA Joint Error.
For 2D human pose estimation in MPII , Percentage
of Correct Keypoints (PCK) metric is used for evaluation.
Above metrics only measures the accuracy of absolute
joint location. They do not fully reﬂect the accuracy of internal structures in the pose. We propose three additional
metrics for a comprehensive evaluation.
The ﬁrst metric is the mean per bone position error, or
Bone Error. It is similar to Joint Error, but measures the
relative joint location accuracy. This metric is applicable
for both 3D and 2D pose.
The next two are only for 3D pose as they measure the
validity of 3D geometric constraints. Such metrics are important as violation of the constraints will cause physically
infeasible 3D poses. Such errors are critical for certain applications such as 3D motion capture.
The second metric is the bone length standard deviation,
or Bone Std. It measures the stability of bone length. For
each bone, the standard deviation of its length is computed
over all the testing samples of the same subject.
The third metric is the percentage of illegal joint angle,
or Illegal Angle. It measures whether the rotation angles at a
joint are physically feasible. We use the recent method and
code in to evaluate the legality of each predicted joint.
Note that this metric is only for joints on the limbs and does
not apply to those on the torso.
5.2. Experiments on 3D Pose of Human3.6M
For Human3.6M , there are two widely used evaluation protocols with different training and testing data split.
Protocol 1 Six subjects (S1, S5, S6, S7, S8, S9) are used
in training. Evaluation is performed on every 64th frame of
Subject 11’s videos. It is used in . PA
Joint Error is used for evaluation.
Protocol 2 Five subjects (S1, S5, S6, S7, S8) are used
for training. Evaluation is performed on every 64th frame
of two subjects (S9, S11). It is used in . Joint Error is used for evaluation.
Ablation study. The direct joint regression baseline and
four variants of our method are compared. They are brieﬂy
summarized in Table 1. As explained in Section 4, training can use additional 2D data (from MPII), optionally.
Training Data
Ours (joint)
Ours(bone)
Ours (both)
Ours (all)
Joint Error
PA Joint Error
Bone Error
Illegal Angle
Human3.6M + MPII
Joint Error
PA Joint Error
Bone Error
Table 2. Results of all methods under all evaluation metrics (the lower the better), with or without using MPII data in training. Note
that the performance gain of all Ours methods relative to the Baseline method is shown in the subscript. The Illegal Angle metric for
“Human3.6M+MPII” setting is not included because it is very good (< 1%) for all methods.
Joint Error
PA Joint Error
Bone Error
Illegal Angle
Ours (all)
Ours (all)
Ours (all)
Ours (all)
Ours (all)
Ankle(→Knee)
Knee(→Hip)
Hip(→Pelvis)
Thorax(→Pelvis)
Neck(→Thorax)
Head(→Neck)
Wrist(→Elbow)
163.0↓18.9
115.2↓15.0
Elbow(→Shoulder)
146.9↓21.9
Shoulder(→Thorax)
104.4↓11.2
Table 3. Detailed results on all joints for Baseline (BL) and Ours (all) methods, only trained on Human3.6M data (top half in Table 2). The
relative performance gain is shown in the subscript. Note that the left most column shows the names for both the joint (and the bone).
We therefore tested two sets of training data: 1) only Human3.6M; 2) Human3.6M plus MPII.
Table 2 reports the results under Protocol 2, which is
more commonly used. We observe several conclusions.
Using 2D data is effective. All metrics are signiﬁcantly
improved after using MPII data. For example, joint error
is reduced from 102.2 to 64.2. This improvement should
originate from the better learnt feature from the abundant
2D data. See the contemporary work for more discussions. Note that adding 2D data in this work is simple and
not considered as a main contribution. Rather, it is considered as a baseline to validate our regression approach.
Bone representation is superior than joint representation.
This can be observed by comparing Baseline with
Ours (joint) and Ours (bone). They are comparable because
they use roughly the same amount of supervision signals in
the training. The two variants of ours are better on nearly all
the metrics, especially the geometric constraint based ones.
Compositional loss is effective. When the loss function
becomes better (Ours (both) and Ours (all)), further improvement is observed. Speciﬁcally, when trained only on
Human3.6M, Ours (all) improves the Baseline by 9.8 mm
(relative 9.6%) on joint error, 7.5 mm (relative 10%) on PA
joint error, 7.1 mm (relative 10.8%) on bone error, 4.7 mm
(relative 17.8%) on bone std, and 1.2% (relative 32.4%) on
illegal angle.
Table 3 further reports the performance improvement
from Ours (all) to Baseline on all the joints (bones).
shows several conclusions.
First, limb joints are harder
than torso joints and upper limbs are harder than lower
This is consistent as Figure 1 (middle).
It indicates that the variance is a good indicator of difﬁculty and
a per-joint analysis is helpful in both algorithm design and
evaluation. Second, our method signiﬁcantly improves the
accuracy for all the joints, especially the challenging ones
like wrist, elbow and ankle. Figure 2 shows the results on a
testing video sequence with challenging arm motions. Our
result is much better and more stable.
Comparison with the state-of-the-art There are abundant previous works. They have different experiment settings and fall into three categories. They are compared to
our method in Table 4, 5, and 6, respectively.
The comparison is not completely fair due to the differences in the training data (when extra data are used),
the network architecture and implementation. Nevertheless,
two common conclusions validate that our approach is effective and sets the new state-of-the-art in all settings by
a large margin. First, our baseline is strong. It is simple
but already improves the state-of-the-art, by 3.9 mm (relative 7%) in Table 4, 2.7 mm (relative 4%) in Table 5, and
Frame 102 Frame 119
Test Result
Image and 3D
Ground Truth
Figure 2. (best viewed in color) Errors of wrist joint/bone of Baseline and Ours (all) methods on a video sequence from Human3.6M S9,
action Pose. The average error over the sequence is shown in the legends. For this action, the arms have large motion and are challenging.
Our method has much smaller joint and bone error. Our result is more stable over the sequence. The 3D predicted pose and ground truth
pose are visualized for a few frames. More video results are at 
Moreno 
Moreno 
Ours (all)
Table 4. Comparison with previous work on Human3.6M. Protocol 1 is used. Evaluation metric is averaged PA Joint Error. Extra 2D
training data is used in all the methods. Baseline and Ours (all) use MPII data in the training. Ours (all) is the best and also wins in all the
15 activity categories.
5.1 mm (relative 4.8%) in Table 6. Therefore, it serves as
a competitive reference. Second, our method signiﬁcantly
improves the baseline, using exactly the same network and
training. Thus, the improvement comes from the new pose
representation and loss function. It improves the state-ofthe-art signiﬁcantly, by 7 mm (relative 12.7%) in Table 4,
7.8 mm (relative 11.7%) in Table 5, and 14.9 mm (relative
13.9%) in Table 6.
Example 3D pose results are illustrated in Figure 3.
5.3. Experiments on 2D Pose of MPII
All leading methods on MPII benchmark have sophisticated network architectures.
As discussed in Section 2, the best-performing family of methods adopts a
multi-stage architecture .
method is novel in the pose representation and loss func-
Moreno 
Jahangiri 
Pavlakos 
Moreno 
Jahangiri 
Pavlakos 
Table 5. Comparison with previous work on Human3.6M. Protocol 2 is used. Evaluation metric is averaged Joint Error. Extra 2D training
data is used in all the methods. Baseline and Ours (all) use MPII data in the training. Ours (all) is the best and also wins in all the 15
activity categories.
Xingyi 
Xingyi 
Table 6. Comparison with previous work on Human3.6M. Protocol 2 is used. Evaluation metric is averaged Joint Error. No extra training
data is used. Ours (all) is the best and wins in 12 out of 15 activity categories. Note that Tekin et al. report more accurate results for
”Walk” and ”WalkPair”, but their method uses the temporal context information in the video. Our method only runs on individual frames.
Joint Error
Bone Error
Joint Error
Bone Error
Table 7. Results of the baseline and four variants of our method
(see Table 1), in the two-stage IEF*.
tion. It is complementary to such sophisticated networks.
In this experiment, it is integrated into the Iterative Error
Feedback method (IEF) , which is the only regression
based method in the family.
We implement a two stage baseline IEF, using ResNet-50
as the basic network in each stage. For reference, the original IEF uses ﬁve stages with GoogLeNet for each stage.
We denote our implementation as IEF*. The two stages in
IEF* are then modiﬁed to use our bone based representation and compositional loss function. The training for all
the settings remains the same, as speciﬁed in Section 4.
Ablation study Table 7 shows the results of IEF* and
our four variants. We observe the same conclusions as in
Table 2. Both bone based representation and compositional
loss function are effective under all metrics. In addition,
both stages in IEF* beneﬁt from our approach.
Comparison with the state-of-the-art Table 8 reports
the comparison result to state-of-the-art works on MPII.
PCKH0.5 metric is used. Top section of Table 8 is detection
based methods and bottom section is regression based. Ours
Figure 3. (best viewed in color) Examples of 3D pose estimation for Human3.6M (top row) and MPII (middle and bottom rows), using
Ours (all) method in Table 5, trained with both 3D and 2D data. Note that the MPII 3D results are quite plausible and convincing.
Pishchulin 
Tompson 
Tompson 
Pishchulin 
Lifshitz 
Gkioxary 
Insafutdinov 
Newell 
Carreira(IEF) 
Ours (all)
Table 8. Comparison to state-of-the-art works on MPII (top: detection based, bottom: regression based). PCKH 0.5 metric is used.
Our approach signiﬁcantly improves the baseline IEF and is competitive to other detection based methods.
(86.4%) produces signiﬁcant improvement over the baseline (IEF*) and becomes the best regression based method.
It is competitive to other detection based methods.
6. Conclusion
We show that regression based approach is competitive
to the leading detection based approaches for 2D pose estimation once pose structure is appropriately exploited. Our
approach is more potential for 3D pose estimation, where
more complex structure constraints are critical.
Acknowledgement
This research work was supported by The National Science Foundation of China No.
61305091, and the Fundamental Research Funds for the Central Universities No.
2100219054.