IEEE TRANSACTIONS ON MEDICAL IMAGING
H-DenseUNet: Hybrid Densely Connected UNet for
Liver and Tumor Segmentation from CT Volumes
Xiaomeng Li, Hao Chen, Member, IEEE, Xiaojuan Qi, Qi Dou, Student Member, IEEE,
Chi-Wing Fu, Member, IEEE and Pheng-Ann Heng, Senior Member, IEEE
Abstract—Liver cancer is one of the leading causes of cancer
death. To assist doctors in hepatocellular carcinoma diagnosis and
treatment planning, an accurate and automatic liver and tumor
segmentation method is highly demanded in the clinical practice.
Recently, fully convolutional neural networks (FCNs), including
2D and 3D FCNs, serve as the back-bone in many volumetric
image segmentation. However, 2D convolutions can not fully
leverage the spatial information along the third dimension while
3D convolutions suffer from high computational cost and GPU
memory consumption. To address these issues, we propose a
novel hybrid densely connected UNet (H-DenseUNet), which
consists of a 2D DenseUNet for efﬁciently extracting intra-slice
features and a 3D counterpart for hierarchically aggregating
volumetric contexts under the spirit of the auto-context algorithm
for liver and tumor segmentation. We formulate the learning
process of H-DenseUNet in an end-to-end manner, where the
intra-slice representations and inter-slice features can be jointly
optimized through a hybrid feature fusion (HFF) layer. We
extensively evaluated our method on the dataset of MICCAI 2017
Liver Tumor Segmentation (LiTS) Challenge and 3DIRCADb
Dataset. Our method outperformed other state-of-the-arts on the
segmentation results of tumors and achieved very competitive
performance for liver segmentation even with a single model.
Index Terms—CT, liver tumor segmentation, deep learning,
hybrid features
I. INTRODUCTION
Liver cancer is one of the most common cancer diseases
in the world and causes massive deaths every year .
The accurate measurements from CT, including tumor volume, shape, location and further functional liver volume, can
assist doctors in making accurate hepatocellular carcinoma
evaluation and treatment planning. Traditionally, the liver and
liver lesion are delineated by radiologists on a slice-by-slice
basis, which is time-consuming and prone to inter- and intrarater variations. Therefore, automatic liver and liver tumor
segmentation methods are highly demanded in the clinical
Automatic liver segmentation from the contrast-enhanced
CT volumes is a very challenging task due to the low intensity
contrast between the liver and other neighboring organs (see
the ﬁrst row in Figure 1). Moreover, radiologists usually enhance CT scans by an injection protocol for clearly observing
This work was supported by the grants from the Research Grants Council of
the Hong Kong Special Administrative Region (Project Nos. GRF 14202514
and GRF 14203115).
X. M. Li, H. Chen, X. J. Qi, Q. Dou, C. W. Fu and P. A. Heng are with the
Department of Computer Science and Engineering, The Chinese University of
Hong Kong, Hong Kong. H.Chen is also with Imsight Medical Technology,
Inc. (e-mail: ; ). Corresponding
author: Hao Chen
Ground truth
3D display
Figure 1: Examples of contrast-enhanced CT scans showing
the large variations of shape, size, location of liver lesion. Each
row shows a CT scan acquired from individual patient. The
red regions denote the liver while the green ones denote the
lesions (see the black arrows above).
tumors, which may increase the noise inside the images on
the liver region . Compared with liver segmentation, liver
tumor segmentation is considered to be a more challenging
task. First, the liver tumor has various size, shape, location
and numbers within one patient, which hinders the automatic
segmentation, as shown in Figure 1. Second, some lesions do
not have clear boundaries, limiting the performance of solely
edge based segmentation methods (see the lesions in the third
row of Figure 1). Third, many CT scans consist of anisotropic
dimensions with high variations along the z-axis direction (the
voxel spacing ranges from 0.45mm to 6.0mm), which further
poses challenges for automatic segmentation methods.
To tackle these difﬁculties, many segmentation methods
have been proposed, including intensity thresholding, region
growing, and deformable models. These methods, however,
rely on hand-crafted features, and have limited feature representation capability. Recently, fully convolutional neural
networks (FCNs) have achieved great success on a broad
array of recognition problems . Many researchers advance this stream using deep learning methods in the liver
and tumor segmentation problem and the literature can be
classiﬁed into two categories broadly. (1) 2D FCNs, such
 
IEEE TRANSACTIONS ON MEDICAL IMAGING
as UNet architecture , the multi-channel FCN , and
the FCN based on VGG-16 . (2) 3D FCNs, where 2D
convolutions are replaced by 3D convolutions with volumetric
data input .
In the clinical diagnosis, the experienced radiologist usually
observes and segments tumors according to many adjacent
slices along the z-axis. However, 2D FCN based methods
ignore the contexts on the z-axis, which would lead to limited
segmentation accuracy. To be speciﬁc, single or three adjacent slices cropped from volumetric images are fed into 2D
FCNs and the 3D segmentation volume is generated
by simply stacking the 2D segmentation maps. Although
adjacent slices are employed, it is still not enough to probe
the spatial information along the third dimension, which may
degrade the segmentation performance. To solve this problem,
some researchers proposed to use tri-planar schemes or RNN
to probe the 3D contexts . For example, Prasoon
et al. applied three 2D FCNs on orthogonal planes (e.g.,
the xy, yz, and xz planes) and voxel prediction results are
generated by the average of these probabilities. Compared to
2D FCNs, 3D FCNs suffer from high computational cost and
GPU memory consumption. The high memory consumption
limits the depth of the network as well as the ﬁlter’s ﬁeld-ofview, which are the two key factors for performance gains .
The heavy computation of 3D convolutions also impedes the
application in training a large-scale dataset. Moreover, many
researchers have demonstrated the effectiveness of knowledge transfer (the knowledge learnt from one source domain
efﬁciently transferred to another domain) for boosting the
performance . Unfortunately, only a dearth of 3D pretrained model exists, which restricts the performance and also
the adoption of 3D FCNs.
To address the above problems, we proposed a novel endto-end system, called hybrid densely connected UNet (H-
DenseUNet), where intra-slice features and 3D contexts are
effectively probed and jointly optimized for accurate liver and
lesion segmentation. Our H-DenseUNet has the following two
technical achievements:
Deep and efﬁcient network. First, to fully extract highlevel intra-slice features, we design a very deep and efﬁcient
network based on the pre-deﬁned design principles by 2D
convolutions, called 2D DenseUNet, where the advantages of
both densely connected path and UNet connections are
fused together. Densely connected path is derived from densely
connected network (DenseNet), where the improved information ﬂow and parameters efﬁciency alleviate the difﬁculty for
training the deep network. Different from DenseNet , we
add the UNet connections, i.e., long-range skip connections,
between the encoding part and the decoding part in our
architecture; hence, the network can enable low-level spatial
feature preservation for better intra-slice context exploration.
Hybrid feature exploration. Second, to explore the volumetric feature representation, we design an end-to-end training
system, called H-DenseUNet, where intra-slice and inter-slice
features are effectively extracted and then jointly optimized
through the hybrid feature fusion (HFF) layer. Speciﬁcally,
3D DenseUNet is integrated with the 2D DenseUNet by the
way of auto-context mechanism, which is a general form
of stacked generality . With the guidance of semantic
probabilities from 2D DenseUNet, the optimization burden in
the 3D DenseUNet can be well alleviated, which contributes
to the training efﬁciency for 3D contexts extraction. Moreover,
with the end-to-end system, the hybrid feature, consisting of
volumetric features and the high-level representative intra-slice
features, can be automatically fused and jointly optimized
together for better liver and tumor recognition. In summary,
this work has the following achievements:
• We design a DenseUNet to effectively probe hierarchical
intra-slice features for liver and tumor segmentation,
where the densely connected path and UNet connections
are carefully integrated
based on pre-deﬁned design
principles to improve the liver tumor segmentation performance.
• We propose a H-DenseUNet framework to explore hybrid
(intra-slice and inter-slice) features for liver and tumor
segmentation. The hybrid feature learning architecture
well sidesteps the problems that 2D networks neglect the
volumetric contexts and 3D networks suffer from heavy
computational cost, and can be served as a new paradigm
for effectively exploiting 3D contexts.
• Our method ranked the 1st on lesion segmentation,
achieved very competitive performance on liver segmentation in the 2017 LiTS Leaderboard, and also achieved
the state-of-the-art results on the 3DIRCADb Dataset.
II. RELATED WORK
A. Hand-crafted feature based methods
In the past decades, a lot of algorithms, including thresholding , region growing, deformable model based methods and machine learning based methods have
been proposed to segment liver and liver tumor. Thresholdbased methods classiﬁed foreground and background according to whether the intensity value is above a threshold. Variations of region growing algorithms were also popular in the
liver and lesion segmentation task. For example, Wong et al.
 segmented tumors by a 2D region growing method with
knowledge-based constraints. Level set methods also attracted
attentions from researchers with the advantages of numerical
computations involving curves and surfaces . For example,
Jimenez-Carretero et al. proposed to classify tumors by
a multi-resolution 3D level set method coupled with adaptive
curvature technique. A large variety of machine learning based
methods have also been proposed for liver tumor segmentation.
For example, Huang et al. proposed to employ the random
feature subspace ensemble-based extreme learning machine
(ELM) for liver lesion segmentation. Vorontsov et al. 
proposed to segment tumors by support vector machine (SVM)
classiﬁer and then reﬁned the results by the omnidirectional
deformable surface model. Similarly, Kuo et al. proposed
to learn SVM classiﬁer with texture feature vector for liver
tumor segmentation. Le et al. employed the fast marching
algorithm to generate initial regions and then classiﬁed tumors
by training a noniterative single hidden layer feedforward
network (SLFN). To speed up the segmentation algorithm,
IEEE TRANSACTIONS ON MEDICAL IMAGING
Chaieb et al. adopted a bootstrap sampling approach for
efﬁcient liver tumor segmentation.
B. Deep learning based methods
Convolutional neural networks (CNNs) have achieved great
success in many object recognition problems in computer
vision community. Many researchers followed this trend and
proposed to utilize various CNNs for learning feature representations in the application of liver and lesion segmentation.
For example, Ben-Cohen et al. proposed to use a FCN
for liver segmentation and liver-metastasis detection in CT
examinations. Christ et al. proposed a cascaded
FCN architecture and dense 3D conditional random ﬁelds
(CRFs) to automatically segment liver and liver lesions. In the
meanwhile, Sun et al. designed a multi-channel FCN to
segment liver tumors from CT images, where the probability
maps were generated by the feature fusion from different
Recently, during the 2017 ISBI LiTS challenge, Han ,
proposed a 2.5D 24-layer FCN model to segment liver tumors,
where the residual block was employed as the repetitive
building blocks and the UNet connection was designed across
the encoding part and decoding part. 2.5D refers to using 2D
convolutional neural network with the input of adjacent slices
from the volumetric images. Both Vorontsov et al. and
Chlebus et al. achieved the second place in the ISBI challenge. Vorontsov et al. also employed ResNet-like residual
blocks and UNet connections with 21 convolutional layers,
which is a bit shallower and has fewer parameters compared
to that proposed by Han . Chlebus et al. designed
a 28-layer UNet architecture in two individual models and
subsequently ﬁltered the false positives of tumor segmentation
results by a random forest classiﬁer. Instead of using 3D
FCNs, all of the top results employed 2D FCNs with different
network depths, showing the efﬁcacy of 2D FCNs regarding
the underlying volumetric segmentation problem. However, all
these networks are shallow and ignore the 3D contexts, which
limit the high-level feature extraction capability and restrict
the recognition performance.
III. METHOD
Figure 2 shows the pipeline of our proposed method for liver
and tumor segmentation. We employed the cascaded learning
strategy to reduce the overall computation time, which has
also been adopted in many recognition tasks . First,
a simple ResNet architecture is trained to get a quick
but coarse segmentation of liver. With the region of interest
(ROI), our proposed H-DenseUNet efﬁciently probes intraslice and inter-slice features through a 2D DenseUNet f2d
and a 3D counterpart f3d, followed by jointly optimizing the
hybrid features in the hybrid feature fusion (HFF) layer for
accurate liver and lesion segmentation.
A. Deep 2D DenseUNet for Intra-slice Feature Extraction
The intra-slice feature extraction part follows the structure
of DenseNet-161 , which is composed of repetitive densely
connected building blocks with different output dimensions.
In each densely connected building block, there are direct
connections from any layer to all subsequent layers, as shown
in Figure 2(c). Each layer produces k feature maps and k is
called growth rate. One advantage of the dense connectivity
between layers is that it has fewer output dimensions than
traditional networks, avoiding learning redundant features.
Moreover, the densely connected path ensures the maximum
information ﬂow between layers, which improves the gradient
ﬂow, and thus alleviates the burden in searching for the optimal
solution in a very deep neural network.
However, the original DenseNet-161 is designed for
the object classiﬁcation task while our problem belongs to
the segmentation topics. Moreover, a deep FCN network for
segmentation tasks actually contains several max-pooling and
upsampling operations, which may lead to the information loss
of low-level (i.e., high resolution) features. Given above two
considerations, we develop a 2D DenseUNet, which inherits
both advantages of densely connected path and UNet-like connections . Speciﬁcally, the dense connection between layers
is employed within each micro-block to ensure the maximum
information ﬂow while the UNet long range connection links
the encoding part and the decoding part to preserve low-level
information.
Let I ∈Rn×224×224×12×1 denote the input training samples
(for 224 × 224 × 12 input volumes) with ground-truth labels
Y ∈Rn×224×224×12×1, where n denotes the batch size of
the input training samples and the last dimension denotes the
channel. Yi,j,k = c since each pixel (i, j, k) is tagged with
class c (background, liver and tumor). Let function F denote
the transformation from the volumetric data to three adjacent
slices. Speciﬁcally, every three adjacent slices along z-axis are
stacked together and the number of groups can be transformed
to the batch dimension. For example, I2d = F(I), where
I2d ∈R12n×224×224×3 denotes the input samples of 2D
DenseUNet. The detailed transformation process is illustrated
in Figure 2(d). Because of the transformation, the 2D and 3D
DenseUNet can be jointly trained, which will be described in
detail in section B. For convenience, F −1 denotes the inverse
transformation from three adjacent slices to the volumetric
data. The 2D DenseUNet conducts liver and tumor segmentation,
X2d = f2d(I2d; θ2d), X2d ∈R12n×224×224×64,
y2d = f2dcls(X2d; θ2dcls), ˆ
y2d ∈R12n×224×224×3
where X2d is the feature map from layer "upsampling layer
5" (see Table I) and
y2d is the corresponding pixel-wise
probabilities for input I2d.
The illustration and detailed structure of 2D DenseUNet
are shown in Figure 2(c) and Table I, respectively. The
depth of 2D DenseUNet is extended to 167 layers, referred
as 2D DenseUNet-167, which consists of 167 convolution
layers, pooling layers, dense blocks, transition layers and
upsampling layers. The dense block denotes the cascade of
several micro-blocks, in which all layers are directly connected, see Figure 2(c). To change the size of feature-maps,
the transition layer is employed, which consists of a batch
normalization layer and a 1×1 convolution layer followed by
IEEE TRANSACTIONS ON MEDICAL IMAGING
(c) The illustration of the 2D DenseUNet.
Dense block 1
Transition layer 1
ܿ݋݉݌ݎ݁ݏݏ݅݋݊
ݑ݌ݏܽ݉݌݈݅݊݃
Upsampling layer 3
ݑ݌ݏܽ݉݌݈݅݊݃
Upsampling layer 4
ݑ݌ݏܽ݉݌݈݅݊݃
Upsampling layer 5
Output: liver and tumor segmentation
2D input: 224 ൈ224 ൈ3
(a) H-DenseUNet for accurate liver and tumor segmentation
Input: 224 ൈ224 ൈ12
Concatenation
(b) The illustration of transformation process ࣠
Figure 2: The illustration of the pipeline for liver and lesion segmentation. Each 3D input volume is sliced into adjacent
slices through transformation process F and then fed into 2D DenseUNet; Concatenated with the prediction volumes from 2D
network, the 3D input volumes are fed into the 3D network for learning inter-slice features; Then, the HFF layer fused and
optimized the intra-slice and inter-slice features for accurate liver and tumor segmentation. (a) The structure of H-DenseUNet,
including the 2D DenseUNet and the 3D counterpart. (b) The transformation of the volumetric data to three adjacent slices. (c)
The network structure of the 2D DenseUNet. The structure in the orange block is a micro-block and k denotes the growth-rate.
(Best viewed in color)
an average pooling layer. A compression factor is included in
the transition layer to compress the number of feature-maps,
preventing the expanding of feature-maps (set as 0.5 in our
experiments). The upsampling layer is implemented by the
bilinear interpolation, followed by the summation with lowlevel features (i.e., UNet connections) and a 3×3 convolutional
layer. Before each convolution layer, the batch normalization
and the Rectiﬁed Linear Unit (ReLU) are employed in the
architecture.
B. H-DenseUNet for Hybrid Feature Exploration
2D DenseUNet with deep convolutions can produce highlevel representative in-plane features but neglect the spatial
information along the z dimension while 3D DenseUNet has
large GPU computational cost and limited kernel’s ﬁeld-ofview as well as the network depth. To address these issues,
we propose H-DenseUNet to jointly fuse and optimize the
learned intra-slice and inter-slice features for better liver tumor
segmentation.
To fuse hybrid features from the 2D and 3D network, the
feature volume size should be aligned. Therefore, the feature
maps and score maps from 2D DenseUNet are transformed to
the volumetric shape as follows:
′ = F −1(X2d), X2d
′ ∈Rn×224×224×12×64,
′ = F −1( ˆ
′ ∈Rn×224×224×12×3,
Then the 3D DenseUNet distill the visual features with 3D
contexts by concatenating the original volumes I with the
contextual information ˆ
′ from the 2D network. Speciﬁcally,
the detectors in the 3D counterpart trained based not only
on the features probed from the original images, but also on
the probabilities of a large number of context pixels from 2D
DenseUNet. With the guidance from the supporting contexts
pixels, the burden in searching for the optimal solution in the
3D counterpart has also been well alleviated, which significantly improves the learning efﬁciency of the 3D network.
IEEE TRANSACTIONS ON MEDICAL IMAGING
Table I: Architectures of the proposed H-DenseUNet, consisting of the 2D DenseUNet and the 3D counterpart. The symbol
–[ ] denotes the long range UNet summation connections with the last layer of the dense block. The second and forth column
indicate the output size of the current stage in two architectures, respectively. Note that "1 × 1, 192 conv" corresponds to the
sequence BN-ReLU-Conv layer with convolutional kernel size of 1 × 1 and 192 features. "[ ]×d" represents the dense block
is repeated for d times.
Feature size
2D DenseUNet-167 (k=48)
Feature size
3D DenseUNet-65 (k=32)
224 × 224 × 12
convolution 1
7 × 7, 96, stride 2
112 × 112 × 6
7 × 7 × 7, 96, stride 2
3 × 3 max pool, stride 2
56 × 56 × 3
3 × 3 × 3 max pool, stride 2
dense block 1
1 × 1, 192
56 × 56 × 3
1 × 1 × 1, 128
3 × 3 × 3, 32
transition layer 1
1 × 1 conv
56 × 56 × 3
1 × 1 × 1 conv
2 × 2 average pool
28 × 28 × 3
2 × 2 × 1 average pool
dense block 2
1 × 1, 192
28 × 28 × 3
1 × 1 × 1, 128
3 × 3 × 3, 32
transition layer 2
1 × 1 conv
28 × 28 × 3
1 × 1 × 1 conv
2 × 2 average pool,
14 × 14 × 3
2 × 2 × 1 average pool
dense block 3
1 × 1, 192
14 × 14 × 3
1 × 1 × 1, 128
3 × 3 × 3, 32
transition layer 3
1 × 1 conv
14 × 14 × 3
1 × 1 × 1 conv
2 × 2 average pool
2 × 2 × 1 average pool
dense block 4
1 × 1, 192
1 × 1 × 1, 128
3 × 3 × 3, 32
upsampling layer 1
2 × 2 upsampling – [dense block 3], 768, conv
14 × 14 × 3
2 × 2 × 1 upsampling – [dense block 3], 504, conv
upsampling layer 2
2 × 2 upsampling – [dense block 2], 384, conv
28 × 28 × 3
2 × 2 × 1 upsampling – [dense block 2], 224, conv
upsampling layer 3
2 × 2 upsampling – [dense block 1], 96, conv
56 × 56 × 3
2 × 2 × 1 upsampling – [dense block 1], 192, conv
upsampling layer 4
2 × 2 upsampling – [convolution 1], 96, conv
112 × 112 × 6
2 × 2 × 2 upsampling – [convolution 1], 96, conv
upsampling layer 5
2 × 2 upsampling, 64, conv
224 × 224 × 12
2 × 2 × 2 upsampling, 64, conv
convolution 2
224 × 224 × 12
1 × 1 × 1, 3
The learning process of 3D DenseUNet can be described as:
X3d = f3d(I, ˆ
Z = X3d + X2d
where X3d denotes the feature volume from layer "upsampling layer 5" in 3D DenseUNet-65. Z denotes the hybrid
feature, which refers to the sum of intra-slice and inter-slice
features from 2D and 3D network, respectively. Then the
hybrid feature is jointly learned and optimized in the HFF
H = fHF F (Z; θHF F ),
yH = fHF F cls(H; θHF F cls)
where H denotes the optimized hybrid features and ˆ
to the pixel-wise predicted probabilities generated from the
HFF layer fHF F cls(·). In our experiments, the 3D counterpart
of H-DenseUNet cost only 9 hours to converge, which is
signiﬁcantly faster than training the 3D counterpart with
original data solely (63 hours).
The detailed structure of the 3D counterpart is shown in
the Table I, called 3D DenseUNet-65, which consists of 65
convolutional layers and the growth rate is 32. Compared
with 2D DenseUNet counterpart, the number of micro-blocks
in each dense block is decreased due to the high memory
consumption of 3D convolutions and the limited GPU memory.
The rest of the network setting is the same with the 2D
counterpart.
C. Loss Function, Training and Inference Schemes
In this section, we present more details regarding the loss
function, training and the inference schemes.
1) Loss Function: To train the networks, we employed
weighted cross-entropy function as the loss function, which
is described as:
L(y, ˆy) = −1
c denotes the probability of voxel i belongs to class
c (background, liver or lesion), wc
i denotes the weight and yc
indicates the ground truth label for voxel i.
2) Training Scheme: We ﬁrst train the ResNet in the same
way with Han to get the coarse liver segmentation results.
The parameters of the encoder part in 2D DenseUNet f2d
are initialized with DenseNet’s weights (object classiﬁcationtrained) while the decoder part are trained with the
random initialization. Since the weights are initialized with a
random distribution in the decoder part, we ﬁrst warm up the
network without UNet connections. After several iterations,
the UNet connections are added to jointly ﬁne tune the model.
To effectively train the H-DenseUNet, we ﬁrst optimize
f2d(·) and f2dcls(·) with cross entropy loss L(y, ˆ
dataset. Secondly, we ﬁx parameters in f2d(·) and f2dcls(·),
and focus on training f3d(·), fHF F (·) and fHF F cls(·) with
cross entropy loss L(y, ˆ
yH), where parameters are all randomly initialized. Finally, The whole network is jointly ﬁnetuned with following combined loss:
Ltotal = λL(y, ˆ
′) + L(y, ˆ
where λ is the balanced weight and set as 0.5 in our experiments empirically.
3) Inference Scheme: In the test stage, we ﬁrst get the
coarse liver segmentation result. Then H-DenseUNet can generate accurate liver and tumor predicted probabilities within
the ROI. The thresholding is applied to get the liver tumor
IEEE TRANSACTIONS ON MEDICAL IMAGING
segmentation result. To avoid the holes in the liver, a largest
connected component labeling is performed to reﬁne the
liver result. After that, the ﬁnal lesion segmentation result is
obtained by removing lesions outside the ﬁnal liver region.
IV. EXPERIMENTS AND RESULTS
A. Dataset and Pre-processing
We tested our method on the competitive dataset of MICCAI
2017 LiTS Challenge and 3DIRCADb Dataset. The LiTS
dataset contains 131 and 70 contrast-enhanced 3D abdominal
CT scans for training and testing, respectively. The dataset was
acquired by different scanners and protocols from six different
clinical sites, with a largely varying in-plane resolution from
0.55 mm to 1.0 mm and slice spacing from 0.45 mm to
6.0 mm. The 3DIRCADb dataset contains 20 venous phase
enhanced CT scans, where 15 volumes have hepatic tumors in
the liver.
For image preprocessing, we truncated the image intensity
values of all scans to the range of [-200,250] HU to remove
the irrelevant details. For coarse liver segmentation in the ﬁrst
stage, we trained a simple network from resampled images
with the same resolution 0.69 × 0.69 × 1.0 mm3. In the test
stage, we also employ the resampled images for coarse liver
segmentation. For lesion segmentation in the second stage, the
network is trained on the images with the original resolution.
This is because in some training cases liver lesions are notably
small, thus we use images with the original resolution to avoid
possible artifacts from image resampling. In this test stage, we
also employ the images with original resolution for accurate
liver and lesion segmentation.
B. Evaluation Metrics
According to the evaluation of 2017 LiTS challenge, we
employed Dice per case score and Dice global score to evaluate the liver and tumor segmentation performance respectively.
Dice per case score refers to an average Dice score per
volume while Dice global score is the Dice score evaluated
by combining all datasets into one. Root mean square error
(RMSE) is also adopted to measure the tumor burden.
In the 3DIRCADb dataset, ﬁve metrics are used to measure
the accuracy of segmentation results, including the volumetric overlap error (VOE), relative volume difference (RVD),
average symmetric surface distance (ASD), root mean square
symmetric surface distance (RMSD) and DICE. For the ﬁrst
four evaluation metrics, the smaller the value is, the better the
segmentation result. The value of DICE refers to the same
measurement as Dice per case in the LiTS dataset.
C. Implementation Details
In this section, we present more details regarding the
implementation environment and data augmentation strategies.
The model was implemented using Keras package . The
initial learning rate was 0.01 and decayed according to the
equation lr = lr ∗(1 −iterations/total_iterations)0.9. We
used stochastic gradient descent with momentum.
3D DenseUNet without pre-trained model
2D DenseUNet without pre-trained model
2D DenseNet with pre-trained model
2D DenseUNet with pre-trained model
H-DenseUNet
Figure 3: Training losses of 2D DenseUNet with and without pre-trained model, 2D DenseNet with pre-trained model,
3D DenseUNet without pre-trained model as well as H-
DenseUNet (Best viewed in color).
For data augmentation, we adopted random mirror and
scaling between 0.8 and 1.2 for all training data to alleviate
the overﬁtting problem. The training of 2D DenseUNet model
took about 21 hours using two NVIDIA Titan Xp GPUs with
12 GB memory while the end-to-end system ﬁne-tuning cost
approximately 9 hours. In other words, the total training time
for H-DenseUNet took about 30 hours. In the test phase, the
total processing time of one subject depends on the number
of slices, ranging from 30 seconds to 200 seconds.
D. Ablation Analysis of H-DenseUNet on LiTS dataset
In this section, we conduct comprehensive experiments
to analyze the effectiveness of our proposed H-DenseUNet.
Figure 3 shows the training losses of 2D DenseUNet with
and without pre-trained model, 2D DenseNet with pre-trained
model, 3D DenseUNet without pre-trained model as well as H-
DenseUNet. Note that 3D DenseUNet costs around 60 hours,
nearly 3 times than 2D networks. H-DenseUNet costs nearly
30 hours, where 21 hours are spent for 2D DenseUNet training
and 9 hours are used to ﬁne-tune the whole architecture in
the end-to-end manner. It is worth mentioning that all of
the models are run with NVIDIA Titan Xp GPUs with full
1) Effectiveness of the Pre-trained Model: One advantage
in the proposed method is that we can train the network by
transfer learning with the pre-trained model, which is crucial in
ﬁnding an optimal solution for the network. Here, we analyze
the learning behaviors of 2D DenseUNet with and without
the pre-trained model. Both two experiments were conducted
under the same experimental settings. From Figure 3, it is
clearly observed that with the pre-trained model, 2D Dense-
UNet can converge faster and achieve lower loss value, which
shows the importance of utilizing the pre-trained model with
transfer learning. The test results in Table II demonstrated
that the pre-trained model can help the network achieve better
IEEE TRANSACTIONS ON MEDICAL IMAGING
Table II: Segmentation results by ablation study of our methods on the test dataset (Dice: %).
Dice per case
Dice global
Dice per case
Dice global
3D DenseUNet without pre-trained model
ResNet 
2D DenseUNet without pre-trained model
2D DenseNet with pre-trained model
2D DenseUNet with pre-trained model
H-DenseUNet
Table III: Leaderboard of 2017 Liver Tumor Segmentation (LiTS) Challenge 
Tumor Burden
Dice per case
Dice global
Dice per case
Dice global
hans.meine
Elehanx 
deepX 
Medical 
Gchlebus 
Note: - denotes that the team participated in ISBI competition and the measurement was not evaluated.
performance consistently. Our proposed H-DenseUNet inherits
this advantage, which plays an important role in achieving the
promising results.
2) Comparison of 2D and 3D DenseUNet: We compare the
inherent performance of 2D DenseUNet and 3D DenseUNet
to validate that using 3D network solely maybe defective. The
number of parameters is one of key elements in measuring the
model representation capability, thus both 2D DenseUNet-167
and 3D DenseUNet-65 are designed with the same level of
model complexity (around 40M parameters).
We compare the learning behaviors of two experiments
without using the pre-trained model. From Figure 3, it shows
that the 2D DenseUNet achieves better performance than
the 3D DenseUNet, which highlights the effectiveness and
efﬁciency of 2D convolutions with the deep architecture. This
is because the 3D kernel consumes large GPU memory so
that the network depth and width are limited, leading to weak
representation capability. In addition, 3D DenseUNet took
much more training time (approximately 60 hours) to converge
compared to 2D DenseUNet (around 20 hours).
Except for the heavy computational cost of the 3D network,
another defective is that only a dearth of pre-trained model
exists for the 3D network. From Table II, compared with the
results generated by 3D DenseUNet, 2D DenseUNet with pretrained model achieved 8.9 and 3.0 (Dice: %) improvements
on the lesion segmentation results by the measurement of Dice
per case and Dice global score, respectively.
3) Effectiveness of UNet Connections: We analyze the
effectiveness of UNet connections in our proposed framework.
Both 2D DenseNet and DenseUNet are trained with the same
pre-trained model and training strategies. The difference is
Ground truth
2D DenseUNet
H-DenseUNet
Figure 4: Examples of segmentation results by 2D DenseUNet
and H-DenseUNet on the validation dataset. The red regions
denote the segmented liver while the green ones denote the
segmented lesions. The gray regions denote the true liver while
the white ones denote the true lesions.
that DenseUNet contains long range connections between
the encoding part and the decoding part to preserve highresolution features. As the results shown in Figure 3, it
is obvious that DenseUNet achieves lower loss value than
DenseNet, demonstrating the UNet connections actually help
the network converge to a better solution. The experimental
results in Table II consistently demonstrated that the lesion
segmentation performance can be boosted by a large margin
with UNet connections embedded in the network.
4) Effectiveness of Hybrid Feature Fusion: To validate
the effectiveness of the hybrid architecture, we compare the
learning behaviors of H-DenseUNet and 2D DenseUNet. It is
IEEE TRANSACTIONS ON MEDICAL IMAGING
Figure 5: Examples of liver and tumor segmentation results of
H-DenseUNet from the test dataset. The red regions denote
the liver and the green ones denote the tumors.
observed that the loss curve for H-DenseUNet begins around
0.04. This is because we ﬁne tune the H-DenseUNet on the 2D
DenseUNet basis, which serves as a good initialization. Then
the loss value decreases to nearly 0.02, which is attributed
to the hybrid feature fusion learning. Figure 3 shows that
H-DenseUNet can converge to the smaller loss value than
the 2D DenseUNet, which indicates that the hybrid architecture can contribute to the performance gains. Compared
with 2D DenseUNet, our proposed H-DenseUNet advances
the segmentation results on both two measurements for liver
and tumor segmentation consistently, as shown in Table II.
The performance gains indicate that contextual information
along the z dimension, indeed, contributes to the recognition
of lesion and liver, especially for lesions that have much more
blurred boundary and considered to be difﬁcult to recognize.
Figure 4 shows some segmentation results achieved by 2D
DenseUNet and H-DenseUNet on the validation dataset. It is
observed that H-DenseUNet can achieve much better results
than 2D DenseUNet. Moreover, we trained H-DenseUNet in
an end-to-end manner, where the 3D contexts can also help
extract more representative in-plane features. The end-to-end
system jointly optimizes the 2D and 3D networks, where the
hybrid feature can be fully explored. Figure 5 presents some
examples of liver and tumor segmentation results of our H-
DenseUNet on the test dataset. We can observe that most small
targets as well as large objects can be well segmented.
E. Comparison with Other Methods on LiTS dataset
There were more than 50 submissions in 2017 ISBI and
MICCAI LiTS challenges. Both challenges employed the same
training and test datasets for fair performance comparison.
Different from the ISBI challenge, more evaluation metrics
have been added in the MICCAI challenge for comprehensive
comparison. The detailed results of top 15 teams on the
leaderboard1, including both ISBI and MICCAI challenges,
are listed in Table III. Our method outperformed other state-of-the-arts on
the segmentation results of tumors and achieved very competitive performance for liver segmentation. For tumor burden
1 
evaluation, our method achieved the lowest estimation error
and ranked the 1st place among all the teams. It is worth
mentioning that we used ten entries on the test dataset for
ablation analysis of our method. Since there is no validation
set provided by challenge organizers, the ablation experiments
were performed on test dataset for fair comparison. Please
note that the ﬁnal result is just one of these entries, instead of
multiple entries averages.
Most of the top teams in the challenges employed deep
learning based methods, demonstrating the effectiveness of
CNN based methods in medical image analysis. For example,
Han , Vorontsov et al. and Bi et al. all adopted 2D
deep FCNs, where ResNet-like residual blocks were employed
as the building blocks. In addition, Chlebus et al. trained
the UNet architecture in two individual models, followed by
a random forest classiﬁer. In comparison, our method with a
167-layer network consistently outperformed these methods,
which highlighted the efﬁcacy of 2D DenseUNet with pretrained model. Our proposed H-DenseUNet further advanced
the segmentation accuracy for both liver and tumor, showing
the effectiveness of the hybrid feature learning process.
Our method achieved the 1st place among all state-of-thearts in the lesion segmentation and very competitive result
to DeepX for liver segmentation. Note that our method
surpassed DeepX by a signiﬁcant margin in the Dice per case
evaluation for lesion, which is considered to be notoriously
challenging and difﬁcult. Moreover, our result was produced
by the single model while DeepX employed multi-model
combination strategy to improve the results, showing the
efﬁciency of our method in the clinical practice.
F. Comparison with Other Methods on 3DIRCADb Dataset
To validate the effectiveness and robustness of our method,
we also conduct experiments on 3DIRCADb dataset ,
which is publicly available and offers a higher variety and
complexity of livers and lesions. Table IV and Table V show
the comparison of the tumor and liver segmentation performance on the 3DIRCADb dataset. We compared our method
with the state-of-the-art method on the 3DIRCADb
dataset by running experiments through cross-validation, as
the way used in . We can see that our method achieved
the better performance than on both lesion and liver
segmentation accuracy, with 9.0% and 0.4% improvement on
DICE, respectively. To further validate the effectiveness of
our method, we ran experiments with methods of Unet 
and ResNet architecture respectively, where the training
setting keeps the same with Christ et al. . From Table IV
and Table V, we can see that our method still outperforms
Unet and ResNet on the 3DIRCADb dataset, with
14.0% and 5.0% improvement on DICE for tumor segmentation respectively. The experimental comparison validated the
superiority of our proposed method in comparison with other
To have a comprehensive comparison with liver tumor
segmentation methods, we listed the reported tumor and liver
segmentation results on the 3DIRCADb dataset below the bold
line in Table IV and Table V, respectively. Note that except
IEEE TRANSACTIONS ON MEDICAL IMAGING
Table IV: Comparsion of tumor segmentation results on 3DIRCADb dataset.
62.55 ± 22.36
0.380 ± 1.95
11.11 ± 12.02
16.71 ± 13.81
0.51 ± 0.25
Christ et al. 
0.56 ± 0.26
ResNet 
56.47 ± 13.62
-0.41 ± 0.21
6.36 ± 3.77
11.69 ± 7.60
0.60 ± 0.12
49.72 ± 5.2
-0.33 ± 0.10
5.293 ± 6.15
11.11 ± 29.14
0.65 ± 0.02
Foruzan and Chen *
30.61 ± 10.44
15.97 ± 12.04
4.18 ± 9.60
5.09 ± 10.71
0.82 ± 0.07
Wu et al. *
29.04 ± 8.16
-2.20 ± 15.88
0.72 ± 0.33
1.10 ± 0.49
0.83 ± 0.06
Li et al. †
14.4 ± 5.3
-8.1 ± 2.1
Moghbel et al. †
22.78 ± 12.15
8.59 ± 18.78
0.75 ± 0.15
Sun et al. †
15.6 ± 4.3
11.68 ± 4.33
-0.01 ± 0.05
0.58 ± 0.46
1.87 ± 2.33
0.937 ± 0.02
Note: ∗denotes the semi-automatic methods; † denotes the method use additional datasets; - denotes the result is not reported.
Table V: Comparsion of liver segmentation results on 3DIRCADb dataset.
14.21 ± 5.71
-0.05 ± 0.10
4.33 ± 3.39
8.35 ± 7.54
0.923 ± 0.03
ResNet 
11.65 ± 4.06
-0.03 ± 0.06
3.91 ± 3.95
8.11 ± 9.68
0.938 ± 0.02
Christ et al. 
10.02 ± 3.44
-0.01 ± 0.05
4.06 ± 3.85
9.63 ± 10.41
0.947 ± 0.01
Li et al. †
9.15 ± 1.44
-0.07 ± 3.64
1.55 ± 0.39
3.15 ± 0.98
Moghbel et al. †
Lu et al. †
9.36 ± 3.34
0.97 ± 3.26
1.89 ± 1.08
4.15 ± 3.16
3.57 ± 1.66
0.01 ± 0.02
1.28 ± 2.02
3.58 ± 6.58
0.982 ± 0.01
Note: † denotes the method use additional datasets. - denotes the result is not reported.
experiments and , all other experiment results are
the reported values in the original papers. It is worth noting
that most liver tumor segmentation methods utilized additional datasets for training and tested on the
3DIRCADb dataset. For example, Li et al. , Sun et al.
 and Lu et al. collected additional clinical data from
hospitals as the training set.
Moghbel et al. utilized
additional the MIDAS dataset while Li et al. used the
SLIVER07 dataset in the training, respectively. In addition,
Foruzan and Chen and Wu et al. achieved good
results on tumor segmentation by semi-automatic methods.
Actually, these methods cannot be compared directly with each
other due to the differences in the training dataset and whether
is fully-automatic or not. However, to some extent, the reported
results on the 3DIRCADb dataset can reﬂect the state-of-theart performance for the lesion and liver segmentation task.
Here, we employed the LiTS dataset as the additional dataset.
Speciﬁcally, we directly tested the well-trained model from
2017 LiTS dataset on the 3DIRCADb dataset. As shown in
Table IV and Table V, our method achieves the best tumor
and liver segmentation results on the 3DIRCADb dataset,
surpassing the state-of-the-art result largely, with 10.7% and
7.1% improvement on DICE for tumor and liver segmentation
respectively. The promising result indicates the effectiveness
and good generalization capability of our method. On the
other hand, such a good result is also attributed to the LiTS
dataset, which contains a huge amount of training data with
large variations, and the ability of our method to extract
discriminative features from this dataset. Figure 6 shows some
examples of the results on the 3DIRCADb dataset. It is
obvious that our method can well segment the liver and liver
lesions from challenging raw CT scans.
test image
ground truth
our result
Figure 6: Examples of our segmentation results on the
3DIRCADb dataset.
V. DISCUSSION
Automatic liver and tumor segmentation plays an important
role in clinical diagnosis. It provides the precise contour of
the liver and any tumors inside the anatomical segments of
the liver, which assists doctors in the diagnosis process. In
this paper, we present an end-to-end training system to explore
hybrid features for automatic liver lesion segmentation, where
the 3D contexts are effectively probed under the auto-context
mechanism. Through the hybrid fusion learning of intraslice and inter-slice features, the segmentation performance
for liver lesion has been improved, which demonstrates the
effectiveness of our H-DenseUNet. Moreover, compared with
other 3D networks , our method probes 3D contexts
efﬁciently. This is crucial in the clinical practice, especially
when huge amount of 3D images, containing large image size
and a number of slices, are increasingly accumulated in the
clinical sites.
IEEE TRANSACTIONS ON MEDICAL IMAGING
Table VI: Effectiveness of our method regarding to the tumor
size (Dice: %).
Large-tumor group
Small-tumor group
H-DenseUNet
45.04 (+1.48)
60.59 (+2.35)
42.18 (+1.1)
Note: Baseline is the 2D DenseUNet with pre-trained model.
To show the generalization capability of our method in the
clinical practice, we tested our trained model from the LiTS
dataset on the 3DIRCADb dataset, and it achieved the stateof-the-art results on both liver and tumor segmentation, with
98.2% and 93.7% on DICE. The promising results achieved
on the 3DIRACDb dataset also validated that our method is
not simple overtraining, but actually is effective to generalize
to different dataset under different data collection conditions.
To have a better understanding about the performance gains,
we analyze the effectiveness of our method regarding the liver
tumor size in each patient. Figure 7 shows the tumor size
value of 40 CT volume data in our validation dataset, where
the tumor size is obtained by summing up tumor voxels in each
ground-truth image. It is observed that the dataset has large
variations of the tumor size. For comparison, we divide the
dataset into the large-tumor group and the small-tumor group
by the orange line in Figure 7. From Table VI, we can observe
that our method improves the segmentation accuracy by 1.48
(Dice:%) in the whole validation dataset. We can also observe
that the large-tumor group achieves 2.35 (Dice:%) accuracy
improvements while the score for the small-tumor group is
slightly advanced, with 1.1 (Dice:%). From the comparison,
we claim that the performance gain is mainly attributed to
the improvement of the large-tumor data segmentation results.
This is mainly because that the H-DenseUNet mimics the
diagnosis process of radiologists, where tumors are delineated
by observing several adjacent slices, especially for tumors
have blurred boundaries. Once the blurred boundaries are well
segmented, the segmentation accuracy for the large-tumor data
can be improved by a large margin. Although the hybrid
feature still contributes to the segmentation of small tumors,
the improvement is limited since small tumors usually occur in
fewer slices. In the future, we will focus on the segmentation
for small liver tumors. Several potential directions will be
taken into considerations for tackling small liver tumor problem, i.e., multi-scale representation structure and deep
supervision . Recently, perceptual generative adversarial
networks (GANs) have been proposed for small object detection and classiﬁcation . For example,
Li et al. 
generated superresolved representations for small objects by
discovering the intrinsic structural correlations between smallscale and large-scale objects, which may also be a potential
direction for handling this challenging problem.
Another key that should be explored in the future study is
the potential depth for the H-DenseUNet. In our experiments,
we trained the network using data parallel training, which is
an effective technique to speed up the gradient descent by
paralleling the computation of the gradient for a mini-batch
across mini-batch elements. However, the model complexity
is restricted by the GPU memory. In the future, to exploit
the potential depth of the H-DenseUNet, we can train the
Tumor size
the large and small tumor group boundary
Figure 7: Tumor size (tumor voxels number) in each patient
of our validation dataset. We deﬁne the orange line to seperate
the large-tumor and the small-tumor group.
network using model parallel training, where different portions
of the model computation are done on distributed computing
infrastructures for the same batch of examples. This strategy
maybe another possible direction to further improve the liver
tumor segmentation performance.
VI. CONCLUSION
We present an end-to-end training system H-DenseUNet for
liver and tumor segmentation from CT volumes, which is a
new paradigm to effectively probe high-level representative
intra-slice and inter-slice features, followed by optimizing the
features through the hybrid feature fusion layer. The architecture gracefully addressed the problems that 2D convolutions
ignore the volumetric contexts and 3D convolutions suffer
from heavy computational cost. Extensive experiments on the
dataset of 2017 LiTS and 3DIRCADb dataset demonstrated
the superiority of our proposed H-DenseUNet. With a singlemodel basis, our method excelled others by a large margin on
lesion segmentation and achieved very competitive result on
liver segmentation on the LiTS Leaderboard.
VII. ACKNOWLEDGMENTS
This work was supported by the grants from the Research
Grants Council of the Hong Kong Special Administrative
Region (Project Nos. GRF 14202514 and GRF 14203115).