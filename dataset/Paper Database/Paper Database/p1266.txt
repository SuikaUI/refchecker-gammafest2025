CONTEXT – SENSITIVE SEMANTIC QUERY EXPANSION
Giorgos Akrivas, Manolis Wallace, Giorgos Andreou, Giorgos Stamou and Stefanos Kollias
Image, Video and Multimedia Laboratory,
Department of Electrical and Computer Engineering,
National Technical University of Athens,
15773 Zografou,Greece
{wallace, gakrivas, geand}@image.ntua.gr, {gstam, stefanos}@softlab.ntua.gr
Modern Information Retrieval Systems match the terms included in a user’s query with available documents, through
the use of an index. A fuzzy thesaurus is used to enrich the
query with associated terms. In this work, we use semantic
entities, rather than terms; this allows us to use knowledge
stored in a semantic encyclopedia, speciﬁcally the ordering
relations, in order to perform a semantic expansion of the
query. The process of query expansion takes into account
the query context,which is deﬁned as a fuzzy set of semantic entities. Furthermore, we integrate our approach with the
user’s proﬁle.
1. INTRODUCTION
An Information Retrieval System (IRS) consists of a database, containing a number of documents, an index, that associates each document to its related terms, and a matching mechanism, that maps the user’s query (which consists
of terms), to a set of associated documents. Quite often,
the user’s query and the index are fuzzy, meaning that the
user can somehow supply the degree of importance for each
term, and that the set of associated terms for each document
also contains degrees of association. In this case, the returned documents are sorted, with the one that best matches
the user’s query returned ﬁrst .
It is possible that a query does not match a given index
entry, although the document that corresponds to it is relevant to the query. For example, a synonym of a term found
in a document may be used in the query. This problem is
typically solved with the use of a fuzzy thesaurus containing, for each term, the set of its related ones. The process of
enlarging the user’s query with the associated terms is called
query expansion; it is based on the associative relation A of
the thesaurus, which relates terms based on their probability
to co-exist in a document , .
This work has been partially funded by the EU IST-1999-20502
FAETHON project.
In order to make query expansion more “intelligent”, it
is necessary to take into account the meaning of the terms
 . The notion of a semantic encyclopedia can be used as a
means to provide semantics to the user’s query . The user
queries, on one hand, and the index entries, on the other,
are represented with the use of semantic entities, deﬁned
in the encyclopedia. The former task is called query interpretation, and maps each term of a textual query to its
corresponding semantic entity, thus producing the semantic
query. This is naturally performed on query time. The latter task is called detection of semantic entities and produces
the semantic index, i.e. a mapping of semantic entities to
related documents . This is performed off line.
Matching of semantic queries and semantic indices is
not a trivial task; semantic entities that are not found in a
query might be highly associated with it, and their inclusion might result in enhancing the process of information
retrieval. Again, as in the case of textual queries and textual indices, a statistically generated associative relation A
can be used for the expansion of the semantic query. Moreover, the various semantic relations amongst semantic entities, that are deﬁned in the semantic encyclopedia, provide
the possibility to perform a query expansion based on semantics rather than statistics. We will refer to this approach
as semantic query expansion.
In this work, we use the semantic relations of the encyclopedia, speciﬁcally the ordering relations, in order to
construct the Inclusion relation, which resides in the thesaurus. We use this relation to extract the common meaning
of the terms in the query; we refer to this as the context of
the query. Based on the latter, we propose an algorithm for
context – sensitive semantic query expansion.
The paper is organized as follows: In section 2 we present the ordering relations of the encyclopedia and construct
the Inclusion relation based on them. In section 3 we explain how, using the semantic entities in the query, we can
mine the context of the query. In section 4 we integrate the
context with the user proﬁle, while in section 5 we use the
context to map terms to semantic entities. Sections 6 and
7 present our method for context – sensitive query expansion, as well as simulation examples. Finally, in section 8
we propose some possible extensions of our work.
2. THE INCLUSION RELATION OF THE FUZZY
Detection of context, as mentioned above, depends on the
Inclusion relation of the thesaurus. Before continuing, we
provide a few details on mathematical notation in general
and this relation in particular.
2.1. Mathematical Notation
Let S = {s1, s2, . . . , sn}, denote the set of semantic entities.
A fuzzy binary relation on S is a function R : S2 →
 . The inverse relation R−1 is deﬁned as R−1(x, y) =
The intersection, union and sup −t composition of two
fuzzy relations P and Q deﬁned on the same set S are de-
[P ∩Q](x, y) = t(P(x, y), Q(x, y))
[P ∪Q](x, y) = u(P(x, y), Q(x, y))
[P ◦Q](x, y) = sup
t(P(x, z), Q(z, y))
where t and u are a t-norm and a t co-norm, respectively.
The standard t-norm and t-conorm are, respectively, the
min and max functions. An Archimedian t-norm satisﬁes
the property of subidempotency, i.e. t(a, a) < a, ∀a ∈
The identity relation, I, is the identity element of the
sup −t composition: R ◦I = I ◦R = R, ∀R.
The properties of reﬂectivity, symmetricity and sup −t
transitivity are deﬁned as following:
R is called reﬂective iff I ⊆R
R is called symmetric iff R = R−1
R is called antisymmetric iff R ∩R−1 ⊆I
R is called sup-t transitive (or, simply, transitive) iff R ◦
A transitive closure of a relation is the smallest transitive relation that contains the original relation . The transitive closure of a relation is given by the formula
where R(n) = R ◦R(n−1), R(1) = R
If R is reﬂective, then its transitive closure is given by
Tr (R) = R(n−1), where n = |S| .
A fuzzy ordering relation is a fuzzy binary relation that
is antisymmetric and transitive. A partial ordering is, additionally, reﬂective.
A fuzzy partial ordering relation R deﬁnes, for each element s ∈S, the fuzzy set of its ancestors (dominating
class) R≥[s](x) = R(s, x), and its descendants (dominated
class) R≤[s](x) = R(x, s). For simplicity, we will use the
alternative notation R(s) instead of R≤[s].
As described in section 1, a query q is a fuzzy set deﬁned
on S. This means that any element si ∈S, i ∈Nn belongs
to q in some degree wi = q(s). Of course, for most semantic
entities this degree is expected to be zero. Nevertheless, we
assume that wi = 1 for at least one semantic entity (i.e. q is
normal, the height h(q) .= max
i∈Nnwi = 1). From now on, for
the query q, we will use the vector notation q = [qi], or the
sum notation q = P
2.2. The Fuzzy Inclusion Relation
Construction of the Inclusion relation is typically based on
the specialization relation Sp , which is a partial ordering
on the set of the semantic entities . Sp(a, b) means that
the meaning of a “includes” the meaning of b. The most
common forms of specialization are subclassing (i.e. a is
a generalization of b) and thematic categorization (i.e. a is
the thematic category of b). The role of the specialization
relation in query expansion is that if the user query contains
a, then a document containing b will be of interest, since it
contains a special case of a.
Another important ordering found in the encyclopedia
is the part relation P . P(a, b) means that b is a part
of a. Moreover, it is expected that the role of P for query
expansion is the opposite of that of Sp, i.e. when the user
query contains b, a document containing a will probably be
of interest, because a contains a part b.
Given the above considerations, we construct the Inclusion relation I of the thesaurus as follows:
I = (Sp ∪P −1)n−1
where n = |S|. This means that I is the transitive closure
of Sp ∪P −1. Since the composition of transitive relations
is not necessarily transitive, this closure is necessary. Based
on the roles that Sp and P have in information retrieval, it
is easy to see that (1) combines them in a way that implies
that, if the user query contains a, then I(a, b) indicates that
documents that contain b will also be of interest.
In this work, fuzziness of the I relation has an important
role. High values of I(a, b) imply that the meaning of b
approaches the meaning of a, in the sense that when the user
query contains a, then the user will certainly be satisﬁed
with documents containing b. On the other hand, as I(a, b)
decreases, the meaning of b becomes “narrower” than the
meaning of a, in the sense that a document containing just b
will probably not be of interest to the user. Therefore,
a ̸= b =⇒I(a, b) < 1
Moreover, the t-norm is an Archimedian norm. This
means that I(a, c) ≥max
s∈S t(I(a, s), I(s, c)), t(a, a) < a
and, therefore, t(a, b) < min(a, b), ∀a ∈(0, 1).
3. DETECTION OF THE QUERY CONTEXT
By using the above interpretation of the I relation, we deﬁne
the context of a semantic entity as the set of semantic entities
that are included in it. Therefore, the context of s is simply
the set of descendants I(s). Assuming that q is crisp, the
context K(q) of q, which is a set of semantic entities, can
be deﬁned simply as the set of their common descendants,
Obviously, q1 ⊆q2
K(q1) ⊇K(q2), i.e. the
presence of more query terms will make the query context
We will show that a direct extension of the above deﬁnition in the fuzzy case, for example K∗(q) = T
is not meaningful. A low degree of importance wi for the
semantic entity si implies that the meaning of si is relatively insigniﬁcant for the query. On the other hand, it is
implied by the above deﬁnition of K∗that a low value of
wi will narrow the context more than a high one; this is
the opposite effect than what is desired. In order to achieve
the desired effect, the following conditions must be satis-
ﬁed, for the weighted context K(si) = P
sj/K(si)j of the
semantic entity si:
• if wi = 0, then K(si) = S (no narrowing of context)
• if wi = 1, then K(si) = I(si)
• K(si)j decreases monotonically with wi
Our approach is linear:
K(si)j = 1 −wi(1 −I(si)j)
The context of the fuzzy query is the fuzzy intersection
of the individual weighted contexts:
When the query terms are highly correlated in I, then
the query context will contain high values. We will use the
term context intensity for the greatest of them, i.e. for the
height hq = h(K(q)) of the query context.
4. USER PROFILE
In section 6, we propose a query expansion method, which
considers the context. In this section, we use the user’s preferences to alter this context, thus providing the capability
for query personalization.
Since the context is deﬁned on the set S of semantic
entities, it makes sense to deﬁne the user proﬁle on the same
set , as follows:
U + is the fuzzy set of a user’s positive preferences and
U −is the fuzzy set of the user’s negative preferences. Positive preferences refer to the degree to which we believe that
a semantic entity is of interest to the user, and negative preferences refer to the degree to which we believe that a semantic entity is not of interest to the user. As a minimum
restriction for consistency we demand that
i > 0 =⇒u−
Neutral preference for a semantic entity is denoted by
We propose the following method for shifting the original context K(q) in the direction of the user’s preferences:
K′(q)j = (K(q)j)1+nu−
where K′(q) is the adjusted (personalized) context, and p,
n are parameters that specify the degree to which the user’s
positive and negative preferences affect the context. The
proposed formula and its properties have been studied extensively in the ﬁeld of fuzzy logic, under the general category of modiﬁers or linguistic hedges. It has the following
properties, that are desired in the process of personalizing
the context:
• it does not affect weights when the preference is neutral
• it does not alter weights that are equal to one or zero
• it is monotonous with respect to the initial weight of
the context
• it is monotonous with respect to the user’s preference.
5. CONTEXT – SENSITIVE QUERY
INTERPRETATION
In section 3, we supposed that the mapping of the terms provided by the user to the corresponding semantic entities is
one-to-one, and therefore trivial. This is true for most cases;
still, exceptions exist, as distinct semantic entities may have
common textual descriptions. As a simple example, let us
consider the case of the term “element”. At least two distinct semantic entities correspond to it: “element1”, which
is related to chemistry, and “element2”, which is related to
Let us now suppose that a query containing the term “element” is given by a user. If the remaining terms of the
query are related to chemistry, then it is quite safe to suppose that the user is referring to semantic entity “element1”
rather than to semantic entity “element2”. This implies that
the context of the query can be used to facilitate the process
of semantic entity determination. However, the detection of
the query context, as it was described in section 3, cannot
be performed before the query interpretation is completed.
Therefore, query interpretation needs to take place simultaneously with context detection. We propose the following
Let the textual query contain the terms t = [ti], i =
1, . . . , T. Let also ti be the textual description of semantic
entities sij, j = 1, . . . , Ti. Then, there exist Q
Ti distinct
combinations of semantic entities that may be used for the
representation of the user’s query; for each one of those we
calculate the corresponding context. The combination that
produces the most intense context is the one we select.
The algorithm we have proposed for query interpretation is exhaustive. Still, this is not a drawback, as:
• queries do not contain large numbers of terms
• the terms for which more that one semantic entities
may be chosen are rare
• the number of distinct semantic entities that may have
a common textual description is not large.
6. CONTEXT – SENSITIVE QUERY EXPANSION
As mentioned in section 1, query expansion enriches the
query in order to increase the probability of a match between the query and the document index. The presence of
several entities in the query deﬁnes a context, which we use,
in this section, to direct the expansion process.
6.1. Handling of Semantic Entities in Query Expansion
In section 1, we explain that the search engine uses the
query q, and the document index D, which is a fuzzy relation between the set of semantic entities S and the set of
documents T, to produce the result r; r is a fuzzy set on T.
When the query is comprised of a single semantic entity s,
then the result is simply the respective line of D, i.e. r(q) =
D(s). When the query contains more than one semantic entities, then the result is the set of documents that contain all
the semantic entities, i.e. r(q) = D(s1) ∩D(s2) ∩D(s3).
In query expansion, we replace each semantic entity s
with a set of semantic entities X(s); we will refer to this set
as the expanded semantic entity. When querying, we treat
X(s) considering a union operation, i.e. documents that
match any entity contained in X(s) are selected. Therefore, in order to preserve the intersection operation among
the original query entities, we need to expand each entity
separately.
6.2. Semantic Entity Expansion
Using the above principle, we formally deﬁne the expanded
entity X(si) = P
sj/xij as a fuzzy set on S; we compute it
using the query q, the context K(q) of the query, and the I
relation of the thesaurus. The weight xij denotes the degree
of signiﬁcance of the entity sj in X(si).
In a context – insensitive query expansion, the value of
xij, is proportional to the weight wi and the degree of inclusion I(si, sj). Therefore, xij = wij = wiI(si, sj). In
a context – sensitive query expansion, xij increases monotonically with respect to the degree to which the context of
sj is relative to the context of the query. We will use the
hj = h(I(sj) ∩K(q))
as a measure of this relevance. Therefore, we demand that
the following conditions be satisﬁed by our method :
• xij increases monotonically with respect to wij.
• hj = 1 =⇒xij = wij
• hq = 0 =⇒xij = wij
• hq = 1 =⇒xij = wijhj
• xij increases monotonically with respect to hj
Again, we follow a linear approach and propose the following formula:
xij = wij(1 −hq(1 −hj))
It is easy to observe that the expanded entity produced
by this method satisﬁes the above conditions.
7. SIMULATION EXAMPLE
In this section, we give examples of the proposed algorithms
for context personalization and context – sensitive query expansion.
K′(q)j −K(q)j
Table 1. Positive preference 0.6
7.1. Context Personalization
In order to simulate the proposed context personalization
method, we assume that a user proﬁle contains a positive
preference for semantic entity sj to a degree 0.6. Formally,
we assume that u+
= 0.6. Table 1 presents the importance K′(q)j of entity sj in the personalized context, for
p = 0.5 and K(q)j ranging form 0 to 1. It also presents
the difference between K′(q)j and K(q)j; this difference
is a measure of the inﬂuence of the personalization process
on the original context. We can observe that (a) the inﬂuence is positive, i.e. the context is shifted in the direction
of the preference, as well as that (b) the inﬂuence becomes
smaller as K(q)j →0 or K(q)j →1; on the contrary, it becomes larger as K(q)j becomes fuzzier. The later implies
that the role of the proﬁle becomes more important, as the
uncertainty about the participation of a semantic entity in
the context is greater.
Table 2 presents the corresponding values, if we assume
a negative preference u−
i = 0.6. Although the process’s behavior is similar (the values are shifted in the direction of the
preference), the inﬂuence on the original context is smaller.
This results from the fact that n < p, and is desired, as we
choose to treat positive preferences with greater conﬁdence.
7.2. Query Expansion
In order to demonstrate the proposed method, we provide
an example of the constructed Inclusion relation in Figure
1. Thick lines correspond to the Part relation, while thin
lines correspond to the Specialization relation. The archimedian norm we use is the product. Values that are implied
by transitivity are omitted for the sake of clarity.
We present the result of expansion of the following queries:
q1 =“Motor”/1+“Airplane”/1
q2 =“Motor”/1+“Airplane”/1+“Propeller”/0.7
q3 =“Motor”/1+“Airplane′′/1+“Propeller”/1
K′(q)j −K(q)j
Table 2. Negative preference 0.6
two-stroke
four-stroke
combustion
combustion
Fig. 1. The Inclusion relation
No Context
ext-combustion
int-combustion
prop-plane
Table 3. Expanded entity “motor”
No Context
prop-plane
Table 4. Expanded entity “airplane”
No Context
prop-plane
Table 5. Expanded entity “propeller”
Column “No Context” in table 3 shows the degree to
which various semantic entities participate in I(“Motor”);
this is in fact their importance in X(“Motor′′), if the context is not considered. Columns “q1”, “q2” and “q3” show
the degree to which they are used for the expansion of the
semantic entity “Motor”, according to our method, if the
query is q1, q2 and q3, respectively. Tables 4 and 5 present
the corresponding data for semantic entities “Airplane” and
“Propeller”. We observe the following.
The use of the context in the expansion of term “Motor”
in query q1 results in the drastic diminishing of the importance of the terms “four-stroke”, “two-stroke” and “external
combustion” in the expanded entity. This is desirable, as
it is easy to see that, according to our encyclopedia, these
terms are not related to the context of “Airplane”. Furthermore, the semantic entities that are related to the context are
not ﬁltered. Thus, the entity expansion is successfully performed in the direction that the query context speciﬁes. We
observe the same when considering the remaining terms or
The three simulated queries are not independent. They
are all of the form:
q =“Motor”/1+“Airplane”/1+“Propeller”/w
where w assumes the values 0, 0.7, 1. It is easy to see that
all membership degrees in the expanded q2 lie between their
corresponding values for queries q1 and q3. This implies
that the transition from w = 0 to w = 1 is gradual; therefore, fuzziness of queries in the extraction of the context is
meaningful.
8. CONCLUSIONS AND FUTURE WORK
In this work, we propose a novel deﬁnition of the fuzzy Inclusion relation, which uses knowledge stored in a semantic
encyclopedia. The problem of semantic query expansion is
tackled through the notion of context, which is based on the
Inclusion relation.
In the proposed method, linear approaches are applied,
for the sake of simplicity. We believe that more general, non
– linear approaches might be interesting to investigate. Another open issue is the choice of the archimedian norm in
the fuzzy transitivity of the Inclusion relation. Finally, the
result of the semantic query expansion must be combined
with the result of the associative query expansion in an efﬁcient manner.
9. REFERENCES
 Kraft D.H., Bordogna G. and Passi G., Fuzzy Set Techniques in Information Retrieval, in James C. Berdek Didier Dudas and Henri Prade (Eds.) Fuzzy Sets in Approximate Reasoning and Information Systems, .
 Miyamoto S., Fuzzy sets in information retrieval and
cluster analysis, 
 Wen-Syan Li and Divyakant Agrawal, Supporting web
query expansion efﬁciently using multi-granularity indexing and query processing, Data & Knowledge Engineering, Volume 35, Issue 3, December 2000, Pages
 Kraft D.H., Petry F.E., Fuzzy information systems:
managing uncertainty in databases and information retrieval systems, Fuzzy Sets and Systems, 90 183-
191, Elsevier.
 Akrivas G., Stamou G., Fuzzy Semantic Association
of Audiovisual Document Descriptions, Proc. of Int.
Workshop on Very Low Bitrate Video Coding (VLBV),
Athens, Greece, Oct. 2001
 Avrithis Y. and Stamou G., FAETHON: Uniﬁed Intelligent Access to Heterogenous Audiovisual Content, Proc.
of Int. Workshop on Very Low Bitrate Video Coding
(VLBV), Athens, Greece, Oct. 2001
 Klir G. and Bo Yuan, Fuzzy Sets and Fuzzy Logic, Theory and Applications, New Jersey, Prentice Hall, 1995
 ISO/IEC JTC 1/SC 29 M4242, Text of 15938-5 FDIS
Information Technology – Multimedia Content Description Interface – Part 5 Multimedia Description Schemes,
October 2001.
 Manolis Wallace, Giorgos Akrivas, Giorgos Stamou
and Stefanos Kollias, Representation of User Preferences
and Adaptation to Context in Information Retrieval, submitted.