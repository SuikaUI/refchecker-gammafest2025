Adaptive model for recommendation of news
Mat´uˇs Medo1(a), Yi-Cheng Zhang1(b) and Tao Zhou1,2
1 Physics Department, University of Fribourg - CH-1700 Fribourg, Switzerland
2 Department of Modern Physics, University of Science and Technology of China - Hefei 230026, PRC
PACS 89.65.-s – Social and economic systems
PACS 89.75.Hc – Networks and genealogical trees
PACS 89.20.Ff – Computer science and technology
Abstract – Most news recommender systems try to identify users’ interests and news’ attributes
and use them to obtain recommendations. Here we propose an adaptive model which combines
similarities in users’ rating patterns with epidemic-like spreading of news on an evolving network.
We study the model by computer agent-based simulations, measure its performance and discuss
its robustness against bias and malicious behavior. Subject to the approval fraction of news
recommended, the proposed model outperforms the widely adopted recommendation of news
according to their absolute or relative popularity. This model provides a general social mechanism
for recommender systems and may ﬁnd its applications also in other types of recommendation.
Introduction.
information. To satisfy their needs, many information
sources have been created and now they are competing
for our attention . News distribution on the Internet
is also still fashioned the old, centralized way. Even the
new services like digg.com, reddit.com, wikio.com and
others, where the traditional news distribution paradigm
is challenged by assuming that it is the readers who
contribute and judge the news, have a serious drawback:
every reader sees the same front page. As a result, only
news items of very general interest can become popular.
Niche items, i.e. those that target a particular interest or
locality, do not have much chance to reach their audience.
An alternative approach is to deliver “the right news
to the right readers” as provided by systems for adaptive
news access . These systems accommodate the interests
of their users and provide a personalized set of interesting
news for each individual. They reﬂect their readers’ actions
by either news aggregation (where each user can choose
preferred sources and topics), adaptive news navigation
(this is achieved mainly by creating lists of most popular
news —a technique which is adapted by most newspaper
websites but can be implemented also in a more sophisticated way as recently suggested in ), contextual news
access (providing news according to the currently viewed
information), or by content personalization on the basis
(a)E-mail: 
(b)E-mail: 
of past user’s preferences. The last option mentioned is
a speciﬁc application of recommender systems —a widely
applied tool for information ﬁltering .
Various systems for personalized news recommendation
were proposed in past. Possibly the simplest approach,
known also as “collaborative ﬁltering”, is based on using
the correlations between users’ ratings . Often used
is learning the keywords of interest for each individual
user and recommending the news that contain them .
Similarly, when both news and readers’ interests can be
described by a couple of categories, recommendations can
be obtained by matching news’s attributes with user’s
preferences . Most news recommender systems are
constructed in this way, only that the handful of categories
is replaced by a more general user’s reading proﬁle which
is inferred from the user’s feedback on previously read
news . In some cases, separate models addressing
user’s short-term and long-term interests are used and
the ﬁnal recommendation is obtained as a mix of the two
results . Explicit user ratings of news can be replaced
by implicit ratings (for example, the mere access of a news
may be interpreted as the user’s satisfaction) or by ratings
inferred from reading times (when “short” and “long”
reading times are interpreted as user’s dissatisfaction or
satisfaction respectively) . For an overview of this
rapidly developing ﬁeld see .
The news recommender model which we propose and
study in this paper is diﬀerent from the systems described
above. While preserving the user-posting-news feature
 
 
which should be cited to refer to this work.
which is often used by popular websites, we aim at
personalized news recommendation by observing readers’
past reading patterns, identifying their taste mates and
constructing a directed local neighborhood network. In
our model, users read news and either “approve” or
“disapprove” them. When a news is approved, it spreads
in the neighborhood network to the next prospective
readers. This process is similar to an epidemic spreading
in a social network or to rumor spreading in a
society . Simultaneously with the spreading of news,
the network of contacts gradually evolves to best capture
users’ similarities.
To summarize, with the reading community acting as
a collective social ﬁlter, we aim to navigate news items
to their intended readership. The model’s reliance on
connecting the users with similar reading interests is motivated by the basic paradigm of recommender systems: you
get recommended what your taste-mates already liked .
However, recommendation of news has an important ﬂavor
which is missing in most other applications of recommender systems: novelty is of crucial importance there. In
our case, the challenge of fast news delivery is addressed
by the exponentially fast spreading of good news (which
is a direct consequence of the spreading mechanism) while
the importance of novelty is reﬂected by a later introduced
continual time decay of the recommendation scores.
Description of the model. – Here we describe the
adaptive news recommendation model, assuming no other
information than ratings of news by users.
In this paper, U is the total number of
users, S is the number of trusted sources (authorities)
assigned to each user, and sij is the estimated similarity of
reading tastes of users i and j. We use Latin letters to label
the users and Greek letters to label the news. Evaluation
of news α by user i, eiα, is either +1 (liked/approved),
−1 (disliked/disapproved) or 0 (not evaluated yet). The
recommendation score of news α for user i is Riα.
Estimation of user similarity.
User similarity is estimated from users’ assessments of the news. When users i
and j match in evaluations of m news and mismatch in
evaluations of M news, the overall probability of agreement can be estimated as m/(m + M) and this number
can be used as a measure of similarity of these users.
However, such an estimate is prone to statistical ﬂuctuations: it is the user pairs with a small number of commonly
evaluated news m + M that are likely to achieve “perfect”
similarity 1. Since in sampling of n trials, the typical relative ﬂuctuation is of the order of 1/√n, we estimate the
user similarity as
where θ is a factor determining how strongly we penalize
user pairs with few commonly evaluated news. The value
θ = 1 yielded optimal results in our tests and we use it in all
simulations presented in this paper. When m + M = 0 (no
overlap), we set sij = ε where ε is a small positive number:
this reﬂects that even when we know no users’ evaluations,
there is some base similarity of their interests.
Propagation of news.
One can use all currently
available user evaluations to estimate similarities sij for
all user pairs. Since the memory needed to store the result
grows quadratically with the number of users, this is not a
scalable approach to the problem. To decrease the memory
demands, we keep only S strongest links for each user.
Those S users who are most similar to a given user i we
refer to as authorities of i and, conversely, those who have
user i as an authority we refer to as followers of i. Notice
that while the number of authorities for each user is ﬁxed,
a highly valued user may have a large number of followers.
Lacking any prior information, we assume random initial
assignment of authorities. As the system gathers more
evaluations, at regular time intervals it evaluates the data
and selects the best authorities for each user.
The directed network of authorities and followers
described above serves as a basis for news propagation
in our model. After news α is introduced to the system
by user i, its initial recommendation score is zero for all
users: Riα = 0. In addition, the news is “passed” to all
followers of i. For each such user j, the recommendation
score increases by sij (i.e., the higher the similarity with
the news’s originator, the stronger the recommendation).
When news α is approved by user j, it is passed further
to all followers of j and for each of those users, the
recommendation score is increased by their similarity
with j. That means, when user j approves news α,
recommendation scores of this news are updated as
kα = Rkα + skj,
where k is a follower of j. For user i, the available
unread news are sorted according to Riα (high scores
at the top). As is illustrated in ﬁg. 1, when a user
receives the same news from multiple authorities, the
news’s recommendation score increases multiple times and
hence the news is more likely to get to the top of the user’s
recommendation list and be eventually read.
In eﬀect, the above algorithm implies that news spread
in a directed network of users. Since similarities skj are
positive, recommendation scores updated according to
eq. (2) can only grow with time which gives unjustiﬁed
advantage to old news. We shall introduce a time decay of
the scores in the following section.
Updating the assignment of authorities.
Authorities of
user i should be always those S users who have the highest
rating similarity with i. While this requires continual
updating of authorities, as the optimal assignment is
approached, the updating can be done less frequently. For
simplicity, we update the assignment of authorities every
ten time steps in all numerical simulations.
Numerical validation of the model. – We devise
a simple agent-based approach to test and optimize
 
Fig. 1: Illustration of the news propagation. (a) User i added a
new news, which is automatically considered as approved (A)
and sent to users j1, j2, j3 who are i’s followers. (b) While user
j2 dislikes (D) the news, users j1 and j3 approve it and pass it
further to their followers k1, . . . , k5 who have not evaluated the
news yet (which is denoted with question marks). (c) User k4
receives the news from the authorities j1 and j3, yielding the
news’s recommendation score sj1k4 + sj3k4. At the same time,
user k5 receives the news only from the authority j3 and hence
for this user, the recommendation score is only sj3k5.
the proposed model (for an introduction to agent-based
modeling see ). It’s not our goal to provide a perfect
model of readers’ behavior. Instead, we aim to make
plausible assumptions allowing us to study the model
under various circumstances.
Agent-based model.
To model user’s judgment of
read news we use a vector model where tastes of user i
are represented by the D-dimensional taste vector ti =
(ti,1, . . . , ti,D) and attributes of news α are represented by
the D-dimensional attribute vector aα = (aα,1, . . . , aα,D).
We use D = 16 and set the taste vectors such that each
user has preference for D1 = 6 of 16 available tastes
(hence, each taste vector has six elements equal to one
and the remaining ten elements equal to zero). There are
D1) = 8008 such vectors and hence there are 8008 users in
our system who all have mutually diﬀerent taste vectors.
Satisfaction of user i with news α is assumed in the form
Ω(i, α) = Qα(ti, aα),
where the scalar product (ti, aα) represents the overlap of
i’s tastes and α’s attributes and the multiplier Qα represents the overall quality of news α (similar vector models
are often used in semantic approaches to recommendation ). When a news is introduced to the system, its
attributes are set identical with the tastes of its originator and Qα is drawn from the uniform distribution
U(0.5, 1.5). We assume that user i approves news α only
when Ω(i, α) ⩾Δ; the news is disapproved otherwise.
Simulation time advances in steps. We assume that
in each time step, a given user is active with the probability pA. Each active user reads top R news from the
recommendation list (this is motivated by the study showing that users mostly visit pages that appear at the top
of search-engine results ) and with the probability pS
submits a new news.
Performance measures.
The ratio of news’ approvals
to all assessments is an obvious measure of the system’s
performance. This number, which we refer to as approval
fraction, tells us how often are users satisﬁed with the news
they get recommended.
In the computer simulation, we have the luxury of
knowing users’ taste vectors and hence we can compute
the number of diﬀerences between the taste vector of a
user and the taste vectors of the user’s authorities. By
averaging over all users, we obtain the average number
of diﬀerences. Obviously, the less are the diﬀerences, the
better is the assignment of authorities. Since we assume
that all taste vectors are mutually diﬀerent, the smallest
number of diﬀerences is two and hence we introduce excess
diﬀerences which is the average number of diﬀerences
minus two and the optimal value of this quantity is zero1.
First we study if the system is able to evolve
from the initial random assignment of authorities into a
more appropriate state. Instead to the described updating
of authorities, one can think of a simple “replace the
worst” scheme: in each step, every user confronts the
least-similar authority with a randomly selected user k.
When the authority’s similarity with the user is lower
than k’s similarity (and k is not the user’s authority
yet), the replacement is made. Such random sampling
is obviously less computationally demanding than the
original optimal approach which, on the other hand,
makes use of all the information available at the moment.
A compromise of the two approaches is to replace i’s
least-similar authority with one of the users who are
authorities for i’s most-similar authority (hence the name
“best authority’s random authority”, BARA).
We compare the three updating rules for S = 10 (ten
authorities per user), pA = 0.02 (i.e., on average, a user is
active every 50 steps), R = 3 (active user reads three top
news from the recommendation list), pS = 0.01 (on average, one of hundred active users submits a news), Δ = 3,
and ε = 0.001. As can be seen in ﬁg. 2, the optimal choice
of authorities yields higher approval fractions and lower
excess diﬀerences than the other two methods. The worst
performing is the BARA updating —while it initially
converges slightly faster than the random sampling, it
reaches only a strongly sub-optimal assignment of authorities. The initial plateau of the excess diﬀerences is due to
the little information available to the system at the beginning of the simulation. The initial value of excess diﬀerences in ﬁg. 2(b), 5.5, corresponds to the random initial
assignment of authorities2.
1When the number of authorities S is large (in our case, when
S > (D −D1)D1), it’s impossible to reach zero excess diﬀerences.
2This number depends on the parameters chosen —denoting
the number of ones in each of the D-dimensional taste vectors
as D1, the average number of diﬀerences can be computed as
¯d = 2 D1
 
Fig. 2: Comparison of various rewiring procedures: approval
fraction (a) and excess diﬀerences (b) as a function of time for
optimal, random, and BARA updating of authorities (results
were averaged over ten independent realizations).
An important ﬂavor is still missing in the proposed
model: a time decay of news’ recommendation scores.
With no decay present, recommendation scores never
decrease and a news is removed from a user’s reading
list only as it eventually gets read. In addition, with
many old news queued, it is hard for good fresh news to
get to the top of a recommendation list and catch the
user’s attention. A simple solution for all these problems
is achieved by incremental decreasing of recommendation
scores with time. We implement the time decay in the
following way: in each time step, when a user has more
than Q queued news, we decrease their recommendation
scores by a small value λ and news with Ri,α ⩽0 are
removed from the list. As shown in ﬁg. 3, an appropriately
set time decay signiﬁcantly increases the number of excess
diﬀerences and enhances the approval fraction.
Apart from the moderate improvement of both performance measures, the decay of recommendation scores is
crucial in promotion of fresh news. To illustrate this eﬀect
we did simulations where ﬁrst ten news introduced after
time step 500 (when the system is almost equilibrated)
had particularly high qualities. We used this setting to
examine how the average attention paid to those superior
news evolves with time. As can be seen in ﬁg. 4, without
decay, good news stay queued for exceedingly long time
before they reach their audience (solid line). On the other
hand, when the decay is too strong, even good news may
be eliminated prematurely (dotted line). As a compromise
between promotion of fresh news and two performance
Fig. 3: Eﬀects of the time decay on the system’s performance at
time step 800, when the system is almost equilibrated (results
were averaged over ten independent realizations).
Fig. 4: Evolution of the number of readers per time step for ten
high quality news introduced shortly after T = 500: no decay
(λ = 0), medium decay (Q = 10, λ = 0.1), strong decay (Q = 10,
measures (approval fraction and excess diﬀerences), we use
Q = 10 and λ = 0.1 in all following simulations.
Having seen that the proposed system is able to improve
the assignment of authorities and thus ﬁlter the news, a
natural question is: how would a diﬀerent system do? To
ﬁnd out, we use three diﬀerent systems for comparison.
When “recommending” at random, news are simply
chosen at random from the pool of available news. When
recommending by absolute popularity, a news is recommended according to the number of users who approved
it. When recommending by relative popularity, a news
is recommended according to the ratio of its number of
approvals to the number of its evaluations. In ﬁg. 5(a), we
compare the three simple systems with our adaptive model
for various values of the acceptance threshold Δ (the lower
the threshold, the less demanding the users). As can be
 
Fig. 5: Comparison of three simple ﬁltering mechanisms with
the proposed adaptive model. On the horizontal axis we have
the evaluation threshold Δ which characterizes how demanding
the users are. (a) The original setting with 6 active tastes out
of 16. (b) The total number of tastes is 24, only 6 of them are
seen, our system outperforms the others over a wide range
of Δ. Only when users demand little (Δ ≲3), recommendation by relative popularity is able to work similarly
well. However, notice that performance of popularitybased systems is strongly inﬂuenced by how much users
diﬀer in their tastes —this eﬀect is shown in ﬁg. 5(b)
where 6 active tastes out of 24 are assumed. Within
the described artiﬁcial framework, one can test also the
correlation-based recommendation method by Resnick
et al. . Our results show that the learning phase of this
method is longer and the resulting performance is worse
than those achieved with the adaptive model.
Real people are not judging machines and hence unintentional errors are always present in their evaluations
(intentional bias is often a problem too, we discuss it
later). To include these errors in our simulations, we generalize eq. (3) to the form
Ω(i, α) = Qα(ti, aα) + xE,
where E is a random variable drawn from the uniform
distribution U(−1, 1) and x > 0 is the error amplitude. As
shown in ﬁg. 6, evaluation errors have negative inﬂuence
on the system’s performance. However, while the number
of excess diﬀerences grows greatly (in ﬁg. 6, the increase
is more than ten-fold), the approval fraction, which is a
more practical measure, is much less sensitive (in ﬁg. 6,
the decrease is less than 20%). We can conclude that
the presented system is rather robust with respect to
unintentional evaluation errors.
Fig. 6: Dependency of the system’s performance on the amplitude of users’ evaluation errors x.
Real users are heterogeneous not only in their tastes
(as we have studied above) but also in the frequency and
pattern of system’s usage, in the threshold levels of news
judgment, in the amplitude of judgment errors, and other
aspects. These eﬀects are easy to be studied within the
presented framework. For example, our simulations show
that noisy users have less followers than more careful users.
The frequency of usage, while very important in the initial
learning phase (when heavy users have more followers than
casual users), is of little importance when the system has
approached the optimal assignment of authorities.
Discussion. – We introduced a novel news recommender model and studied its behavior and performance
in an artiﬁcial environment. We tried to keep the model
as simple as possible, yet not sacriﬁcing its performance
to simplicity. For example, one can think of replacing the
maximization of the similarity sij with a more sophisticated technique for the selection of authorities. We tested
a technique based on the factorization of the matrix of
users’ ratings but despite substantially higher computational complexity, the improvement obtained with this
method is none or little. Yet, the possibility of merging the
presented recommendation model with a diﬀerent method
by hybridization remains open.
Apart from the agent-based simulations presented here,
we would like to discuss some aspects of the model’s application in real life. For any information ﬁltering technique,
its vulnerability to malicious behavior is of crucial importance. Hence it is important to notice that the presented
system is resistant to actions of spammers. To illustrate
this, let us imagine that a spammer introduces a new junk
news to the system. Two things happen then. First, the
 
news is sent to a small number of the spammer’s followers
(if there are some) and after it is disapproved by them, the
news is eﬀectively removed from the system after “harming” only a handful of users. Second, spammers tend to
disagree with their followers (who dislike their spam news)
and hence they loose these followers fast and soon are left
without any inﬂuence on the system at all. Surprisingly,
a similar thing would happen to a renowned news agency
which would decide to act as a user and feed the system
with the agency’s news. Since agencies usually produce
news covering many diﬀerent areas, most users would ﬁnd
a large fraction of those news not interesting and the
system would attach them to another users with more
reﬁned preferences and hence a higher similarity value.
In other words, our model favors “selective sources” of
information over high-quality non-selective sources.
In any real application of the model, there are many
technical issues which need to be addressed. For example,
the initial random assignment of authorities can be easily
improved when users are asked to provide some information about their preferences. This information can be
transformed to a semi-optimal initial assignment which is
further improved on the basis of users’ evaluations. There
is also the cold start problem: at the beginning, most
users have no news recommended (the same holds also
later for fresh users). To overcome this, one can think
of merging the proposed spreading-based recommendation model with simple popularity based recommendation.
Further, users may be given the possibility to choose some
or all of their authorities by themselves. While hard to
model in a computer agent-based simulation, this freedom of choice may signiﬁcantly improve users’ satisfaction and their trust in the system. The recent popularity of online social applications tells us that regardless
how sophisticated a mathematical algorithm is, users often
prefer recommendations from sources who they know and
trust . Finally, one can object that in our model, reputation of the user who introduces a news to the system
is of zero importance. In practice it is easy to reﬂect this
reputation by, for example, increasing the recommendation score of news introduced by users with a good submission record.
The ultimate test of the system’s performance and
viability can be provided only by tests with real users.
We are looking forward to this stage of our research.
acknowledge
stimulating
discussions
G. Cimini. This work was partially supported by Swiss
National Science Foundation (grant no. 200020-121848),
TZ acknowledges support of the National Natural Science
Foundation of China (grant nos. 60744003 and 10635040).