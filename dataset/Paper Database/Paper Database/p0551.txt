A Survey of Deep Active Learning
PENGZHEN REN∗and YUN XIAO∗, Northwest University
XIAOJUN CHANG, RMIT University
PO-YAO HUANG, Carnegie Mellon University
ZHIHUI LI†, Qilu University of Technology (Shandong Academy of Sciences)
BRIJ B. GUPTA, National Institute of Technology Kurukshetra, India
XIAOJIANG CHEN and XIN WANG, Northwest University
Active learning (AL) attempts to maximize a model’s performance gain while annotating the fewest samples
possible. Deep learning (DL) is greedy for data and requires a large amount of data supply to optimize a massive
number of parameters if the model is to learn how to extract high-quality features. In recent years, due to the
rapid development of internet technology, we have entered an era of information abundance characterized by
massive amounts of available data. As a result, DL has attracted significant attention from researchers and has
been rapidly developed. Compared with DL, however, researchers have a relatively low interest in AL. This is
mainly because before the rise of DL, traditional machine learning requires relatively few labeled samples,
meaning that early AL is rarely according the value it deserves. Although DL has made breakthroughs in
various fields, most of this success is due to a large number of publicly available annotated datasets. However,
the acquisition of a large number of high-quality annotated datasets consumes a lot of manpower, making it
unfeasible in fields that require high levels of expertise (such as speech recognition, information extraction,
medical images, etc.). Therefore, AL is gradually coming to receive the attention it is due.
It is therefore natural to investigate whether AL can be used to reduce the cost of sample annotation
while retaining the powerful learning capabilities of DL. As a result of such investigations, deep active
learning (DeepAL) has emerged. Although research on this topic is quite abundant, there has not yet been a
comprehensive survey of DeepAL-related works; accordingly, this article aims to fill this gap. We provide a
formal classification method for the existing work, along with a comprehensive and systematic overview. In
addition, we also analyze and summarize the development of DeepAL from an application perspective. Finally,
we discuss the confusion and problems associated with DeepAL and provide some possible development
directions.
CCS Concepts: • Computing methodologies →Machine learning algorithms.
Additional Key Words and Phrases: Deep Learning, Active Learning, Deep Active Learning.
ACM Reference Format:
Pengzhen Ren, Yun Xiao, Xiaojun Chang, Po-Yao Huang, Zhihui Li, Brij B. Gupta, Xiaojiang Chen, and Xin
Wang. 2021. A Survey of Deep Active Learning. 40 pages. 
INTRODUCTION
Both deep learning (DL) and active learning (AL) are a subfield of machine learning. DL is also called
representation learning . It originates from the study of artificial neural networks and realizes
the automatic extraction of data features. DL has strong learning capabilities due to its complex
structure, but this also means that DL requires a large number of labeled samples to complete the
corresponding training. With the release of a large number of large-scale data sets with annotations
∗Both authors contributed equally to this research.
†Corresponding author.
Authors’ addresses: Pengzhen Ren, ; Yun Xiao, , Northwest University; Xiaojun
Chang, , RMIT University; Po-Yao Huang, Carnegie Mellon University; Zhihui Li, Qilu University of
Technology (Shandong Academy of Sciences); Brij B. Gupta, National Institute of Technology Kurukshetra, India; Xiaojiang
Chen; Xin Wang, Northwest University.
 
Ren and Chang, et al.
and the continuous improvement of computer computing power, DL-related research has ushered
in large development opportunities. Compared with traditional machine learning algorithms, DL
has an absolute advantage in performance in most application areas. AL focuses on the study of
data sets, and it is also known as query learning . AL assumes that different samples in the
same data set have different values for the update of the current model, and tries to select the
samples with the highest value to construct the training set. Then, the corresponding learning task
is completed with the smallest annotation cost. Both DL and AL have important applications in the
machine learning community. Due to their excellent characteristics, they have attracted widespread
research interest in recent years. More specifically, DL has achieved unprecedented breakthroughs
in various challenging tasks; however, this is largely due to the publication of massive labeled
datasets . Therefore, DL is limited by the high cost of sample labeling in some professional
fields that require rich knowledge. In comparison, an effective AL algorithm can theoretically
achieve exponential acceleration in labeling efficiency . This large potential saving in labeling
costs is a fascinating development. However, the classic AL algorithm also finds it difficult to handle
high-dimensional data . Therefore, the combination of DL and AL, referred to as DeepAL, is
expected to achieve superior results. DeepAL has been widely utilized in various fields, including
image recognition , text classification , visual question answering 
and object detection , etc. Although a rich variety of related work has been published,
DeepAL still lacks a unified classification framework. To fill this gap, in this article, we will provide
a comprehensive overview of the existing DeepAL related work 1, along with a formal classification
method. The contributions of this survey are summarized as follows:
• As far as we know, this is the first comprehensive review work in the field of deep active
• We analyze the challenges of combining active learning and deep learning, and systematically
summarize and categorize existing DeepAL-related work for these challenges.
• We conduct a comprehensive and detailed analysis of DeepAL-related applications in various
fields and future directions.
Next, we first briefly review the development status of DL and AL in their respective fields.
Subsequently, in Section 2, the necessity and challenges of combining DL and AL are explicated.
In Section 3, we conduct a comprehensive and systematic summary and discussion of the various
strategies used in DeepAL. In Section 4, we review various applications of DeepAL in detail. In
Section 5, we conduct a comprehensive discussion on the future direction of DeepAL. Finally, in
Section 6, we make a summary and conclusion of this survey.
Deep Learning
DL attempts to build appropriate models by simulating the structure of the human brain. The
McCulloch-Pitts (MCP) model proposed in 1943 by is regarded as the beginning of modern DL.
Subsequently, in 1986, introduced backpropagation into the optimization of neural networks,
which laid the foundation for the subsequent rapid development of DL. In the same year, Recurrent
Neural Networks (RNNs) were first proposed. In 1998, the LeNet network made its first
appearance, representing one of the earliest uses of deep neural networks (DNN). However, these
pioneering early works were limited by the computing resources available at the time and did not
1We search about 270 related papers on DBLP using "deep active learning" as the keyword. We review the relevance of
these papers to DeepAL one by one, eliminate irrelevant (just containing a few keywords) or information missing papers,
and manually add some papers that do not contain these keywords but use DeepAL-related methods or relate to our current
discussion. Finally, the survey references are constructed. The latest paper is updated to November 2020. The references
include 103 conference papers, 153 journal papers, 3 books , 1 research report , and 1 dissertation .
There are 28 unpublished papers.
A Survey of Deep Active Learning
receive as much attention and investigation as they should have . In 2006, Deep Belief Networks
(DBNs) were proposed and used to explore a deeper range of networks, which prompted the
name of neural networks as DL. AlexNet is considered the first CNN deep learning model,
which greatly improves the image classification results on large-scale data sets (such as ImageNet).
In the ImageNet Large-Scale Visual Recognition Challenge (ILSVRC)-2012 competition , the
AlexNet won the championship in the top-5 test error rate by nearly 10% ahead of the second
place. AlexNet uses the ReLUs (Rectified Linear Units) activation function to effectively
suppress the gradient disappearance problem, while the use of multiple GPUs greatly improves the
training speed of the model. Subsequently, DL began to win championships in various competitions
and demonstrated very competitive results in many fields, such as visual data processing, natural
language processing, speech processing, and many other well-known applications . From
the perspective of automation, the emergence of DL has transformed the manual design of features
 in machine learning to facilitate automatic extraction . It is precisely because of
this powerful automatic feature extraction capability that DL has demonstrated such unprecedented
advantages in many fields. After decades of development, the research work related to DL is very
rich. In Fig.1a, we present a standard deep learning model example: convolutional neural network
(CNN) . Based on this approach, similar CNNs are applied to various image processing
tasks. In addition, RNNs and GANs (Generative Adversarial Networks) are also widely
utilized. Beginning in 2017, DL gradually shifted from the initial feature extraction automation to
the automation of model architecture design ; however, this still has a long way to go.
Thanks to the publication of a large number of existing annotation datasets , in recent
years, DL has made breakthroughs in various fields including machine translation ,
speech recognition , and image classification . However, this
comes at the cost of a large number of manually labeled datasets, and DL has a strong greedy
attribute to the data. While, in the real world, obtaining a large number of unlabeled datasets is
relatively simple, the manual labeling of datasets comes at a high cost; this is particularly true for
those fields where labeling requires a high degree of professional knowledge . For example,
the labeling and description of lung lesion images of COVID-19 patients requires experienced
clinicians to complete, and it is clearly impractical to demand that such professionals complete
a large amount of medical image labeling. Similar fields also include speech recognition ,
medical imaging , recommender systems , information extraction ,
satellite remote sensing and robotics , machine translation and
text classification , etc. Therefore, a way of maximizing the performance gain of the model
when annotating a small number of samples is urgently required.
Active Learning
AL is just such a method dedicated to studying how to obtain as many performance gains as possible
by labeling as few samples as possible. More specifically, it aims to select the most useful samples
from the unlabeled dataset and hand it over to the oracle (e.g., human annotator) for labeling, to
reduce the cost of labeling as much as possible while still maintaining performance. AL approaches
can be divided into membership query synthesis , stream-based selective sampling 
and pool-based AL from application scenarios . Membership query synthesis means that
the learner can request to query the label of any unlabeled sample in the input space, including
the sample generated by the learner. Moreover, the key difference between stream-based selective
sampling and pool-based sampling is that the former makes an independent judgment on whether
each sample in the data stream needs to query the labels of unlabeled samples, while the latter
chooses the best query sample based on the evaluation and ranking of the entire dataset. Related
research on stream-based selective sampling is mainly aimed at the application scenarios of small
Ren and Chang, et al.
(a) Structure diagram of convolutional neural network.
(b) The pool-based active learning cycle.
(c) A typical example of deep active learning.
Fig. 1. Comparison of typical architectures of DL, AL, and DeepAL. (a) A common DL model: Convolutional
Neural Network. (b)The pool-based AL cycle: Use the query strategy to query the sample in the unlabeled pool
𝑈and hand it over to the oracle for labeling, then add the queried sample to the labeled training dataset 𝐿
and train, and then use the newly learned knowledge for the next round of querying. Repeat this process until
the label budget is exhausted or the pre-defined termination conditions are reached. (c) A typical example
of DeepAL: The parameters 𝜃of the DL model are initialized or pre-trained on the labeled training set 𝐿0,
and the samples of the unlabeled pool 𝑈are used to extract features through the DL model. Select samples
based on the corresponding query strategy, and query the label in querying to form a new label training set
𝐿, then train the DL model on 𝐿, and update 𝑈at the same time. Repeat this process until the label budget
is exhausted or the pre-defined termination conditions are reached (see Section 3.4 for stopping strategy
mobile devices that require timeliness, because these small devices often have limited storage and
computing capabilities. The more common pool-based sampling strategy in the paper related to
AL research is more suitable for large devices with sufficient computing and storage resources. In
Fig.1b, we illustrate the framework diagram of the pool-based active learning cycle. In the initial
state, we can randomly select one or more samples from the unlabeled pool 𝑈, give this sample to
the oracle query label to get the labeled dataset 𝐿, and then train the model on 𝐿using supervised
learning. Next, we use this new knowledge to select the next sample to be queried, add the newly
queried sample to 𝐿, and then conduct training. This process is repeated until the label budget
is exhausted or the pre-defined termination conditions are reached (see Section 3.4 for stopping
strategy details).
A Survey of Deep Active Learning
It is different from DL by using manual or automatic methods to design models with highperformance feature extraction capabilities. AL starts with datasets, primarily through the design
of elaborate query rules to select the best samples from unlabeled datasets and query their labels, in
an attempt to reduce the labeling cost to the greatest extent possible. Therefore, the design of query
rules is crucial to the performance of AL methods. Related research is also quite rich. For example, in
a given set of unlabeled datasets, the main query strategies include the uncertainty-based approach
 , diversity-based approach and expected model change
 . In addition, many works have also studied hybrid query strategies ,
taking into account the uncertainty and diversity of query samples, and attempting to find a
balance between these two strategies. Because separate sampling based on uncertainty often results
in sampling bias , the currently selected sample is not representative of the distribution
of unlabeled datasets. On the other hand, considering only strategies that promote diversity in
sampling may lead to increased labeling costs, as may be a considerable number of samples with
low information content will consequently be selected. More classic query strategies are examined
in . Although there is a substantial body of existing AL-related research, AL still faces the
problem of expanding to high-dimensional data (e.g., images, text, and video, etc.) ; thus, most
AL works tend to concentrate on low-dimensional problems . In addition, AL often queries
high-value samples based on features extracted in advance and does not have the ability to extract
THE NECESSITY AND CHALLENGE OF COMBINING DL AND AL
DL has a strong learning capability in the context of high-dimensional data processing and automatic
feature extraction, while AL has significant potential to effectively reduce labeling costs. Therefore,
an obvious approach is to combine DL and AL, as this will greatly expand their application potential.
This combined approach, referred to as DeepAL, was proposed by considering the complementary
advantages of the two methods, and researchers have high expectations for the results of studies in
this field. However, although AL-related research on query strategy is quite rich, it is still quite
difficult to apply this strategy directly to DL. This is mainly due to:
• Model uncertainty in Deep Learning. The query strategy based on uncertainty is an
important direction of AL research. In classification tasks, although DL can use the softmax
layer to obtain the probability distribution of the label, the facts show that they are too
confident. The SR (Softmax Response) of the final output is unreliable as a measure of
confidence, and the performance of this method will thus be even worse than that of random
sampling .
• Insufficient data for labeled samples. AL often relies on a small amount of labeled sample
data to learn and update the model, while DL is often very greedy for data . The labeled
training samples provided by the classic AL method thus insufficient to support the training
of traditional DL. In addition, the one-by-one sample query method commonly used in AL is
also not applicable in the DL context .
• Processing pipeline inconsistency. The processing pipelines of AL and DL are inconsistent.
Most AL algorithms focus primarily on the training of classifiers, and the various query
strategies utilized are largely based on fixed feature representations. In DL, however, feature
learning and classifier training are jointly optimized. Only fine-tuning the DL models in the
AL framework, or treating them as two separate problems, may thus cause divergent issues
To address the first problem, some researchers have applied Bayesian deep learning to
deal with the high-dimensional mini-batch samples with fewer queries in the AL context [72, 115,
Ren and Chang, et al.
165, 223], thereby effectively alleviating the problem of the DL model being too confident about
the output results. To solve the problem of insufficient labelled sample data, researchers have
considered using generative networks for data augmentation or assigning pseudo-labels to
high-confidence samples to expand the labeled training set . Some researchers have also used
labeled and unlabeled datasets to combine supervised and semisupervised training across AL cycles
 . In addition, the empirical research in shows that the previous heuristic-based AL
 query strategy is invalid when it is applied to DL in batch settings; therefore, for the one-byone query strategy in classic AL, many researchers focus on the improvement of the batch sample
query strategy , taking both the amount of information and the diversity of batch
samples into account. Furthermore, to deal with the pipeline inconsistency problem, researchers
have considered modifying the combined framework of AL and DL to make the proposed DeepAL
model as general as possible, an approach that can be extended to various application fields. This is
of great significance to the promotion of DeepAL. For example, embeds the idea of AL into
DL and consequently proposes a task-independent architecture design.
DEEP ACTIVE LEARNING
In this section, we will provide a comprehensive and systematic overview of DeepAL-related works.
Fig.1c illustrates a typical example of DeepAL model architecture. The parameters 𝜃of the deep
learning model are initialized or pre-trained on the labeled training set 𝐿0, while the samples of the
unlabeled pool 𝑈are used to extract features through the deep learning model. The next steps are
to select samples based on the corresponding query strategy, and query the label in the oracle to
form a new label training set 𝐿, then train the deep learning model on 𝐿and update 𝑈at the same
time. This process is repeated until the label budget is exhausted or the predefined termination
conditions are reached (see Section 3.4 for stopping strategy details). From the DeepAL framework
example in Fig.1c, we can roughly divide the DeepAL framework into two parts: namely, the AL
query strategy on the unlabeled dataset and the DL model training method. These will be discussed
and summarized in the following Section 3.1 and 3.2 respectively. Next, we will discuss the efforts
made by DeepAL on the generalization of the model in Section 3.3. Finally, we briefly discuss the
stopping strategy in DeepAL in Section 3.4.
Query Strategy Optimization in DeepAL
In the pool-based method, we define 𝑈𝑛= {X, Y} as an unlabeled dataset with 𝑛samples; here, X
is the sample space, Y is the label space, and 𝑃(𝑥,𝑦) is a potential distribution, where 𝑥∈X,𝑦∈Y.
𝐿𝑚= {𝑋,𝑌} is the current labeled training set with 𝑚samples, where x ∈𝑋, y ∈𝑌. Under the
standard supervision environment of DeepAL, our main goal is to design a query strategy 𝑄,
−→𝐿𝑚, using the deep model 𝑓∈F, 𝑓: X →Y. The optimization problem of DeepAL in a
supervised environment can be expressed as follows:
𝐿𝑚⊆𝑈𝑛,(x,y) ∈𝐿𝑚,(𝑥,𝑦) ∈𝑈𝑛E(𝑥,𝑦) [ℓ(𝑓(x), y)],
where ℓ(·) ∈R+ is the given loss equation, and we expect that 𝑚≪𝑛. Our goal is to make 𝑚as
small as possible while ensuring a predetermined level of accuracy. Therefore, the query strategy
𝑄in DeepAL is crucial to reduce the labeling cost. Next, we will conduct a comprehensive and
systematic review of DeepAL’s query strategy from the following five aspects.
• Batch Mode DeepAL (BMDAL). The batch-based query strategy is the foundation of DeepAL.
The one-by-one sample query strategy in traditional AL is inefficient and not applicable to
DeepAL, so it is replaced by batch-based query strategy.
A Survey of Deep Active Learning
• Uncertainty-based and Hybrid Query Strategies. Uncertainty-based query strategy refers to the
model based on sample uncertainty ranking to select the sample to be queried. The greater
the uncertainty of the sample, the easier it is to be selected. However, this is likely to ignore
the relationship between samples. Therefore, the method that considers multiple sample
attributes is called the hybrid query strategy.
• Deep Bayesian Active Learning (DBAL). Active learning based on Bayesian convolutional
neural network is called deep Bayesian active learning.
• Density-based Methods. The density-based method is a query strategy that attempts to find a
core subset representing the distribution of the entire dataset from the perspective of
the dataset to reduce the cost of annotation.
• Automated Design of DeepAL. Automated design of DeepAL refers to a method that uses
automated methods to design AL query strategies or DL models that have an important
impact on DeepAL performance.
Batch Mode DeepAL (BMDAL). The main difference between DeepAL and classical AL is that
DeepAL uses batch-based sample querying. In traditional AL, most algorithms use a one-by-one
query method, which leads to frequent training of the learning model but little change in the
training data. The training set obtained by this query method is not only inefficient in the training
of the DL model, but can also easily lead to overfitting. Therefore, it is necessary to investigate
BMDAL in more depth. In the context of BMDAL, at each acquisition step, we score a batch of
candidate unlabeled data samples B = {𝑥1,𝑥2, ...,𝑥𝑏} ⊆𝑈based on the acquisition function 𝑎used
and the deep model 𝑓𝜃(𝐿) trained on 𝐿, to select a new batch of data samples B∗= {𝑥∗
This problem can be formulated as follows:
B∗= arg max
𝑎𝑏𝑎𝑡𝑐ℎ(B, 𝑓𝜃(𝐿)),
where 𝐿is labeled training set. In order to facilitate understanding, we also use 𝐷𝑡𝑟𝑎𝑖𝑛to represent
the labeled training set.
A naive approach would be to continuously query a batch of samples based on the one-byone strategy. For example, adopts the method of batch acquisition and chooses BALD
(Bayesian Active Learning by Disagreement) to query top-𝐾samples with the highest scores.
The acquisition function 𝑎𝐵𝐴𝐿𝐷of this idea is expressed as follows:
𝑎BALD ({𝑥1, . . . ,𝑥𝑏} , P (𝜔| 𝐷𝑡𝑟𝑎𝑖𝑛)) =
I (𝑦𝑖;𝜔| 𝑥𝑖, 𝐷𝑡𝑟𝑎𝑖𝑛) ,
I (𝑦; 𝝎| 𝑥, 𝐷𝑡𝑟𝑎𝑖𝑛) = H (𝑦| 𝑥, 𝐷𝑡𝑟𝑎𝑖𝑛) −EP(𝝎|𝐷𝑡𝑟𝑎𝑖𝑛) [H (𝑦| 𝑥, 𝝎, 𝐷𝑡𝑟𝑎𝑖𝑛)] ,
where I (𝑦; 𝝎| 𝑥, 𝐷𝑡𝑟𝑎𝑖𝑛) used in BALD is to estimate the mutual information between model
parameters and model predictions. The larger the mutual information value I(∗), the higher the
uncertainty of the sample. The condition of 𝝎on 𝐷𝑡𝑟𝑎𝑖𝑛indicates that the model has been trained
with 𝐷𝑡𝑟𝑎𝑖𝑛. And 𝜔∼P (𝜔| 𝐷𝑡𝑟𝑎𝑖𝑛) represents the model parameters of the current Bayesian
model. H(∗) represents the entropy of the model prediction. E[𝐻(∗)] is the expectation of the
entropy of the model prediction over the posterior of the model parameters. Equation (3) considers
each sample independently and selects samples to construct a batch query dataset in a one-by-one
Clearly, however, this method is not feasible, as it is very likely to choose a set of information-rich
but similar samples. The information provided to the model by such similar samples is essentially
the same, which not only wastes labeling resources, but also makes it difficult for the model to
learn genuinely useful information. In addition, this query method that considers each sample
Ren and Chang, et al.
(a) Batch query strategy considering only the
amount of information.
(b) Batch query strategy considering both
information volume and diversity.
Fig. 2. A comparison diagram of two batch query strategies, one that only considers the amount of information
and one that considers both the amount and diversity of information. The size of the dots indicates the
amount of information in the samples, while the distance between the dots represents the similarity between
the samples. The points shaded in gray indicate the sample points to be queried in a batch.
independently also ignores the correlation between samples. This is likely to lead to local decisions
that make the batch sample set of queries insufficiently optimized. Therefore, how to simultaneously
consider the correlation between different query samples is the primary problem for BMDAL. To
solve the above problems, BatchBALD expands BALD, which considers the correlation
between data points by estimating the joint mutual information between multiple data points and
model parameters. The acquisition function of BatchBALD can be expressed as follows:
𝑎BatchBALD ({𝑥1, . . . ,𝑥𝑏} , P (𝜔| 𝐷𝑡𝑟𝑎𝑖𝑛)) = I (𝑦1, . . . ,𝑦𝑏;𝜔| 𝑥1, . . . ,𝑥𝑏, 𝐷𝑡𝑟𝑎𝑖𝑛) ,
I (𝑦1:𝑏; 𝝎| 𝑥1:𝑏, 𝐷𝑡𝑟𝑎𝑖𝑛) = H (𝑦1:𝑏| 𝑥1:𝑏, 𝐷𝑡𝑟𝑎𝑖𝑛) −EP(𝝎|𝐷𝑡𝑟𝑎𝑖𝑛)H (𝑦1:𝑏| 𝑥1:𝑏, 𝝎, 𝐷𝑡𝑟𝑎𝑖𝑛) ,
where 𝑥1, . . . ,𝑥𝑏and 𝑦1, . . . ,𝑦𝑏are represented by joint random variables 𝑥1:𝑏and 𝑦1:𝑏in a product probability space, and I (𝑦1:𝑏; 𝝎| 𝑥1:𝑏, 𝐷𝑡𝑟𝑎𝑖𝑛) denotes the mutual information between these
two random variables. BatchBALD considers the correlation between different query samples by
designing an explicit joint mutual information mechanism to obtain a better query batch sample
The batch-based query strategy forms the basis of the combination of AL and DL, and related
research on this topic is also very rich. We will provide a detailed overview and discussion of
BMDAL query strategies in the following sections.
Uncertainty-based and Hybrid Query Strategies. Because the uncertainty-based approach
is simple in form and has low computational complexity, it is a very popular query strategy in
AL. This query strategy is mainly used in certain shallow models (eg, SVM or KNN ).
This is mainly because the uncertainty of these models can be accurately obtained by traditional
uncertainty sampling methods. In uncertainty-based sampling, learners try to select the most
uncertain samples to form a batch query set. For example, in the margin sampling , margin
𝑀is defined as the difference between the predicted highest probability and the predicted second
highest probability of an sample as follows: 𝑀= 𝑃(𝑦1 | 𝑥) −𝑃(𝑦2 | 𝑥) , where 𝑦1 and 𝑦2 are the
first and second most probable labels predicted for the sample 𝑥under the current model. The
A Survey of Deep Active Learning
smaller the margin 𝑀, the greater the uncertainty of the sample 𝑥. The AL algorithm selects the
top-𝐾samples with the smallest margin 𝑀as the batch query set by calculating the margin 𝑀of all
unlabeled samples. Information entropy is also a commonly used uncertainty measurement
standard. For a 𝑘-class task, the information entropy E(𝑥) of sample 𝑥can be defined as follows:
𝑃(𝑦𝑖| 𝑥) · log (𝑃(𝑦𝑖| 𝑥)) ,
where 𝑃(𝑦𝑖| 𝑥) is the probability that the current sample 𝑥is predicted to be class 𝑦𝑖. The greater
the entropy of the sample, the greater its uncertainty. Therefore, the top-𝐾samples with the largest
information entropy should be selected. More query strategies based on uncertainty can be found
There are many DeepAL methods that directly utilize an uncertainty-based
sampling strategy. However, DFAL (DeepFool Active Learning) contends that these methods
are easily fooled by adversarial examples; thus, it focuses on the study of examples near the decision
boundary, and actively uses the information provided by these adversarial examples on the input
spatial distribution in order to approximate their distance to the decision boundary. This adversarial
query strategy can effectively improve the convergence speed of CNN training. Nevertheless, as
analyzed in Section 3.1.1, this can easily lead to insufficient diversity of batch query samples (such
that relevant knowledge regarding the data distribution is not fully utilized), which in turn leads
to low or even invalid DL model training performance. A feasible strategy would thus be to use
a hybrid query strategy in a batch query, taking into account both the information volume and
diversity of samples in either an explicit or implicit manner.
The performance of early Batch Mode Active Learning (BMAL) 
algorithms are often excessively reliant on the measurement of similarity between samples. In
addition, these algorithms are often only good at exploitation (learners tend to focus only on
samples near the current decision boundary, corresponding to high-information query strategies),
meaning that the samples in the query batch sample set cannot represent the true data distribution
of the feature space (due to the insufficient diversity of batch sample sets). To address this issue,
Exploration-P uses a deep neural network to learn the feature representation of the samples,
then explicitly calculates the similarity between the samples. At the same time, the processes of
exploitation and exploration (in the early days of model training, learners used random sampling
strategies for exploration purposes) are balanced to enable more accurate measurement of the
similarity between samples. More specifically, Exploration-P uses the information entropy in
Equation (5) to estimate the uncertainty of sample 𝑥under the current model. The uncertainty
of the selected sample set 𝑆can be expressed as 𝐸(𝑆) = Í
𝑥𝑖∈𝑆E(𝑥𝑖). Furthermore, to measure the
redundancy between samples in the selected sample set 𝑆, Exploration-P uses 𝑅(𝑆) to represent the
redundancy of selected sample set 𝑆:
𝑆𝑖𝑚(𝑥𝑖,𝑥𝑗),
𝑆𝑖𝑚(𝑥𝑖,𝑥𝑗) = 𝑓(𝑥𝑖)M𝑓(𝑥𝑗),
where 𝑓(𝑥) represents the feature of sample 𝑥extracted by deep learning model 𝑓, 𝑆𝑖𝑚(𝑥𝑖,𝑥𝑗)
measures the similarity between two samples, and M is a similarity matrix (when M is the identity
matrix, the similarity of two samples is the product of their feature vectors. In addition, M can
also be learned as a parameter of 𝑓). Therefore, the selected sample set 𝑆is expected to have the
largest uncertainty and the smallest redundancy. For this reason, Exploration-P considers these
two strategies, and the final goal equation is defined as:
I(𝑆) = 𝐸(𝑆) −𝛼
Ren and Chang, et al.
where, 𝛼is used to balance the weight of the hybrid query strategies, uncertainty and redundancy.
Moreover, DMBAL (Diverse Mini-Batch Active Learning) adds informativeness to the
optimization goal of K-means by weight, and further presents an in-depth study of a hybrid query
strategy that considers the sample information volume and diversity under the mini-batch sample
query setting. DMBAL can easily achieve expansion from the generalized linear model to DL;
this not only increases the scalability of DMBAL but also increases the diversity of active
query samples in the mini-batch. Fig.2 illustrates a schematic diagram of this idea. This hybrid
query strategy is quite popular. For example, WI-DL (Weighted Incremental Dictionary Learning)
 mainly considers the two stages of DBN. In the unsupervised feature learning stage, the key
consideration is the representativeness of the data, while in the supervised fine-tuning stage, the
uncertainty of the data is considered; these two indicators are then integrated, and finally optimized
using the proposed weighted incremental dictionary learning algorithm.
Although the above improvements have resulted in a good performance, there is still a hidden
danger that must be addressed: namely, that, diversity-based strategies are not appropriate for
all datasets. More specifically, the richer the category content of the dataset, the larger the batch
size, and the better the effect of diversity-based methods; by contrast, an uncertainty-based query
strategy will perform better with smaller batch sizes and less rich content. These characteristics
depend on the statistical characteristics of the dataset. The BMAL context, whether the data
are unfamiliar and potentially unstructured, makes it impossible to determine which AL query
strategy is more appropriate. In light of this, BADGE (Batch Active learning by Diverse Gradient
Embeddings) samples point groups that are disparate and high magnitude when represented
in a hallucinated gradient space, meaning that both the prediction uncertainty of the model and
the diversity of the samples in a batch are considered simultaneously. Most importantly, BADGE
can achieve an automatic balance between forecast uncertainty and sample diversity without
the need for manual hyperparameter adjustments. Moreover, while BADGE considers this
hybrid query strategy in an implicit way, WAAL (Wasserstein Adversarial Active Learning) 
proposes a hybrid query strategy that explicitly balances uncertainty and diversity. In addition,
WAAL uses Wasserstein distance to model the interactive procedure in AL as a distribution
matching problem, derives losses from it, and then decomposes WAAL into two stages: DNN
parameter optimization and query batch selection. TA-VAAL (Task-Aware Variational Adversarial
Active Learning) also explores the balance of this hybrid query strategy. The assumption
underpinning TA-VAAL is that the uncertainty-based method does not make good use of the overall
data distribution, while the data distribution-based method often ignores the structure of the task.
Consequently, TA-VAAL proposes to integrate the loss prediction module and the concept
of RankCGAN into VAAL (Variational Adversarial Active Learning) , enabling both
the data distribution and the model uncertainty to be considered. TA-VAAL has achieved good
performance on various balanced and unbalanced benchmark datasets. The structure diagram of
TA-VAAL and VAAL is presented in Fig.3.
Notably, although the hybrid query strategy achieves superior performance, the uncertaintybased AL query strategy is more convenient to combine with the output of the softmax layer of DL.
Thus, the query strategy based on uncertainty is still widely used.
Deep Bayesian Active Learning (DBAL). As noted in Section 2, which analyzes the challenge
of combining DL and AL, the acquisition function based on uncertainty is an important research
direction of many classic AL algorithms. Moreover, traditional DL methods rarely represent such
model uncertainty.
To solve the above problems, Deep Bayesian Active Learning appears. In the given input set 𝑋
and the output 𝑌belonging to class 𝑐, the probabilistic neural network model can be defined as
A Survey of Deep Active Learning
Fig. 3. Structure comparison chart of VAAL and TA-VAAL . 1) VAAL uses labeled data and unlabeled
data in a semi-supervised way to learn the latent representation space of the data, then selects the unlabeled
data with the largest amount of information according to the latent space for labeling. 2) TA-VAAL expands
VAAL and integrates the loss prediction module and RankCGAN into VAAL in order to consider
data distribution and model uncertainty simultaneously.
𝑓(x;𝜃), 𝑝(𝜃) is a prior on the parameter space 𝜃(usually Gaussian), and the likelihood 𝑝(y = 𝑐|x,𝜃)
is usually given by 𝑠𝑜𝑓𝑡𝑚𝑎x(𝑓(x;𝜃)). Our goal is to obtain the posterior distribution over 𝜃, as
𝑝(𝜃|𝑋,𝑌) = 𝑝(𝑌|𝑋,𝜃)𝑝(𝜃)
For a given new data point x∗, ˆy is predicted by:
𝑝(ˆy|x∗,𝑋,𝑌) =
𝑝(ˆy|x,𝜃) 𝑝(𝜃|𝑋,𝑌)𝑑𝜃= E𝜃∼𝑝(𝜃|𝑋,𝑌) [𝑓(x;𝜃)].
DBAL combines BCNNs (Bayesian Convolutional Neural Networks) with AL methods
to adapt BALD to the deep learning environment, thereby developing a new AL framework
for high-dimensional data. This approach adopts the above method to first perform Gaussian prior
modeling on the weights of a CNN, and then uses variational inference to obtain the posterior
distribution of network prediction. In addition, in practice, researchers often also use a powerful and
low-cost MC-dropout (Monte-Carlo dropout) stochastic regularization technique to obtain
posterior samples, consequently attaining good performance on real-world datasets .
Moreover, this regularization technique has been proven to be equivalent to variational inference
 . However, a core-set approach points out that DBAL is unsuitable for large datasets
due to the need for batch sampling. It should be noted here that while DBAL allows the use of
dropout in testing for better confidence estimation, the analysis presented in contends that
the performance of this method is similar to the performance of using neural network SR 
as uncertainty sampling, which requires vigilance. In addition, DEBAL (Deep Ensemble Bayesian
Active Learning) argues that the pattern collapse phenomenon in the variational
inference method leads to the overconfident prediction characteristic of the DBAL method. For
Ren and Chang, et al.
this reason, DEBAL combines the expressive power of ensemble methods with MC-dropout to
obtain better uncertainty in the absence of trading representativeness. For its part, BatchBALD
 opts to expand BALD to the batch query context; this approach no longer calculates
the mutual information between a single sample and model parameters but rather recalculates the
mutual information between the batch samples and the model parameters to jointly score the batch
of samples. This enables BatchBALD to more accurately evaluate the joint mutual information.
Inspired by the latest research on Bayesian core sets , ACS-FW (Active Bayesian CoreSets
with Frank-Wolfe optimization) reconstructed the batch structure to optimize the sparse
subset approximation of the log-posterior induced by the entire dataset. Using this similarity,
ACS-FW then employs the Frank-Wolfe algorithm to enable effective Bayesian AL at scale,
while its use of random projection has made it still more popular. Compared with other query
strategies (e.g., maximizing the predictive entropy (MAXENT) and BALD ), ACS-FW
achieves better coverage across the entire data manifold. DPEs (Deep Probabilistic Ensembles) 
introduces an expandable DPEs technology, which uses a regularized ensemble to approximate the
deep BNN, and then evaluates the classification effect of these DPEs in a series of large-scale visual
AL experiments.
ActiveLink (Deep Active Learning for Link Prediction in Knowledge Graphs) is inspired
by the latest advances in Bayesian deep learning . Adopting the Bayesian view of the
existing neural link predictors, it expands the uncertainty sampling method by using the basic
structure of the knowledge graph, thereby creating a novel DeepAL method. ActiveLink further
noted that although AL can sample efficiently, the model needs to be retrained from scratch for
each iteration in the AL process, which is unacceptable in the DL model training context. A simple
solution would be to use newly selected data to train the model incrementally, or to combine it
with existing training data ; however, this would cause the model to be biased either towards
a small amount of newly selected data or towards data selected early in the process. In order to
solve this bias problem, ActiveLink adopts a principled and unbiased incremental training method
based on meta-learning. More specifically, in each AL iteration, ActiveLink uses the newly selected
samples to update the model parameters, then approximates the meta-objective of the model’s
future prediction by generalizing the model based on the samples selected in the previous iteration.
This enables ActiveLink to strike a balance between the importance of the newly and previously
selected data, and thereby to achieve an unbiased estimation of the model parameters.
In addition to the above-mentioned DBAL work, due to the lesser parameter of BNN and the
uncertainty sampling strategy being similar to traditional AL, the research on DBAL is quite
extensive, and there are many works related to this topic .
Density-based Methods. The term, density-based method, mainly refers to the selection
of samples from the perspective of the set (core set ). The construction of the core set is a
representative query strategy. This idea is mainly inspired by the compression idea of the core set
dataset and attempts to use the core set to represent the distribution of the feature space of the
entire original dataset, thereby reducing the labeling cost of AL.
FF-Active (Farthest First Active Learning) is based on this idea and uses the farthest-first
traversal in the space of neural activation over a representation layer to query consecutive points
from the pool. It is worth noting here that FF-Active and Exploration-P resemble the way
in which random queries are used in the early stages of AL to enhance AL’s exploration ability,
which prevents AL from falling into the trap of insufficient sample diversity. Similarly, to solve the
sampling bias problem in batch querying, the diversity of batch query samples is increased. The
Core-set approach attempts to solve this problem by constructing a core subset. A further
attempt was made to solve the k-Center problem by building a core subset so that the model
A Survey of Deep Active Learning
learned on the selected core set will be more competitive than the rest of the data. However, the
Core-set approach requires a large distance matrix to be built on the unlabeled dataset, meaning
that this search process is computationally expensive; this disadvantage will become more apparent
on large-scale unlabeled datasets .
Active Palmprint Recognition applies DeepAL to high-dimensional and complex palmprint
recognition data. Similar to the core set concept, regards AL as a binary classification task. It is
expected that the labeled and unlabeled sample sets will have the same data distribution, making the
two difficult to distinguish; that is, the goal is to find a labeled core subset with the same distribution
as the original dataset. More specifically, due to the heuristic generative model simulation data
distribution being difficult to train and unsuitable for high-dimensional and complex data such
as palm prints, the author considers whether the sample can be positively distinguished from the
unlabeled or labeled dataset with a high degree of confidence. Those samples that can be clearly
distinguished are obviously different from the data distribution of the core annotation subset. These
samples will then be added to the annotation dataset for the next round of training. Previous
core-set-based methods often simply try to query data points as far as possible to cover all
points of the data manifold without considering the density, which results in the queried data points
overly representing sample points from manifold sparse areas. Similar to , DAL (Discriminative
Active Learning) also regards AL as a binary classification task and further aims to make the
queried labeled dataset indistinguishable from the unlabeled dataset. The key advantage of DAL
 is that it can sample from the unlabeled dataset in proportion to the data density, without
biasing the sample points in the sparse popular domain. Moreover, the method proposed by DAL
 is not limited to classification tasks, which are conceptually easy to transfer to other new tasks.
In addition to the corresponding query strategy, some researchers have also considered the
impact of batch query size on query performance. For example, focus primarily
on the optimization of query strategies in smaller batches, while recommended expanding the
query scale of AL for large-scale sampling (10k or 500k samples at a time). Moreover, by integrating
hundreds of models and reusing intermediate checkpoints, the distributed searching of training
data on large-scale labeled datasets can be efficiently realized with a small computational cost. 
also proved that the performance of using the entire dataset for training is not the upper limit of
performance, as well as that AL based on subsets specifically may yield better performance.
Furthermore, the attributes of the dataset itself also have an important impact on the performance
of DeepAL. With this in mind, GA (Gradient Analysis) assesses the relative importance of
image data in common datasets and proposes a general data analysis tool design to facilitate a
better understanding of the diversity of training examples in the dataset. GA finds that not
all datasets can be trained on a small sub-sample set because the relative difference of sample
importance in some datasets is almost negligible; therefore, it is not advisable to blindly use smaller
sub-datasets in the AL context. In addition, finds that compared with the Bayesian deep learning
approach (Monte-Carlo dropout ) and density-based methods, ensemble-based AL can
effectively offset the imbalance of categories in the dataset during the acquisition process, resulting
in more calibration prediction uncertainty, and thus better performance.
In general, density-based methods primarily consider the selection of core subsets from the
perspective of data distribution. There are relatively few related research methods, which suggests
a new possible direction for sample querying.
Automated Design of DeepAL. DeepAL is composed of two parts: deep learning and active
learning. Manually designing these two parts requires a lot of energy and their performance
is severely limited by the experience of researchers. Therefore, it has important significance to
Ren and Chang, et al.
(a) Active learning pipeline.
(b) Reinforced Active Learning
(RAL) .
(c) Deep Reinforcement Active Learning
(DRAL) .
Fig. 4. Comparison of standard AL, RAL and DRAL pipelines.
consider how to automate the design of deep learning models and active learning query strategies
in DeepAL.
To this end, redefines the heuristic AL algorithm as a reinforcement learning problem and
introduces a new description through a clear selection strategy. In addition, some researchers have
also noted that, in traditional AL workflows, the acquisition function is often regarded as a fixed
known prior, and that it will not be known whether this acquisition function is appropriate until
the label budget is exhausted. This makes it impossible to flexibly and quickly tune the acquisition
function. Accordingly, one good option may be to use reinforcement learning to dynamically tune
the acquisition function. RAL (Reinforced Active Learning) proposes to use BNN as a learning
predictor for acquisition functions. As such, all probability information provided by the BNN
predictor will be combined to obtain a comprehensive probability distribution; subsequently, the
probability distribution is sent to a BNN probabilistic policy network, which performs reinforcement
learning in each labeling round based on the oracle feedback. This feedback will fine-tune the
acquisition function, thereby continuously improving its quality. DRAL (Deep Reinforcement
Active Learning) adopts a similar idea and designs a deep reinforcement active learning
framework for the person Re-ID task. This approach uses the idea of reinforcement learning
to dynamically adjust the acquisition function so as to obtain high-quality query samples. Fig.4
presents a comparison between traditional AL, RAL and DRAL pipelines. The pipeline of AL is
shown in Fig.4a. The standard AL pipeline usually consists of three parts. The oracle provides a
set of labeled data; the predictor (here, BNN) is used to learn these data and provides predictable
uncertainty for the guide. The guide is usually a fixed, hard-coded acquisition function that picks
the next sample for the oracle to restart the cycle. The pipeline of RAL (Reinforced Active Learning)
 is shown in Fig.4b. RAL replaces the fixed acquisition function with the policy BNN. The
policy BNN learns in a probabilistic manner, obtains feedback from the oracle, and learns how to
select the next optimal sample point (new parts in red) in a reinforcement learning-based manner.
Therefore, RAL can adjust the acquisition function more flexibly to adapt to the existing dataset.
The pipeline of DRAL (Deep Reinforcement Active Learning) is shown in Fig.4c. DRAL utilizes
a deep reinforcement active learning framework for the person Re-ID task. For each query anchor
(probe), the agent (reinforcement active learner) will select sequential instances from the gallery
pool during the active learning process and hand it to the oracle to obtain manual annotation with
A Survey of Deep Active Learning
Fig. 5. In CEAL , the overall framework of DeepAL is utilized. CEAL gradually feeds the samples
from the unlabeled dataset to the initialized CNN, after which the CNN classifier outputs two types of
samples: a small number of uncertain samples and a large number of samples with high prediction confidence.
A small number of uncertain samples are labeled through the oracle, and the CNN classifier is used to
automatically assign pseudo-labels to a large number of high-prediction confidence samples. These two types
of samples are then used to fine-tune the CNN, and the updated process is repeated.
binary feedback (positive/negative). The state evaluates the similarity relationships between all
instances and calculates rewards based on oracle feedback to adjust agent queries.
On the other hand, Active-iNAS (Active Learning with incremental Neural Architecture Search)
 notices that most previous DeepAL methods assume that a suitable DL model
has been designed for the current task, meaning that their primary focus is on how to design an
effective query mechanism; however, the existing DL model is not necessarily optimal for the
current DeepAL task. Active-iNAS accordingly challenges this assumption and uses NAS
(neural architecture search) technology to dynamically search for the most effective model
architectures while conducting active learning. There is also some work devoted to providing a
convenient performance comparison platform for DeepAL; for example, discusses and studies
the robustness and reproducibility of the DeepAL method in detail, and presents many useful
suggestions.
In general, these query strategies are not independent of each other but are rather interrelated.
Batch-based BMDAL provides the basis for the update training of AL query samples on the DL
model. Although the query strategies in DeepAL are rich and complex, they are largely designed to
take the diversity and uncertainty of query batches in BMDAL into account. Previous uncertaintybased methods often ignore the diversity in the batch and can thus be roughly divided into two
categories: those that design a mechanism that explicitly encourages batch diversity in the input or
learning representation space, and those that directly measure the mutual information (MI) of the
entire batch.
Data Expansion of Labeled Samples in DeepAL
AL often requires only a small amount of labeled sample data to realize learning and model updating,
while DL requires a large amount of labeled data for effective training. Therefore, the combination
of AL and DL requires as much as possible to use the data strategy without consuming too much
human resources to achieve DeepAL model training. Most previous DeepAL methods often
only train on the labeled sample set sampled by the query strategy. However, this ignores the
existence of existing unlabeled datasets, meaning that the corresponding data expansion and
training strategies are not fully utilized. These strategies help to improve the problem of insufficient
labeled data in DeepAL training without adding to the manual labeling costs. Therefore, the study
of these strategies is also quite meaningful.
For example, CEAL (Cost-Effective Active Learning) enriches the training set by assigning
pseudo-labels to samples with high confidence in model prediction in addition to the labeled dataset
Ren and Chang, et al.
(a) Generative adversarial active learning
(b) Bayesian generative active deep learning (BGADL).
Fig. 6. Structure comparison chart of GAAL and BGADL . For more details, please see .
sampled by the query strategy. This expanded training set is then also used in the training of the
DL model. This strategy is shown in Fig.5. Another very popular strategy involves performing
unsupervised training on labeled and unlabeled datasets and incorporating other strategies to train
the entire network structure. For example, WI-DL notes that full DBN training requires a
large number of training samples, and it is impractical to apply DBN to a limited training set in
an AL context. Therefore, in order to improve the training efficiency of DBN, WI-DL employs a
combination of unsupervised feature learning on all datasets and supervised fine-tuning on labeled
At the same time, some researchers have considered using GAN (Generative Adversarial Networks) for data augmentation. For example, GAAL (Generative Adversarial Active Learning) 
introduced the GAN to the AL query method for the first time. GAAL aims to use generative
learning to generate samples with more information than the original dataset. However, random
data augmentation does not guarantee that the generated samples will have more information
than those contained in the original data, and could thus represent a waste of computing resources. Accordingly, BGADL (Bayesian Generative Active Deep Learning) expands the idea
of GAAL and proposes a Bayesian generative active deep learning method. More specifically,
BGADL combines the generative adversarial active learning , Bayesian data augmentation
 , ACGAN (Auxiliary-Classifier Generative Adversarial Networks) and VAE (Variational
Autoencoder) methods, with the aim of generating samples of disagreement regions 
belonging to different categories. Structure comparison between GAAL and BGADL is presented in
Subsequently, VAAL and ARAL (Adversarial Representation Active Learning) borrowed from several previous methods not only to train the network using labeled
and unlabeled datasets but also to introduce generative adversarial learning into the network
architecture for data augmentation purposes, thereby further improving the learning ability of
the network. In more detail, VAAL noticed that the batch-based query strategy based on
uncertainty not only readily leads to insufficient sample diversity, but is also highly susceptible
to interference from outliers. In addition, density-based methods are susceptible to 𝑝-norm
limitations when applied to high-dimensional data, resulting in calculation distances that are too
concentrated . To this end, VAAL proposes to use the adversarial learning representation
method to distinguish between the potential spatial coding features of labeled and unlabeled data,
A Survey of Deep Active Learning
Fig. 7. The overall structure of ARAL . ARAL uses not only real datasets (both labeled and unlabeled), but
also generated datasets to jointly train the network. The whole network consists of an encoder (𝐸), generator
(𝐺), discriminator (𝐷), classifier (𝐶) and sampler (𝑆), and all parts of the model are trained together.
thus reducing interference from outliers. VAAL also uses labeled and unlabeled data to jointly
train a VAE in a semi-supervised manner; the goal here is to deceive the adversarial
network into predicting that all data points come from the labeled pool, in order to solve
the problem of distance concentration. VAAL can learn an effective low-dimensional latent
representation on a large-scale dataset, and further provides an effective sampling method by
jointly learning the representation form and uncertainty.
Subsequently, ARAL expanded VAAL , aiming to use as few manual annotation
samples as possible while still making full use of the existing or generated data information in
order to improve the model’s learning ability. In addition to using labeled and unlabeled datasets,
ARAL also uses samples produced by deep production networks to jointly train the entire
model. ARAL comprises both VAAL and adversarial representation learning . By
using VAAL to learn the potential feature representation space of the labeled and unlabeled
data, the unlabeled samples with the largest amount of information can be selected accordingly.
At the same time, both real and generated data are used to enhance the model’s learning ability
through confrontational representation learning . Similarly, TA-VAAL also extends VAAL
by using the global data structure from VAAL and local task-related information from the learning
loss for sample querying purposes. We present the framework of ARAL in Fig.7.
Unlike ARAL and VAAL , which use labeled and unlabeled datasets for adversarial
representation learning, SSAL (Semi-Supervised Active Learning) implements a new training
method. More specifically, SSAL uses unsupervised, supervised, and semi-supervised learning
methods across AL cycles, and makes full use of existing information for training without increasing
the cost of labeling as much as possible. In more detail, the process is as follows: before the AL
starts, first use labeled and unlabeled data for unsupervised pretraining. In each AL learning cycle,
first, perform supervised training on the labeled dataset, then perform semi-supervised training on
all datasets. This represents an attempt to devise a wholly new training method. The author finds
Ren and Chang, et al.
that, compared with the difference between the sampling strategies, this model training method
yields a surprising performance improvement.
As analyzed above, this kind of exploration of training methods and data utilization skills is also
essential; in fact, the resultant performance gains may even exceed those generated by changing
the query strategy. Applying these techniques enables the full use of existing data without any
associated increase in labeling costs, which helps in resolving the issue of the number of AL query
samples being insufficient to support the updating of the DL model.
DeepAL Generic Framework
As mentioned in Section 2, a processing pipeline inconsistency exists between AL and DL; thus,
only fine-tuning the DL model in the AL framework, or simply combining AL and DL to treat them
as two separate problems, may cause divergence. For example, first conducts offline supervised
training of the DL model on two different types of session datasets to grant basic conversational
capabilities to the backbone network, then enables the online AL stage to interact with human
users, enabling the model to be improved in an open way based on user feedback. AL-DL 
proposes an AL method for DL models with DBNs, while ADN further proposes an active
deep network architecture for sentiment classification. proposes an AL algorithm using CNN
for captcha recognition. However, generally speaking, the above methods first perform routine
supervised training on this depth model on the labeled dataset, then actively sample based on
the output of the depth model. There are many similar related works that adopt this
split-and-splitting approach that treats the training of AL and deep models as two independent
problems and consequently increases the possibility, which the two problems will diverge. Although
this method achieved some success at the time, a general framework that closely combines the
two tasks of DL and AL would play a vital role in the performance improvement and promotion of
CEAL is one of the first works to combine AL and DL in order to solve the problem of
depth image classification. CEAL merges deep convolutional neural networks into AL, and
consequently proposes a novel DeepAL framework. It sends samples from the unlabeled dataset
to the CNN step by step, after which the CNN classifier outputs two types of samples: a small
number of uncertain samples and a large number of samples with high prediction confidence. A
small number of uncertain samples are labeled by the oracle, and the CNN classifier is used to
automatically assign pseudo-labels to a large number of high-prediction-confidence samples. Then,
these two types of samples are used to fine-tune the CNN and the update process is repeated.
In Fig.5, we present the overall framework of CEAL. Moreover, HDAL (Heuristic Deep Active
Learning) uses a similar framework for face recognition tasks: it combines AL with a deep
CNN model to integrate feature learning and AL query model training.
In addition, Fig.1c illustrates a widespread general framework for DeepAL tasks. Related works
include , among others. More specifically, proposes a framework that
uses an FCN (Fully Convolutional Network) and AL to solve the medical image segmentation
problem using a small number of annotations. It first trains FCN on a small number of labeled
datasets, then extracts the features of the unlabeled datasets through FCN, using these features
to estimate the uncertainty and similarity of unlabeled samples. This strategy, which is similar to
that described in Section 3.1.2, helps to select highly uncertain and diverse samples to be added to
the labeled dataset in order to start the next stage of training. Active Palmprint Recognition 
proposes a similar DeepAL framework as that for the palmprint recognition task. The difference is
that inspired by domain adaptation , Active Palmprint Recognition regards AL as a binary
classification task: it is expected that the labeled and unlabeled sample sets have the same data
distribution, making the two difficult to distinguish. Supervision training can be performed directly
A Survey of Deep Active Learning
Fig. 8. Taking a common CNN as an example, this figure presents a comparison between the traditional
uncertainty measurement method and the uncertainty measurement method of synthesizing
information in two stages (i.e., the feature extraction stage and task learning stage).
on a small number of labeled datasets, which reduces the burden associated with labeling. 
proposes a DeepAL framework for defect detection. This approach performs uncertainty sampling
based on the output features of the detection model to generate a list of candidate samples for
annotation. In order to further take the diversity of defect categories in the samples into account,
 designs an average margin method to control the sampling ratio of each defect category.
Different from the above methods, it is common for the final output of the DL model to be used as
the basis for determining the uncertainty or diversity of the sample (Active Palmprint Recognition
 uses the output of the first fully connected layer). also used the output of the DL
model’s middle hidden layer. As analyzed in Section 3.1.2 and Section 2, due to the difference in
learning paradigms between the deep and shallow models, the traditional uncertainty-based query
strategy cannot be directly applied to the DL model. In addition, unlike the shallow model, the deep
model can be regarded as composed of two stages, namely the feature extraction stage and the task
learning stage. It is inaccurate to use only the output of the last layer of the DL model as the basis
for evaluating the sample prediction uncertainty; this is because the uncertainty of the DL model
is in fact composed of the uncertainty of these two stages. A schematic diagram of this concept
is presented in Fig.8. To this end, AL-MV (Active Learning with Multiple Views) treats the
features from different hidden layers in the middle of CNN as multiview data, taking the uncertainty
of both stages into account, and the AL-MV algorithm is designed to implement adaptive weighting
of the uncertainty of each layer, to enable more accurate measurement of the sampling uncertainty.
LLAL (Learning Loss for Active Learning) also used a similar idea. More specifically, LLAL
designs a small parameter module of the loss prediction module to attach to the target network,
using the output of multiple hidden layers of the target network as the input of the loss prediction
module. The loss prediction module is learned to predict the target loss of the unlabeled dataset,
while the top-𝐾strategy is used to select the query samples. LLAL achieves task-agnostic AL
framework design at a small parameter cost and further achieves competitive performance on a
variety of mainstream visual tasks (namely, image classification, target detection, and human pose
estimation). Similarly, uses a similar strategy to implement a DeepAL framework for finger
bone segmentation tasks. uses Deeply Supervised U-Net as the segmentation network,
then subsequently uses the output of the multilevel segmentation hidden layer and the output of
the last layer as the input of AL; this input information is then integrated to form the basis for
the evaluation of the sample information size. We take LLAL as an example to explicate the
overall network structure of this idea in Fig.9.
Ren and Chang, et al.
Fig. 9. The overall framework of LLAL . The black line represents the stage of training model parameters,
optimizing the overall loss composed of target loss and loss-prediction loss. The red line represents the sample
query phase of AL. The output of the multiple hidden layers of the DL model is used as the input of the loss
prediction module, while the top-𝐾unlabeled data points are selected according to the predicted losses and
assigned labels by the oracle.
The research on the general framework is highly beneficial to the development and promotion
of DeepAL, as this task-independent framework can be conveniently transplanted to other fields.
In the current fusion of DL and AL, DL is primarily responsible for feature extraction, while AL is
mainly responsible for sample querying; thus, a deeper and tighter fusion will help DeepAL achieve
better performance. Of course, this will require additional exploration and effort on the part of
researchers. Finally, the challenges of combining DL and AL and related work on the corresponding
solutions are summarized in Table 1.
DeepAL Stopping Strategy
In addition to querying strategies and training methods, an appropriate stopping strategy has an
important impact on DeepAL performance. At present, most DeepALs often
use the predefined stopping criterion, and when the criterion is satisfied, they stop querying labels
from the oracle. These predefined stopping criteria include the maximum number of iterations, the
minimum threshold for changing classification accuracy, the minimum number of labeled samples,
and the expected accuracy value, etc.
Although these stopping criteria are simple, these predefined stopping criteria are likely to cause
DeepAL to fail to achieve optimal performance. This is because the premature termination of AL
annotation querying leads to large performance losses in the model, and excessive annotation
behavior wastes a lot of annotation budget. Therefore, Stabilizing Predictions (SP) makes a
comprehensive review of AL stopping strategies and proposes an AL stopping strategy based on
stability prediction. Specifically, the SP predivides a part of the samples from the unlabeled dataset
to form a stop set (the stop set does not need to be labeled), and the SP checks the prediction
stability on the stop set in each iteration. When the prediction performance of the model on the
stop set stabilizes, the iteration is stopped. A well-trained model often has a stable predictive ability,
and SP takes advantage of this feature. The predivided stop set does not require specific labeling
information, which avoids additional labeling costs contrary to the purpose of AL. Although SP is
a stopping strategy proposed mainly for AL, it also is relevant for DeepAL.
A Survey of Deep Active Learning
Table 1. The challenges of combining DL and AL, as well as a summary of related work on the corresponding
solutions.
Challenges
Foundation
Publications
uncertainty
optimization
Uncertainty-based
and Hybrid
Query Strategies
 
Deep Bayesian
Active Learning
 
 
Density-based
 
Design of DeepAL
 
Insufficient
labeled samples
expansion of
labeled samples
 
Processing
inconsistency
 
 
APPLICATION OF DEEPAL IN FIELDS SUCH AS VISION AND NLP
Today, DeepAL has been applied to areas including but not limited to visual data processing (such as
object detection, semantic segmentation, etc.), NLP (such as machine translation, text classification,
semantic analysis, etc.), speech and audio processing, social network analysis, medical image
processing, wildlife protection, industrial robotics, and disaster analysis, among other fields. In this
section, we provide a systematic and detailed overview of existing DeepAL-related work from an
application perspective.
Visual Data Processing
Just as DL is widely used in the computer vision field, the first field in which DeepAL is expected
to reach its potential is that of computer vision. In this section, we mainly discuss DeepAL-related
research in the field of visual data processing.
Image classification and recognition. As with DL, the classification and recognition of images
in DeepAL form the basis for research into other vision tasks. One of the most important problems
that DeepAL faces in the field of image vision tasks is that of how to efficiently query samples of
high-dimensional data (an area in which traditional AL performs poorly) and obtain satisfactory
performance at the smallest possible labeling cost.
To solve this problem, CEAL assigns pseudo-labels to samples with high confidence and
adds them to the highly uncertain sample set queried using the uncertainty-based AL method, then
uses the expanded training set to train the DeepAL model image classifier. first integrated
the criteria of AL into the deep belief network and subsequently conducted extensive research
on classification tasks on a variety of real uni-modal and multi-modal datasets. WI-DL 
uses the DeepAL method to simultaneously consider the two selection criteria of maximizing
representativeness and uncertainty on hyperspectral image (HSI) datasets for remote sensing
classification tasks. Similarly, also studied the classification of HSI. introduces AL
to initialize HSI and then performs transfer learning. This work also recommends constructing
and connecting higher-level features to source and target HSI data in order to further overcome
the cross-domain disparity. proposes a unified deep network combined with active transfer
learning, thereby training the HSI classification well while using less labeled training data.
Medical image analysis is also an important application. For example, explores the use of
AL rather than random learning to train convolutional neural networks for tissue (e.g., stroma,
Ren and Chang, et al.
lymphocytes, tumor, mucosa, keratin pearls, blood, and background/adipose) classification tasks.
 conducted a comprehensive review of DeepAL-related methods in the field of medical image
analysis. As discussed above, since the annotation of medical images requires strong professional
knowledge, it is usually both very difficult and very expensive to find well-trained experts willing to
perform annotations. In addition, DL has achieved impressive performance on various image feature
tasks. Therefore, a large number of works continue to focus on combining DL and AL in order
to apply DeepAL to the field of medical image analysis . The
DeepAL method is also used to classify in situ plankton and perform the automatic counting
of cells .
In addition, DeepAL also has a wide range of applications in our daily life. For example, 
proposes an AL algorithm that uses CNN for verification code recognition. It can use the ability
to obtain labeled data for free to avoid human intervention and greatly improve the recognition
accuracy when less labeled data is used. HDAL combines the excellent feature extraction
capabilities of deep CNN and the ability to save on AL labeling costs to design a heuristic deep
active learning framework for face recognition tasks.
Object detection and semantic segmentation. Object detection and semantic segmentation
have important applications in various fields, including autonomous driving, medical image processing, and wildlife protection. However, these fields are also limited by the higher sample labeling
cost. Thus, the lower labeling cost of DeepAL is expected to accelerate the application of the
corresponding DL models in certain real-world areas where labeling is more difficult.
 designs a DeepAL framework for object detection, which uses the layered architecture
where labeling is more difficult as an example of "query by committee" to select the image set
to be queried, while at the same time introducing a similar exploration/exploitation trade-off
strategy to . DeepAL is also widely used in natural biological fields and industrial applications.
For example, uses deep neural networks to quickly transferable and automatically extract
information, and further combines transfer learning and AL to design a DeepAL framework for
species identification and counting in camera trap images. uses unmanned aerial vehicles
(UAV) to obtain images for wildlife detection purposes; moreover, to enable this wildlife detector
to be reused, uses AL and introduces transfer sampling (TS) to find the corresponding area
between the source and target datasets, thereby facilitating the transfer of data to the target domain.
 proposes a DeepAL framework for deep object detection in autonomous driving to train LiDAR
3D object detectors. proposes the adaptation of a widespread DeepAL framework to defect
detection in real industries, along with an uncertainty sampling method for use in generating
candidate label categories. This work uses the average margin method to set the sampling scale of
each defect category and is thus able to obtain the required performance with less labeled data.
In addition, DeepAL also has important applications in the area of medical image segmentation.
For example, proposes an AL-based transfer learning mechanism for medical image segmentation, which can effectively improve the image segmentation performance on a limited labeled
dataset. combines FCN and AL to create a DeepAL framework for biological-image segmentation. This work uses the uncertainty and similarity information provided by the FCN to extend the
maximum set cover problem, significantly reducing the required labeling workload by pointing
out the most effective labeling areas. DASL (Deep Active Self-paced Learning) proposes a
deep region-based network, Nodules R-CNN, for pulmonary nodule segmentation tasks. This work
generates segmentation masks for use as examples, and at the same time, combines AL and SPL
(Self-Paced Learning) to propose a new deep active self-paced learning strategy that reduces
the labeling workload. proposes a Nodule-plus Region-based CNN for pulmonary nodule
detection and segmentation in 3D thoracic Computed Tomography (CT). This work combines AL
A Survey of Deep Active Learning
and SPL strategies to create a new deep self-paced active learning (DSAL) strategy, which reduces
the annotation workload and makes effective use of unannotated data. further proposes a
new deep-supervised active learning method for finger bone segmentation tasks. This model can be
fine-tuned in an iterative and incremental learning manner and uses the output of the intermediate
hidden layer as the basis for sample selection. Compared with the complete markup, achieved
comparable segmentation results using fewer samples.
Video processing. Compared with the image task that only needs to process information
in the spatial dimension, the video task also needs to process the information in the temporal
dimension. This makes the task of annotating the video more expensive, which also means that the
need to introduce AL has become more urgent. DeepAL also has broader application scenarios in
this field.
For example, proposes to use imitation learning to perform navigation tasks. The visual
environment and actions taken by the teacher viewed from a first-person perspective are used
as the training set. Through training, it is hoped that students will become able to predict and
execute corresponding actions in their own environment. When performing tasks, students use
deep convolutional neural networks for feature extraction, learn imitation strategies, and further
use the AL method to select samples with insufficient confidence, which are added to the training set
to update the action strategy. significantly improves the initial strategy using fewer samples.
DeActive proposes a DeepAL activity recognition model. Compared with the traditional DL
activity recognition model, DeActive requires fewer labeled samples, consumes fewer resources,
and achieves high recognition accuracy. minimizes the annotation cost of the video-based
person Re-ID dataset by integrating AL into the DL framework. Similarly, proposes a deep
reinforcement active learning method for person Re-ID, using oracle feedback to guide the agent (i.e.
the model in the reinforcement learning process) in selecting the next uncertainty sample. The agent
selection mechanism is continuously optimized through alternately refined reinforcement learning
strategies. further proposes an active learning object detection method based on convolutional
neural networks for pedestrian target detection in video and static images.
Natural Language Processing (NLP)
NLP has always been a very challenging task. The goals of NLP are to make computers understand
complex human language and to help humans deal with various natural language-related tasks.
Insufficient data labeling is also a key challenge in the NLP context. Below, we introduce some of
the most famous DeepAL methods in the NLP field.
Machine translation. Machine translation has very important application value, but it usually
requires a large number of parallel corpora as a training set. For many low-resource language pairs,
building such a corpus requires a very high cost.
For this reason, proposes to use the AL framework to select information source sentences
to construct a parallel corpus. It proposes two effective sentence selection methods for AL: selection
based on semantic similarity and decoder probability. Compared with traditional methods, the two
proposed sentence selection methods show considerable advantages. proposes a curriculum
learning framework related to AL for machine translation tasks. It can decide which training
samples to show to the model during different periods of training based on the estimated difficulty
of a sample and the current competence of the model. This method not only effectively improves
the training efficiency but also obtains a good accuracy improvement. This kind of thinking is also
very valuable for DeepAL’s sample selection strategy.
Ren and Chang, et al.
Text classification. Text classification tasks also face the challenge of excessive labeling costs,
such as patent classification and clinical text classification . These labeling
tasks often need to be completed by experts, and the number of datasets and texts in each document
is often very large, which makes it difficult for human experts to complete the corresponding
labeling tasks.
 claims to be the first AL method for text classification with CNNs. focuses on selecting
those samples that have the greatest impact on the embedding space. It proposes a method for
sentence classification that selects instances containing words whose embeddings are likely to
be updated with the greatest magnitude, thereby rapidly learning discriminative, task-specific
embeddings. They also extend this method to text classification tasks, which outperformed the
baseline AL method in sentence and text classification tasks. also proposes a new DeepAL
framework for text classification tasks. It uses RNN as the acquisition function in AL. The method
proposed by can effectively reduce the number of label instances required for deep learning
while saving training time without reducing model accuracy. focuses on the problem of
sampling bias in deep active classification and apply active text classification on the large-scale text
corpora of . These methods generally show better performance than that of the traditional
AL-based baseline methods, and more relevant DeepAL-based text classification applications can
be found in .
Semantic analysis. In this typical NLP task, the aim is to make the computer understand a
natural language description. The relevant application scenarios are numerous and varied, including
but not limited to sentiment classification, news identification, etc.
More specifically, for example, uses restricted Boltzmann machines (RBM) to construct
an active deep network (ADN), then conduct unsupervised training on the labeled and unlabeled
datasets. ADN uses a large number of unlabeled datasets to improve the model’s generalization
ability, and further employs AL in a semi-supervised learning framework, unifying the selection of
labeled data and classifiers in a semi-supervised classification framework; this approach obtains
competitive results on sentiment classification tasks. proposes a human-computer collaborative
learning system for news accuracy detection tasks (that is, identifying misleading and false information in news) that utilizes only a limited number of annotation samples. This system is a deep
AL-based model that uses 1-2 orders of magnitude fewer annotation samples than fully supervised
learning. Such a reduction in the number of samples greatly accelerates the convergence speed of
the model and results in an astonishing 25% average performance gains in detection performance.
Information extraction. Information extraction aims to extract and simplify the most important information from large texts, which is an important basis for correlation analysis between
different concepts.
 uses relevant tweets from disaster-stricken areas to extract information that facilitates
the identification of infrastructure damage during earthquakes. For this reason, combines
RNN and GRU-based models with AL, using AL-based methods to pre-train the model so that
it will retrieve tweets featuring infrastructure damage in different regions, thereby significantly
reducing the manual labeling workload. In addition, entity resolution (ER) is the task of recognizing
the same real entities with different representations across databases and represents a key step
in knowledge base creation and text mining. uses the combination of DL and AL to
determine how the technical level of NER (Named Entity Recognition) can be improved in the case
of a small training set. developed a DL-based ER method that combines transfer learning
and AL to design an architecture that allows for the learning of a model that is transferable from
high-resource environments to low-resource environments. proposes a novel ALPNN (Active
Learning Policy Neural Network) design to recognize the concepts and relationships in large EEG
A Survey of Deep Active Learning
(electroencephalogram) reports; this approach can help humans extract available clinical knowledge
from a large number of such reports.
Question-answering. Intelligent question-answering is also a common processing task in the
NLP context, and DL has achieved impressive results in these areas. However, the performance of
these applications still relies on the availability of massive labeled datasets; AL is expected to bring
new hope to this challenge.
The automatic question-answering system has a very wide range of applications in the industry,
and DeepAL is also highly valuable in this field. For example, uses the online AL strategy
combined with the DL model to achieve an open domain dialogue by interacting with real users and
learning incrementally from user feedback in each round of dialogue. finds that AL strategies
designed for specific tasks (e.g., classification) often have only one correct answer and that these
uncertainty-based measurements are often calculated based on the output of the model. Many
real-world vision tasks often have multiple correct answers, which leads to the overestimation of
uncertainty measures and sometimes even worse performance than random sampling baselines.
For this reason, proposes to estimate the uncertainty in the hidden space within the model
rather than the uncertainty in the output space of the model in the Visual Question Answer (VQA)
generation, thus overcoming the paraphrasing nature of language.
Other Applications
The emergence of DeepAL is exciting, as it is expected to reduce the annotation costs by orders of
magnitude while maintaining performance levels. For this reason, DeepAL is also widely used in
other fields.
These applications include, but are not limited to, gene expression, robotics, wearable device
data analysis, social networking, ECG signal analysis, etc. For some more specific examples, MLFS
(Multi-Level Feature Selection) combines DL and AL to select genes/miRNAs based on
expression profiles and proposes a novel multi-level feature selection method. MLFS also considers
the biological relationship between miRNAs and genes and applies this method to miRNA expansion
tasks. Moreover, the failure risk of real-world robots is expensive. proposes a risk-aware
resampling technique; this approach uses AL together with existing solvers and DL to optimize the
robot’s trajectory, enabling it to effectively deal with the collision problem in scenes with moving
obstacles, and verify the effectiveness of the DeepAL method on a real nano-quadcopter. 
further proposes an active trajectory generation framework for the inverse dynamics model of the
robot control algorithm, which enables the systematic design of the information trajectory used to
train the DNN inverse dynamics module.
In addition, uses sensors installed in wearable devices or mobile terminals to collect
user movement information for human activity recognition purposes. proposes a DeepAL
framework for activity recognition with context-aware annotator selection. ActiveHARNet (Active
Learning for Human Activity Recognition) proposes a resource-efficient deep ensembled model
that supports incremental learning and inference on the device, utilizes the approximation in the
BNN to represent the uncertainty of the model, and further proves the feasibility of ActiveHARNet
deployment and incremental learning on two public datasets. For its part, DALAUP (Deep Active
Learning for Anchor User Prediction) designs a DeepAL framework for anchor user prediction
in social networks that reduces the cost of annotating anchor users and improves the prediction
accuracy. DeepAL is also using in the classification of electrocardiogram (ECG) signals. For example,
 proposes an active DL-based ECG signal classification method. proposed an AL-based
ECG classification method using eigenvalues and DL. The use of the AL method enables the cost of
marking ECG signals by medical experts to be effectively reduced. Furthermore, the cost of label
Ren and Chang, et al.
annotation in the speech and audio fields is also relatively high. finds that a model trained on a
corpus composed of thousands of recordings collected by a small number of speakers is unable to
be generalized to new domains; therefore, developed a practical scheme that involves using
AL to train deep neural networks for speech emotion recognition tasks when label resources are
In general, the current applications of DeepAL are mainly focused on visual image processing
tasks, although there are also applications in NLP and other fields. Compared with DL and AL,
DeepAL is still in the preliminary stage of research, meaning that the corresponding classic works
are relatively few; however, it still has the same broad application scenarios and practical value as DL.
In addition, in order to facilitate readers’ access to specific applications of DeepAL in related fields,
we have classified and summarized all application scenarios and datasets used by survey-related
work in Section 4 in detail. The specific information is shown in Table 2.
DISCUSSION AND FUTURE DIRECTIONS
DeepAL combines the common advantages of DL and AL: it inherits not only DL’s ability to process
high-dimensional image data and conduct automatic feature extraction but also AL’s potential to
effectively reduce annotation costs. DeepAL, therefore, has fascinating potential especially in areas
where labels require high levels of expertise and are difficult to obtain.
Most recent work reveals that DeepAL has been successful in many common tasks. DeepAL
has attracted the interest of a large number of researchers by reducing the cost of annotation
and its ability to implement the powerful feature extraction capabilities of DL; consequently, the
related research work is also extremely rich. However, there are still a large number of unanswered
questions on this subject. As discovered, the results reported on the random sampling baseline
(RSB) differ significantly between different studies. For example, under the same settings, using
20% of the label data of CIFAR 10, the RSB performance reported by is 13% higher than that
in . Secondly, the same DeepAL method may yield different results in different studies. For
example, using 40% of the label data of CIFAR 100 and VGG16 as the extraction network,
the reported results of and differ by 8%. Furthermore, the latest DeepAL research also
exhibits some inconsistencies. For example, and point out that diversity-based methods
have always been better than uncertainty-based methods, and that uncertainty-based methods
perform worse than RSB; however, the latest research of shows that this is not the case.
Compared with AL’s strategic selection of high-value samples, RSB has been regarded as a strong
baseline . However, the above problems reveal an urgent need to design a general performance evaluation platform for DeepAL work, as well as to determine a unified high-performance
RSB. Secondly, the reproducibility of different DeepAL methods is also an important issue. The
highly reproducible DeepAL method helps to evaluate the performance of different DALs. A common evaluation platform should be used for experiments under consistent settings, and snapshots
of experimental settings should be shared. In addition, multiple repetitive experiments with different initializations under the same experimental conditions should be implemented, as this could
effectively avoid misleading conclusions caused by experimental setup problems. Researchers
should pay sufficient attention to these inconsistent studies to enable them to clarify the principles
involved. On the other hand, adequate ablation experiments and transfer experiments are also
necessary. The former will make it easier for us to determine which improvements bring about
performance gains, while the latter can help to ensure that the AL selection strategy does indeed
enable the indiscriminate selection of high-value samples for the dataset.
The current research directions regarding DeepAL methods focus primarily on the improvement of AL selection strategies, the optimization of training methods, and the improvement of
task-independent models. As noted in Section 3.1, the improvement of AL selection strategy is
A Survey of Deep Active Learning
Table 2. DeepAL’s research examples in Vision, NLP and other fields.
Publications
classification
recognition
 
CACD , Caltech-256 , VidTIMIT ,
CK , MNIST , CIFAR 10 ,
emoFBVP , MindReading 
Cool PHP CAPTCHA 
Handwritten numbers,
face, CAPTCHA
recognition, etc.
 
PaviaC, PaviaU, Botswana ,
Salinas Valley, Indian Pines ,
Washington DC Mall, Urban 
Hyperspectral
 
 
 
Erie County , EEG ,
BreaKHis ,
SVEB, SVDB 
Biomedical
VOC , Kitti 
 
SS , eMML , NACTI1, CCT2, UAV3
Biodiversity survey
KITTI 
Autonomous driving
NEU-DET 
Defect detection
segmentation
 
SPIM , Confocal , LIDC-IDRI ,
MICCAI, Lymph node 
Bio-medical image
processing
Mash-simulator4
Autonomous
navigation
OPPORTUNITY , WISDM ,
SenseBox , Skoda Daphnet ,CASAS 
Smart home
PRID , MARS , BDD100K ,
DukeMTMC-VideoReID ,
CityPersons , Caltech Pedestrian 
Person Re-id
translation
 
OPUS , UNPC ,
IWSLT, WMT 
Ind-En, Ch-En, En-Vi,
Fr-En, En-De, etc.
classification
 
CR5, Subj, MR6, MuR7, DR 
AGN, DBP, AMZP, AMZF, YRF 
MOV , BOO, DVDs, ELE, KIT 
classification
KDnugget’s Fake News8,
Harvard Dataverse , Liar 
News veracity
Information
extraction
Italy, Iran-Iraq, Mexico earthquake dataset
Disaster assessment
Temple University Hospital10
Electroencephalography
(EEG) reports
 
CoNLL , NCBI , MedMentions ,
OntoNotes , DBLP, FZ, AG , Cora 
Named entity
recognition (NER)
CMDC , JabberWacky’s chatlogs9
Dialogue generation
Visual Genome , VQA 
Visual question answer (VQA)
BC, HCC, Lung
Gene expression
EATG , Crazyflie 2.011
HHAR , NWFD 
Smart device
Foursquare, Twitter 
Social network
MIT-BIH , INCART, SVDB 
Electrocardiogram (ECG)
signal classification
MSP-Podcast 
Speech emotion recognition
1 
2 
3 
4 
5 www.cs.uic.edu/liub/FBS/sentiment-analysis.html
6 Subj and MR datasets are available at: 
7 
8 
9 JabberWacky is an in-browser, open-domain, retrieval-based bot.
10 
11 
– Non-specific application scenarios
Ren and Chang, et al.
currently centered around taking into account the query strategy based on uncertainty and diversity explicitly or implicitly. Moreover, hybrid selection strategies are increasingly favored by
researchers. Moreover, the optimization of training methods mainly focuses on labeled datasets,
unlabeled datasets, or the use of methods such as GAN to expand data, as well as the hybrid
training method of unsupervised, semi-supervised, and supervised learning across the AL cycle.
This training method promises to deliver even more performance improvements than are thought
to be achievable through changes to the selection strategy. In fact, this makes up for the issues of
the DL model requiring a large number of labeled training samples and the AL selecting a limited
number of labeled samples. In addition, the use of unlabeled or generated datasets is also conducive
to making full use of existing information without adding to the annotation costs. Furthermore, the
incremental training method is also an important research direction. From a computing resource
perspective, it is unacceptable to train a deep model from scratch in each cycle. While simple
incremental training will cause the deviation of model parameters, the huge potential savings on
resources are quite attractive. Although related research remains quite scarce, this is still a very
promising research direction.
Task independence is also an important research direction, as it helps to make DeepAL models more directly and widely extensible to other tasks. However, the related research remains
insufficient, and the corresponding DeepAL methods tend to focus only on the uncertainty-based
selection method. Because DL itself is easier to integrate with the uncertainty-based AL selection
strategy, we believe that uncertainty-based methods will continue to dominate research directions
not related to these tasks in the future. On the other hand, it may also be advisable to explicitly
take the diversity-based selection strategy into account; of course, this will also give rise to great
challenges. In addition, it should be pointed out that blindly pursuing the idea of training models on
smaller subsets would be unwise, as the relative difference in sample importance in some datasets
with a large variety of content and a large number of samples can almost be ignored.
There is no conflict between the above-mentioned improvement directions; thus, a mixed improvement strategy is an important development direction for the future. In general, DeepAL
research has significant practical application value in terms of both labeling costs and application
scenarios; however, DeepAL research remains in its infancy at present, and there is still a long way
to go in the future.
SUMMARY AND CONCLUSIONS
For the first time, the necessity and challenges of combining traditional active learning and deep
learning have been comprehensively analyzed and summarized. In response to these challenges, we
analyze and compare existing work from three perspectives: query strategy optimization, labeled
sample data expansion, and model generality. In addition, we also summarize the stopping strategy
of DeepAL. Then, we review the related work of DeepAL from the perspective of the application.
Finally, we conduct a comprehensive discussion on the future direction of DeepAL. As far as we
know, this is the first comprehensive and systematic review in the field of deep active learning.
ACKNOWLEDGMENTS
This work was partially supported by the NSFC under Grant (No.61972315 and No.62072372) and
the Shaanxi Science and Technology Innovation Team Support Project under grant agreement
(No.2018TD-026) and the Australian Research Council Discovery Early Career Researcher Award
(No.DE190100626).
A Survey of Deep Active Learning