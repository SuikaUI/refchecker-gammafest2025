The Relationship Between Precision-Recall and ROC Curves
Jesse Davis
 
Mark Goadrich
 
Department of Computer Sciences and Department of Biostatistics and Medical Informatics, University of
Wisconsin-Madison, 1210 West Dayton Street, Madison, WI, 53706 USA
Characteristic
curves are commonly used to present results for binary decision problems in machine learning.
when dealing
with highly skewed datasets, Precision-Recall
(PR) curves give a more informative picture
of an algorithm’s performance. We show that
a deep connection exists between ROC space
and PR space, such that a curve dominates
in ROC space if and only if it dominates
in PR space.
A corollary is the notion of
an achievable PR curve, which has properties much like the convex hull in ROC space;
we show an eﬃcient algorithm for computing
this curve. Finally, we also note diﬀerences
in the two types of curves are signiﬁcant for
algorithm design. For example, in PR space
it is incorrect to linearly interpolate between
Furthermore, algorithms that optimize the area under the ROC curve are not
guaranteed to optimize the area under the
1. Introduction
In machine learning, current research has shifted away
from simply presenting accuracy results when performing an empirical validation of new algorithms. This is
especially true when evaluating algorithms that output
probabilities of class values. Provost et al. have
argued that simply using accuracy results can be misleading. They recommended when evaluating binary
decision problems to use Receiver Operator Characteristic (ROC) curves, which show how the number of correctly classiﬁed positive examples varies with the number of incorrectly classiﬁed negative examples. However, ROC curves can present an overly optimistic view
of an algorithm’s performance if there is a large skew
Appearing in Proceedings of the 23 rd International Conference on Machine Learning, Pittsburgh, PA, 2006. Copyright 2006 by the author(s)/owner(s).
in the class distribution. Drummond and Holte have recommended using cost curves to address
this issue. Cost curves are an excellent alternative to
ROC curves, but discussing them is beyond the scope
of this paper.
Precision-Recall (PR) curves, often used in Information Retrieval , have been cited as an alternative to ROC
curves for tasks with a large skew in the class distribution . An important diﬀerence between ROC space and PR space
is the visual representation of the curves.
at PR curves can expose diﬀerences between algorithms that are not apparent in ROC space. Sample
ROC curves and PR curves are shown in Figures 1(a)
and 1(b) respectively. These curves, taken from the
same learned models on a highly-skewed cancer detection dataset, highlight the visual diﬀerence between
these spaces . The goal in ROC
space is to be in the upper-left-hand corner, and when
one looks at the ROC curves in Figure 1(a) they appear to be fairly close to optimal. In PR space the
goal is to be in the upper-right-hand corner, and the
PR curves in Figure 1(b) show that there is still vast
room for improvement.
The performances of the algorithms appear to be comparable in ROC space, however, in PR space we can
see that Algorithm 2 has a clear advantage over Algorithm 1. This diﬀerence exists because in this domain
the number of negative examples greatly exceeds the
number of positives examples. Consequently, a large
change in the number of false positives can lead to a
small change in the false positive rate used in ROC
analysis. Precision, on the other hand, by comparing
false positives to true positives rather than true negatives, captures the eﬀect of the large number of negative examples on the algorithm’s performance. Section 2 deﬁnes Precision and Recall for the reader unfamiliar with these terms.
We believe it is important to study the connection be-
The Relationship Between Precision-Recall and ROC Curves
True Positive Rate
False Positive Rate
Algorithm 1
Algorithm 2
(a) Comparison in ROC space
Algorithm 1
Algorithm 2
(b) Comparison in PR space
Figure 1. The diﬀerence between comparing algorithms in ROC vs PR space
tween these two spaces, and whether some of the interesting properties of ROC space also hold for PR
We show that for any dataset, and hence a
ﬁxed number of positive and negative examples, the
ROC curve and PR curve for a given algorithm contain the “same points.” Therefore the PR curves for
Algorithm I and Algorithm II in Figure 1(b) are, in a
sense that we formally deﬁne, equivalent to the ROC
curves for Algorithm I and Algorithm II, respectively
in Figure 1(a). Based on this equivalence for ROC and
PR curves, we show that a curve dominates in ROC
space if and only if it dominates in PR space. Second, we introduce the PR space analog to the convex
hull in ROC space, which we call the achievable PR
curve. We show that due to the equivalence of these
two spaces we can eﬃciently compute the achievable
Third we demonstrate that in PR space
it is insuﬃcient to linearly interpolate between points.
Finally, we show that an algorithm that optimizes the
area under the ROC curve is not guaranteed to optimize the area under the PR curve.
2. Review of ROC and Precision-Recall
In a binary decision problem, a classiﬁer labels examples as either positive or negative.
The decision
made by the classiﬁer can be represented in a structure known as a confusion matrix or contingency table. The confusion matrix has four categories: True
positives (TP) are examples correctly labeled as positives. False positives (FP) refer to negative examples
incorrectly labeled as positive. True negatives (TN)
correspond to negatives correctly labeled as negative.
Finally, false negatives (FN) refer to positive examples
incorrectly labeled as negative.
A confusion matrix is shown in Figure 2(a). The confusion matrix can be used to construct a point in either
ROC space or PR space. Given the confusion matrix,
we are able to deﬁne the metrics used in each space
as in Figure 2(b). In ROC space, one plots the False
Positive Rate (FPR) on the x-axis and the True Positive Rate (TPR) on the y-axis. The FPR measures
the fraction of negative examples that are misclassi-
ﬁed as positive.
The TPR measures the fraction of
positive examples that are correctly labeled. In PR
space, one plots Recall on the x-axis and Precision on
the y-axis. Recall is the same as TPR, whereas Precision measures that fraction of examples classiﬁed as
positive that are truly positive. Figure 2(b) gives the
deﬁnitions for each metric. We will treat the metrics
as functions that act on the underlying confusion matrix which deﬁnes a point in either ROC space or PR
space. Thus, given a confusion matrix A, RECALL(A)
returns the Recall associated with A.
3. Relationship between ROC Space
and PR Space
ROC and PR curves are typically generated to evaluate the performance of a machine learning algorithm
on a given dataset. Each dataset contains a ﬁxed number of positive and negative examples. We show here
that there exists a deep relationship between ROC and
PR spaces.
Theorem 3.1. For a given dataset of positive and
negative examples, there exists a one-to-one correspondence between a curve in ROC space and a curve in PR
space, such that the curves contain exactly the same
confusion matrices, if Recall ̸= 0.
The Relationship Between Precision-Recall and ROC Curves
predicted positive
predicted negative
(a) Confusion Matrix
True Positive Rate
False Positive Rate
(b) Deﬁnitions of metrics
Figure 2. Common machine learning evaluation metrics
Proof. Note that a point in ROC space deﬁnes a
unique confusion matrix when the dataset is ﬁxed.
Since in PR space we ignore TN, one might worry
that each point may correspond to multiple confusion
matrices. However, with a ﬁxed number of positive
and negative examples, given the other three entries
in a matrix, TN is uniquely determined. If Recall =
0, we are unable to recover FP, and thus cannot ﬁnd
a unique confusion matrix.
Consequently, we have a one-to-one mapping between
confusion matrices and points in PR space. This implies that we also have a one-to-one mapping between
points (each deﬁned by a confusion matrix) in ROC
space and PR space; hence, we can translate a curve
in ROC space to PR space and vice-versa.
One important deﬁnition we need for our next theorem
is the notion that one curve dominates another curve,
“meaning that all other...curves are beneath it or equal
to it .”
Theorem 3.2. For a ﬁxed number of positive and negative examples, one curve dominates a second curve in
ROC space if and only if the ﬁrst dominates the second
in Precision-Recall space.
Claim 1 (⇒):
If a curve dominates in ROC
space then it dominates in PR space. Proof by
contradiction. Suppose we have curve I and curve II
(as shown in Figure 3) such that curve I dominates
in ROC space, yet, once we translate these curves in
PR space, curve I no longer dominates. Since curve
I does not dominate in PR space, there exists some
point A on curve II such that the point B on curve
I with identical Recall has lower Precision. In other
PRECISION(A)
PRECISION(B)
RECALL(B).
RECALL(A) = RECALL(B) and Recall is identical to TPR, we have that TPR(A) = TPR(B).
Since curve I dominates curve II in ROC space
FPR(A) ≥FPR(B).
Remember that total positives
TPR(A) = TPR(B):
Total Positives
Total Positives
we now have TPA = TPB and thus denote both as
TP. Remember that FPR(A) ≥FPR(B) and
Total Negatives
Total Negatives
This implies that FPA ≥FPB because
PRECISION(A) =
PRECISION(B) =
PRECISION(A)
PRECISION(B).
contradicts
assumption
PRECISION(A)
PRECISION(B).
Claim 2 (⇐): If a curve dominates in PR space
then it dominates in ROC space. Proof by contradiction. Suppose we have curve I and curve II (as
shown in Figure 4) such that curve I dominates curve II
in PR space, but once translated in ROC space curve I
no longer dominates. Since curve I does not dominate
in ROC space, there exists some point A on curve II
such that point B on curve I with identical TPR yet
FPR(A) < TPR(B). Since RECALL and TPR are
the same, we get that RECALL(A) = RECALL(B).
Because curve I dominates in PR space we know that
PRECISION(A) ≤PRECISION(B). Remember
The Relationship Between Precision-Recall and ROC Curves
True Positive Rate
False Positive Rate
(a) Case 1: FPR(A) > FPR(B)
True Positive Rate
False Positive Rate
(b) Case 2: FPR(A) = FPR(B)
Figure 3. Two cases for Claim 1 of Theorem 3.2
(a) Case 1: PRECISION(A) <
PRECISION(B)
(b) Case 2: PRECISION(A) =
PRECISION(B)
Figure 4. Two cases of Claim 2 of Theorem 3.2
that RECALL(A) = RECALL(B) and
RECALL(A) =
Total Positives
RECALL(B) =
Total Positives
We know that TPA = TPB, so we will now denote
them simply as TP.
Because PRECISION(A) ≤
PRECISION(B) and
PRECISION(A) =
PRECISION(B) =
we ﬁnd that FPA ≥FPB. Now we have
Total Negatives
Total Negatives
This implies that FPR(A) ≥FPR(B) and this contradicts our original assumption that FPR(A) <
In ROC space the convex hull is a crucial idea. Given
a set of points in ROC space, the convex hull must
meet the following three criteria:
1. Linear interpolation is used between adjacent
2. No point lies above the ﬁnal curve.
The Relationship Between Precision-Recall and ROC Curves
True Positive Rate
False Positive Rate
(a) Convex hull in ROC space
True Positive Rate
False Positive Rate
(b) Curves in ROC space
(c) Equivalent curves in PR space
Figure 5. Convex hull and its PR analog dominate the na¨ıve method for curve construction in each space. Note that this
achievable PR curve is not a true convex hull due to non-linear interpolation. Linear interpolation in PR space is typically
not achievable.
3. For any pair of points used to construct the curve,
the line segment connecting them is equal to or
below the curve.
Figure 5(a) shows an example of a convex hull in ROC
space. For a detailed algorithm of how to eﬃciently
construct the convex hull, see Cormen et al. .
In PR space, there exists an analogous curve to the
convex hull in ROC space, which we call the achievable
PR curve, although it cannot be achieved by linear
interpolation. The issue of dominance in ROC space
is directly related to this convex hull analog.
Corollary 3.1. Given a set of points in PR space,
there exists an achievable PR curve that dominates the
other valid curves that could be constructed with these
Proof. First, convert the points into ROC space
(Theorem 3.1), and construct the convex hull of these
points in ROC space. By deﬁnition, the convex hull
dominates all other curves that could be constructed
with those points when using linear interpolation between the points. Thus converting the points of the
ROC convex hull back into PR space will yield a curve
that dominates in PR space as shown in Figures 5(b)
and 5(c). This follows from Theorem 3.2. The achievable PR curve will exclude exactly those points beneath the convex hull in ROC space.
The convex hull in ROC space is the best legal curve
that can be constructed from a set of given ROC
Many researchers, ourselves included, argue
that PR curves are preferable when presented with
highly-skewed datasets. Therefore it is surprising that
we can ﬁnd the achievable PR curve (the best legal
PR curve) by ﬁrst computing the convex hull in ROC
space and the converting that curve into PR space.
Thus the best curve in one space gives you the best
curve in the other space.
An important methodological issue must be addressed
when building a convex hull in ROC space or an
achievable curve in PR space. When constructing a
ROC curve (or PR curve) from an algorithm that outputs a probability, the following approach is usually
taken: ﬁrst ﬁnd the probability that each test set example is positive, next sort this list and then traverse
the sorted list in ascending order. To simplify the discussion, let class(i) refer to the true classiﬁcation of
the example at position i in the array and prob(i) refer to the probability that the example at position i is
positive. For each i such that class(i) ̸= class(i + 1)
and prob(i) < prob(i + 1), create a classiﬁer by calling
every example j such that j ≥i + 1 positive and all
other examples negative.
Thus each point in ROC space or PR space represents
a speciﬁc classiﬁer, with a threshold for calling an example positive. Building the convex hull can be seen
as constructing a new classiﬁer, as one picks the best
points. Therefore it would be methodologically incorrect to construct a convex hull or achievable PR curve
by looking at performance on the test data and then
constructing a convex hull. To combat this problem,
the convex hull must be constructed using a tuning set
as follows: First, use the method described above to
ﬁnd a candidate set of thresholds on the tuning data.
Then, build a convex hull over the tuning data. Finally
use the thresholds selected on the tuning data, when
The Relationship Between Precision-Recall and ROC Curves
building an ROC or PR curve for the test data. While
this test-data curve is not guaranteed to be a convex
hull, it preserves the split between training data and
testing data.
4. Interpolation and AUC
A key practical issue to address is how to interpolate
between points in each space.
It is straightforward
to interpolate between points in ROC space by simply drawing a straight line connecting the two points.
One can achieve any level of performance on this line
by ﬂipping a weighted coin to decide between the classiﬁers that the two end points represent.
However, in Precision-Recall space, interpolation is
more complicated. As the level of Recall varies, the
Precision does not necessarily change linearly due to
the fact that FP replaces FN in the denominator of
the Precision metric. In these cases, linear interpolation is a mistake that yields an overly-optimistic estimate of performance.
Corollary 3.1 shows how to
ﬁnd the achievable PR curve by simply converting the
analogous ROC convex hull; this yields the correct interpolation in PR space. However, a curve consists of
inﬁnitely many points, and thus we need a practical,
approximate method for translation. We expand here
on the method proposed by Goadrich et al. to
approximate the interpolation between two points in
Remember that any point A in a Precision-Recall
space is generated from the underlying true positive
(TPA) and false positive (FPA) counts. Suppose we
have two points, A and B which are far apart in
Precision-Recall space. To ﬁnd some intermediate values, we must interpolate between their counts TPA
and TPB, and FPA and FPB. We ﬁnd out how many
negative examples it takes to equal one positive, or the
local skew, deﬁned by F PB−F PA
T PB−T PA . Now we can create
new points TPA+x for all integer values of x such that
1 ≤x ≤TPB−TPA, i.e. TPA+1, TPA+2, ..., TPB−1,
and calculate corresponding FP by linearly increasing
the false positives for each new point by the local skew.
Our resulting intermediate Precision-Recall points will
Total Pos,
TPA + x + FPA + F PB−F PA
T PB−T PA x
For example, suppose we have a dataset with 20 positive examples and 2000 negative examples. Let TPA =
5, FPA = 5, TPB = 10, and FPB = 30. Table 1 shows
the proper interpolation of the intermediate points between A and B, with the local skew of 5 negatives for
Table 1. Correct interpolation between two points in PR
space for a dataset with 20 positive and 2000 negative examples
Figure 6. The eﬀect of incorrect interpolation in PR space
every 1 positive. Notice how the resulting Precision
interpolation is not linear between 0.50 and 0.25.
Often, the area under the curve is used as a simple
metric to deﬁne how an algorithm performs over the
whole space . The area
under the ROC curve (AUC-ROC) can be calculated
by using the trapezoidal areas created between each
ROC point, and is equivalent to the Wilcoxon-Mann-
Whitney statistic . By including our intermediate PR points, we can now use the
composite trapezoidal method to approximate the area
under the PR curve (AUC-PR).
The eﬀect of incorrect interpolation on the AUC-PR
is especially pronounced when two points are far away
in Recall and Precision and the local skew is high.
Consider a curve (Figure 6) constructed from a single point of (0.02, 1), and extended to the endpoints
of (0, 1) and (1, 0.008) as described above (for this example, our dataset contains 433 positives and 56,164
negatives). Interpolating as we have described would
have an AUC-PR of 0.031; a linear connection would
severely overestimate with an AUC-PR of 0.50.
Now that we have developed interpolation for PR
space, we can give the complete algorithm for ﬁnd-
The Relationship Between Precision-Recall and ROC Curves
True Positive Rate
False Positive Rate
two algorithms
(b) Comparing AUC-PR for two
algorithms
Figure 7. Diﬀerence in optimizing area under the curve in each space
ing the achievable PR curve. First, we ﬁnd the convex
hull in ROC space (Corollary 3.1). Next, for each point
selected by the algorithm to be included in the hull,
we use the confusion matrix that deﬁnes that point to
construct the corresponding point in PR space (Theorem 3.1). Finally, we perform the correct interpolation
between the newly created PR points.
5. Optimizing Area Under the Curve.
Several researchers have investigated using AUC-ROC
to inform the search heuristics of their algorithms.
Ferri et al. alter decision trees to use the
AUC-ROC as their splitting criterion, Cortes and
Mohri show that the boosting algorithm Rank-
Boost is also well-suited to optimize the AUC-ROC, Joachims presents a generalization of Support Vector Machines which can optimize AUC-ROC among other ranking metrics, Prati
and Flach use a rule selection algorithm to directly create the convex hull in ROC space, and both
Yan et al. and Herschtal and Raskutti 
explore ways to optimize the AUC-ROC within neural
networks. Also, ILP algorithms such as Aleph can be changed to use heuristics related
to ROC or PR space, at least in relation to an individual rule.
Knowing that a convex hull in ROC space can be
translated into the achievable curve in Precision-Recall
space leads to another open question: do algorithms
which optimize the AUC-ROC also optimize the AUC-
PR? Unfortunately, the answer generally is no, and
we prove this by the following counter-example. Figure 7(a) shows two overlapping curves in ROC space
for a domain with 20 positive examples and 2000 negative examples, where each curve individually is a convex hull. The AUC-ROC for curve I is 0.813 and the
AUC-ROC for curve II is 0.875, so an algorithm optimizing the AUC-ROC and choosing between these two
rankings would choose curve II. However, Figure 7(b)
shows the same curves translated into PR space, and
the diﬀerence here is drastic. The AUC-PR for curve
I is now 0.514 due to the high ranking of over half
of the positive examples, while the AUC-PR for curve
II is far less at 0.038, so the direct opposite choice of
curve I should be made to optimize the AUC-PR. This
is because in PR space the main contribution comes
from achieving a lower Recall range with higher Precision. Nevertheless, based on Theorem 3.2 ROC curves
are useful in an algorithm that optimizes AUC-PR.
An algorithm can ﬁnd the convex hull in ROC space,
convert that curve to PR space for an achievable PR
curve, and score the classiﬁer by the area under this
achievable PR curve.
6. Conclusions
This work makes four important contributions. First,
for any dataset, the ROC curve and PR curve for a
given algorithm contain the same points. This equivalence, leads to the surprising theorem that a curve
dominates in ROC space if and only if it dominates in
PR space. Second, as a corollary to the theorem we
show the existence of the PR space analog to the convex hull in ROC space, which we call an achievable PR
curve. Remarkably, when constructing the achievable
PR curve one discards exactly the same points omitted by the convex hull in ROC space. Consequently,
we can eﬃciently compute the achievable PR curve.
Third, we show that simple linear interpolation is insuﬃcient between points in PR space. Finally, we show
The Relationship Between Precision-Recall and ROC Curves
that an algorithm that optimizes the area under the
ROC curve is not guaranteed to optimize the area under the PR curve.
Acknowledgements
calculating
 
We gratefully acknowledge the funding from USA
NLM Grant 5T15LM007359-02 and USA Air Force
Grant F30602-01-2-0571, V´ıtor Santos Costa, Louis
Oliphant, our advisors David Page and Jude Shavlik and our anonymous reviewers for their helpful
comments and suggestions.