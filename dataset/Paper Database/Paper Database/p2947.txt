Journal of Artiﬁcial Intelligence Research 47 853-899
Submitted 03/13; published 08/13
Framing Image Description as a Ranking Task:
Data, Models and Evaluation Metrics
Micah Hodosh
 
Peter Young
 
Julia Hockenmaier
 
Department of Computer Science
University of Illinois
Urbana, IL 61801, USA
The ability to associate images with natural language sentences that describe what
is depicted in them is a hallmark of image understanding, and a prerequisite for applications such as sentence-based image search. In analogy to image search, we propose to
frame sentence-based image annotation as the task of ranking a given pool of captions.
We introduce a new benchmark collection for sentence-based image description and search,
consisting of 8,000 images that are each paired with ﬁve diﬀerent captions which provide
clear descriptions of the salient entities and events. We introduce a number of systems
that perform quite well on this task, even though they are only based on features that
can be obtained with minimal supervision. Our results clearly indicate the importance of
training on multiple captions per image, and of capturing syntactic (word order-based) and
semantic features of these captions. We also perform an in-depth comparison of human
and automatic evaluation metrics for this task, and propose strategies for collecting human
judgments cheaply and on a very large scale, allowing us to augment our collection with
additional relevance judgments of which captions describe which image. Our analysis shows
that metrics that consider the ranked list of results for each query image or sentence are
signiﬁcantly more robust than metrics that are based on a single response per query. Moreover, our study suggests that the evaluation of ranking-based image description systems
may be fully automated.
1. Introduction
The ability to automatically describe the entities, events and scenes depicted in an image
is possibly the most ambitious test of image understanding. Any advances on this task
have signiﬁcant practical implications, since there are billions of images on the web and in
personal photo collections. Our ability to eﬃciently access the wealth of information they
contain is hampered by limitations of standard image search engines, which must rely on
text that appears near the image . There has been a lot of work on the multi-label classiﬁcation problem of
associating images with individual words or tags , but the much harder problem of automatically associating images
with complete sentences that describe them has only recently begun to attract attention.
©2013 AI Access Foundation. All rights reserved.
Hodosh, Young & Hockenmaier
1.1 Related Work
Although a few approaches have framed sentence-based image description as the task of mapping images to sentences written by people , most research in this
area has focused on the task of automatically generating novel captions . We argue in this paper that framing image description as a natural language generation problem introduces a number of linguistic diﬃculties that detract
attention from the underlying image understanding problem we wish to address. Since any
sentence-based image description or retrieval system requires the ability to associate images
with captions that describe what is depicted in them, we argue it is important to evaluate
this mapping between images and sentences independently of the generation aspect. Research on caption generation has also ignored the image search task, which is arguably of
much greater practical importance.
All of the systems cited above are either evaluated on a data set that our group released
in earlier work , or on the SBU Captioned Photo Dataset . Our data set consists of 1,000 images from the
PASCAL VOC-2008 object recognition challenge that are each annotated with ﬁve descriptive captions which we purposely collected for this task. The SBU data set consists of one
million images and captions harvested from Flickr. Gupta et al. is the only system to
use Grubinger, Clough, Müller, and Deselaers’s IAPR TC-12 data set, which consists
of 20,000 images paired with longer descriptions.
Although details diﬀer, most models rely on existing detectors to deﬁne and map images
to an explicit meaning representation language consisting of a ﬁxed number of scenes, objects
(or ‘stuﬀ’), their attributes and spatial relations . But it is
unclear how well these detector-based approaches generalize: the models evaluated on our
PASCAL VOC-2008 data set all rely on detectors that may have been trained on
images contained in this corpus, and Kuznetsova et al. select a test set of 1,000 images
from the SBU data set for which their detectors work well. Moreover, among the systems
evaluated on our PASCAL VOC-2008 data set, only Kulkarni et al. , Li et al. ,
Li et al. and Mitchell et al.’s results may be directly comparable, since diﬀerent
research groups report diﬀerent evaluation metrics and use a diﬀerent parts of the data set
as test or training data. The evaluation of generation systems is generally well known to be
diﬃcult , and typically requires expensive
human judgments that have to consider the quality of both content selection (what is being
described) and surface realization (the ﬂuency of the generated text). These syntactic and
pragmatic issues confound the purely semantic question of whether the image is correctly
described by the caption.
Framing Image Description as a Ranking Task
1.2 Our Approach
In this paper, we focus on the task of associating images with sentences drawn from a large,
predeﬁned pool of image descriptions. These descriptions are not generated automatically
or harvested from the web , but are written
by people who were asked to describe them. We argue that evaluating the ability to select
or rank, rather than generate, appropriate captions for an image is the most direct test
of the fundamental semantic question of how well we can associate images with sentences
that describe them well. Framing image description as a ranking task also has a number
of additional advantages.
First, it allows us to handle sentence-based image annotation
and search in a uniﬁed framework, allowing us to evaluate whether advances in one task
carry over to the other. Second, framing image description as a ranking problem greatly
simpliﬁes evaluation. By establishing a parallel between description and retrieval, we can
use the same metrics to evaluate both tasks.
Moreover, we show that the rank of the
original caption, which is easily determined automatically, leads to metrics that correlate
highly with systems rankings obtained from human judgments, even if they underestimate
actual performance. We also show that standard automatic metrics such as Bleu or Rouge that have also been used to evaluate
caption generation systems show poor correlation with human judgments, leading us to
believe that the evaluation of caption generation system should not be automated. We also
perform a large-scale human evaluation, but since the sentences in our data set are image
descriptions written by people, we only need to collect purely semantic judgments of whether
they describe the images the system associated them with. And since these judgments are
independent of the task, we can use them to evaluate both image description and retrieval
systems. Since we collect these judgments over image-caption pairs in our publicly available
data set, we also establish a common benchmark that enables a direct comparison of diﬀerent
systems. We believe that this is another advantage over the caption generation task. Since
there are many possible ways to describe an image, generation systems are at liberty to be
more or less speciﬁc about what they describe in an image. This makes a direct comparison
of independently obtained judgments about the quality of two diﬀerent systems very diﬃcult,
since one system may be aiming to solve a much harder task than the other, and implies
that unless system outputs for a common benchmark collection of images were made publicly
available, there cannot be any shared, objective evaluation that would allow the community
to measure progress on this diﬃcult problem. But since caption generation systems also
need to be able to determine how well a caption describes an image, our data set could
potentially be used to evaluate their semantic component.
1.3 Contributions and Outline of this Paper
In Section 2, we discuss the need for a new data set for image description and introduce a
new, high quality, data set for image description which will enable the community to compare
diﬀerent systems against the same benchmark. Our PASCAL VOC-2008 data set of 1,000
images has been used by a number of image description systems
 , but has a number of shortcomings that limit its usefulness. First,
its domain is relatively limited, and the captions are relatively simple. Second, since its
Hodosh, Young & Hockenmaier
images are drawn from the data used for the PASCAL VOC-2008 object classes challenge,
it is diﬃcult to guarantee a fair evaluation of description systems which rely on oﬀ-the-shelf
object detectors on this data set, since
it may not be possible to identify which images these detectors have been trained on. The
experiments in this paper are therefore based on a larger, and more diverse, data set of 8,000
images. Unlike other data sets that pair images with sentences that are merely related to
the image , each image in our data sets are
paired with ﬁve diﬀerent captions that were purposely written to describe the image.
In Section 3, we describe our own image description systems. Because image description
is such a novel task, it remains largely unknown what kind of model, and what kind of
visual and linguistic features it requires. Instead of a unidirectional mapping from images
to sentences that is common to current caption generation systems, we map both images
and sentences into the same space. This allows us to apply our system to image search
by retrieving the images that are closest to a query sentence, and to image description
by annotating images with those sentences that are closest to it. The technique we use,
Kernel Canonical Correlation Analysis , has already been
successfully used to associate images or image regions
 with individual words or sets of tags, while Canonical Correlation
Analysis has also been used to associate images with related Wikipedia
articles from ten diﬀerent categories . However, the performance of these techniques on the much more
stringent task of associating images with sentences that describe what is depicted in them
has not been evaluated. We compare a number of text kernels that capture diﬀerent linguistic
features. Our experimental results (discussed in Section 4) demonstrate the importance of
robust textual representations that consider the semantic similarity of words, and hence take
the linguistic diversity of the diﬀerent captions associated with each image into account. Our
visual features are relatively simple. A number of image description systems largely
rely on trained detectors, e.g. to obtain an explicit intermediate meaning representation of
the depicted objects, scenes and events. But this approach would ultimately require separate
detectors, and hence labeled training data, for each term or phrase in the chosen meaning
representation language.
We show here that image features that capture only low-level
perceptual properties can in fact work surprisingly well on our larger data set for which no
in-domain detectors are available.
In Section 4, we consider the question of evaluation, and use a number of diﬀerent metrics
to compare our systems. Since we focus on the problem of learning an appropriate mapping
between images and captions, we follow standard machine learning practice and evaluate
the ability of this function to generalize to unseen examples. Hence, we separate the pool of
captions and images used for testing from those used to train our systems. We ﬁrst consider
metrics for the quality of a single image-caption pair, and compare automatically computed
scores with detailed human judgments. We then examine metrics that evaluate the ranked
lists returned by our systems. Our analysis reveals that, at the current level of performance,
diﬀerences between models may not become apparent if only a single caption per image is
considered, as is commonly done for caption generation systems. But even if two models
Framing Image Description as a Ranking Task
are equally likely to fail to return a suitable caption as the ﬁrst result, we should still prefer
the one that is more likely to rank good captions higher than the other, since it arguably
provides a better approximation of the semantic space in which images are near captions
that describe them well. Since the test pool contains a single gold item for each query, we
ﬁrst consider metrics that are based on the rank and recall of this gold item. We then show
that simpler, binary judgments of image descriptions that are good approximations of more
ﬁne-grained human judgments can be collected on a very large scale via crowdsourcing. We
augment the test pool of our data set with these relevance judgments, in the hope that
this will add to its usefulness as a community resource and benchmark. These judgments
show that the actual performance of our systems is higher than the recall of the gold item
indicates. However, a comparison of the system rankings obtained via diﬀerent metrics also
suggests that diﬀerences in the rank or recall of the gold item correlate very highly with
diﬀerence in performance according to the binary relevance judgments.
2. A New Data Set for Image Description
We have used crowdsourcing to collect descriptive captions for a large number of images of
people and animals (mostly dogs). Before describing our data set and annotation methodology, we discuss what kind of captions are most useful for image description, and motivate
the need to create new data sets for this task.
2.1 What Do We Mean by Image Description?
Since automatic image description is a relatively novel task, it is worth reﬂecting what it
means to describe images, and what we wish to say about an image. There is in fact a
substantial body of work on image description related to image libraries that is useful to revisit for our purpose. We argue that
out of the three diﬀerent kinds of image descriptions that are commonly distinguished, one
type, the so-called conceptual descriptions, is of most relevance to the image understanding we aim to achieve with automatic captioning. Conceptual image descriptions identify
what is depicted in the image, and while they may be abstract (e.g., concerning the mood
a picture may convey), image understanding is mostly interested in concrete descriptions
of the depicted scene and entities, their attributes and relations, as well as the events they
participate in. Because they focus on what is actually in the image, conceptual descriptions
diﬀer from so-called non-visual descriptions, which provide additional background information that cannot be obtained from the image alone, e.g. about the situation, time or location
in which the image was taken. Perceptual descriptions capture low-level visual properties
of images (e.g., whether it is a photograph or a drawing, or what colors or shapes dominate) are of little interest to us, unless they link these properties explicitly to the depicted
entities. Among concrete conceptual descriptions, a further distinction can be drawn between speciﬁc descriptions, which may identify people and locations by their names, and
generic descriptions (which may, e.g., describe a person as a woman or a skateboarder, and
the scene as a city street or a room). With the exception of iconic entities that should be
recognized as such (e.g., well-known public ﬁgures or landmark locations such as the Eiﬀel
Tower) we argue that image understanding should focus on the information captured by
Hodosh, Young & Hockenmaier
 
SBU Captioned P
Photo Dataset (Flickr)
z et al. 2011)
IAPR-TC12 data set
 
Consumption
has soared as
the real price of
drink has fallen
AMD destroys
central vision
At the Downers Grove
train station (our condo
building is in the
background), on our
way to the AG store in
I don't chew up the couch
and pee in the kitchen
a blue and white airplane is standing on a grey airport;
a man and red cones are standing in front of it and two
red-dressed hostesses and two passengers are directly
on the stairs in front of the airplane; a brown landscape
with high dark brown mountains with snow-covered
summits and a light grey sky in the background;
Figure 1: Other data sets of images and captions
generic descriptions. This leaves the question of where to obtain a data set of images paired
with suitable descriptions to train automatic description systems on.
2.2 The Need for New Data Sets
While there is no dearth of images that are associated with text available online, we argue
that most of this text is not suitable for our task. Some work, notably in the natural language
processing community, has focused on images in news articles .
However, images are often only used to illustrate stories, and have little direct connection to
the text (Figure 1, left). Furthermore, even when captions describe the depicted event, they
tend to focus on the information that cannot be obtained from the image itself. Similarly,
when people provide captions for the images they upload on websites such as Flickr (Figure 1,
center), they often describe the situation that the images were taken in, rather than what
is actually depicted in the image. That is, these captions often provide non-visual or overly
speciﬁc information (e.g., by naming people appearing in the image or the location where the
image was taken). There is a simple reason why people do not typically provide the kinds
of generic conceptual descriptions that are of most use for our purposes: Gricean maxims of
relevance and quantity entail that image captions that are written for people
usually provide precisely the kind of information that could not be obtained from the image
itself, and thus tend to bear only a tenuous relation to what is actually depicted. Or, to
state it more succinctly, captions are usually written to be seen along with the images they
accompany, and users may not wish to bore other readers with the obvious.
Ordonez et al. harvested images and their captions from Flickr to create the
SBU Captioned Photo Dataset, but had to discard the vast majority of images because
their captions were not actually descriptive. Further analysis of a random sample of 100
images of their ﬁnal data set revealed that the majority (67/100) of their captions describe
information that cannot be obtained from the image itself (e.g., by naming the people or
locations appearing in the image), while a substantial fraction (23/100) only describe a small
detail of the image or are otherwise just commentary about the image. Examples of these
issues are shown in Figure 1 (center). This makes their data set less useful for the kind
of image understanding we are interested in: unless they refer to speciﬁc entities one may
actually wish to identify (e.g., celebrities or famous landmarks that appear in the image),
proper nouns are of little help in learning about visual properties of entity types unless one
Framing Image Description as a Ranking Task
Our data set of 8,000 Flickr images with 5 crowd-sourced captions
A man is doing tricks on a bicycle on ramps in front of a crowd.
A man on a bike executes a jump as part of a competition while the crowd watches.
A man rides a yellow bike over a ramp while others watch.
Bike rider jumping obstacles.
Bmx biker jumps off of ramp.
A group of people sit at a table in front of a large building.
People are drinking and walking in front of a brick building.
People are enjoying drinks at a table outside a large brick building.
Two people are seated at a table with drinks.
Two people are sitting at an outdoor cafe in front of an old building.
Figure 2: Our data set of images paired with generic conceptual descriptions
can infer what kind of entity they refer to.1 The IAPR TC-12 data set , which consists of 20,000 photographs is potentially more useful for our purposes, since
it contains descriptions of “what can be recognized in an image without any prior information
or extra knowledge.” However, the descriptions, which consist often of multiple sentences
or sentence fragments, have a tendency to be lengthy (average length: 23.1 words) and
overly detailed, instead of focusing on the salient aspects of the photograph. For example,
in the photo of an airplane in Figure 1 (right), the ‘two hostesses’ are barely visible but
nevertheless described in detail.
2.3 Our Data Sets
Since the kinds of captions that are normally provided for images do not describe the images
themselves, we have collected our own data sets of images and captions.
The captions
are obtained by using the crowdsourcing service provided by Amazon Mechanical Turk
to annotate each image with ﬁve descriptive captions. By asking people to describe the
people, objects, scenes and activities that are shown in a picture without giving them any
further information about the context in which the picture was taken, we were able to
obtain conceptual descriptions that focus only on the information that can be obtained
from the image alone. Our annotation process and quality control are described in detail in
Rashtchian et al. ’s paper. We have annotated two diﬀerent data sets in this manner:
2.3.1 The PASCAL VOC-2008 Data Set
The ﬁrst data set we produced is relatively small, and consists of only 1,000 images randomly selected from the training and validation set of the PASCAL 2008 object recognition
challenge . It has been used by a
large number of image description systems , but since almost
all of these systems rely on detectors trained
1. The data set of Ordonez et al. also diﬀers signiﬁcantly in content from ours: while our collection
focuses on images of eventualities, i.e. people or animals doing something, the majority of Ordonez et
al.’s images (60/100) do not depict people or animals (e.g., still lifes, landscape shots).
Hodosh, Young & Hockenmaier
on images from the same data set , it is unclear how well these
approaches would generalize to other domains where no labeled data to train detectors is
available. The captions in the PASCAL data set are also relatively simple. For example,
since the data set contains many pictures that do not depict or focus on people doing something, 25% of the captions do not contain any verb, and an additional 15% of the captions
contain only the common static verbs sit, stand, wear, or look.
2.3.2 The Flickr 8K Data Set
For the work reported in this paper we therefore collected a larger, more diverse data set
consisting of 8,092 images from the Flickr.com website. Unlike the more static PASCAL
images, the images in this data set focus on people or animals (mainly dogs) performing
some action. Examples from this data set are shown in Figure 2. The images were chosen
from six diﬀerent Flickr groups,2 and tend not to contain any well-known people or locations,
but were manually selected to depict a variety of scenes and situations. In order to avoid
ungrammatical captions, we only allowed workers from the United States who had passed
a brief spelling and grammar test we devised to annotate our images. Because we were
interested in conceptual descriptions, annotators were asked to write sentences that describe
the depicted scenes, situations, events and entities (people, animals, other objects). We
collected multiple captions for each image because there is a considerable degree of variance
in the way many images can be described. As a consequence, the captions of the same
images are often not direct paraphrases of each other: the same entity or event or situation
can be described in multiple ways (man vs.
bike rider, doing tricks vs.
jumping), and
while everybody mentions the bike rider, not everybody mentions the crowd or the ramp.
The more dynamic nature of the images is also reﬂected in how they are being described:
Captions in this data set have an average length of 11.8 words, compared to 10.8 words
in the PASCAL data set, and while 40% of the PASCAL captions contain no verb other
than sit, stand, wear, or look, only 11% of the captions for the Flickr 8K set contain no
verb, and an additional 10% contain only these common verbs. Our data sets, the Flickr
training/test/development splits and human relevance judgments used for evaluation of the
test items (Section 4) are publicly available.3 The online appendix to this paper contains
our instructions to the workers, including the qualiﬁcation test they had to pass before being
allowed to complete our tasks.
3. Systems for Sentence-Based Image Description
Since image description requires the ability to associate images and sentences, all image
description systems can be viewed in terms of an aﬃnity function f(i, s) which measures the
degree of association between images and sentences. We will evaluate our ability to compute
such aﬃnity functions by measuring performance on two tasks that depend directly on them.
Given a candidate pool of sentences Scand and a candidate pool of images Icand, sentencebased image retrieval aims to ﬁnd the image i∗∈Icand that maximizes f(i, sq) for a query
sentence sq ∈Scand. Conversely, image annotation aims to ﬁnd the sentence s∗∈Scand that
2. These groups were called strangers!, Wild-Child (Kids in Action), Dogs in Action (Read the Rules),
Outdoor Activities, Action Photography, Flickr-Social (two or more people in the photo)
3. 
Framing Image Description as a Ranking Task
maximizes f(iq, s) for a query image iq ∈Icand. In both cases, f(i, s) should of course be
maximized for image-sentence pairs in which the sentence describes the image well:
Image search:
i∗= arg maxi∈Icand f(i, sq)
Image annotation:
s∗= arg maxs∈Scand f(iq, s)
This formulation is completely general: although we will, for evaluation purposes, deﬁne
Scand as the set of captions originally written for the images in Icand, this does not have to
be the case, and Scand could also, for example, be deﬁned implicitly via a caption generation
system. In order to evaluate how well f generalizes to unseen examples, we will evaluate our
system on test pools Itest and Stest that are drawn from the same domain but are disjoint
from the training data Dtrain = (Itrain, Strain) and development data Ddev = (Idev, Sdev).
The challenge in deﬁning f lies in the fact that images and sentences are drawn from two
diﬀerent spaces, I and S. In this paper, we present two diﬀerent kinds of image description
systems. One is based on nearest-neighbor search (NN), the other uses a technique called
Kernel Canonical Correlation Analysis .
Both rely on a set of known image-sentence pairs Dtrain = {⟨i, s⟩}.
3.1 Nearest-Neighbor Search for Image Description
Nearest-neighbor based systems use unimodal text and image similarity functions directly
to ﬁrst ﬁnd the image-sentence pair in the training corpus Dtrain that contains the closest
item to the query, and then score the items in the other space by their similarity to the
other item in this pair:
Image retrieval: fNN(i, sq) = fI(iNN, i)
for ⟨iNN, sNN⟩= arg max
⟨it,st⟩∈Dtrain
fS(sq, st) (2)
Image annotation: fNN(iq, s) = fS(sNN, s)
for ⟨iNN, sNN⟩= arg max
⟨it,st⟩∈Dtrain
fI(iq, it)
Despite their simplicity, such nearest-neighbor systems are non-trivial baselines: for the
task of annotating images with tags or keywords, methods which annotate unseen images
with the tags of their nearest neighbors among training images are known to achieve competitive performance , and similar methods have recently been proposed
for image description . Since the task we address here does not allow
us to return items from the training data, but requires us to rerank a pool of unseen captions
or images, our nearest-neighbor search requires two similarity functions. All of our nearestneighbor systems use the same image representation as our KCCA-based systems, described
in Section 3.3. Our main nearest-neighbor system, NN (NN5idf
F1), treats the ﬁve captions
associated with each training image as a single document. It then reweights each token by
its inverse document frequency (IDF) λw, and deﬁnes the similarity of two sentences as the
F1-measure (harmonic mean of precision and recall) computed over their IDF-reweighted
bag-of-words representation. If Dtrain(w) is the subset of training images in whose captions
word w appears at least once, the inverse document frequency (IDF) of w is deﬁned as
|Dtrain(w)|+1. IDF-reweighting is potentially helpful for our task, since words that
describe fewer images may be particularly discriminative between captions.
Hodosh, Young & Hockenmaier
In the appendix, we provide results for NN systems that use the same text representation
as two of our KCCA systems.
3.2 Kernel Canonical Correlation Analysis for Image Description
Most of the systems we present are based on a technique called Kernel Canonical Correlation
Analysis . We ﬁrst provide a brief introduction,
and then explain how we apply it to our task.
3.2.1 Kernel Canonical Correlation Analysis (KCCA)
KCCA is an extension of Canonical Correlation Analysis , which takes
training data consisting of pairs of corresponding items ⟨xi, yi⟩drawn from two diﬀerent
feature spaces (xi ∈X, yi ∈Y), and ﬁnds maximally correlated linear projections αx and
βy of both sets of items into a newly induced common space Z. Since linear projections of
the raw features may not capture the patterns that are necessary to explain the pairing of
the data, KCCA implicitly maps the original items into higher-order spaces X ′ and Y′ via
kernel functions KX = ⟨φX (xi)·φX (xj)⟩, which compute the dot product of two data points
xi and xj in a higher-dimensional space X ′ without requiring the explicit computation of
the mapping φX . KCCA then operates on the two resulting kernel matrices KX [i, j] =
⟨φX (xi) · φX (xj)⟩and KY[i, j] = ⟨φY(yi) · φY(yj)⟩which evaluate the kernel functions on
pairwise combinations of items in the training data. It returns two sets of projection weights,
α∗and β∗, which maximize the correlation between the two (projected) kernel matrices:
(α∗, β∗) = arg max
Xα + κα′KXα)(β′K2
Y β + κβ′KY β)
This can be cast as a generalized eigenproblem (KX +κI)−1KY (KY +κI)−1KXα = λ2α,
and solved by partial Gram-Schmidt orthogonalization . The regularization parameter κ penalizes the size of possible solutions, and is used
to avoid overﬁtting, which arises when the matrices are invertible.
One disadvantage of KCCA is that it requires the two kernel matrices of the training
data to be kept in memory during training. This becomes prohibitive with very large data
sets, but does not cause any problems here, since our training data consists of only 6,000
items (see Section 4.1).
3.2.2 Using KCCA to Associate Images and Sentences
KCCA has been successfully used to associate images or image regions with individual
words or sets of tags. In our case, the two original spaces X = I and Y = S correspond to
images and sentences that describe them. Images i ∈I are ﬁrst mapped to vectors KI(i)
whose elements KI(i)(t) = KI(it, i) evaluate the image kernel function KI on i and the t-th
image in Dtrain. Similarly, sentences s ∈S are mapped to vectors KS(s) that evaluate the
sentence kernel function KS on s and the sentences in Dtrain. The learned projection weights
(α∗, β∗) then map KI(i) and KS(s) into our induced space Z, in which we expect images
to appear near sentences that describe them well. In a KCCA-based image annotation or
Framing Image Description as a Ranking Task
search system, we therefore deﬁne f as the cosine similarity (sim) of points in this new space:
fKCCA(i, s) = sim(αKI(i), βKS(s))
We now describe the image and text kernels used by our KCCA systems.
3.3 Image Kernels
In contrast to much of the work done on image description, which assumes the existence of
a large number of preexisting detectors, the image representations used in this paper are
very basic, in that they rely only on three diﬀerent kinds of low-level pixel-based perceptual
features that capture color, texture and shape information in
the form of SIFT descriptors . We believe that
this establishes an important baseline, and leave the question of how more complex image
representations aﬀect performance to future work. We use two diﬀerent kinds of kernels:
a histogram kernel KHisto, which represents each image as a single histogram of feature
values and computes the similarity of two images as the intersection of their histograms,
and a pyramid kernel KPy , which represents each image
as a pyramid of nested regions, and computes the similarity of two images in terms of the
intersection of the histograms of corresponding regions. In both cases, we compute a separate
kernel for each of the three types of image features and average their result.
3.3.1 The Histogram Kernel (KHisto)
Each image xi is represented as a histogram Hi of discrete-valued features, such that Hi(v)
is the fraction of pixels in xi with value v. The similarity of two images xi and xj is deﬁned
as the intersection of their histograms, i.e. the percentage of pixels that can be mapped
onto a pixel with the same feature value in the other image:
K(xi, xj) =
min(Hi(v), Hj(v))
We combine three kernels based on diﬀerent kinds of visual features: KC captures color,
represented by the three CIELAB coordinates. KT captures texture, represented by descriptors which capture edge information at diﬀerent orientations centered on the pixel . KS is based on SIFT descriptors, which capture edge and shape information in a manner that is invariant to changes in rotation and illumination, and have been
shown to be distinct across possible objects of an image Lowe, 2004; Vedaldi & Fulkerson,
2008. We use 128 color words, 256 texture words and 256 SIFT words, obtained in an unsupervised fashion by K-means clustering on 1,000 points of 200 images from the PASCAL
2008 data set . Our ﬁnal histogram kernel KHisto is the average
of the responses of the three kernels KHisto
, taken to the pth power:
KHisto(xi, xj) =
Hodosh, Young & Hockenmaier
3.3.2 The Pyramid Kernel KPy
The spatial pyramid kernel is a generalization of the histogram kernel
that captures similarities not just at a global, but also at a local level. Each image xi is
represented at multiple levels of scale l (l ∈{0, 1, 2}) such that each level partitions the
image into a smaller and smaller grid of Cl = 2l × 2l cells (C0 = 1, C1 = 4, C2 = 16), and
each cell c is represented as a histogram Hic. The similarity of images xi and xj at level l,
ij, is in turn deﬁned as the sum of the histogram similarities of their corresponding cells
0l, ..., Cl at this level:
min(Hic(v), Hjc(v))
Although similarities at level l subsume those at a more ﬁne-grained level l + 1 (Il
ij ), similarities that hold at a more ﬁne-grained level are deemed more important, since
they indicate a greater local similarity. The pyramid kernel therefore proceeds from the
most ﬁne-grained (l = L) down to the coarsest (whole-image) scale (l = 0), and weights the
similarities ﬁrst encountered at level l (Il
KPy(xi, xj)
We again compute three separate pyramid kernels KPy
based on the same
color, texture and SIFT features as described above, and combine them into a single pyramid
kernel KPy, as in equation 6.
3.4 Basic Text Kernels
We examine three diﬀerent basic text kernels: a bag of words (BoW) kernel, Hwang and
Grauman’s TagRank kernel, and a truncated string kernel (Tri).
3.4.1 The Bag of Words Kernel (BoW)
Since bag-of-words representations have been successfully used for other tasks involving text
and images , we include a basic bag
of words kernel, which ignores word order and represents each caption simply as a vector
of word frequencies. The BoW kernel function is deﬁned as the cosine similarity of the
corresponding bag of words vectors. We either merge the ﬁve captions of each training item
into a single document (BoW5), or reduce each training item to a single, arbitrarily chosen,
caption (BoW1). A word’s frequency can also be reweighted by its IDF-score. As in the
nearest neighbor approach, the IDF-weight of a word w is deﬁned as λw = log
|Dtrain(w)|+1,
where Dtrain(w) is the subset of training images in whose captions word w appears at least
Framing Image Description as a Ranking Task
once. We found the square root of λw (BoW5
idf) to give better results than the standard
IDF-score λw (BoW5idf).
3.4.2 The Tag Rank Kernel (TagRank)
Hwang and Grauman apply KCCA to keyword-based image annotation and retrieval.
They focus on a data set where each image is paired with a list of tags ranked by their importance, and propose a new kernel for this kind of data. This so-called tag rank kernel
(TagRank) is a variant of the bag of words kernel that aims to capture the relative importance of tags by reweighting them according to their position in this list. Although Hwang
and Grauman do not evaluate the ability of their system to associate images with entire
sentences, they also consider another data set in which the lists of “tags” correspond to the
words of descriptive captions, and argue that the linear order of words in these captions also
reﬂects the relative importance of the corresponding objects in the image, so that words
that appear at the beginning of the sentence describe more salient aspects of the image.
In the TagRank kernel, each sentence is represented as two vectors, ⃗a and ⃗r. In ⃗a, the
weight of each word is based on its absolute position, so that the ﬁrst words in each sentence
are always assigned a high weight. In this “absolute tag rank” representation, each caption
s is mapped to a vector ⃗a = [⃗a(1) . . .⃗a(|V |)], where |V | is the size of the vocabulary. ⃗a(i)
depends on the absolute position pi of wi in s (if wi occurs multiple times in s, pi is averaged
over all its positions). If wi does not occur in s, ⃗a(i) = 0. Otherwise,
log2(1 + pi)
In ⃗r, the weight of a word depends on how its current position compares to the distribution of positions it occupies in the training data. The intuition behind this “relative rank”
representation is that words should have a higher weight when they occur earlier in the sentence than usual. Here, each caption s is mapped to a vector ⃗r = [⃗r(1) . . .⃗r(V )] of relative
tag ranks. Again, when wi does not appear in s, ⃗r(i) = 0. Otherwise wi’s relative tag rank
⃗r(i) indicates what percent of its occurrences in the training data appear after position pi.
Deﬁning nik as the number of times word wi appears in position k in the training data, and
k nik as the total frequency of wi in the training data:
⃗r(i) = 1 −
The ﬁnal kernel KT is given by the average of two χ2 kernels computed over ⃗r and ⃗a (Ωand
Ω′ are normalization terms):
KT (xi, xj) = 1
(⃗ri(k) −⃗rj(k))2
⃗ri(k) + ⃗rj(k)
(⃗ai(k) −⃗aj(k))2
⃗ai(k) + ⃗aj(k)
Since each image in our training data is associated with multiple, independently generated captions, we evaluate the kernel separately on each sentence pair and average the
response, instead of treating the multiple sentences as a single document.
Hodosh, Young & Hockenmaier
The TagRank kernel is relatively sensitive to overall sentence length, especially in cases
where the subject is preceded by multiple adjectives or other modiﬁers (‘a very large brown
dog’ vs. ‘a dog’). In English, the absolute tag rank will generally assign very high weights
to the subjects of sentences, lower weight to verbs, and even lower weight to objects or scene
descriptions, which tend to follow the main verb. The relative tag rank may not downweight
verbs, objects and scene descriptions as much (as long as they are always used in similar
positions in the sentence).
3.4.3 The Trigram Kernel (Tri)
Since bag-of-words representations ignore which words appear close to each other in the
sentence, they lose important information: an image of ‘a small child with red hair playing
with a large brown dog on white carpet’ looks quite diﬀerent from one of ‘a small white dog
playing with a large red ball on brown grass’, although both descriptions share the majority
of their words. To capture this information, we deﬁne a trigram kernel as a truncated variant
of string kernels that considers not just how many single
words two captions share, but also how many short sequences (pairs and triples) of words
occur in both.
A word sequence w = w1...wk is an ordered list of words. A sentence s = s1...sn contains
w (w ∈s) as long as the words in w appear in s in the order speciﬁed by w. That is, the
sentence ‘A large white dog runs and catches a red ball on the beach’ (when lemmatized)
contains both the subject-verb-object triple ‘dog catch ball’ and the subject-verb-location
triple ‘dog run beach’. Formally, every substring (i, j) = si...sj in s that starts with si = w1,
ends in sj = wk, and contains w is considered a match between s and w. Ms,w is the set of
all substrings in s that match the sequence w:
Ms,w = {(i, j) | w = w1...wk ∈si...sj, w1 = si, wk = sj}
When w is restricted to individual words (k = 1), string kernels are identical to the standard
BoW kernel.
A match between strings s and s′ is a pair of substrings (i, j) ∈s and (i′, j′) ∈s′ that
both match the same word sequence w. Standard string kernels K(s, s′) weight matches
by a factor λ(j−i+1)+(j′−i′+1) that depends on an adjustable parameter λ and the respective
length of the matching substrings:
K(s, s′) =
(i,j)∈Ms,w
(i′,j′)∈Ms′,w
λ(j−i+1)+(j′−i′+1)
In order to distinguish between the length of the matching subsequence, l(w), and the
length of the gaps in (i, j) and (i′, j′), we replace λ by two parameters λm, λg, and reformulate
K(s, s′) =
(i,j)∈Ms,w
(i′,j′)∈Ms′,w
λ(j−i+1)+(j′−i′+1)−2l(w)
We found that a gap score of λg = 1, which means that gaps are not penalized, and a
match score of λm = 0.5 perform best on our task.
Framing Image Description as a Ranking Task
Although string kernels are generally deﬁned over sequences of arbitrary length (k ≤∞),
we found that allowing longer sequences did not seem to impact performance on our task but
incurred a signiﬁcant computational cost. Intuitively, word pairs and triplets represent most
of the linguistic information we need to capture beyond the BoW representation, since they
include head-modiﬁer dependencies such as large-dog vs. small-dog and subject-verb-object
dependencies such as child-play-dog vs. dog-play-ball. We therefore consider only sequences
up to length k ≤3. With w restricted to sequences of length k ≤3 and ms,w = |Ms,w|, this
yields the following ‘trigram’ kernel (Tri):
KTri(s, s′) =
ms,wms′,wλ2l(w)
To deal with diﬀerences in sentence length, we normalize the kernel response between
two examples by the geometric mean of the two example responses with themselves.
Since the trigram kernel also captures sequences that are merely coincidental, such as
‘large white red’, it may seem advantageous to use richer syntactic representations such
as dependency tree kernels , which only consider word
tuples that correspond to syntactic dependencies. However, such kernels are signiﬁcantly
more expensive to compute, and initial experiments indicated that they may not perform as
well as the trigram kernel. We believe that this is due to the fact that our image captions
contain little syntactic variation, and that hence surface word order may be suﬃcient to
diﬀerentiate e.g. between the agent of an action (whose mention will be the subject of the
sentence) and other participants or entities (whose mentions will appear after the verb).
On the other hand, many of our image captions contain a lot of syntactic ambiguity (e.g.
multiple prepositional phrases), and a vocabulary that is very distinct from what standard
parsers are trained on. It may be that we were not able to beneﬁt from using a richer
representation simply because we were not able to recover it with suﬃcient accuracy.
In order to capture the relative importance of words, we can also reweight sequences
by the IDF (or
idf) weight of their words. With λw deﬁned as before, the IDF-weight of
a sequence w = wi...wj is λw
k=i λwk. The
idf-weighted trigram kernel KTri
idf) is therefore
idf(s, s′) =
λwms,wms′,wλ2l(w)
3.5 Extending the Trigram Kernel with Lexical Similarities
One obvious shortcoming of the basic text kernels is that they require exact matches between
words, and cannot account for the fact that the same situation, event, or entity can be
described in a variety of ways (see Figure 2 for examples).
One way of capturing this
linguistic diversity is through lexical similarities which allow us to deﬁne partial matches
between words based on their semantic relatedness. Lexical similarity have found success in
other tasks, e.g. semantic role labeling , but have not been
fully exploited for image description. Ordonez et al. deﬁne explicit equivalence classes
of synonyms and hyponyms to increase the natural language vocabulary corresponding to
each of their object detectors (e.g. the word “Dalmatian” may trigger the dog detector),
Hodosh, Young & Hockenmaier
but do not change the underlying, pre-trained detectors themselves, ignoring the potential
variation of appearance between, e.g., diﬀerent breeds of dog. Similarly, Yang et al.’s 
generative model can produce a variety of words for each type of detected object or scene,
but given an object or scene label, the word choice itself is independent of the visual features.
We therefore also investigate the eﬀect of incorporating diﬀerent kinds of lexical similarities
into the trigram kernel that allow us to capture partial matches between words. We did
not explore the eﬀect of incorporating lexical similarities into the tag-rank kernel, since it is
unclear how they should aﬀect the computation of ranks within a sentence.
3.5.1 String Kernels with Lexical Similarities
Since standard lexical similarities simS(w, wi) do not necessarily yield valid kernel functions,
we follow Bloehdorn, Basili, Cammisa, and Moschitti and use these similarities to
map each word w to vectors ⃗wS in an N-dimensional space, deﬁned by a ﬁxed vocabulary of
size N. Each vector component ⃗wS(i) corresponds to the similarity of w and wi as deﬁned
⃗wS(i) = simS(w, wi)
We then deﬁne the corresponding word kernel function κS(w, w′), which captures the partial
match of words w and w′ according to S, as the cosine of the angle between ⃗wS and ⃗w′
κS(w, w′) = cos(⃗wS, ⃗w′
S may only be deﬁned over a subset of the vocabulary. The similarity of words outside
of its vocabulary is deﬁned by the identify function, as in the standard string kernel.
The similarity of sequences w and w′ of length l is deﬁned as the product of the word
kernels over the corresponding pairs of sequence elements wi, w′
σS(w, w′) =
If σS(w) = {w′|σS(w′, w) > 0, l(w′) = l(w)} is the set of sequences that have a non-zero
match with w, the string kernel KS with similarity S is:
KS(s, s′) =
ms,wms′,w′λ2l(w)
To obtain the IDF-weighted version of this kernel, K
(s, s′), the inner term is multiplied by √λwλw′:
KS(s, s′) =
λwλw′ms,wms′,wλ2l(w)
In our experiments, we use the trigram variants of these kernels, and restrict w again to
sequences of length k ≤3.
We consider three diﬀerent kinds of lexical similarities: the WordNet-based Lin similarity
 (σLin), a distributional similarity metric (σD), and a novel alignment-based
Framing Image Description as a Ranking Task
similarity metric (σA), which takes advantage of the fact that each image is associated with
ﬁve independently generated captions. All metrics are computed on our training corpus.
Distributional similarity is also computed on the British National Corpus . Both corpora are lemmatized, and stop words are removed before similarities are
computed. Since almost any pair of words will have a non-zero similarity, the word kernel
matrices are very dense, but since most of these similarities are very close to zero, they have
very little eﬀect on the resulting kernel. We therefore zero out entries smaller than 0.05 in
the alignment-based kernel κA and less than 0.01 in any distributional kernel κDC.
3.5.2 The Lin Similarity Kernel (σLin)
Lin’s similarity relies on the hypernym/hyponym relations in WordNet as well as corpus statistics. WordNet is a directed graph in which the nodes (“synsets”)
represent word senses and the edges indicate is-a relations: a parent sense (e.g., dog1) is a
hypernym of its children (e.g., poodle1 or dachshund1). Kernels based on Lin’s similarity
have been found to perform well on tasks such as text categorization .
But with the exception of Farhadi et al. , who incorporate Lin’s similarity into their
model, but do not evaluate what beneﬁt they obtain from it, WordNet’s hypernym-hyponym
relations have only been used superﬁcially for associating images and text . The Lin similarity of two word senses si, sj
is deﬁned as
simLin(si, sj) = 2 log P(LCS(si, sj))
log P(si) + log P(sj)
LCS(s1, s2) refers to the lowest common subsumer of s1 and s2 in WordNet, i.e. the most
speciﬁc synset that is an ancestor (hypernym) of both s1 and s2. P(s) is the probability that
a randomly drawn word is an instance of synset s or any of its descendants (hyponyms). We
use our training data to estimate P(s), and follow Bloehdorn et al. in assigning each
word w its most frequent (ﬁrst) noun sense sw in WordNet 3.0. Hence, we represent each
word w with WordNet sense s as a vector ⃗wLin of Lin similarities over its hypernyms H(sw):
2×log(f(si))
log(f(s))+log(f(si))
3.5.3 Distributional Similarity (σDC)
Distributional similarity metrics are based on the observation that words that are similar to
each other tend to appear in similar contexts . The components of
⃗wDC are the non-negative pointwise mutual information scores (PMI) of w and wi, computed
on the corpus C:
⃗wDC(i) = max
PC(w)PC(wi)
PC(w) is the probability that a random sentence in C contains w, and PC(w, wi) is the
probability that a random sentence in C contains both w and wi. We compute two variants
Hodosh, Young & Hockenmaier
of the same metric: σDic is computed on the image captions in our training corpus, and is
deﬁned over the cooccurrences of the 1,928 words that appear at least 5 times in this corpus,
while σDBNC uses the British National Corpus , and is deﬁned for
the 1,874 words that appear at least 5 times in both corpora, but considers their PMI scores
against the 141,656 words that appear at least 5 times in the BNC.
3.5.4 Alignment-Based Similarity (σA)
We also propose a novel, alignment-based, similarity metric (σA), which takes advantage
of the fact that each image is associated with ﬁve independently generated captions, and
is speciﬁcally designed to capture how likely two words are to describe the same event
or entity in our data set. We borrow the concept of alignment from machine translation
 , but instead of aligning the words of sentences in two
diﬀerent languages, we align pairs of captions that describe the same image. This results in a
similarity metric that has better coverage on our data set than WordNet based metrics, and
is much more speciﬁc than distributional similarities which capture broad topical relatedness
rather than semantic equivalence. Instead of aligning complete captions, we have found it
beneﬁcial to align nouns and verbs independently of each other, and to ignore all other parts
of speech. We create two versions of the training corpus, one consisting of only the nouns
of each caption, and another one consisting only of the verbs of each caption. We then
use Giza++ to train IBM alignment models 1–2 
over all pairs of noun or verb captions of the same image to obtain two sets of translation
probabilities, one over nouns (Pn(·|w)) and one over verbs (Pv(·|w)). Finally, we combine
the noun and verb translation probabilities as a sum weighted by the relative frequency with
which the word w was tagged as a noun (Pn(w)) or verb (Pv(w)) in the training corpus.
The ith entry in wA is therefore:
⃗wA(i) = Pn(wi|w)Pn(w) + Pv(wi|w)Pv(w)
We deﬁne the noun and verb vocabulary as follows: words that appear at least 5 times
as a noun, and are tagged as a noun in at least 50% of their occurrences, are considered
nouns. But since verbs are more polysemous than nouns (leading to broader translation
probabilities) and are often mistagged as nouns in our domain, we only include those words
as verbs that are tagged as verbs at least 25 times, and in at least 25% of their occurrences.
This results in 1180 noun and 143 verb lemmas, including 11 that can be nouns or verbs.
We use the OpenNLP POS tagger before lemmatization.
3.5.5 Comparing the Similarity Metrics (Figure 3)
Figure 3 illustrates the diﬀerent similarity metrics, using the words rider and swim as
While distributional similarities are high for words that are topically related
(e.g., swim and pool), the alignment similarity tends to be high for words that can be used
to describe the same entity (usually synonyms or hyper/hyponyms) or activity such as swim
or paddle. Distributional similarities that are obtained from the image captions are very
speciﬁc to our domain. The BNC similarities are much broader and help overcome data
sparsity, although the BNC has relatively low coverage of the kinds of sports that occur in
our data set. The Lin similarity associates swim with hypernyms such as sport and activity,
Framing Image Description as a Ranking Task
Comparing similarity metrics: The ﬁve words most similar to rider and swim
Distributional
motorcycle
Figure 3: A comparison of lexical similarities for the noun rider and the verb swim
or other kinds of sport such as football or soccer. This makes it the least suitable similarity
for our task (see also Section 4.3.4 for experimental results), since these terms should not be
considered similar for our purposes of identifying the diﬀerent ways in which visually similar
events or entities can be described.
3.5.6 Combining Different Similarities
Combining the diﬀerent distributional and the alignment-based similarities allows us to
capture the diﬀerent strengths of each method. We deﬁne an averaged similarity which
captures aspects of the distributional similarities computed over both corpora:
κDBNC,ic(w, w′) = κDBNC(w, w′) + κDic(w, w′)
For every distributional kernel κD(w, w′), we also deﬁne a variant κD+A(w, w′) which
incorporates alignment-based similarities by taking the maximum of either kernel:4
κD+A(w, w′) = max(κA(w, w′), κA(w, w′))
4. Evaluation Procedures and Metrics for Image Description
In order to evaluate scoring functions f(i, s) for image-caption pairs, we need to evaluate
their ability to associate previously unseen images and captions with each other. In analogy
to caption generation systems, we ﬁrst examine metrics that aim to measure the quality of
a single image-description pair (Section 4.2). Here, we focus on the image annotation task,
and restrict our attention to the ﬁrst caption returned for each test item, and a subset of
our systems. We collect graded human judgments from small number of native speakers of
American English, and investigate whether these “expert” judgments can be approximated
4. This operation may not preserve the positive deﬁniteness of the matrix required to be a valid kernel, but
this simply means we eﬀectively use (plain) CCA with this representation.
Hodosh, Young & Hockenmaier
with automatically computed Bleu or Rouge 
scores, or with simpler crowdsourced human judgments that can be collected on a much
larger scale. In Section 4.3, we consider approaches to evaluation that aim to measure the
quality of the ranked list of image-caption pairs returned by each system, and allow us to
evaluate a large number of systems. For reasons of space, we focus most of our discussion
again on only a subset of our systems, and refer the interested reader to Appendix B for
complete results. Since the candidate pool contains one sentence or image that was originally
associated with the query image or sentence, we ﬁrst compare systems by the rank and recall
of this original item. These metrics can be computed automatically, but should only be
considered lower bounds on actual performance, since each image may be associated with a
number of captions that describe it well or perhaps with only minor errors. We then show
that the crowdsourced human judgments can be mapped to binary relevance judgments that
correlate well with the more ﬁne-grained expert judgments, and consider metrics based on
these relevance judgments.
4.1 Experimental Setup
We now describe the data, the tasks, and the systems we evaluate in our experiments.
4.1.1 The Data
Since the PASCAL 2008 data set contains only a total of 1,000 images, we perform our
experiments exclusively on the Flickr 8K set. We split 8,000 images from this corpus (see
Section 2.3) into three disjoint sets. The training data Dtrain = ⟨Itrain, Strain⟩consists of
6,000 images, each associated with ﬁve captions, whereas the test and development data,
Dtest and Ddev, each consist of 1,000 images associated with one, arbitrarily chosen, caption.
All captions are preprocessed by spellchecking with Linux spell, normalizing compound words
(e.g., t-shirt, t shirt, and tee-shirt →t-shirt), stop word removal, and lemmatization.
4.1.2 The Tasks
We evaluate our systems on two tasks, sentence-based image annotation (or description)
and sentence-based image search. For image search, the task is to return a ranked list of the
1,000 images in Itest for each of the captions (queries) in Stest. Image annotation is deﬁned
analogously as a retrieval problem: the task is to return a ranked list of the 1,000 captions
in Stest for each of the 1,000 test (query) images in Itest. In both cases, the ranked lists are
produced independently for each of the 1,000 possible queries.
4.1.3 The Systems
We have a total of 30 diﬀerent systems, each of which uses either a nearest-neighbor approach
or KCCA, paired with a diﬀerent combination of image and text representations. But for
the purposes of discussing diﬀerent evaluation metrics, we will focus on only a small number
of these systems: the best-performing nearest-neighbor-based system, NN (NN5idf
F1), and a
small number of KCCA-based systems with with diﬀerent text kernels: BoW1 and BoW5
both use the simple bag-of-words kernel.
TagRank uses Hwang and Grauman’s 
kernel, Tri5 uses the trigram kernel, and Tri5Sem (Tri5
A,DBNC+ic in Appendix B) uses the
Framing Image Description as a Ranking Task
idf-reweighted trigram kernel with all distributional and the alignment-based similarities.
With the exception of BoW1, where we have arbitrarily selected a single caption for each
training image, all other models use all ﬁve captions for the training images. For BoW5,
we merge them into a single document. In all other cases, we follow Moschitti and
sum the kernel responses over the cross product of sentences before normalization. All of
these systems (including NN) use the pyramid kernel as their image representation. For the
large-scale evaluations in Section 4.3, the scores of all models are given in Appendix B.
All our systems use Hardoon et al.’s KCCA implementation, which allows us to
vary the regularization parameter κ. We also vary n, the number of dimensions (largest
eigenvalues) in the learned projection The allowable values for these parameters were based
on early exploratory experiments. In the experiments reported in this paper, κ is sampled
from 4 possible values (0.1, 0.5, 1, 5), and n is chosen from 46 possible values in the range
of (10, 6000). There are two additional parameters that are ﬁxed in advance for each text
image kernel pair: the image kernels are either squared or cubed, and the text kernels are
regularized by multiplying the values on the diagonal by a factor d in the range of (1, 15).
For each kernel and for each of the two tasks (image annotation and search), we then use
the development set to pick ﬁve settings of n and κ that maximize the recall of the original
item as the ﬁrst result, ﬁve settings that maximize its recall among the ﬁrst ﬁve results,
and ﬁve settings that maximize its recall among the ﬁrst ten results, yielding a total of 15
diﬀerent models for each pair of kernels and each task. For each query image (annotation)
or caption (search) in the test set, each of these 15 models returns a ranking of all 1,000 test
items (sentences or images). To combine these 15 rankings, we use Borda counts , a simple, deterministic method for rank aggregation: with N items to be
ranked, each system assigns a score of N −r to the item it ranks in position r = 0...N −1,
and the ﬁnal rank of each item is determined by the sum of its scores across all systems.
We break ties between items by the median of their ranks across all models.
4.2 Metrics for the Quality of Individual Image-Caption Pairs
Before we consider metrics that consider the quality of the ranked list of results (Section 4.3),
we ﬁrst examine metrics that measure the quality of individual image-caption pairs.
4.2.1 Human Evaluation with Graded ‘Expert’ Judgments
‘Expert’ scores
The decision of how well a caption describes an image ultimately requires
human judgment. For the caption generation task, a number of diﬀerent evaluation schemes
have been proposed for image description: Ordonez et al. presented judges with a
caption produced by their model and asked them to make a forced choice between a random
image and the image the caption was produced for, and Kuznetsova et al. asked judges
to choose between captions from two of their models for a given test image. Such forced
choice tasks may give a clear ranking of models, but cannot be compared across diﬀerent
experiments unless the output of each system is made publicly available. One advantage
of framing image description as a ranking task is that diﬀerent systems can be compared
directly on the same test pool. Forced choice evaluations also do not directly measure the
quality of the captions. Following common practice in natural language generation, Yang
et al. and Kulkarni et al. evaluated captions on a graded scale for relevance
Hodosh, Young & Hockenmaier
The selected caption ...
escribes the ima
thout any error
(score = 4)
... describes th
with minor e
... is somewhat
related to the image
(score = 2)
... is unrelated
to the image
(score = 1)
A girl wearing a
yellow shirt and
sunglasses smiles.
A man climbs
up a sheer wall
A Miami basketball
player dribbles by an
Arizona State player.
A group of people
walking a city street in
warm weather.
A boy jumps into
the blue pool
A dog in a grassy field,
looking up.
Basketball players in
A man riding a motor
bike kicks up dirt.
Dogs pulling
a sled in a
sled race.
Two little girls
practice martial
A snowboarder in the
air over a snowy
A child jumping
on a tennis court.
A boy in a blue life
jacket jumps into the
A black dog with
a purple collar
Figure 4: Our 1–4 rating scale for the ﬁne-grained expert judgments, with actual examples
returned by our best model (Tri5Sem)
and readability, while Li et al. added a “creativity” score, and Mitchell et al. 
compared systems based on whether the captions describe the “main aspects” of the images,
introduce objects in an appropriate order, are semantically correct, and seemed to have been
written by a human.
Since the captions in our test pool are all produced by people, we do not need to evaluate
their linguistic quality, and can focus on their semantic correctness. In order to obtain a
ﬁne-grained assessment of description quality, we asked three diﬀerent judges to score imagecaption pairs returned by our systems on a graded scale from 1 to 4. The judges were 21
adult native speakers of American English, mostly recruited from among the local graduate
student population. In contrast to the anonymous crowdsourcing-based evaluation described
in Section 4.3.2, we will refer to them as ‘experts’. The rating scale is illustrated in Figure 4
with actual examples returned by our models. A score of 4 means that the caption describes
the image perfectly (without any mistakes), a score of 3 that the caption almost describes
the image (minor mistakes are allowed, e.g. in the number of entities), whereas a score of
2 indicates that the caption only describes some aspects of the image, but could not be
used as its description, and a score of 1 indicates that the caption bears no relation to the
image. The online appendix to this paper contains our annotation guidelines. Annotators
took on average ten minutes per 50 image-caption pairs, and all image-caption pairs were
judged independently by three diﬀerent annotators. Inter-annotator agreement, measured
as Krippendorﬀ’s α, is high (α = 0.81) . The ﬁnal score of
each image-caption pair was obtained by averaging the three individual scores. Since this
is the most time-consuming evaluation, we only judged the highest-ranked caption for each
test image on the annotation task, and only focused on the subset of our models described
To gauge the diﬃculty of this task on our data set, we also include a random
baseline. Since we only evaluate a single caption for each image, we are interested in the
percentage of images for which a suitable caption was returned. We therefore show each
model’s cumulative distribution of test items with scores at or above thresholds ranging
Framing Image Description as a Ranking Task
Quality of ﬁrst caption (image annotation)
Cumulative distribution of expert scores (% ≥X)
8.5∗∗∗11.4∗∗∗
18.3∗∗∗22.9∗∗
19.8∗∗∗24.7∗∗∗
TagRank 9.6
Tri5Sem 11.0
Table 1: Cumulative distribution of expert judgments on our 1–4 scale (Figure 4), indicating
what percentage of image-caption pairs are judged to be at or above a given score. Scores
are averaged over three judges. Superscripts indicate statistically signiﬁcant diﬀerence to
Tri5Sem (∗: p ≤0.1, ∗∗: p ≤0.05, ∗∗∗: p ≤0.01).
from 4.0 to 2.0. Each threshold can be interpreted as a more or less strict mapping of the
ﬁne-grained scores into binary relevance judgments. In order to assess whether the diﬀerence
between models at any given threshold reaches statistical signiﬁcance, we use McNemar’s
signiﬁcance test, a paired, non-parametric test that has been advocated for the evaluation
of binary classiﬁers . Given the output of models A and B on the same
set of items, McNemar’s test considers only the items on which A and B’s output diﬀer (the
‘discordant pairs’ of output) to test the null hypothesis that both outputs are drawn from
the same underlying population. Among these discordant pairs, it compares the proportion
of items for which model A is successful but model B is not with the proportion of items for
which Model B is successful but model A is not. In our results tables, ∗superscripts indicate
whether the diﬀerence between a model and Tri5Sem is statistically signiﬁcant (∗: p ≤0.1,
∗∗: p ≤0.05, ∗∗∗: p ≤0.01) .
‘Expert’ results (Table 1)
We ﬁrst interpret the ‘expert’ scores as binary relevance
judgments, and therefore show their cumulative distribution for diﬀerent thresholds in. We
see very clear diﬀerences between the random baseline, NN, and the KCCA models at all
thresholds. The diﬀerences between NN and the random model, as well as between any
KCCA model and NN are highly signiﬁcant (p<0.001) at any threshold. While the random
baseline returns a perfect caption for 0.5% of the images, and a good caption (assuming
a threshold of ≥2.66) for 1.5% of the images, our best KCCA model, Tri5Sem, returns
a perfect caption for 11.0% and a good caption for 28.1% of the images.
However, the
diﬀerences among the KCCA models are more subtle, and may only become apparent at
lower thresholds. There is no signiﬁcant diﬀerence between BoW5 and TagRank at any
threshold, but they are both signiﬁcantly better than BoW1 (p < 0.001) at thresholds of
3.33 and above. Tri5Sem outperforms all other models, but the diﬀerences to BoW5 and
TagRank only reach statistical signiﬁcance when the threshold of what is considered a
suitable caption is lowered to either 3.33 (p = 0.06) or 3.0 (p = 0.01), or to 2.66 (p = 0.08)
or to 2.33 (p = 0.005). This lack of statistical signiﬁcance can be partially explained by
the fact that McNemar’s test has relatively low power when the percentage of items on
which the two models are successful is very low, as is the case for the higher thresholds here.
Hodosh, Young & Hockenmaier
We will show in Sections 4.3.1 and 4.3.2 below that there is a very signiﬁcant diﬀerence
between Tri5Sem and these two models on image annotation once we extend the analysis
beyond the highest-ranked caption. This shows that evaluations that are only based on a
single caption returned per image may fail to uncover signiﬁcant diﬀerences between models
that become apparent once multiple results are considered. It may also be important to
consider performance on both annotation and retrieval. On the image retrieval task, we
will see that Tri5Sem signiﬁcantly outperforms all other models even when only the ﬁrst
result is considered. Table 1 also reveals another artefact of McNemar’s test: since it is
not based on absolute diﬀerences in performance but on the number of discordant pairs,
the diﬀerence between BoW1 and Tri5Sem at thresholds 2.66 and 2.0 is considered less
signiﬁcant than that between BoW5 and Tri5Sem at the same thresholds, even though
BoW1’s scores are lower than BoW5’s. In Table 2, we present the systems’ average expert
scores, and use Fisher’s Randomization Test to determine statistical signiﬁcance. According
to this evaluation, Tri5Sem is very signiﬁcantly better than all other models (p ≤0.0001 in
all cases), but since the average score of Tri5Sem is only 2.08, this diﬀerence is not reﬂected
at the higher thresholds in the cumulative distribution shown in Table 1.
4.2.2 Automatic Evaluation with Bleu and Rouge
Since human judgments are expensive and time-consuming to collect, we now examine how
well they can be approximated by Bleu and Rouge ,
two standard metrics for machine translation and summarization.
Bleu and Rouge scores
Bleu and Rouge scores can be computed automatically
from a number of reference captions, and have been used to evaluate a number of caption
generation systems , although it is unclear how well they
correlate with human judgments on this task.
Given a caption s and an image i that is associated with a set of reference captions Ri,
the Bleu score of a proposed image-caption pair (i, s) is based on the n-gram precision of
s against Ri, while Rouge is based on the corresponding n-gram recall. As is common for
image description, we only consider unigram-based scores (only 3.5% of all possible imagecaption pairs in the test have a non-zero bigram-based Bleu-2 score, but 39.4% set have
a non-zero Bleu-1 score). We also ignore Bleu’s brevity penalty, since our data set has
relatively little variation in sentence length, and we would like to avoid penalizing short, but
generic captions that include few details but are otherwise correct. Hence, if cs(w) is the
number of times word w occurs in s:
Bleu(i, s)
w∈s min(cs(w),maxr∈Ricr(w))
Rouge(i, s)
w∈r min(cs(w),cr(w))
Both reference and candidate captions are preprocessed. We ﬁrst tokenize the sentences with
the OpenNLP5 tools. Then we break up hyphenated words, stripping out non-alphanumeric
5. 
Framing Image Description as a Ranking Task
Avg. score of ﬁrst caption
(image annotation)
Table 2: Comparison of averaged scores according to the 4-point ‘expert’ evaluation (Figure 4), Bleu and Rouge, using all ﬁve test captions as reference. Superscripts indicate
statistically signiﬁcant diﬀerence to Tri5Sem ( ∗: p ≤0.1, ∗∗: p ≤0.05, ∗∗: p ≤0.01).
and hyphen characters, and converting all words to lower case. Following the work of Lin
 , we use a stemmer and remove stopwords before compute Rouge
We compute the Bleu and Rouge score of a system as the average Bleu or
Rouge scores of all items in the test set.6
We use Fisher’s Randomization Test 
to assess the statistical signiﬁcance of the diﬀerence between models.
This is a paired,
sampling-based test that evaluates the null hypothesis that the results of models A and
B are produced by the same underlying distribution. In each sample, the scores that A
and B assign to each test item are randomly reassigned to the two models, and p-values
are obtained by comparing the actual diﬀerence between A and B’s performance to the
fraction of samples with equal or greater diﬀerence between the models. We sample 100,000
reassignments of the entire test set.
Bleu and Rouge results (Table 2)
Table 2 shows the average Bleu and Rouge scores
of the highest ranked caption pairs returned by each image annotation systems, computed
against a reference pool consisting of the ﬁve original captions for each test image (including
the caption that was randomly selected to be part of the candidate pool). These scores
lead to the same broad conclusions as the average expert scores: all metrics ﬁnd very clear
diﬀerences (p < 0.0001) between the random baseline and any of the other models, as
well as between NN and any of the KCCA models, and none ﬁnd any signiﬁcant diﬀerence
between BoW5 and TagRank. Tri5Sem outperforms the other KCCA models according
to all metrics, but both the expert evaluation and Rouge ﬁnd a much larger diﬀerence to
BoW5 (Experts: p ≤0.0001, Rouge: p < 0.001) than to TagRank (Experts: p = 0.001,
Rouge: p = 0.005). Bleu only ﬁnds a signiﬁcant diﬀerence to TagRank (p < 0.05), but
not to BoW5 (p < 0.05), which indicates Bleu may be less well suited to identify more
subtle diﬀerences between systems.
Agreement of Bleu and Rouge with ‘expert’ scores
Since it is diﬃcult to measure
directly how well the Bleu and Rouge scores agree with the expert judgments, we consider
6. A system’s Bleu score is usually computed at the corpus level, but since we are only dealing with
unigram scores and evaluate all systems on sentences from the same corpus, the averaged sentence-level
Bleu scores of our systems we report are almost identical (r > 0.997) to their corpus-level Bleu scores.
Hodosh, Young & Hockenmaier
a number of diﬀerent relevance thresholds for each type of score (θB, θR, and θE), and turn
them into binary relevance judgments. This allows us to use Cohen’s κ to measure
the agreement between the corresponding binarized scores. Since Bleu and Rouge both
require a set of reference captions for each test image, we compare four diﬀerent ways of
deﬁning the set of reference captions (for detailed scores, see Tables 8 and 9 in the appendix).
Since our data set contains multiple descriptions for each image, we ﬁrst use all ﬁve
captions as reference. In this setting, Bleu reaches the best agreement (κ = 0.72) against
θE = 4.0 with θB = 1.0 or against θE ≥3.6 with θB ≥0.8. However, such high Bleu
scores are generally only obtained when the system proposes the original caption. Rouge
has much lower agreement (κ = 0.54) against the expert scores, obtained at θR ≥0.4 vs.
θE ≥4.0 or θE ≥3.6, or θR ≥0.3 against θE ≥3.0. Since other data sets may have
only one caption per image, we also evaluate against a reference corpus that consists only
of the single caption in the test pool. In this case, both metrics reach again the highest
agreement against an expert threshold of θE = 4.0 (Bleu: κ = 0.71, Rouge: κ = 0.69),
with thresholds of θB ≥0.8, and θR ≥0.9. We conclude that neither Bleu nor Rouge are
useful in this scenario, since they require such high thresholds that they only capture how
often the system returned the reference caption.
When Bleu and Rouge are used to evaluate caption generation systems, we cannot
assume that the generated caption is identical to one of the reference captions. We therefore
examine to what extent Bleu and Rouge scores agree with human judgments when the
candidate pool contains human generated captions, but is disjoint from the reference captions. We ﬁrst use a reference corpus of four captions per image, excluding the caption we
use in the candidate pool. In this case, all three metrics show signiﬁcantly lower agreement
with human judgments than when the candidate pool contains the reference caption. Bleu
reaches only κ = 0.52 (with θB ≥0.7 against θE ≥3.3) and Rouge reaches only κ = 0.51
(with θR ≥0.2 against θE ≥2.6). To simulate the case where only a single caption per
image is available, we also evaluate against a reference corpus consisting of only one of these
four captions. In this case, agreement with human judgments is even lower: Bleu reaches
κ = 0.36, and Rouge reaches κ = 0.42. These results suggest that Bleu and Rouge are
not appropriate metrics when the pool of candidate captions does not contain the reference
captions, and lead us to question their usefulness for the evaluation of caption generation
systems. This is consistent with the ﬁndings of Reiter and Belz , who have studied
Bleu and Rouge scores to evaluate natural language generation systems, and concluded
that they may be useful as metrics of ﬂuency, but are poor measures of content quality.
4.3 Metrics for the Large-Scale Evaluation of Image Description Systems
Metrics that only consider the ﬁrst caption returned for each image cannot capture the fact
that a better model should score good captions higher than most other captions, even if fails
to consider them the best possible caption. Since our systems return a ranked list of results
for each item, we now examine metrics that allow us to evaluate the quality of this list.
In contrast to the human evaluations described in Section 4.2 above, we now also evaluate
our image retrieval systems. We ﬁrst consider metrics that can be computed automatically:
recall and median rank of the item (image or sentence) that was originally associated with
the query sentence or image (Section 4.3.1). We then show how to use crowdsourcing to
Framing Image Description as a Ranking Task
Performance: Rank of the original item
R@k: percentage of queries with the original item among top X responses.
Median r: median rank of the original item
Image annotation
Image retrieval
13.5∗∗∗19.7∗∗∗
14.3∗∗∗20.8∗∗∗
17.1∗∗∗24.3∗∗∗
16.7∗∗∗23.6∗∗∗
17.0∗∗∗23.8∗∗∗
17.4∗∗∗24.3∗∗∗
17.2∗∗∗23.7∗∗∗
17.8∗∗∗26.2∗∗∗
Table 3: Model performance as measured by the rank of the original image or caption (=
‘correct response’). R@k: percentage of queries for which the correct response was among
the ﬁrst X results. Median r: Median position of the correct response in the ranked list of
results. Superscripts indicate statistically signiﬁcant diﬀerence to Tri5Sem (∗∗: p ≤0.05,
∗∗∗: p ≤0.01).
collect a very large number of human judgments (Section 4.3.2), and use these relevance
judgments to deﬁne two additional metrics: the ‘rate of success’, which is akin to recall,
and R-precision, an established information retrieval metric (Section 4.3.3). Although these
metrics allow us to evaluate all of our systems, we will focus our discussion on the small set
of systems considered so far, and refer the interested reader to Section B of the appendix
for the scores of all systems.
4.3.1 Recall and Median Rank of the Original Item
One advantage of our ranking framework is that the position of the original caption or image
among the complete list of 1,000 test items can be determined automatically. Since a better
system should, on average, assign a higher rank to the original items than a worse system,
we can use their ranks to deﬁne a number of diﬀerent evaluation metrics.
Recall (R@k) and median rank scores
Since each query is only associated with a
single gold result, we need not be concerned with precision. However, recall at position k
(R@k), i.e. the percentage of test queries for which a model returns the original item among
the top k results, is a useful indicator of performance, especially in the context of search,
where a user may be satisﬁed if the ﬁrst k results contain a single relevant item. We focus on
k = 1, 5, 10 (R@1, R@5, R@10). Since this is a binary metric (for each query, the gold item
is either found among the top k results or not), we use again McNemar’s test to identify
statistically signiﬁcant diﬀerences between models. Conversely, the median rank indicates
the k at which a system has a recall of 50% (i.e. the number of results one would have
to consider in order to ﬁnd the original item for half the queries). Here, we use Fisher’s
randomization to identify signiﬁcant diﬀerences between models.
Recall (R@k) and median rank results (Table 3)
The results in Table 3 conﬁrm our
earlier observation that the NN baseline is clearly beaten by all KCCA models (p < 0.001
for all metrics and models, except for R@1 search, where the diﬀerence to BoW1 has a
Hodosh, Young & Hockenmaier
p-value of p<0.01). Since the R@1 annotation scores are based on the same image-caption
pairs as the expert scores in Table 1, we can compare them directly. The diﬀerence between
the R@1 and expert scores, even at the strictest threshold of 4.0 for the experts, indicates
that measures which capture how often the original caption was returned should be viewed
as a lower bound on actual performance: while Tri5Sem returns the original caption ﬁrst
for 8.3% of the images, our human judges found that these captions describe 11.0% of the
images without any errors. This discrepancy is even larger for BoW5 (6.2% vs. 9.7%) and
TagRank (6.0% vs. 9.6%). As a consequence, the automatically computed R@1 scores
indicate erroneously that there is a statistically signiﬁcant diﬀerence between the quality
of the ﬁrst captions returned by Tri5Sem and those returned by BoW5 or TagRank, even
though these diﬀerences are not signiﬁcant according to the human evaluation. However,
metrics that are only based on the ﬁrst caption may fail to identify diﬀerences between
models that become very apparent under all other metrics.
For example, R@1 reveals
no signiﬁcant diﬀerence between Tri5 and Tri5Sem on the annotation task, although their
diﬀerence is highly signiﬁcant according to all other metrics. In Section 4.3.3, we present the
results of a large-scale human evaluation which conﬁrm that the actual diﬀerences between
Tri5Sem and Tri5 on annotation can only be identiﬁed when more than the ﬁrst caption is
taken into account.
Table 11 in Section B provides recall and median rank scores for all models.
4.3.2 Collecting Binary Relevance Judgments on a Large Scale
In order to perform a human evaluation of a system that goes beyond measuring the quality
of the highest ranked result, we would have to obtain relevance judgments for all imagecaption pairs among the top k results for each query.
Since we have two tasks, and a
total of 30 diﬀerent systems, this set consists of 113,006 distinct image-caption pairs for
k = 10, rendering an exhaustive evaluation on the four-point scale described in Section 4.2.1
infeasible. We therefore needed to reduce the total number of judgments needed, and to
deﬁne a simpler annotation task that could be completed in less time.
Crowdsourcing
platforms such as Amazon Mechanical Turk oﬀer new possibilities for evaluation because
they enable us to collect a large number of human judgments rapidly and inexpensively,
and a number of researchers have evaluated caption generation systems on Mechanical Turk
 . But these experiments have not been performed at the scale of our analysis, and
have also not evaluated how well crowdsourced judgments for this task approximate what
can be obtained from a smaller pool of judges that can be given more detailed instructions.
We examine here whether crowdsourcing allows us to collect reliable relevance judgments
for a large scale evaluation of all of our image description systems.
The crowdsourcing task
We presented workers with images that were paired with ten
diﬀerent captions, and asked them to indicate (via checkboxes) which of the captions describe
the image. We adapted the guidelines developed for the ﬁne-grained annotation such that
a caption that describes the image with minor errors (corresponding to a score of 3 on our
4-point scale) would still be permitted to receive a positive score. These guidelines can also
be found in the online appendix to this paper. Each individual task consisted of six diﬀerent
images, each paired with ten captions, and included a copy of the guidelines. We accessed
Framing Image Description as a Ranking Task
Amazon Mechanical Turk through a service provided by Crowdﬂower.com, which makes it
easy to include control items for quality control. One of the six images in each task was
such a control item, which we generated by taking random images from the development
set, using between one and three of their original captions as correct responses, and adding
another nine to seven randomly selected captions (which we veriﬁed manually that they
did not describe the image) as incorrect responses. We only used workers who judged 70%
of their control items correctly. Each image-caption pair was annotated by three diﬀerent
annotators (at a total cost of 0.9¢), and the ﬁnal score of each image-caption pair was
computed as the average number of positive judgments it received.
Filtering unlikely image-caption pairs
In order to reduce the number of annotations
needed, we devised a ﬁlter based on Bleu scores to ﬁlter out imagecaption pairs whose caption is so dissimilar from the ﬁve captions originally written for the
image that it is highly unlikely it describes the image. We found that a ﬁlter based on
unigram Bleu-1 scores in combination with the stemming and stop word removal that is
standardly done by Lin’s Rouge script (Bleupre) proved particularly eﬀective: a
threshold of Bleupre ≥0.25 ﬁlters out 86.0% of all possible (1,000×1,000) image-caption
pairs in our test set, but eliminates only 6.7% of the pairs with an expert score of 22
greater, and 3.5% of the pairs with an expert score of 3 or greater. A slightly higher cutoﬀ
of Bleupre ≥0.26 would ﬁlter out 90.4% of all image caption pairs, but discard 12.3% of all
image-caption pairs with an expert score of ≥22
3 and 7.5% of all image-caption pairs with
an expert score of ≥3. Among the 113,006 image-caption pairs that we actually wished
to obtain judgments for, the 0.25 ﬁlter eliminates 72.8%, reducing the number of pairs we
needed to annotate to 30,781. Since our setup required us to pair each image with a number
of captions that was a multiple of 10, we also annotated an additional 10,374 image caption
pairs that had been ﬁltered out, allowing us to evaluate the performance of our ﬁlter. For
98.3% of these ﬁltered out pairs, all Mechanical Turk judges decided that the caption did not
describe the image, and for 99.8% of them, the majority of annotators thought so. We also
found that standard Bleu-1 without preprocessing is not a very eﬀective ﬁlter: a threshold
of Bleu ≥0.330 misses 6.9% of the good captions (with an expert score of ≥22
only ﬁltering out 55% of the entire data set, whereas a threshold of Bleu ≥0.333 ﬁlters out
65% of the entire data set, but misses 11.9% of the good captions.
Agreement of crowdsourced and expert judgments
We again use Cohen’s κ to
measure the agreement between the crowdsourced and the expert judgments (Table 10 in the
appendix). The best agreement is obtained between crowdsourced scores with a threshold
of 0.66 or above (i.e. at least two of the three judges think the caption describes the image)
and expert scores with a threshold of 3.33 (one expert thinks the caption describes the
image perfectly and the other two agree or think it describes the image with only minor
errors, or two experts think it describes the image perfectly and the other one thinks it is
at least related). At κ = 0.79, this is a signiﬁcantly better approximation to the expert
scores than was possible with either Bleu or Rouge. We also examine the precision, recall
and f-scores that these approximate relevance judgments achieve when compared against
relevance judgments obtained from binarizing expert judgments (Table 10). 98.6% of all
items with a perfect expert score (and 95.0% of all items with an almost perfect expert
score of 3.7) are identiﬁed, and at least 94.7% of the items that pass this threshold have an
Hodosh, Young & Hockenmaier
expert score of 2.7 or greater (i.e. the majority of experts agreed that the caption describes
the image perfectly or with minor errors). Using a threshold of 0.66 adds 2,031 suitable
image-caption pairs to the 1,000 test images paired with their original caption. Among the
1,000 test captions, 446 still describe only a single image, 202 describe two test images, 100
three, and 252 describe four or more images. Among the 1,000 test images, 331 have only
a single (i.e. the original) caption, 202 have two possible captions, 100 have three possible
captions, and 317 have four or more captions.
4.3.3 Large-Scale Evaluation with Relevance Judgments
The crowdsourced relevance judgments allow us to deﬁne two new metrics, the ‘rate of
success’ (S@k) and R-precision. We believe R-precision to be the more reliable indicator
of overall performance, since it summarizes the human judgments in a single number that
does not depend on an arbitrary cutoﬀ. We therefore use it in Section 4.3.4 for an in-depth
analysis of the impact of the diﬀerent linguistic features our models incorporate. The S@k
rate of success scores are motivated by the fact that search engines commonly return multiple
results at once. Since users may be satisﬁed as long as these results contain at least one
relevant item, S@k scores provide a more direct measure of utility for hypothetical users.
Rate of success (S@k) scores
The ‘rate of success’ metric (S@k) is analogous to the
recall-based R@k-scores used in Table 3, and is intended to measure the utility of our
system for a hypothetical user. It indicates the percentage of test items for which at least
one relevant result is found among the highest ranked k results. Following the analysis in
Section 4.3.2, an image-caption pair is considered relevant if the majority of the judges say
that the caption describes the image.
Rate of success results (Table 4)
Table 4 conﬁrms again that NN performs clearly
worse than any of the KCCA models.
The diﬀerences between Tri5Sem and the other
models shown in Table 4 are highly statistically signiﬁcant (p<0.001) for all metrics except
for the S@1 annotation scores, where, in agreement with the expert scores from Table 1, only
the diﬀerences to NN and BoW1 are signiﬁcant. It is unclear why the quality of the ﬁrst
caption that Tri5Sem returns for annotation is not signiﬁcantly better than those returned
by the other models, since it outperforms them on all other metrics. The S@k scores in
Table 4 indicate that Tri5Sem returns a relevant caption among the top 10 responses for
49.1% of the images, and a relevant image for 48.5% of the captions. A comparison with
the expert scores in Table 1 shows that all S@1 annotation scores lie between expert scores
with a threshold of 3.66 and 3.0, while a comparison with the R@k results in Table 3 shows
that the S@1 scores are at least twice as high as the corresponding R@1 scores. That is, the
highest ranked response is just as often a relevant item that was not originally associated
with the query as it is the original gold item itself.
R-precision scores
Given the crowdsourced relevance judgments, each test image may
now be associated with multiple relevant captions, and each test caption may have been
deemed relevant for multiple images besides the one it was originally written for. When
queries have a variable number of relevant answers, the performance of retrieval systems is
commonly measured in terms of R-precision . Unlike
the S@k scores, this metric does not depend on an arbitrary cutoﬀ, but summarizes the
Framing Image Description as a Ranking Task
Rate of success (S@k)
(Percentage of items with relevant response among top X results)
Image annotation
Image retrieval
Table 4: The rate of success (S@k) indicates the percentage of test items for which the top X
results contain at least one relevant response. Superscripts indicate statistically signiﬁcant
diﬀerence to Tri5Sem (∗: p ≤0.1, ∗∗: p ≤0.05, ∗∗∗: p ≤0.01)
R-precision
Annotation
Table 5: Model performance as measured by R-precision, with statistically signiﬁcant differences to Tri5Sem (∗: p ≤0.1, ∗∗: p ≤0.05, ∗∗∗: p ≤0.1)
performance of each system in a single number, allowing us to rank models according to
their overall performance (see Section 4.3.4 below). And while the S@k scores measure only
whether at least one of the relevant items is ranked highly, R-precision requires all relevant
items to be ranked highly. It is therefore a better indicator of the quality of the mapping
between images and sentences, since a better mapping should prefer all relevant captions or
images over any irrelevant caption or image.
The R-precision of system s on a query qi with ri known relevant items in the test data
is deﬁned as its precision at rank ri (i.e. the percentage of relevant items among the top ri
responses returned by s). The R-precision of s is obtained by averaging over all test queries.
We again use Fisher’s randomization test to assess whether the diﬀerences between models
reaches statistical signiﬁcance.
R-precision results (Table 5)
Table 5 gives the R-precision of the model types that were
used when collecting expert judgments (Section 4.2.1). We see that the nearest neighbor
baseline is again very clearly below all KCCA models (p < 0.001). R-precision indicates that
there is little diﬀerence between BoW1, BoW5 and TagRank in terms of their overall performance. Although TagRank and Tri5 outperform BoW1 slightly on search (p = 0.062),
the only statistically signiﬁcant diﬀerence among these three models is that between BoW1
and Tri5 on search (p = 0.01). In contrast to the human evaluation that considered only
Hodosh, Young & Hockenmaier
R-precision
+Align&IDF
Ann. Search
Ann. Search
13.2aaa,ii
Table 6: The eﬀect of adding IDF weighting (i), alignment-based similarities (a) and distributional similarities (d) to the Tri5 model. The bolded scores indicate Tri5 (top left) and
Tri5Sem (Tri5 +Align&IDF+DBNC+ic; bottom right). Superscripts indicate statistically
signiﬁcant diﬀerences that result from the addition of the corresponding feature (x : p ≤0.1,
xx :≤0.05, xxx : p ≤0.01). Dc = distributional similarities computed over corpus c (the
BNC, our training corpus of image captions (‘ic’), or both)
the ﬁrst result (Table 1), Tri5Sem clearly outperforms all other models on both annotation
and retrieval (for all diﬀerences p ≤0.0001). Table 12 in Appendix B shows scores for all
4.3.4 Measuring the Impact of Linguistic Features (Table 6)
The results presented so far indicate clearly that Tri5Sem outperforms the simpler Tri5
model, but have not considered the impact of the individual text features that distinguish
the two models. Since R-precision summarizes the performance of each system in a single
number, it allows us to easily perform this analysis.
Using R-precision for model comparison
Table 6 shows the results of an ablation
study which compares the R-precision of Tri5 and Tri5Sem with that of other trigrambased KCCA models that use a subset of Tri5Sem’s additional features. The basic Tri5
model yields the bolded scores shown in the top left corner. Tri5Sem’s scores are given in
the bottom right corner. The top row contains models that do not capture any distributional
similarities, while each of the bottom three rows corresponds to the addition of one kind
of distributional similarity (computed on the BNC, on the image captions in our training
corpus, or on both corpora) to the corresponding model in the top column. The ﬁrst column
contains models that do not capture any IDF reweighting or alignment-based similarities.
The second column corresponds to the addition of IDF reweighting to models in the ﬁrst
column, while the third column adds alignment-based similarities to the models in the ﬁrst
column. The last column adds both IDF-reweighting and alignment-based similarities, and
these scores should be compared to both the second and third column. Superscripts indicate that the addition of a particular feature leads to a statistically signiﬁcant improvement
over the model that does not include this feature but is otherwise identical. That is, d
superscripts show that the addition of a distributional similarity metric leads to a signiﬁcant improvement over the model in the top cell of the same column. The i superscripts
indicate that the addition of IDF reweighting leads to a signiﬁcant improvement over the
corresponding model without IDF reweighting in the immediately preceding cell in the same
Framing Image Description as a Ranking Task
row. The a superscripts in the third column show that the addition of the alignment-based
similarity leads to a signiﬁcant improvement over the model without IDF reweighting shown
in the ﬁrst column of the same row, and a superscripts in the ﬁfth column show that the
addition of the alignment-based similarity to the model with IDF reweighting shown in the
second column of the same row leads to a signiﬁcant improvement.
The impact of IDF weighting, distributional and alignment-based similarities
While IDF weighting is almost always beneﬁcial, the improvements obtained by adding
IDF weighting to a given text kernel reach statistical signiﬁcance (indicated by i superscripts in Table 6) in only two cases: the performance of the basic Tri5 model on image
annotation, and the performance of the alignment-based Tri5 model on image search. By
contrast, adding lexical similarities leads almost always to a signiﬁcant or highly signiﬁcant
improvement. Distributional similarities (d superscripts) are very beneﬁcial for the basic
Tri5 model on both tasks, and help the IDF weighted Tri5 model on image search. Distributional similarities computed on both corpora also signiﬁcantly improve the performance
of the alignment-based Tri5 model that does not incorporate IDF weighting. Adding them
to the alignment-based Tri5 model without IDF weighting leads to further improvement
on search (while not helping or slightly decreasing performance on annotation, albeit not
signiﬁcantly so). The improvements on search only reach statistical signiﬁcance when the
similarities computed over both corpora are added.
Conversely, adding alignment-based
similarities to the non-IDF weighted Tri5 model with distributional similarities from both
corpora leads to a signiﬁcant improvement on annotation. Finally, the top cell of the last
column shows that adding alignment-based similarities to the IDF-weighted Tri5 model
leads to a signiﬁcant improvement on both tasks, although the impact on search is even
greater. Comparing this model’s performance to the alignment-based Tri5 model without
IDF weighting shows that in this case, IDF weighting only helps on search. The bottom
cells of this column show that adding alignment-based similarities to models that already
use IDF weighting and distributional similarities, or adding IDF weighting to models with
distributional and alignment-based similarities generally lead to minor improvements.
Table 6 shows only whether the diﬀerence in performance obtained by the addition of
one kind of feature reaches statistical signiﬁcance, but it is worth noting that any model
that captures lexical similarities of any kind is signiﬁcantly better than the basic Tri5
model on both tasks (p ≤0.02 search; p < 0.0001 annotation), while IDF-reweighting by
itself only leads to a signiﬁcant improvement on the annotation task (p < 0.03). Moreover,
the diﬀerence between Tri5Sem (13.7 search; 13.4 annotation) and the basic Tri5 kernel
with IDF-reweighting (12.5 search; 11.3 annotation) are highly signiﬁcant (p < 0.03 search;
p < 0.0001 annotation).
The impact of Lin’s similarity
Not shown in Table 6 is the performance of Tri5Lin,
the model which augments the trigram kernel with Lin’s WordNet-based similarity.
Tri5Sem does not include Lin’s similarity, since we found during development that Tri5Lin
performed similarly to or worse than the basic Tri5 model on the automatic R@k and median
rank scores. This is also reﬂected in Tri5Lin’s R-precision scores of 11.7 for annotation (Tri5:
11.6) and 10.7 for search (Tri5: 11.0). Lin’s similarity may simply be too coarse for our
purposes. As shown in Table 3, the hypernym relations in WordNet lead it to associate terms
such as swimming and football with each other. But even though these are semantically
Hodosh, Young & Hockenmaier
Correlation of system rankings
between S@k and R@k
Annotation
(a) S@k vs. R@k
Correlation of system rankings
between R-precision
Annotation
Median rank
(b) R-precision vs. R@k and median rank
Table 7: Correlation (Spearman’s ρ and Kendall’s τ) of system rankings obtained from
human metrics (S@k and R-precision) and automated scores (R@k and median rank)
related by the fact that they are both diﬀerent kinds of sports or activities, they are visually
very dissimilar, and should not be considered related by our systems.
4.3.5 Can Human Evaluations Be Approximated by Automatic Techniques?
R-precision and the S@k scores require human judgements, and therefore cannot be applied
to datasets where these judgements have not yet been collected or whose scale may prohibit
ever creating a deﬁnitive set of judgements. However, if the evaluation is intended to measure
relative progress on image description rather than absolute performance, our automatic
metrics may be a suﬃcient approximation, since they yield a similar ranking of systems to
R-precision and the S@k scores. Table 7(a) shows the correlations between the rankings of
all of our NN and KCCA systems (n = 30) obtained from the S@k scores and those obtained
from the corresponding R@k scores. Table 7(b) shows the correlations between R-precision
and our automatic metrics. We report two rank correlation coeﬃcients, Spearman’s ρ and
Kendall’s τ. We ﬁrst observe that system rankings obtained via R@1 do not correlate highly
with either R-precision or S@1 based rankings. On the other hand, we also observe that
R@5, R@10, and the median rank scores correlate well with R-precision and that R@5 and
R@10 correlate well with their corresponding S@k metrics.
This suggests that rankingbased metrics are signiﬁcantly more robust than metrics that consider only the quality of
the ﬁrst result. Moreover, these results indicate that our framework, in which systems are
expected to rank a pool of images or sentences written by people, may enable a large-scale,
fully automated, evaluation of image description systems that does not require an equally
large-scale eﬀort to collect human judgments.
5. Summary of Contributions and Conclusions
In this paper, we have proposed to frame image description as the task of selecting or ranking
descriptions among a large pool of descriptions provided by people, because this framework
provides a direct test of the purely semantic aspects of image description and does not need
to be concerned with the diﬃculties involved in the automatic generation of syntactically
correct and pragmatically appropriate sentences. We have also introduced a new data set of
images paired with multiple captions, and have used this data set to evaluate a number of
nearest-neighbor and KCCA-based models on sentence-based image annotation as well as on
Framing Image Description as a Ranking Task
the converse task of sentence-based image search. Our experiments indicate the importance
of capturing lexical similarities. Finally, we have performed an in-depth analysis of diﬀerent
evaluation metrics for image description.
5.1 The Advantages of Framing Image Description as a Ranking Task
One of our main motivations for framing image description as a ranking rather than a
generation problem was the question of an objective, comparable evaluation of our ability
to understand what is depicted in images. In order to make progress on this challenging
task, it is important to deﬁne tasks and evaluation metrics that allow for an objective
comparison of diﬀerent approaches.
We have argued that the task of ranking a pool of
captions written by people is attractive for a number of reasons: ﬁrst, results obtained on
the same data set can be compared directly; second, human evaluation is easier than for
generated captions since it needs to only focus on factual correctness of the description rather
than grammaticality, ﬂuency, or creativity; third, statistically signiﬁcant diﬀerences between
systems may not become apparent when only a single caption per image is considered; and
ﬁnally, ranking makes it possible to automate evaluation, e.g. by considering the position of
the original caption. Moreover, framing image description as a ranking task also establishes
clear parallels to image retrieval, allowing the same metrics to be used for both tasks.
5.2 Our Data Set
Our Flickr 8k data set of over 8,000 images, each paired with ﬁve crowdsourced captions, is
a unique resource for image description. Although it is much smaller than the SBU corpus
 , we believe that the generic conceptual descriptions in our corpus are
more useful for image understanding than the original Flickr captions in the SBU data set.
The data set that is perhaps most similar to ours is the IAPR data set , but the captions in our corpus are shorter, and focus on the salient aspects of the
image. And while we focus on images of people and animals, the IAPR data set covers a
slightly diﬀerent domain, including city pictures and landscape shots which typically do not
depict or focus on people. A distinct advantage of our corpus is that it pairs each image
with multiple, independently written captions. Our results indicate that using more than a
single caption at training time leads to a signiﬁcant increase in performance. We have also
shown how to use these multiple captions to deﬁne an alignment-based lexical similarity that
may be more useful for image description than standard distributional or WordNet-based
similarities.
5.3 Our Models
This paper is the ﬁrst to apply Kernel Canonical Correlation analysis (KCCA) to sentencebased image description. Our results show that KCCA signiﬁcantly outperforms nearest
neighbor-based approaches on our data set of 6,000 training images and 1,000 test images
 
SBU corpus, where the memory requirements to train KCCA may be prohibitive). One
advantage of KCCA-based approaches over other image description systems that are geared
speciﬁcally towards caption generation is that they can not only be applied to image de-
Hodosh, Young & Hockenmaier
scription, but also to image retrieval, and our results indicate that performance on both
tasks is fairly similar.
An important diﬀerence between our approach taken in this paper and most other image
description systems is that all the features used by the models presented here can be computed with minimal supervision. The only feature that relies on a supervised classiﬁer is the
alignment-based similarity, which uses a POS-tagger to identify nouns and verbs. Despite
the simplicity of the underlying features, our models achieve relatively high performance,
considering the diﬃculty of the task: Although there is only a 1.5% chance that a randomly
chosen test caption will describe a test image well, ﬁne-grained human judgments reveal
that for image annotation, the ﬁrst caption returned by our best KCCA system is a good
description for 28% of the test images. Furthermore, our large-scale evaluation shows that
with our best system, there is an almost 50% chance that a suitable image or caption will be
returned among the ﬁrst ten results. Our results indicate that there are two main reasons
for this high performance: the availability of multiple captions for each image at training
time, and the use of robust text representations that capture lexical similarities rather than
requiring strict equality between words. However, it is also clear that this task remains
far from being solved, and we leave the question of how KCCA may beneﬁt from models
that rely on richer visual or linguistic features such as detector responses or rich syntactic
analyses for future work.
5.4 Evaluating Ranking-Based Image Description Systems
The main advantage of framing image description as a ranking problem is that it allows for a
direct comparison of diﬀerent approaches, since they can be evaluated on the same data set.
It also makes it possible to borrow established evaluation metrics from information retrieval,
and to use the same metrics and data sets for sentence-based image annotation and image
On the one hand, we have shown that crowdsourcing can be used to collect a large number
of binary judgments of image-caption pairs for a relatively low price, and that these crowdsourced judgments correlate well with more ﬁne-grained judgments. Being able to collect
human judgments on a large scale is particularly important for retrieval-based approaches
to image description, since the number of relevance judgments that need to be collected
for a test collection may be signiﬁcantly larger than the number of judgments commonly
used to evaluate a single caption generation system. However, our experiments on image
annotation have provided an example where human judgments of a ﬁrst caption returned for
each test image did not reveal diﬀerences between systems that become apparent when more
results are taken into account. Our ﬁne-grained evaluation also indicates that evaluations
that are based on a single result may require a potentially much larger number of test items
in order to reveal robust statistically signiﬁcant diﬀerences. Among the human evaluation
metrics we have compared, we believe that R-precision computed over the crowdsourced
relevance judgments is the most robust. R-precision is a standard metric for evaluating
ranked retrieval results when items have a varying number of relevant responses, and since
it yields a single score, it also makes it particularly easy to compare systems. However, the
S@k scores, which measure the percentage of items for which the top k responses contain a
relevant result, are perhaps a more direct measure of how useful a system may be in prac-
Framing Image Description as a Ranking Task
tice. We will release the crowdsourced relevance judgments we have collected in order to
enable others to evaluate their image description system on our data. We hope that this will
establish a benchmark that can be used for a direct and fair large-scale comparison between
an arbitrary number of image description systems.
On the other hand, we have also shown that our framework in which systems are evaluated on their ability to rank a pool of images or sentences may make it possible to perform
a fully automated evaluation. Contrary to current practice, our analysis indicates clearly
that standard metrics such as Bleu or Rouge are not very reliable indicators for how
well captions describe images, even if Bleu with Rouge-style preprocessing can be used
as an eﬀective ﬁlter of implausible image-caption pairs. Although we only consider humangenerated captions, we stipulate that similar observations may hold for automatically generated captions, since similar criticisms about Bleu’s appropriateness for generation and
machine translation evaluation are well known . However, in a ranking-based framework each test query is associated
with a ‘gold’ response that it was originally associated with, and our results indicate that
metrics based on this rank of the ‘gold’ item lead to very similar conclusions as human judgments. This suggest that the evaluation of the ranking-based image description task can be
automated, and performed on a potentially much larger scale than we have examined here.
5.5 Implications for the Evaluation of Caption Generation Systems
Image description can, and should, also be treated as a problem for the natural language
generation community. But automatically generating captions that are indistinguishable
from captions written by people 
for their comparison of caption generation systems) requires much more than the ability
to provide factually correct information about the image. We believe that the linguistic
issues that need to be solved in a generation setting need to be evaluated separately from
ability to decide whether a given caption describes an image. It is unclear that the kinds of
evaluations performed by e.g. Mitchell et al. could ever be automated, since the question of
how natural an automatically produced caption seems may always require human judgment.
But human experiments are expensive, and since each system generates its own captions,
such judgments have to be collected anew for each system and experiment. Since there is
no consensus on what constitutes a good image description, independently obtained human
assessments of diﬀerent caption generation systems should not be compared directly. This
means that a direct comparison of systems, e.g. as performed by Mitchell et al., is typically
only possible within one research group, since there is no common data set for which diﬀerent
system outputs are publicly available. Although automatic scores such as Bleu and Rouge
may still be useful for caption generation as measures of ﬂuency , we
have shown that they are not reliable metrics for how well a caption describes an image,
especially when the candidate pool is disjoint from the reference captions. This suggests
that the evaluation of the syntactic and pragmatic aspects of the caption generation task
should not be automated, and may have to rely on human judgments. However, it may
be possible to use the framework proposed in this paper to evaluate the semantic aﬃnity
functions f(i, s) that are implicitly used in caption generations systems.
Hodosh, Young & Hockenmaier
Acknowledgments
We gratefully acknowledge support for this project from the National Science Foundation
through IIS Medium grant 0803603, CAREER award 1053856, and CNS-1205627 CI-P.
Appendix A. Agreement Between Approximate Metrics and Expert
Human Judgments
Tables 8 and 9 use Cohen’s Kappa (κ) to measure the agreement between Bleu and Rouge
scores and expert judgments. We have selected a few thresholds that yield optimal results.
Table 10 (a) shows the agreement between the crowdsourced judgments and the expert
judgments. Since the best agreement to the expert scores is obtained with the crowdsourced
judgments using a threshold of 0.6, Table 10 (b) measures precision and recall of the resulting binary relevance judgments against binarized expert judgments obtained with varying
thresholds.
Appendix B. Performance of All Systems
The following tables give results for all models. In Section 4 of the body of the paper, NN
corresponds to NN5idf
F1, while Tri5Sem corresponds to Tri5
A,DBNC+ic.
R@k and median rank scores
Table 11 gives the recall and median rank of the original
item (Section 4.3.1) for all of our models.
Agreement between expert and Bleu/Rouge scores (Cohen’s κ)
Case 1: Scand ⊆Sref
5 reference captions/test image (Scand ⊂Sref; R5)
1 reference caption/test image (Scand = Sref; R1(gold))
Table 8: Agreement (Cohen’s κ) between binarized expert and Bleu/Rouge scores when
the pool of candidate captions contains each test image’s reference caption(s).
Framing Image Description as a Ranking Task
Agreement between expert and Bleu/Rouge scores (Cohen’s κ)
Case 2: Scand ̸⊆Sref
4 reference captions/ test image (R4)
1 reference caption/test image (R1(other))
Table 9: Agreement (Cohen’s κ) between binarized expert and Bleu/Rouge scores when
the pool of candidate captions may not contain each test image’s reference caption(s).
Agreement between expert
and lay scores (Cohen’s κ)
(a) Agreement (Cohen’s κ) between relevance judgments obtained from expert
scores (relevance = score ≥θE) and lay
scores (relevance = score ≥θL)
Lay vs. expert
relevance judgments (θL = 0.66)
(b) Precision, recall, and F1 scores of binarized lay scores (θL = 0.66) against
binarized ‘expert’ scores with varying
thresholds θE.
Table 10: Comparing the relevance judgments obtained from the lay scores against those
obtained from expert scores
Hodosh, Young & Hockenmaier
S@k and R-precision scores
Table 12 gives the S@k success rate (Section 4.3.3) and
R-precision scores (Section 4.3.3) for all of our models, based on the crowdsourced human
judgments (Section 4.3.2).
Framing Image Description as a Ranking Task
Performance of all models (automatic evaluation)
(R@k: percentage of queries with original item in top X results
Median r: median rank of original item)
Image annotation
Image search
NN5Tri(best)
Tri5DBNC+ic
Tri5A,DBNC
Tri5A,DBNC+ic
Table 11: Performance of all models, measured as the percentage of test items for which the
original item was returned among the top 1, 5 or 10 results, as well as as the median rank
of the original item. In Section 4, NN5idf
F1 = NN, Tri5
A,DBNC+ic = Tri5Sem.
Hodosh, Young & Hockenmaier
Performance of all models (human evaluation)
S@k: Percentage of items with relevant response among top X results
R-prec: R-precision computed over relevant responses
Image annotation
Image search
NN5Tri(best)
Tri5DBNC+ic
Tri5A,DBNC
Tri5A,DBNC+ic
Table 12: Performance of all models, measured as the percentage of test items for which
they return an item that was deemed relevant according to the crowdsourced judgments
among the top 1, 5 or 10 results, and as R-precision computed over these judgments. In
Section 4, NN5idf
F1 = NN, Tri5
A,DBNC+ic = Tri5Sem.
Framing Image Description as a Ranking Task