LIDS-P-1399
August 1984
DISTRIBUTED ASYNCHRONOUS OPTIMAL ROUTING
IN DATA NETWORKS*
John N. Tsitsiklis
Dimitri P. Bertsekas
Massachusetts Institute of Technology
Cambridge, MA 02139
We prove convergence of a distributed gradient
on several assumptions that are to some extent violated
projection method for optimal routing in a data communi-
in practice. These are:
cation network. The analysis is carried out without any
synchronization assumptions and takes into account the
a) The quasistatic assumption, i.e. the external traffic
possibility of transients caused by updates in the
arrival rate for each OD pair is constant over time.
routing strategy being used.
This assumption is approximately valid when there is a
large number of user-pair conversations associated with
1. INTRODUCTION
each OD pair, and each of these conversations has an
The most popular formulation of the optimal distri-
arrival rate that is small relative to the total arrival
buted routing problem in a data network is based on a
rate for the OD pair (i.e. a "many small users" asmulticommodity flow optimization whereby a separable
sumption).
An asymptotic analysis of the effect of
objective function of the form
violation of this assumption on the stationary character
of the external traffic arrival rates is given in .
b) The fast setting time assumption, i.e. transients
in the flows F13 due to changes in routing are negligiis minimized with respect to the flow variables F i,
ble. In other words once the routing is updated, the
subject to multicommodity flow constraints ( , ,
settle to their new values within time which
 , [121).
Here (ij) denotes a generic directed
is very small relative to the time between routing
ij .updates.
This assumption is typically valid in datagram
network link, and D
is a strictly convex differenti-
networks but less so in virtual circuit networks where,
able, increasing function of Fij which represents in
existing virtual circuits may not be rerouted after a
turn the total traffic arrival rate on link (i,j)
routing update. When this assumption is violated, link
measured for example in packets or bits per second.
flow measurements F'J reflect a dependence not just on
the current routing but also on possibly several past
We want to find a routing that minimizesT this
routings. A seemingly good model is to represent each
objective.
By a routing we mean a set of active paths
F'3 as a convex combination of the rates of arrival
for each origin-destination (OD) pair (set of paths
at (i,j) corresponding to two or more past routing
carrying some traffic of that OD pair), together with
the fraction of total traffic of the OD pair routed
along each active path.
c) The synchronous update assumption, i.e. all link
rates F1i are measured simultaneously, and are received
A typical example of a distributed routing algorithm
simultaneously at all network nodes who in turn
operates roughly as follows:
simultaneously carry out a routing update. However,
there may be technical reasons (such as software com-
The total link arrival rates F j
are measured
plexity) that argue against enforcing a synchronous upby time averaging over a period of time, and are
date protocol.
For example the distributed routing
communicated to all network nodes.
Upon reception of
algorithm of the ARPANET is not operated synchrothese measured rates each node updates the part of the
routing dealing with traffic originating at that node.
The updating method is based on some rule, e.g. a
In this paper-we show that projection methods, one
shortest path method [21, [41, or an iterative
of the most interesting class of algorithms for disoptimization algorithm [11,
tributed optimal routing, are valid even if the settling
time and synchronous update assumption are violated to
There are a number of variations of this idea - for
a considerable extent. Even though we retain the
example some relevant function of Fi j may be measured in
quasistatic assumption in our analysis we conjecture
place of Fij, or a somewhat different type of routing
that the result of this paper can be generalized along
policy may be used, but these will not concern us for
the lines of another related study whereby it is
the time being. The preceding algorithm is used in this
shown that a routing algorithm based on a shortest path
paper as an example which is interesting in its own
rule converges to a neighborhood of the optimum. The
right but also involves ideas that are common to other
size of this neighborhood depends on the extent of
types of routing algorithms.
violation of the quasistatic assumption. A similar
deviation from optimality can be caused by errors in
Most of the existing analysis of distribution
the measurement of Fij.
In our analysis these errors
routing algorithms such as the one above is predicated
are neglected.
Work supported by DARPA under Contract No. ONR-N00014-
In the next section we provide some background on
75-C-1183 and an IBM Faculty Development Award.
distributed asynchronous algorithms and discuss the
relation of the result of the present paper with earlier
In section 3 we formulate our class of
distributed asynchronous routing algorithms, while
paths for carrying the flow from i to j.)
For each OD
Section 4 provides convergence analysis.
pair w = (i,j), let rw be the total arrival rate (at
node i) of traffic that has to be sent to node j
ASYNCHRONOUS OPTIMIZATION ALGORITHMS
(measured, for example, in packets or bits per second).
For each path p ~ Pw we denote by xw~ the amount of
We provide here a brief discussion of the currently
For each path p
we denote by xp
the amount of
available theory and tools of analysis of asynchronous
flow which is
routed through path p. Naturally, we have
distributed algorithms. In a typical such algorithm
(aimed at solving an optimization problem) each proces-
Vp e Pw, Vw,
sor i has in its memory a vector x1 which may be inter-
w,p preted as an estimate of an optimal solution.
processor obtains measurements, performs computations
and updates some of the components of its vector.
Concerning the other components, it relies entirely on
messages received from other processors. We are mainly
Let us define a vector x with components x
interested in the case where minimal assumptions are
placed on the orderliness of message exchanges.
Constraints (3.1), (3.2) may be written compactly as
x e G , where G is a simplex (in particular, G is
There are two distinct approaches for analyzing
and convex).
algorithmic convergence.
The first approach is
essentially a generalization of the Lyapunov function
Suppose that there is a total of M OD pairs and let
method for proving convergence of centralized iterative
us index them so that the variable w takes values in
processes. The idea here is that, no matter what the
{1,...,M}.
Then, the totality of flows through the
precise sequence of message exchanges is, each update by
network may be described by a vector x = (x
any processor brings its vector xi closer to the opti-
Naturally, x is subject to the constraint
mum in some sense. This approach applies primarily to
x e Glx.. xGM = G.
problems involving monotone or contraction mappings
with respect to a "sup"-norm (e.g. a distributed
link (i,j) in the network, let F
shortest path algorithm) ; it is only required
the corresponding traffic arrival rate at that link.
that each processor communicates to every other proces-
sor an infinite number of times.
The second approach is based on the idea that if
the processors communicate fast enough relative to the
speed of convergence of the computation, then the
evolution of their solution estimates xi may be (up to
A cost function, corresponding to some measure of confirst order in the step-size used) the same as if all
gestion through the network, is introduced. We assume
processors were communicating to each other at each
the separable form
time instance .
The latter case is, however,
mathematically equivalent to a centralized (synchronous)
algorithm for which there is an abundance of techniques
and results. Notice that in this approach, slightly
stronger assumptions are placed on the nature of the
communication process than in the first one. This is
We assume that for each link (i,j) e E, D'j is convex,
compensated by the-fact that the corresponding method
continuously differentiable and has a Lipschitz
of analysis applies to broader classes of algorithms.
continuous derivative.
Unfortunately, the results available cannot be
We are interested in the case where the nodes in
directly applied to the routing problem studied in this
the network adjust the path routing variables x
paper and a new proof is required. A main reason is
as to minimize (3.4).
Since a set of path floww'p
that earlier results concern algorithms for uncon-
variables {x
:pePw, we{l,...,M}} determines uniquely
strained optimization. In the routing problem, the
the link flow variables
(3.3)), it is
non-negativity and the conservation of flow introduce
more convenient to express the cost function in terms
more convenient to express the cost function in terms
inequality and equality constraints.
While equality
of the path flow variables. We are thus led to the
constraints could be taken care by eliminating some of
cost function
the variables, inequality constraints must be explicitly taken into account. Another difference arises be-
cause, in the routing algorithm, optimization is carried
out with respect to path flow variables, whereas the
messages being broadcast contain estimates of the link
flows (see next section).
In earlier results the
variables being communicated were assumed to be the
same as the variables being optimized.
and eij is a vector with entries in {0,1}, determined
THE ROUTING MODEL
Clearly, Dij
inherits the convexity and
We present here our basic assumptions, our nota-
smoothness properties of D'i.
tion and a simple model by which the nodes in a communication network may adjust the routing of the flow
Let us now consider the situation where the flows
through that network.
change slowly with time, due to re-routing decisions
made by the nodes in the network. Accordingly, the
We are given anetwork
described by a directed
flows at time n are described by a vector x(n) =
graph G = (V,E).
(V is the set of nodes, E the set of
directed links. For each pair w = (ij) of distinct
(x1 (n),...,xM(n)) e G. Let us assume that the routing
directed links.
For each pair w = (i,j)
of distinct
decisions for the flow corresponding to a particular
nodes i and j (also called an origin-destination, or
OD pair w = (ij) are made by the origin node i.
OD pair w = (i,j) are made by the origin node i. In
OD, pair) we introduce P , a set of directed paths from
an ideal situation, node i would have access to the
i to j, containing no loops.
(These are the candidate
exact value of x(n) and perform the update
We now describe the process by which X (n) is
x (n+l) = [x (n)
For each link (i,j), node i estimates from time to
(Here y is a positive scalar step-size, U
a positive
For each link (ij), node i estimates from time to
scaling constant and [
denoteps the proection on
time the amount of traffic through that link.
G with respect to the Euclidean norm.)
In a practical
cally, these estimates do not correspond to instantanewtuation, however, (3.7) is bound to be unrealistic
ous measurements but to an average of a set of measurefor several reasons: (3.7)is
bound to be unrealistic
ments obtained over some period of time. Accordingly,
at each time n, node i has available an estimate
It assumes perfect synchronization of all origin
It assumes that x(n) (or, equivalently, the link
flows Fij(n) at time n) may be measured exactly at time
Here, c i j (n;m) are nonnegative scalars summing to one
(for fixed n), and Q is a bound on the time over which
measurements are averaged plus the time between the
Even if the origin node i is able to compute
computation of consecutive estimates of the flow. These
x (n+l) exactly through (3.7), the actual flows through
estimates are broadcast from time to time (asynchronousthe network, at time n+l, will be different from the
ly and possibly with some variable delay).
Let us ascomputed ones, unless the settling time is negligible.
sume that the time between consecutive broadcasts plus
The above necessitate the development of a more
the communication delay until the broadcasted messages
realistic model, which is done below.
reach all nodes is bounded by some T.
It follows that
at time n each node k knows the value of F1i(mk)
First, because of remark (iii) we will differentiate
some mk with n-T<mk<n. Combining this observation with
between the actual flows through the network (denoted
(3.12) we conclude that at time n, each node k knows
by x(n), x (n), etc.) and the desired flows, as de-
an estimate i'i(n) satisfying
termined by the computations of some node; the latter
will be denoted by x(n) and'x (n).
The routing de-
cisions of some node at time n are determined by the
desired flows x (n).
However, due to transients,
each component xw
(n) of the actual flow x(n) will
have some value between x p(n) and xw
(n-l) will be a convex combination of
where C=T+Q and dk (n;m) are (unknown) nonnegative co-
efficients summing to one, for fixed n.
xwp (n-l) and Xw,p(n-2 ). Repeating this procedure, we
conclude that x
(n) is in the convex hull of
For each OD pair w, the corresponding origin node
For n large enough,
(let us denote it by k) uses the values of
P(0) should have negligible influence on x
wi.J be ignored for convenience. We may thus conclude
form an estimate A (n) of
(x(n)) as follows. Note
that there exist nonnegative coefficients a.
p(n;k) = 1,
Vn,w,pePw ,
otherwise.
Accordingly, a natural estimate. is given (componentwise)
It seems realistic to assume that if x
(k) is held
constant, say equal to x, the actual flows x(n) should
settle to x
at a geometric rate.
Accordingly:
(i,j)ep aF
Assumption:
There exist constant B>0, ae[0,1) such that
development of our model is now complete. To
summarize, the basic equation is (3.11), where x(n) is
(n;k) < B n-k,
n,k,w,pePw.
determined by (3.9), X (n) is determined by (3.15),
Fkj (n) is given by (3.13) and Fij is related to x by
Concerning the computation of the desired flows we
postulate an update rule of the form (cf. (3.7)).
_ ~ w~w~n)1+ ~Let
us close this section with a remark.
A distrixw(n+l) = [x (n)-y Xwkw(n)]
buted version of the Bellman algorithm for shortest
paths has been shown to converge appropriately ,
Here X (n) is some estimate of D-
(x(n)) which is, in
 even if the time between consecutive broadcasts
general, inexact due to asynchronism and delays in ob-
is unbounded.
In our model however, we have to assume
taining measurements.
However, it would be unnatural
boundedness because otherwise there are examples that
to assume that the computation (3.11) is carried out at
demonstrate that convergence is not guaranteed. Of
each time instance for each OD pair.
We therefore
course such an assumption is always observed in practice.
define a set T of times for which (3.11) is used. For
nTw, we simply let
A simple example is the following: consider the
assume that the time between consec w
network of Figure 1. There are three origin nodes (nodes
assume that the time between consecutive updates
(equivalently, the difference of consecutive elements
1,2, and 3), with input arrival rate equal to 1 at each
of T ) is bounded, for each w.
one of them, and a single destination node (node 6).
For each OD pair there are two paths. For each origin
node i, let x. denote the flow routed through the path
containing node 4. Let DiJ(Fij ) = (Fij) 2
for (i,j) =
(4,6) or (5,6) and DiJ(F'i)
= 0 for all other links.
xw (n+l) = x (n) + s
In terms of the variables xl, x2, x3, the cost becomes
Using (4.2) with a =-yw
X w(n), we obtain
D(xl,x2,X3 ) = (Xl+x2 +X
3 ) + (3-X1
We assume that the settling time is zero, so that we do
not need to distinguish between actual and desired
flows, and that each node i (i=1,2,3) knows x. exactly
<Xw(n), s (n)> <- IIsw(n)I /ylw
and is able to transmit its value instantaneously to
the remaining origin nodes. Suppose that initially
Using (4.4), (3.9) and the assumption (3.10), it is
xl=x2 =x3=1 and that each origin node executes a large
easy to show that for some A1 >0O (independent of y or n)
number of gradient projection iterations with a small
stepsize before communicating the current value of x.
to the other nodes.
Then, effectively, node i solves
Jfx(n) - x(n)
IIs(n)|) .
the problem
min {(x +2)2 + (1-x)2}2
Furthermore, comparing (3.14) to (3.15) and using
the Lipschitz continuity of aDij/F'ij, we conclude that
for some constants A2,.
(independent of y)
thereby obtaining the value x.=0. At that point the
processors broadcast their current values of x..
this sequence of events is repeated, _each x w1ll be-
I I-x (x(n)) - X (n)
< A 2 max IFk3 (n)-F (n) <
come again equal to 1. So, (x ,x ,x3) oscillates
between (0,0,0) and (1,1,1) without ever converging to
an optimal routing. The same behavior is also observed
if the cost function (3.16)' is modified by adding a
(xl + x + x3),
which makes it strictly convex,
as long as O<C<<1.
I Jx(m)-x(n) I I <
IV. RESULT AND CONVERGENCE PROOF
Theorem: With the algorithm and the assumptions introduced in the last section and provided that the step-
size y is chosen small enough, D(x(n)) converges to
min D(x) and any limit point of {x(n)} is a minimizing
+ I x(n)-x(n)j I
point. Moreover, x(n)-x(n) converges to zero. Finally,
if each D1 3
is strictly convex (as a function of theA
n-ks(k) f + A6
link flow F1 3)
and if, for each OD pair w=(i,j), P
contains all paths from i to j, then the link flows
Fij(n) converge to their (unique) optimal values.
n-1 ls(k)I
Let [-]+ denote projection on a convex set G Rn.
Assume that 0eG.
<a,[al > >
(The second inequality follows from (3.13), the third
from (3.3), the fourth is the triangle inequality, the
If aeG, [a]+
= a and (4.1) holds trivially. So,
fifth uses (4.6).)
Using Lipschitz continuity once
let us assume that [a]+ 0 G and form a triangle with
more, (4.6) and (4.7) we finally obtain, for some
vertices at the points a, [a]+ and the origin, denoted
A%>O (independent of n,y)
by A,B,O, respectively (see Figure 2).
Let G_ be the
intersection of G with the plane defined by that tri-
Let us draw the normal to AB through point B.
(x(n))-X (
This line is a supporting hyperplane for Go. Therefore,
0 and A lie at different sides of that line; hence the
angle OBA is larger than 90 degrees. Let us now draw
Using a first order series expansion for D, we
the normal to OB through B. It must intersect the
segment OA at some point C, because, < OBA > 90-.
D(x(n+l)) < D(x(n)) + Z <-x (x(n)),s (n)>+A9I s(n)I 2
<OB,OC> < <OB,OA> = <a,[a] >.
By translating the origin to an arbitrary point x, (4.1)
< D(x(n))+Z<w(n),sw(n)> + A8
Is(k) II Is(n) 1+
<a, [x+a]+-x> > II
[x+al+-xl 2, xeG, alRn.
Ils(n) 12 <
Proof of the Theorem:
We define s(n) to be the vector
with components
< D(x(n)) -
1 IIs(n)1 2
n-k Is(k) 12
[-X (n)-Yp w (n) I+ -
(Here, the second inequality was obtained from (4.8); the
third from (4.5).)
Summing (4.9) for different values
I--~ c---~
of n and rearranging terms we obtain
For certain special choices of the cost function D j
and under certain assumptions, the partial derivative
11 s(k)||.
equals the average delay of a packet traveling
through link (i,j).
In that case, it is very natural
to assume that this derivative may be measured directly,
without first
measuring the flow FiJ. Our result may
be easily shown to be valid for this class of algorithms
Suppose that y is small enough so that
1- as well.
Note that D is continuous on a compact set, hence
bounded below. Let no in (4.10) to obtain