Convolutional Pose Machines
Shih-En Wei
 
Varun Ramakrishna
 
Takeo Kanade
 
Yaser Sheikh
 
The Robotics Institute
Carnegie Mellon University
Pose Machines provide a sequential prediction framework for learning rich implicit spatial models. In this work
we show a systematic design for how convolutional networks can be incorporated into the pose machine framework for learning image features and image-dependent spatial models for the task of pose estimation. The contribution
of this paper is to implicitly model long-range dependencies between variables in structured prediction tasks such
as articulated pose estimation. We achieve this by designing
a sequential architecture composed of convolutional networks that directly operate on belief maps from previous
stages, producing increasingly reﬁned estimates for part locations, without the need for explicit graphical model-style
inference. Our approach addresses the characteristic difﬁculty of vanishing gradients during training by providing a
natural learning objective function that enforces intermediate supervision, thereby replenishing back-propagated gradients and conditioning the learning procedure. We demonstrate state-of-the-art performance and outperform competing methods on standard benchmarks including the MPII,
LSP, and FLIC datasets.
1. Introduction
We introduce Convolutional Pose Machines (CPMs) for
the task of articulated pose estimation. CPMs inherit the
beneﬁts of the pose machine architecture—the implicit
learning of long-range dependencies between image and
multi-part cues, tight integration between learning and inference, a modular sequential design—and combine them
with the advantages afforded by convolutional architectures: the ability to learn feature representations for both
image and spatial context directly from data; a differentiable architecture that allows for globally joint training
with backpropagation; and the ability to efﬁciently handle
large training datasets.
CPMs consist of a sequence of convolutional networks
that repeatedly produce 2D belief maps 1 for the location
1We use the term belief in a slightly loose sense, however the belief
(a) Stage 1
(b) Stage 2
(c) Stage 3
Input Image
Figure 1: A Convolutional Pose Machine consists of a sequence of predictors trained to make dense predictions at each image location. Here we
show the increasingly reﬁned estimates for the location of the right elbow
in each stage of the sequence. (a) Predicting from local evidence often
causes confusion. (b) Multi-part context helps resolve ambiguity. (c) Additional iterations help converge to a certain solution.
of each part. At each stage in a CPM, image features and
the belief maps produced by the previous stage are used
The belief maps provide the subsequent stage
an expressive non-parametric encoding of the spatial uncertainty of location for each part, allowing the CPM to
learn rich image-dependent spatial models of the relationships between parts. Instead of explicitly parsing such belief maps either using graphical models or specialized post-processing steps , we learn convolutional networks that directly operate on intermediate belief
maps and learn implicit image-dependent spatial models of
the relationships between parts. The overall proposed multistage architecture is fully differentiable and therefore can be
trained in an end-to-end fashion using backpropagation.
At a particular stage in the CPM, the spatial context of
part beliefs provide strong disambiguating cues to a subsequent stage. As a result, each stage of a CPM produces
belief maps with increasingly reﬁned estimates for the locations of each part (see Figure 1). In order to capture longrange interactions between parts, the design of the network
in each stage of our sequential prediction framework is motivated by the goal of achieving a large receptive ﬁeld on
both the image and the belief maps. We ﬁnd, through experiments, that large receptive ﬁelds on the belief maps are
crucial for learning long range spatial relationships and remaps described are closely related to beliefs produced in message passing
inference in graphical models. The overall architecture can be viewed as
an unrolled mean-ﬁeld message passing inference algorithm that is
learned end-to-end using backpropagation.
 
sult in improved accuracy.
Composing multiple convolutional networks in a CPM
results in an overall network with many layers that is at
risk of the problem of vanishing gradients 
during learning.
This problem can occur because backpropagated gradients diminish in strength as they are propagated through the many layers of the network. While there
exists recent work 2 which shows that supervising very deep
networks at intermediate layers aids in learning ,
they have mostly been restricted to classiﬁcation problems.
In this work, we show how for a structured prediction problem such as pose estimation, CPMs naturally suggest a systematic framework that replenishes gradients and guides the
network to produce increasingly accurate belief maps by
enforcing intermediate supervision periodically through the
network. We also discuss different training schemes of such
a sequential prediction architecture.
Our main contributions are (a) learning implicit spatial
models via a sequential composition of convolutional architectures and (b) a systematic approach to designing and
training such an architecture to learn both image features
and image-dependent spatial models for structured prediction tasks, without the need for any graphical model style
inference. We achieve state-of-the-art results on standard
benchmarks including the MPII, LSP, and FLIC datasets,
and analyze the effects of jointly training a multi-staged architecture with repeated intermediate supervision.
2. Related Work
The classical approach to articulated pose estimation is
the pictorial structures model 
in which spatial correlations between parts of the body are
expressed as a tree-structured graphical model with kinematic priors that couple connected limbs. These methods
have been successful on images where all the limbs of the
person are visible, but are prone to characteristic errors
such as double-counting image evidence, which occur because of correlations between variables that are not captured by a tree-structured model. The work of Kiefel et
al. is based on the pictorial structures model but differs in the underlying graph representation. Hierarchical
models represent the relationships between parts
at different scales and sizes in a hierarchical tree structure.
The underlying assumption of these models is that larger
parts (that correspond to full limbs instead of joints) can
often have discriminative image structure that can be easier to detect and consequently help reason about the location of smaller, harder-to-detect parts. Non-tree models
 incorporate interactions that introduce
loops to augment the tree structure with additional edges
that capture symmetry, occlusion and long-range relation-
2New results have shown that using skip connections with identity mappings in so-called residual units also aids in addressing vanishing gradients in “very deep” networks. We view this method as complementary
and it can be noted that our modular architecture easily allows us to replace
each stage with the appropriate residual network equivalent.
ships. These methods usually have to rely on approximate
inference during both learning and at test time, and therefore have to trade off accurate modeling of spatial relationships with models that allow efﬁcient inference, often with
a simple parametric form to allow for fast inference. In contrast, methods based on a sequential prediction framework
 learn an implicit spatial model with potentially complex interactions between variables by directly training an
inference procedure, as in .
There has been a recent surge of interest in models that
employ convolutional architectures for the task of articulated pose estimation . Toshev et
al. take the approach of directly regressing the Cartesian coordinates using a standard convolutional architecture
 . Recent work regresses image to conﬁdence maps, and
resort to graphical models, which require hand-designed energy functions or heuristic initialization of spatial probability priors, to remove outliers on the regressed conﬁdence
maps. Some of them also utilize a dedicated network module for precision reﬁnement . In this work, we show
the regressed conﬁdence maps are suitable to be inputted to
further convolutional networks with large receptive ﬁelds
to learn implicit spatial dependencies without the use of
hand designed priors, and achieve state-of-the-art performance over all precision region without careful initialization and dedicated precision reﬁnement. Pﬁster et al. 
also used a network module with large receptive ﬁeld to
capture implicit spatial models. Due to the differentiable
nature of convolutions, our model can be globally trained,
where Tompson et al. and Steward et al. also discussed the beneﬁt of joint training.
Carreira et al. train a deep network that iteratively improves part detections using error feedback but use a cartesian representation as in which does not preserve spatial uncertainty and results in lower accuracy in the highprecision regime. In this work, we show how the sequential
prediction framework takes advantage of the preserved uncertainty in the conﬁdence maps to encode the rich spatial
context, with enforcing the intermediate local supervisions
to address the problem of vanishing gradients.
3.1. Pose Machines
We denote the pixel location of the p-th anatomical landmark (which we refer to as a part), Yp ∈Z ⊂R2, where
Z is the set of all (u, v) locations in an image. Our goal
is to predict the image locations Y
= (Y1, . . . , YP ) for
all P parts. A pose machine (see Figure 2a and 2b)
consists of a sequence of multi-class predictors, gt(·), that
are trained to predict the location of each part in each level
of the hierarchy. In each stage t ∈{1 . . . T}, the classi-
ﬁers gt predict beliefs for assigning a location to each part
Yp = z, ∀z ∈Z, based on features extracted from the image at the location z denoted by xz ∈Rd and contextual
information from the preceding classiﬁer in the neighbor-
(c) Stage 1
(e) E↵ective Receptive Field
(a) Stage 1
Convolution
Convolutional
Pose Machines
(b) Stage ≥2
(d) Stage ≥2
Figure 2: Architecture and receptive ﬁelds of CPMs. We show a convolutional architecture and receptive ﬁelds across layers for a CPM with any T
stages. The pose machine is shown in insets (a) and (b), and the corresponding convolutional networks are shown in insets (c) and (d). Insets (a) and (c)
show the architecture that operates only on image evidence in the ﬁrst stage. Insets (b) and (d) shows the architecture for subsequent stages, which operate
both on image evidence as well as belief maps from preceding stages. The architectures in (b) and (d) are repeated for all subsequent stages (2 to T). The
network is locally supervised after each stage using an intermediate loss layer that prevents vanishing gradients during training. Below in inset (e) we show
the effective receptive ﬁeld on an image (centered at left knee) of the architecture, where the large receptive ﬁeld enables the model to capture long-range
spatial dependencies such as those between head and knees. (Best viewed in color.)
hood around each Yp in stage t. A classiﬁer in the ﬁrst stage
t = 1, therefore produces the following belief values:
g1(xz) →{bp
1(Yp = z)}p∈{0...P } ,
1(Yp = z) is the score predicted by the classiﬁer g1
for assigning the pth part in the ﬁrst stage at image location
z. We represent all the beliefs of part p evaluated at every
location z = (u, v)T in the image as bp
t ∈Rw×h, where w
and h are the width and height of the image, respectively.
t [u, v] = bp
t (Yp = z).
For convenience, we denote the collection of belief maps
for all the parts as bt ∈Rw×h×(P +1) (P parts plus one for
background).
In subsequent stages, the classiﬁer predicts a belief for
assigning a location to each part Yp = z, ∀z ∈Z, based
on (1) features of the image data xt
z ∈Rd again, and (2)
contextual information from the preceeding classiﬁer in the
neighborhood around each Yp:
z, ψt(z, bt−1)) →{bp
t (Yp = z)}p∈{0...P +1} ,
where ψt>1(·) is a mapping from the beliefs bt−1 to context features. In each stage, the computed beliefs provide an
increasingly reﬁned estimate for the location of each part.
Note that we allow image features x′
z for subsequent stage
to be different from the image feature used in the ﬁrst stage
x. The pose machine proposed in used boosted random
forests for prediction ({gt}), ﬁxed hand-crafted image features across all stages (x′ = x), and ﬁxed hand-crafted context feature maps (ψt(·)) to capture spatial context across
all stages.
3.2. Convolutional Pose Machines
We show how the prediction and image feature computation modules of a pose machine can be replaced by a deep
convolutional architecture allowing for both image and contextual feature representations to be learned directly from
data. Convolutional architectures also have the advantage
of being completely differentiable, thereby enabling endto-end joint training of all stages of a CPM. We describe
our design for a CPM that combines the advantages of deep
convolutional architectures with the implicit spatial modeling afforded by the pose machine framework.
Keypoint Localization Using Local Image
The ﬁrst stage of a convolutional pose machine predicts part
beliefs from only local image evidence. Figure 2c shows the
network structure used for part detection from local image
evidence using a deep convolutional network. The evidence
is local because the receptive ﬁeld of the ﬁrst stage of the
network is constrained to a small patch around the output
pixel location. We use a network structure composed of
ﬁve convolutional layers followed by two 1 × 1 convolutional layers which results in a fully convolutional archi-
R. Shoulder
Figure 3: Spatial context from belief maps of easier-to-detect parts can
provide strong cues for localizing difﬁcult-to-detect parts. The spatial contexts from shoulder, neck and head can help eliminate wrong (red) and
strengthen correct (green) estimations on the belief map of right elbow in
the subsequent stages.
tecture . In practice, to achieve certain precision, we
normalize input cropped images to size 368×368 (see Section 4.2 for details), and the receptive ﬁeld of the network
shown above is 160 × 160 pixels. The network can effectively be viewed as sliding a deep network across an image and regressing from the local image evidence in each
160 × 160 image patch to a P + 1 sized output vector that
represents a score for each part at that image location.
Sequential Prediction with Learned Spatial
Context Features
While the detection rate on landmarks with consistent appearance, such as the head and shoulders, can be favorable,
the accuracies are often much lower for landmarks lower
down the kinematic chain of the human skeleton due to their
large variance in conﬁguration and appearance. The landscape of the belief maps around a part location, albeit noisy,
can, however, be very informative. Illustrated in Figure 3,
when detecting challenging parts such as right elbow, the
belief map for right shoulder with a sharp peak can be used
as a strong cue. A predictor in subsequent stages (gt>1) can
use the spatial context (ψt>1(·)) of the noisy belief maps in
a region around the image location z and improve its predictions by leveraging the fact that parts occur in consistent geometric conﬁgurations. In the second stage of a pose
machine, the classiﬁer g2 accepts as input the image features x2
z and features computed on the beliefs via the feature function ψ for each of the parts in the previous stage.
The feature function ψ serves to encode the landscape of
the belief maps from the previous stage in a spatial region
around the location z of the different parts. For a convolutional pose machine, we do not have an explicit function
that computes context features. Instead, we deﬁne ψ as being the receptive ﬁeld of the predictor on the beliefs from
the previous stage.
The design of the network is guided by achieving a receptive ﬁeld at the output layer of the second stage network
that is large enough to allow the learning of potentially complex and long-range correlations between parts. By simply supplying features on the outputs of the previous stage
Effective Receptive Field (Pixels)
FLIC Wrists: Effect of Receptive Field
Right Wrist
Left Wrist
Effective Receptive Field (Pixels)
FLIC Elbows: Effect of Receptive Field
Right Elbow
Left Elbow
Figure 4: Large receptive ﬁelds for spatial context. We show that networks with large receptive ﬁelds are effective at modeling long-range spatial interactions between parts. Note that these experiments are operated
with smaller normalized images than our best setting.
(as opposed to specifying potential functions in a graphical
model), the convolutional layers in the subsequent stage allow the classiﬁer to freely combine contextual information
by picking the most predictive features. The belief maps
from the ﬁrst stage are generated from a network that examined the image locally with a small receptive ﬁeld. In
the second stage, we design a network that drastically increases the equivalent receptive ﬁeld. Large receptive ﬁelds
can be achieved either by pooling at the expense of precision, increasing the kernel size of the convolutional ﬁlters at
the expense of increasing the number of parameters, or by
increasing the number of convolutional layers at the risk of
encountering vanishing gradients during training. Our network design and corresponding receptive ﬁeld for the subsequent stages (t ≥2) is shown in Figure 2d. We choose to
use multiple convolutional layers to achieve large receptive
ﬁeld on the 8× downscaled heatmaps, as it allows us to be
parsimonious with respect to the number of parameters of
the model. We found that our stride-8 network performs as
well as a stride-4 one even at high precision region, while it
makes us easier to achieve larger receptive ﬁelds. We also
repeat similar structure for image feature maps to make the
spatial context be image-dependent and allow error correction, following the structure of pose machine.
We ﬁnd that accuracy improves with the size of the receptive ﬁeld. In Figure 4 we show the improvement in accuracy on the FLIC dataset as the size of the receptive
ﬁeld on the original image is varied by varying the architecture without signiﬁcantly changing the number of parameters, through a series of experimental trials on input images normalized to a size of 304 × 304. We see that the
accuracy improves as the effective receptive ﬁeld increases,
and starts to saturate around 250 pixels, which also happens to be roughly the size of the normalized object. This
improvement in accuracy with receptive ﬁeld size suggests
that the network does indeed encode long range interactions
between parts and that doing so is beneﬁcial. In our best
performing setting in Figure 2, we normalize cropped images into a larger size of 368 × 368 pixels for better precision, and the receptive ﬁeld of the second stage output on
the belief maps of the ﬁrst stage is set to 31 × 31, which is
equivalently 400 × 400 pixels on the original image, where
the radius can usually cover any pair of the parts. With more
With Intermediate Supervision
Without Intermediate Supervision
−0.5 0.0 0.5
−0.5 0.0 0.5
−0.5 0.0 0.5
−0.5 0.0 0.5
−0.5 0.0 0.5
−0.5 0.0 0.5
−0.5 0.0 0.5
−0.5 0.0 0.5
−0.5 0.0 0.5
Gradient (× 10−3)
Supervision
Supervision
Supervision
Histograms of Gradient Magnitude During Training
Figure 5: Intermediate supervision addresses vanishing gradients. We track the change in magnitude of gradients in layers at different depths in the
network, across training epochs, for models with and without intermediate supervision. We observe that for layers closer to the output, the distribution has
a large variance for both with and without intermediate supervision; however as we move from the output layer towards the input, the gradient magnitude
distribution peaks tightly around zero with low variance (the gradients vanish) for the model without intermediate supervision. For the model with intermediate supervision the distribution has a moderately large variance throughout the network. At later training epochs, the variances decrease for all layers for
the model with intermediate supervision and remain tightly peaked around zero for the model without intermediate supervision. (Best viewed in color)
stages, the effective receptive ﬁeld is even larger. In the following section we show our results from up to 6 stages.
3.3. Learning in Convolutional Pose Machines
The design described above for a pose machine results in
a deep architecture that can have a large number of layers.
Training such a network with many layers can be prone to
the problem of vanishing gradients where, as observed by Bradley and Bengio et al. , the magnitude
of back-propagated gradients decreases in strength with the
number of intermediate layers between the output layer and
the input layer.
Fortunately, the sequential prediction framework of the
pose machine provides a natural approach to training our
deep architecture that addresses this problem. Each stage of
the pose machine is trained to repeatedly produce the belief
maps for the locations of each of the parts. We encourage
the network to repeatedly arrive at such a representation by
deﬁning a loss function at the output of each stage t that
minimizes the l2 distance between the predicted and ideal
belief maps for each part. The ideal belief map for a part
p is written as bp
∗(Yp = z), which are created by putting
Gaussian peaks at ground truth locations of each body part
p. The cost function we aim to minimize at the output of
each stage at each level is therefore given by:
The overall objective for the full architecture is obtained
by adding the losses at each stage and is given by:
We use standard stochastic gradient descend to jointly train
all the T stages in the network. To share the image feature
x′ across all subsequent stages, we share the weights of corresponding convolutional layers (see Figure 2) across stages
4. Evaluation
4.1. Analysis
Addressing vanishing gradients. The objective in Equation 5 describes a decomposable loss function that operates
on different parts of the network (see Figure 2). Speciﬁcally,
each term in the summation is applied to the network after
each stage t effectively enforcing supervision in intermediate stages through the network. Intermediate supervision
has the advantage that, even though the full architecture can
have many layers, it does not fall prey to the vanishing gradient problem as the intermediate loss functions replenish
the gradients at each stage.
We verify this claim by observing histograms of gradient
magnitude (see Figure 5) at different depths in the architecture across training epochs for models with and without intermediate supervision. In early epochs, as we move from
the output layer to the input layer, we observe on the model
without intermediate supervision, the gradient distribution
is tightly peaked around zero because of vanishing gradients. The model with intermediate supervision has a much
PCK total, LSP PC
Detection rate %
Normalized distance
Ours 6−Stage
Ramakrishna et al., ECCV’14
PCK total, LSP PC
Detection rate %
Normalized distance
(i) Ours 3−Stage
(ii) Ours 3−Stage stagewise (sw)
(iii) Ours 3−Stage sw + finetune
(iv) Ours 3−Stage no IS
PCK total, LSP PC
Detection rate %
Normalized distance
Ours 1−Stage
Ours 2−Stage
Ours 3−Stage
Ours 4−Stage
Ours 5−Stage
Ours 6−Stage
Figure 6: Comparisons on 3-stage architectures on the LSP dataset (PC): (a) Improvements over Pose Machine. (b) Comparisons between the different
training methods. (c) Comparisons across each number of stages using joint training from scratch with intermediate supervision.
larger variance across all layers, suggesting that learning is
indeed occurring in all the layers thanks to intermediate supervision. We also notice that as training progresses, the
variance in the gradient magnitude distributions decreases
pointing to model convergence.
Beneﬁt of end-to-end learning. We see in Figure 6a that
replacing the modules of a pose machine with the appropriately designed convolutional architecture provides a large
boost of 42.4 percentage points over the previous approach
of in the high precision regime ( ) and 30.9
percentage points in the low precision regime ( ).
Comparison on training schemes. We compare different
variants of training the network in Figure 6b on the LSP
dataset with person-centric (PC) annotations. To demonstrate the beneﬁt of intermediate supervision with joint
training across stages, we train the model in four ways: (i)
training from scratch using a global loss function that enforces intermediate supervision (ii) stage-wise; where each
stage is trained in a feed-forward fashion and stacked (iii)
as same as (i) but initialized with weights from (ii), and (iv)
as same as (i) but with no intermediate supervision. We
ﬁnd that network (i) outperforms all other training methods, showing that intermediate supervision and joint training across stage is indeed crucial in achieving good performance. The stagewise training in (ii) saturate at suboptimal, and the jointly ﬁne-tuning in (iii) improves from
this sub-optimal to the accuracy level closed to (i), however
with effectively longer training iterations.
Performance across stages. We show a comparison of performance across each stage on the LSP dataset (PC) in Figure 6c. We show that the performance increases monotonically until 5 stages, as the predictors in subsequent stages
make use of contextual information in a large receptive ﬁeld
on the previous stage beliefs maps to resolve confusions between parts and background. We see diminishing returns at
the 6th stage, which is the number we choose for reporting
our best results in this paper for LSP and MPII datasets.
4.2. Datasets and Quantitative Analysis
In this section we present our numerical results in various standard benchmarks including the MPII, LSP, and
FLIC datasets. To have normalized input samples of 368 ×
368 for training, we ﬁrst resize the images to roughly make
the samples into the same scale, and then crop or pad the
image according to the center positions and rough scale estimations provided in the datasets if available. In datasets
such as LSP without these information, we estimate them
according to joint positions or image sizes. For testing, we
perform similar resizing and cropping (or padding), but estimate center position and scale only from image sizes when
necessary. In addition, we merge the belief maps from different scales (perturbed around the given one) for ﬁnal predictions, to handle the inaccuracy of the given scale estimation.
We deﬁne and implement our model using the Caffe 
libraries for deep learning. We publicly release the source
code and details on the architecture, learning parameters,
design decisions and data augmentation to ensure full reproducibility.3
MPII Human Pose Dataset. We show in Figure 8 our results on the MPII Human Pose dataset which consists
more than 28000 training samples. We choose to randomly
augment the data with rotation degrees in [−40◦, 40◦], scaling with factors in [0.7, 1.3], and horizonal ﬂipping. The
evaluation is based on PCKh metric where the error tolerance is normalized with respect to head size of the target.
Because there often are multiple people in the proximity of
the interested person (rough center position is given in the
dataset), we made two sets of ideal belief maps for training:
one includes all the peaks for every person appearing in the
proximity of the primary subject and the second type where
we only place peaks for the primary subject. We supply the
ﬁrst set of belief maps to the loss layers in the ﬁrst stage as
the initial stage only relies on local image evidence to make
predictions. We supply the second type of belief maps to the
3 
convolutional-pose-machines-release
Figure 7: Comparison of belief maps across stages for the elbow and wrist joints on the LSP dataset for a 3-stage CPM.
PCKh total, MPII
Normalized distance
Detection rate %
Ours 6−stage + LEEDS
Ours 6−stage
Pishchulin CVPR’16
Tompson CVPR’15
Tompson NIPS’14
Carreira CVPR’16
PCKh wrist & elbow, MPII
Normalized distance
PCKh knee, MPII
Normalized distance
PCKh ankle, MPII
Normalized distance
PCKh hip, MPII
Normalized distance
Figure 8: Quantitative results on the MPII dataset using the PCKh metric. We achieve state of the art performance and outperform signiﬁcantly on
difﬁcult parts such as the ankle.
PCK total, LSP PC
Normalized distance
Detection rate %
Ours 6−Stage + MPI
Ours 6−Stage
Pishchulin CVPR’16 (relabel) + MPI
Tompson NIPS’14
Chen NIPS’14
Wang CVPR’13
PCK wrist & elbow, LSP PC
Normalized distance
PCK knee, LSP PC
Normalized distance
PCK ankle, LSP PC
Normalized distance
PCK hip, LSP PC
Normalized distance
Figure 9: Quantitative results on the LSP dataset using the PCK metric. Our method again achieves state of the art performance and has a signiﬁcant
advantage on challenging parts.
loss layers of all subsequent stages. We also ﬁnd that supplying to all subsequent stages an additional heat-map with
a Gaussian peak indicating center of the primary subject is
beneﬁcial.
Our total PCKh-0.5 score achieves state of the art at
87.95% (88.52% when adding LSP training data), which is
6.11% higher than the closest competitor, and it is noteworthy that on the ankle (the most challenging part), our PCKh-
0.5 score is 78.28% (79.41% when adding LSP training
data), which is 10.76% higher than the closest competitor.
This result shows the capability of our model to capture long
distance context given ankles are the farthest parts from
head and other more recognizable parts. Figure 11 shows
our accuracy is also consistently signiﬁcantly higher than
other methods across various view angles deﬁned in , especially in those challenging non-frontal views. In summary, our method improves the accuracy in all parts, over
all precisions, across all view angles, and is the ﬁrst one
achieving such high accuracy without any pre-training from
other data, or post-inference parsing with hand-design priors or initialization of such a structured prediction task as in
 . Our methods also does not need another module
dedicated to location reﬁnement as in to achieve great
high-precision accuracy with a stride-8 network.
Leeds Sports Pose (LSP) Dataset.
We evaluate our
method on the Extended Leeds Sports Dataset that
consists of 11000 images for training and 1000 images
for testing. We trained on person-centric (PC) annotations
and evaluate our method using the Percentage Correct Keypoints (PCK) metric . Using the same augmentation
scheme as for the MPI dataset, our model again achieves
state of the art at 84.32% (90.5% when adding MPII train-
Figure 10: Qualitative results of our method on the MPII, LSP and FLIC datasets respectively. We see that the method is able to handle non-standard
poses and resolve ambiguities between symmetric parts for a variety of different relative camera views.
10 11 12 13 14 15
Viewpoint clusters
PCKh 0.5, %
PCKh by Viewpoint
Pishchulin et al., CVPR’16
Tompson et al., CVPR’15
Carreira et al., CVPR’16
Tompson et al., NIPS’14
Figure 11: Comparing PCKh-0.5 across various viewpoints in the
MPII dataset. Our method is signiﬁcantly better in all the viewpoints.
ing data). Note that adding MPII data here signiﬁcantly
boosts our performance, due to its labeling quality being
much better than LSP. Because of the noisy label in the LSP
dataset, Pishchulin et al. reproduced the dataset with
original high resolution images and better labeling quality.
FLIC Dataset.
We evaluate our method on the FLIC
Dataset which consists of 3987 images for training and
1016 images for testing. We report accuracy as per the metric introduced in Sapp et al. for the elbow and wrist
joints in Figure 12. Again, we outperform all prior art at
 with 97.59% on elbows and 95.03% on wrists. In
higher precision region our advantage is even more signiﬁcant: 14.8 percentage points on wrists and 12.7 percentage
points on elbows at , and 8.9 percentage points
on wrists and 9.3 percentage points on elbows at .
PCK wrist, FLIC
Normalized distance
Detection rate %
Ours 4−Stage
Tompson et al., CVPR’15
Tompson et al., NIPS’14
Chen et al., NIPS’14
Toshev et al., CVPR’14
Sapp et al., CVPR’13
PCK elbow, FLIC
Normalized distance
Figure 12: Quantitative results on the FLIC dataset for the elbow and
wrist joints with a 4-stage CPM. We outperform all competing methods.
5. Discussion
Convolutional pose machines provide an end-to-end architecture for tackling structured prediction problems in
computer vision without the need for graphical-model style
inference. We showed that a sequential architecture composed of convolutional networks is capable of implicitly
learning a spatial models for pose by communicating increasingly reﬁned uncertainty-preserving beliefs between
stages. Problems with spatial dependencies between variables arise in multiple domains of computer vision such as
semantic image labeling, single image depth prediction and
object detection and future work will involve extending our
architecture to these problems. Our approach achieves state
of the art accuracy on all primary benchmarks, however we
do observe failure cases mainly when multiple people are
in close proximity. Handling multiple people in a single
end-to-end architecture is also a challenging problem and
an interesting avenue for future work.