“© 2017 IEEE. Personal use of this material is permitted. Permission from IEEE must be
obtained for all other uses, in any current or future media, including
reprinting/republishing this material for advertising or promotional purposes, creating
new collective works, for resale or redistribution to servers or lists, or reuse of any
copyrighted component of this work in other works.”
Re-ranking Person Re-identiﬁcation with k-reciprocal Encoding
Zhun Zhong†‡, Liang Zheng§, Donglin Cao†‡, Shaozi Li†‡∗
†Cognitive Science Department, Xiamen University, China
§University of Technology Sydney
‡ Fujian Key Laboratory of Brain-inspired Computing Technique and Applications, Xiamen University
{zhunzhong007,liangzheng06}@gmail.com {another,szlig}@xmu.edu.cn
When considering person re-identiﬁcation (re-ID) as a
retrieval process, re-ranking is a critical step to improve
its accuracy.
Yet in the re-ID community, limited effort
has been devoted to re-ranking, especially those fully automatic, unsupervised solutions. In this paper, we propose
a k-reciprocal encoding method to re-rank the re-ID results.
Our hypothesis is that if a gallery image is similar to the probe in the k-reciprocal nearest neighbors, it
is more likely to be a true match. Speciﬁcally, given an
image, a k-reciprocal feature is calculated by encoding its
k-reciprocal nearest neighbors into a single vector, which
is used for re-ranking under the Jaccard distance. The ﬁnal distance is computed as the combination of the original
distance and the Jaccard distance. Our re-ranking method
does not require any human interaction or any labeled data,
so it is applicable to large-scale datasets. Experiments on
the large-scale Market-1501, CUHK03, MARS, and PRW
datasets conﬁrm the effectiveness of our method1.
1. Introduction
Person re-identiﬁcation (re-ID) 
is a challenging task in computer vision. In general, re-ID
can be regarded as a retrieval problem. Given a probe person, we want to search in the gallery for images containing
the same person in a cross-camera mode. After an initial
ranking list is obtained, a good practice consists of adding
a re-ranking step, with the expectation that the relevant images will receive higher ranks. In this paper, we thus focus
on the re-ranking issue.
Re-ranking has been mostly studied in generic instance
retrieval . The main advantage of many reranking methods is that it can be implemented without requiring additional training samples, and that it can be ap-
∗Corresponding author
1The source code is available upon request.
Figure 1. Illustration of the nearest neighborhoods of a person
re-identiﬁcation application. Top: The query and its 10-nearest
neighbors, where P1-P4 are positives, N1-N6 are negatives. Bottom: Each two columns shows 10-nearest neighbors of the corresponding person. Blue and green box correspond to the probe and
positives, respectively. We can observe that the probe person and
positive persons are 10-nearest neighbors reciprocally.
plied to any initial ranking result.
The effectiveness of re-ranking depends heavily on the
quality of the initial ranking list.
A number of previous works exploit the similarity relationships between topranked images (such as the k-nearest neighbors) in the initial ranking list . An underlying assumption is that if a returned image ranks within the knearest neighbors of the probe, it is likely to be a true match
which can be used for the subsequent re-ranking.
Nevertheless, situation may deviate from optimal cases: false
matches may well be included in the k-nearest neighbors of
the probe. For example, in Fig. 1, P1, P2, P3 and P4 are
four true matches to the probe, but all of them are not included in the top-4 ranks. We observe some false matches
(N1-N6) receive high ranks. As a result, directly using the
top-k ranked images may introduce noise in the re-ranking
systems and compromise the ﬁnal result.
In literature, the k-reciprocal nearest neighbor is
an effective solution to the above-mentioned problem, i.e.,
 
the pollution of false matches to the top-k images. When
two images are called k-reciprocal nearest neighbors, they
are both ranked top-k when the other image is taken as the
probe. Therefore, the k-reciprocal nearest neighbor serves
as a stricter rule whether two images are true matches or
not. In Fig. 1, we observe that the probe is a reciprocal
neighbor to the true matched images, but not to the false
matches. This observation identiﬁes the true matches in the
initial ranking list to improve the re-ranking results.
Given the above considerations, this paper introduces a
k-reciprocal encoding method for re-ID re-ranking. Our
approach consists of three steps.
First, we encode the
weighted k-reciprocal neighbor set into a vector to form the
k-reciprocal feature. Then, the Jaccard distance between
two images can be computed by their k-reciprocal features.
Second, to obtain a more robust k-reciprocal feature, we develop a local query expansion approach to further improve
the re-ID performance. Finally, the ﬁnal distance is calculated as the weighted aggregation of the original distance
and the Jaccard distance.
It is subsequently used to acquire the re-ranking list. The framework of the proposed
approach is illustrated in Fig. 2. To summarize, the contributions of this paper are:
• We propose a k-reciprocal feature by encoding the kreciprocal feature into a singe vector. The re-ranking
process can be easily performed by vector comparison.
• Our approach does not require any human interaction
or annotated data, and can be applied to any person
re-ID ranking result in an automatic and unsupervised
• The proposed method effectively improves the person re-ID performance on several datasets, including
Market-1501, CUHK03, MARS, and PRW. In particular, we achieve the state-of-the-art accuracy on Market-
1501 in both rank-1 and mAP.
2. Related Work
We refer the interested readers to for a detailed
review of person re-identiﬁcation (re-ID). Here we focus on
research that aims at re-ranking methods for object retrieval
and particularly for re-ID.
Re-ranking for object retrieval. Re-ranking methods
have been successfully studied to improve object retrieval
accuracy .
A number of works utilize the k-nearest
neighbors to explore similarity relationships to address the
re-ranking problem. Chum et al. propose the average
query expansion (AQE) method, where a new query vector
is obtained by averaging the vectors in the top-k returned
results, and is used to re-query the database. To take advantage of the negative sample which is far away from the
appearance feature
Mahalanobis
aggregation
k-reciprocal feature
initial ranking list: AP = 9.05%
proposed ranking list: AP = 51.98%
feature extraction
distance calculation
aggregation
re-ranking
reidentiﬁcation. Given a probe p and a gallery, the appearance feature and k-reciprocal feature are extracted for each person. Then
the original distance d and Jaccard distance dJ are calculated for
each pair of the probe person and gallery person. The ﬁnal distance d∗is computed as the combination of d and dJ, which is
used to obtain the proposed ranking list.
query image, Arandjelovi´c and Zisserman develop the
discriminative query expansion (DQE) to use a linear SVM
to obtain a weight vector. The distance from the decision
boundary is employed to revise the initial ranking list. Shen
et al. make use of the k-nearest neighbors of the initial ranking list as new queries to produce new ranking lists.
The new score of each image is calculated depending on
its positions in the produced ranking lists. More recently,
sparse contextual activation (SCA) propose to encode
the neighbor set into a vector, and to indicate samples similarity by generalized Jaccard distance. To prevent the pollution of false matches to the top-k images, the concept of
k-reciprocal nearest neighbors is adopted in . In
 , the contextual dissimilarity measure (CDM) is proposed to reﬁne the similarity by iteratively regularizing the
average distance of each point to its neighborhood. Qin et
al. formally present the concept of k-reciprocal nearest neighbors. The k-reciprocal nearest neighbors are considered as highly relevant candidates, and used to construct
closed set for re-ranking the rest of dataset. Our work departs from both works in several aspects. We do not symmetrize nearest neighborhood relationship to reﬁne the similarity as , or directly consider the k-reciprocal nearest
neighbors as top ranked samples like . Instead we calculate a new distance between two images by comparing
their k-reciprocal nearest neighbors.
Re-ranking
reidentiﬁcation methods mainly focus on feature representation or metric learning . Recently, several researchers have paid attention to re-ranking based method
in the re-ID community. Different from and ,
which require human interaction or label supervision, we
focus on an automatic and unsupervised solution.
al. develop a re-ranking model by analyzing the relative information and direct information of near neighbors
of each pair of images. In , an unsupervised re-ranking
model is learnt by jointly considering the content and context information in the ranking list, which effectively remove ambiguous samples to improve the performance of
re-ID. Leng et al.
 propose a bidirectional ranking
method to revise the initial ranking list with the new similarity computed as the fusion of both content and contextual similarity. Recently, the common nearest neighbors of
different baseline methods are exploited to re-ranking task
 . Ye et al. combine the common nearest neighbors of global and local features as new queries, and revise
the initial ranking list by aggregating the new ranking lists
of global and local features. In , the k-nearest neighbor
set is utilized to calculate both similarity and dissimilarity
from different baseline method, then the aggregation of similarity and dissimilarity is performed to optimize the initial
ranking list. Continues progress of these mentioned methods in re-ranking promises to make future contributions to
discovering further information from k-nearest neighbors.
However, using the k-nearest neighbors to implement reranking directly may restrict the overall performance since
false matches are often included. To tackle this problem,
in this paper, we investigate the importance of k-reciprocal
neighbors in person re-ID and hence design a simple but
effective re-ranking method.
3. Proposed Approach
3.1. Problem Deﬁnition
Given a probe person p and the gallery set with N images
G = {gi | i = 1, 2, ...N}, the original distance between two
persons p and gi can be measured by Mahalanobis distance,
d(p, gi) = (xp −xgi)⊤M(xp −xgi)
where xp and xgi represents the appearance feature of probe
p and gallery gi, respectively, and M is a positive semideﬁnite matrix.
The initial ranking list L(p, G) = {g0
be obtained according to the pairwise original distance between probe p and gallery gi, where d(p, g0
i ) < d(p, g0
Our goal is to re-rank L(p, G), so that more positive samples
rank top in the list, and thus to improve the performance of
person re-identiﬁcation (re-ID).
3.2. K-reciprocal Nearest Neighbors
Following , we deﬁne N(p, k) as the k-nearest
neighbors (i.e. the top-k samples of the ranking list) of a
N(p, k) = {g0
2, ..., g0
k}, |N(p, k)| = k
Figure 3. Example of the k-reciprocal neighbors expansion process. The positive person G which is similar to C is added into
R∗(Q, 20).
where |·| denotes the number of candidates in the set. The
k-reciprocal nearest neighbors R(p, k) can be deﬁned as,
R(p, k) = {gi | (gi ∈N(p, k)) ∧(p ∈N(gi, k))}
According to the previous description, the k-reciprocal
nearest neighbors are more related to probe p than k-nearest
neighbors.
However, due to variations in illuminations,
poses, views and occlusions, the positive images may be excluded from the k-nearest neighbors, and subsequently not
be included in the k-reciprocal nearest neighbors. To address this problem, we incrementally add the 1
2k-reciprocal
nearest neighbors of each candidate in R(p, k) into a more
robust set R∗(p, k) according to the following condition
R∗(p, k) ←R(p, k) ∪R(q, 1
R(p, k) ∩R(q, 1
∀q ∈R(p, k)
By this operation, we can add into R∗(p, k) more positive
samples which are more similar to the candidates in R(p, k)
than to the probe p. This is stricter against including too
many negative samples compared to . In Fig. 3, we
show an example of the expansion process. Initially, the
hard positive G is missed out in R(Q, 20). Interestingly,
G is included in R(C, 10), which is beneﬁcial information
for bringing positive G back. Then, we can apply Eq. 4
to add G into R∗(Q, 20). Therefore, after expansion process, more positive samples could be added into R∗(p, k).
Different from , we do not directly take the candidates
in R∗(p, k) as top ranked images.
Instead, we consider
R∗(p, k) as contextual knowledge to re-calculate the distance between the probe and gallery.
3.3. Jaccard Distance
In this subsection, we re-calculate the pairwise distance
between the probe p and the gallery gi by comparing their
k-reciprocal nearest neighbor set. As described earlier 
 , we believe that if two images are similar, their kreciprocal nearest neighbor sets overlap, i.e., there are some
duplicate samples in the sets. And the more duplicate samples, the more similar the two images are. The new distance
between p and gi can be calculated by the Jaccard metric of
their k-reciprocal sets as:
dJ(p, gi) = 1 −|R∗(p, k) ∩R∗(gi, k)|
|R∗(p, k) ∪R∗(gi, k)|
where |·| denotes the number of candidates in the set. We
adopt Jaccard distance to name this new distance. Although
the above method could capture the similarity relationships
between two images, there still remains three obvious shortcomings:
• It is very time-consuming to get the intersection and
union of two neighbor sets R∗(p, k) and R∗(gi, k) in
many cases, and it becomes more challenging while
the Jaccard distance is needed to be calculated for all
image pairs. An alternative way is to encode the neighbor set into an easier but equivalent vector, reducing
the computational complexity greatly, while maintaining original structure in neighbor set.
• The distance calculation method weighs all neighbors
equally, leading to a simple but not discriminative
neighbor set. In fact, neighbors that are closer to probe
p are more likely to be true positives. Therefore, it
is convincing and reasonable to re-calculate weights
based on the original distance, and assign large weights
to nearer samples.
• Simply taking the contextual information into account
will pose considerable barriers when attempting to
measure similarity between two persons, since unavoidable variation makes it difﬁcult to discriminate
sufﬁcient contextual information. Hence, incorporating original distance and Jaccard distance becomes important for a robust distance.
Inspired by , the k-reciprocal feature is proposed
to address the ﬁrst two shortcomings, by encoding the
k-reciprocal nearest neighbor set into a vector Vp
[Vp,g1, Vp,g2, ..., Vp,gN ], where Vp,gi is initially deﬁned by
a binary indicator function as
if gi ∈R∗(p, k)
otherwise.
In this way, the k-reciprocal neighbor set can be represented
as an N-dimensional vector, with each item of the vector
indicating whether the corresponding image is included in
R∗(p, k). However, this function still consider each neighbor as equal. Intuitively, the neighbor who is closer to the
probe p should be more similar with the probe p. Thus, we
reassign weights according to the original distance between
the probe and its neighbor, we redeﬁne Eq. 6 by the Gaussian kernel of the pairwise distance as
if gi ∈R∗(p, k)
otherwise.
In this way, the hard weighting (0 or 1) is converted into soft
weighting, with closer neighbors assigned larger weights
while farther neighbors smaller weights.
Based on the
above deﬁnition, the number of candidates in the intersection and union set can be calculated as
|R∗(p, k) ∩R∗(gi, k)| = ∥min(Vp, Vgi)∥1
|R∗(p, k) ∪R∗(gi, k)| = ∥max(Vp, Vgi)∥1
where min and max operate the element-based minimization and maximization for two input vectors. ∥·∥1 is L1
norm. Thus we can rewrite the Jaccard distance in Eq. 5 as
dJ(p, gi) = 1 −
j=1 min(Vp,gj, Vgi,gj)
j=1 max(Vp,gj, Vgi,gj)
By formula transformation from Eq. 5 to Eq. 10, we have
succeed in converting the set comparison problem into pure
vector calculation, which is much easier practically.
3.4. Local Query Expansion
Emulating the idea that the images from the same class
may share similar features, we use the k-nearest neighbors
of the probe p to implement the local query expansion. The
local query expansion is deﬁned as
As a result, the k-reciprocal feature Vp is expanded by the
k-nearest neighbors of probe p. Note that, we implement
this query expansion both on the probe p and galleries gi.
Since there will be noise in the k-nearest neighbors, we limit
the size of N(p, k) used in the local query expansion to a
smaller value. In order to distinguish between the size of
R∗(gi, k) and N(p, k) used in Eq. 7 and Eq. 11, we denote
the former as k1 and the latter as k2, respectively, where
3.5. Final Distance
In this subsection, we focus on the third shortcoming of
Eq. 5. While most existing re-ranking methods ignore the
importance of original distance in re-ranking, we jointly aggregate the original distance and Jaccard distance to revise
the initial ranking list, the ﬁnal distance d∗is deﬁned as
d∗(p, gi) = (1 −λ)dJ(p, gi) + λd(p, gi)
where λ ∈ denotes the penalty factor, it penalizes galleries far away from the probe p. When λ = 0, only the
k-reciprocal distance is considered. On the contrary, when
λ = 1, only the original distance is considered. The effect
of λ is discussed in section 4. Finally, the revised ranking
list L∗(p, G) can be obtained by ascending sort of the ﬁnal
3.6. Complexity Analysis
In the proposed method, most of the computation costs
focus on pairwise distance computing for all gallery pairs.
Suppose the size of the gallery set is N, the computation
complexity required for the distance measure and the ranking process is O(N 2) and O(N 2logN), respectively. However, in practical applications, we can calculate the pairwise
distance and obtain the ranking lists for the gallery in advance ofﬂine. As a result, given a new probe p, we only need
to compute the pairwise distance between p and gallery with
computation complexity O(N) and to rank all ﬁnal distance
with computation complexity O(NlogN).
4. Experiments
4.1. Datasets and Settings
Datasets Because our re-ranking approach is based on
the comparison of similar neighbors between two persons,
we conducted experiments on four large-scale person reidentiﬁcation (re-ID) benchmark datasets that contain multiple positive samples for each probe in the gallery : including two image-based datasets, Market-1501 , CUHK03
 , a video-based dataset MARS , and an end-to-end
dataset PRW (see Table 1 for an overview).
Market-1501 is currently the largest image-based
re-ID benchmark dataset. It contains 32,668 labeled bounding boxes of 1,501 identities captured from 6 different view
points. The bounding boxes are detected using Deformable
Part Model (DPM) . The dataset is split into two parts:
12,936 images with 751 identities for training and 19,732
images with 750 identities for testing.
In testing, 3,368
hand-drawn images with 750 identities are used as probe
set to identify the correct identities on the testing set. We
report the single-query evaluation results for this dataset.
CUHK03 contains 14,096 images of 1,467 identities. Each identity is captured from two cameras in the
CUHK campus, and has an average of 4.8 images in each
camera. The dataset provides both manually labeled bounding boxes and DPM-detected bounding boxes. In this paper,
both experimental results on ‘labeled’ and ‘detected’ data
are presented.
MARS is the largest video-based re-ID benchmark dataset to date, containing 1,261 identities and around
20,000 video sequences.
These sequences are collected
from 6 different cameras and each identity has 13.2 se-
Table 1. The details of datasets used in our experiments.
Market-1501 
CUHK03 
quences on average. Each sequence is automatically obtained by the DPM as pedestrian detector and the GMMCP
 as tracker. In addition, the dataset also contains 3,248
distractor sequences. The dataset is ﬁxedly split into training and test sets, with 631 and 630 identities, respectively.
In testing, 2,009 probes are selected for query.
PRW is an end-to-end large-scale dataset.
composed of 11,816 frames of 932 identities captured from
six different cameras. A total of 43,110 annotated person
bounding boxes are generated from these frames. Given a
query bounding box, the dataset aims to ﬁrst perform pedestrian detection on the raw frames to generate the gallery, and
identify the correct bounding boxes from the gallery. The
dataset is divided into a training set with 5,704 frames of
482 identities and a test set with 6,112 frames of 450 identities. In testing, 2,057 query images for 450 identities are
selected for evaluation. A detected bounding box is considered correct if its IoU value with the ground truth is above
Evaluation metrics We use two evaluation metrics to
evaluate the performance of re-ID methods on all datasets.
The ﬁrst one is the Cumulated Matching Characteristics
(CMC). Considering re-ID as a ranking problem, we report
the cumulated matching accuracy at rank-1. The other one
is the mean average precision (mAP) considering re-ID as
an object retrieval problem, as described in .
Feature representations The Local Maximal Occurrence (LOMO) features are used to represent the person
appearance . It is robust to view changes and illumination variations. In addition, the ID-discriminative Embedding (IDE) feature proposed in is used. The IDE
extractor is effectively trained on classiﬁcation model including CaffeNet and ResNet-50 . It generates a
1,024-dim (or 2,048-dim) vector for each image, which is
effective in large-scale re-ID datasets. For the convenience
of description, we abbreviate the IDE trained on CaffeNet
and ResNet-50 to IDE (C) and IDE (R) respectively. We use
these two methods as the baseline of our re-ID framework.
4.2. Experiments on Market-1501
We ﬁrst evaluate our method on the largest image-based
re-ID dataset. In this dataset, in addition to using LOMO
and IDE features, we also use the BOW feature. We
trained the IDE feature on CaffeNet and ResNet-50
 . We set k1 to 20, k2 to 6, and λ to 0.3. Results among
various methods with our method are shown in Table 2. Our
method consistently improves the rank-1 accuracy and mAP
Table 2. Comparison among various methods with our re-ranking
approach on the Market-1501 dataset.
BOW + Ours
BOW + KISSME
BOW + KISSME + Ours
BOW + XQDA
BOW + XQDA + Ours
LOMO + KISSME
LOMO + KISSME + Ours
LOMO + XQDA 
LOMO + XQDA + Ours
IDE (C) 
IDE (C) + AQE 
IDE (C) + CDM 
IDE (C) + Ours
IDE (C) + XQDA
IDE (C) + XQDA + Ours
IDE (C) + KISSME
IDE (C) + KISSME + Ours
IDE (R) 
IDE (R) + AQE 
IDE (R) + CDM 
IDE (R) + Ours
IDE (R) + XQDA
IDE (R) + XQDA + Ours
IDE (R) + KISSME
IDE (R) + KISSME + Ours
with all features, even with the IDE (R) which is trained on
the powerful ResNet-50 model. Our method gains 3.06%
improvement in rank-1 accuracy and signiﬁcant 13.99%
improvement in mAP for IDE (R). Moreover, experiments
conducted with two metrics, KISSME and XQDA 
verify the effectiveness of our method on different distance
metrics. Comparing with two popular re-ranking methods,
average query expansion (AQE) and contextual dissimilarity measure (CDM) , our method outperforms them
both in rank-1 accuracy and mAP. Many existing re-ranking
methods of person re-id are for single-shot setting or require
human interaction . Therefore, these methods are
not directly comparable to our method.
Table 3 compares the performance of our best approach,
IDE (R) + KISSME + ours, with other state-of-the-art methods. Our best method impressively outperforms the previous work and achieves large margin advances compared
with the state-of-the-art results in rank-1 accuracy, particularly in mAP.
4.3. Experiments on CUHK03
Following the single-shot setting protocol in , we
split the dataset into a training set containing 1,160 identities and a testing set containing 100 identities. The test process is repeated with 20 random splits. We set k1 to 7, k2 to
3 , and λ to 0.85. Results for single-shot setting are shown
in Table 4. As we can see that, when using IDE feature, our
re-ranking results are almost equivalent to raw results. It
Comparison of our method with state-of-the-art on the
Market-1501 dataset.
PersonNet 
LOMO + XQDA 
MSTCNN 
WARCA 
MBCNN 
HistLBP+kLFDA 
Gated 
IDE (R) + KISSME + Ours
Table 4. Comparison among various methods with our re-ranking
approach on the CUHK03 dataset under the single-shot setting.
LOMO + XQDA 
LOMO + XQDA + Ours
IDE (C) 
IDE (C) + Ours
IDE (C) + XQDA
IDE (C) + XQDA + Ours
is reasonable that our approach does not work. Since there
is only one positive for each identity in the gallery, our approach could not obtain sufﬁcient contextual information.
Even so, our approach gains nearly 1% improvement for
rank-1 accuracy and mAP while applying LOMO feature
on both ‘labeled’ and ‘detected’ setting, except LOMO +
XQDA in ‘labeled’ setting. Experiments show that, in the
case of single-shot setting, our method does no harm to results, and has the chance to improve the performance.
Apart from the previous evaluation method, we also report results using a new training/testing protocol similar to
that of Market-1501. The new protocol splits the dataset
into training set and testing set, which consist of 767 identities and 700 identities respectively. In testing, we randomly
select one image from each camera as the query for each
identity and use the rest of images to construct the gallery
set. The new protocol has two advantages:1) For each identity, there are multiple ground truths in the gallery. This
is more consistent with practical application scenario. 2)
Evenly dividing the dataset into training set and testing set
at once helps avoid repeating training and testing multiple
times. The divided training/testing sets and the evaluation
code are available in our source code. We set k1 to 20, k2 to
6, and λ to 0.3. Results in Table 5 show that, in all cases, our
method signiﬁcantly improves rank-1 accuracy and mAP.
Table 5. Comparison among various methods with our re-ranking
approach on the CUHK03 dataset under the new training/testing
LOMO + XQDA 
LOMO + XQDA + Ours
IDE (C) 
IDE (C) + Ours
IDE (C) + XQDA
IDE (C) + XQDA + Ours
IDE (R) 
IDE (R) + Ours
IDE (R) + XQDA
IDE (R) + XQDA + Ours
Especially for IDE(R) + XQDA, our method gains an increase of 6.1% in rank-1 accuracy and 10.7% in mAP on
‘labeled’ setting.
4.4. Experiments on MARS
We also evaluate our method on video-based dataset. On
this dataset, we employ two features as the baseline methods, LOMO and IDE. For each sequence, we ﬁrst extract
feature for each image, and use max pooling to combine
all features into a ﬁxed-length vector. We set k1 to 20, k2
to 6, and λ to 0.3 in this dataset. The performance of our
method on different features and metrics are reported in Table 6. As we can see, our re-ranking method consistently
improves the rank-1 accuracy and mAP of the two different features. Results compared with average query expansion (AQE) and contextual dissimilarity measure (CDM)
 show our method outperforms them in both rank-1 accuracy and mAP. Moreover, our method can even improve
the rank-1 accuracy and mAP in all cases while discriminative metrics are used. In particular, our method improves
the rank-1 accuracy from 70.51% to 73.94% and the mAP
from 55.12% to 68.45% for IDE (R) + XQDA. Experimental results demonstrate that our re-ranking method is also
effective on video-based re-ID problem. We believe that results of this problem will be further improved by combining
more sophisticated feature model with our method.
4.5. Experiments on PRW
We also evaluate our method on the end-to-end re-ID
dataset. This dataset is more challenging than image-based
and video-based datasets, since it requires to detect person
from a raw image and identify the correct person from the
detected galleries. Following , we ﬁrst use DPM to detect candidate bounding boxes of persons on a large raw
image, and then query on the detected bounding boxes. We
use LOMO and IDE to extract features for each bounding
box, and take these two methods as baselines. We set k1
to 20, k2 to 6, and λ to 0.3. Experiment results are shown
Table 6. Comparison among various methods with our re-ranking
approach on the MARS dataset.
LOMO + KISSME
LOMO + KISSME + Ours
LOMO + XQDA 
LOMO + XQDA + Ours
IDE (C) 
IDE (C) + AQE 
IDE (C) + CDM 
IDE (C) + Ours
IDE (C) + KISSME
IDE (C) + KISSME + Ours
IDE (C) + XQDA
IDE (C) + XQDA + Ours
IDE (R) 
IDE (R) + AQE 
IDE (R) + CDM 
IDE (R) + Ours
IDE (R) + KISSME
IDE (R) + KISSME + Ours
IDE (R) + XQDA
IDE (R) + XQDA + Ours
Table 7. Comparison among various methods with our re-ranking
approach on the PRW dataset.
LOMO + XQDA 
LOMO + XQDA + Ours
IDE (C) 
IDE (C) + Ours
in Table 7. It can be seen that, our method consistently improves the rank-1 accuracy and mAP of both LOMO and
IDE feature, demonstrating that our method is effective on
end-to-end re-ID task.
4.6. Parameters Analysis
The parameters of our method are analyzed in this subsection. The baseline methods are LOMO and IDE
 trained on CaffeNet. We evaluate the inﬂuence of k1,
k2, and λ on rank-1 accuracy and mAP on the Market-1501
dataset. To conduct experimental analyses, we randomly
split the original training set into training and validation
sets, with 425 and 200 identities respectively.
Fig. 4 shows the impact of the size of k-reciprocal neighbors set on rank-1 accuracy and mAP. It can be seen that,
our method consistently outperforms the baselines both on
the rank-1 accuracy and mAP with various values of k1. The
mAP ﬁrst increases with the growth of k1, and then begins a
slow decline after k1 surpasses a threshold. Similarly, as k1
grows, the rank-1 accuracy ﬁrst rises with ﬂuctuations; and
after arriving at the optimal point around k1 = 20, it starts
to drop. With a too large value of k1, there will be more
false matches included in the k-reciprocal set, resulting in a
decline in performance.
Rank−1 (LOMO)
Rank−1 accuracy (%)
mAP (LOMO)
Rank−1 (IDE)
Rank−1 accuracy (%)
LOMO + XQDA +Ours
IDE + Ours
LOMO + XQDA
LOMO + KISSME +Ours
IDE + XQDA + Ours
LOMO + KISSME
IDE + XQDA
Figure 4. The impact of the parameter k1 on re-ID performance on
the Market-1501 dataset. We ﬁx the k2 at 6 and λ at 0.3.
Rank−1 (LOMO)
Rank−1 accuracy (%)
mAP (LOMO)
Rank−1 (IDE)
Rank−1 accuracy (%)
LOMO + XQDA +Ours
IDE + Ours
LOMO + XQDA
LOMO + KISSME +Ours
IDE + XQDA + Ours
LOMO + KISSME
IDE + XQDA
Figure 5. The impact of the parameter k2 on re-ID performance on
the Market-1501 dataset. We ﬁx the k1 at 20 and λ at 0.3.
The impact of k2 are shown in Fig. 5. When k2 is equal
to 1, the local query expansion is not considered. Obviously, the performance grows as k2 increases in a reasonable range. Notice that, assigning a much too large value
to k2 reduces the performance. Since it may lead to exponentially containing false matches in local query expansion,
which undoubtedly harm the feature and thus the performance. As a matter of fact, the local query expansion is
very beneﬁcial for further enhancing the performance when
setting an appropriate value to k2.
The impact of the parameter λ is shown in Fig. 6. Notice
that, when λ is set to 0, we only consider the Jaccard distance as the ﬁnal distance; in contrast, when λ equal to 1, the
Jaccard distance is left out, and the result is exactly the baseline result obtained using pure original distance. It can be
observed that when only Jaccard distance is considered, our
method consistently outperforms the baseline. This demonstrates that the proposed Jaccard distance is effective for reranking. Moreover, when simultaneously considering both
the original distance and the Jaccard distance, the performance obtains a further improvement when the value of λ is
around 0.3, demonstrating that the original distance is also
important for re-ranking.
In Fig. 7, four example results are shown. The proposed
method, IDE + Ours, effectively ranks more true persons in
the top of ranking list which are missed in the ranking list
5. Conclusion
In this paper, we address the re-ranking problem in person re-identiﬁcation (re-ID). We propose a k-reciprocal feature by encoding the k-reciprocal nearest neighbors into a
single vector, thus the re-ranking process can be readily performed by vector comparison. To capture the similarity re-
Rank−1 (LOMO)
Rank−1 Accuracy (%)
mAP (LOMO)
Rank−1 (IDE)
Rank−1 Accuracy (%)
LOMO + XQDA +Ours
IDE + Ours
LOMO + XQDA
LOMO + KISSME +Ours
IDE + XQDA + Ours
LOMO + KISSME
IDE + XQDA
Figure 6. The impact of the parameter λ on re-ID performance on
the Market-1501 dataset. We ﬁx the k1 at 20 and k2 at 6.
IDE + Ours
IDE + Ours
IDE + Ours
IDE + Ours
Figure 7. Example results of four probes on the Market-1501
dataset. For each probe, the ﬁrst row and the second correspond to
the ranking results produced by IDE and IDE + Ours, respectively.
Person surrounded by green box denotes the same person as the
lationships from similar samples, the local expansion query
is proposed to obtain a more robust k-reciprocal feature.
The ﬁnal distance based on the combination of the original distance and Jaccard distance produces effective improvement of the re-ID performance on several large-scale
datasets. It is worth mentioning that our approach is fully
automatic and unsupervised, and can be easily implemented
to any ranking result.
6. Acknowledgements
We thank Wenjing Li and Mingyi Lei for helpful discussions and encouragement. This work is supported by
the Nature Science Foundation of China (No. 61572409,
No.61402386 & No. 61571188), Fujian Province 2011 Collaborative Innovation Center of TCM Health Management
and Collaborative Innovation Center of Chinese Oolong Tea
IndustryCollaborative Innovation Center of Fujian