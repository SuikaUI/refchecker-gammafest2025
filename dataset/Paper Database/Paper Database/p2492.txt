Deep Learning for Anomaly Detection: A Review
GUANSONG PANG∗, University of Adelaide
CHUNHUA SHEN, University of Adelaide
LONGBING CAO, University of Technology Sydney
ANTON VAN DEN HENGEL, University of Adelaide
Anomaly detection, a.k.a. outlier detection or novelty detection, has been a lasting yet active research area
in various research communities for several decades. There are still some unique problem complexities and
challenges that require advanced approaches. In recent years, deep learning enabled anomaly detection,
i.e., deep anomaly detection, has emerged as a critical direction. This paper surveys the research of deep
anomaly detection with a comprehensive taxonomy, covering advancements in three high-level categories
and 11 fine-grained categories of the methods. We review their key intuitions, objective functions, underlying
assumptions, advantages and disadvantages, and discuss how they address the aforementioned challenges. We
further discuss a set of possible future opportunities and new perspectives on addressing the challenges.
ACM Reference Format:
Guansong Pang, Chunhua Shen, Longbing Cao, and Anton van den Hengel. 2020. Deep Learning for Anomaly
Detection: A Review. ACM Comput. Surv. 1, 1, Article 1 , 36 pages. 
INTRODUCTION
Anomaly detection, a.k.a. outlier detection or novelty detection, is referred to as the process of
detecting data instances that significantly deviate from the majority of data instances. Anomaly
detection has been an active research area for several decades, with early exploration dating back
as far as to 1960s . Due to the increasing demand and applications in broad domains, such
as risk management, compliance, security, financial surveillance, health and medical risk, and AI
safety, anomaly detection plays increasingly important roles, highlighted in various communities
including data mining, machine learning, computer vision and statistics. In recent years, deep
learning has shown tremendous capabilities in learning expressive representations of complex data
such as high-dimensional data, temporal data, spatial data and graph data, pushing the boundaries
of different learning tasks. Deep learning for anomaly detection, deep anomaly detection for short,
aim at learning feature representations or anomaly scores via neural networks for the sake of
anomaly detection. A large number of deep anomaly detection methods have been introduced,
demonstrating significantly better performance than conventional anomaly detection on addressing
challenging detection problems in a variety of real-world applications. This work aims to provide a
comprehensive review of this area. We first discuss the problem nature of anomaly detection and
∗Corresponding author: Guansong Pang, 
Authors’ addresses: Guansong Pang, University of Adelaide, Adelaide, South Australia, 5005; Chunhua Shen, University of
Adelaide, Adelaide, South Australia, 5005; Longbing Cao, University of Technology Sydney, Sydney, New South Wales,
2007; Anton van den Hengel, University of Adelaide, Adelaide, South Australia, 5005.
Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee
provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and
the full citation on the first page. Copyrights for components of this work owned by others than ACM must be honored.
Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires
prior specific permission and/or a fee. Request permissions from .
© 2020 Association for Computing Machinery.
0360-0300/2020/1-ART1 $15.00
 
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
 
Pang, et al.
major largely unsolved challenges, then systematically review the current deep methods and their
capabilities in addressing these challenges, and finally presents a number of future opportunities.
As a popular area, a number of studies have been dedicated to the
categorization and review of anomaly detection techniques. However, they all focus on conventional
anomaly detection methods only. One work closely related to ours is . It presents a good
summary of a number of real-world applications of deep anomaly detection, but only provides some
very high-level outlines of selective categories of the techniques, from which it is difficult, if not
impossible, to gain the sense of the approaches taken by the current methods and their underlying
intuitions. By contrast, this review delineates the formulation of current deep detection methods to
gain key insights about their intuitions, inherent capabilities and weakness on addressing some
largely unsolved challenges in anomaly detection. This forms a deep understanding of the problem
nature and the state-of-the-art, and brings about genuine open opportunities. It also helps explain
why we need deep anomaly detection.
In summary, this work makes the following five major contributions:
• Problem nature and challenges. We discuss some unique problem complexities underlying
anomaly detection and the resulting largely unsolved challenges.
• Categorization and formulation. We formulate the current deep anomaly detection methods
into three principled frameworks: deep learning for generic feature extraction, learning representations of normality, and end-to-end anomaly score learning. A hierarchical taxonomy
is presented to categorize the methods based on 11 different modeling perspectives.
• Comprehensive literature review. We review a large number of relevant studies in leading
conferences and journals of several relevant communities, including machine learning, data
mining, computer vision and artificial intelligence, to present a comprehensive literature
review of the research progress. To provide an in-depth introduction, we delineate the basic
assumptions, objective functions, key intuitions and their capabilities in addressing some of
the aforementioned challenges by all categories of the methods.
• Future opportunities. We further discuss a set of possible future opportunities and their
implication to addressing relevant challenges.
• Source codes and datasets. We solicit a collection of publicly accessible source codes of nearly
all categories of methods and a large number of real-world datasets with real anomalies to
offer some empirical comparison benchmarks.
ANOMALY DETECTION: PROBLEM COMPLEXITIES AND CHALLENGES
Owing to the unique nature, anomaly detection presents distinct problem complexities from the
majority of analytical and learning problems and tasks. This section summarizes such intrinsic
complexities and unsolved detection challenges in complex anomaly data.
Major Problem Complexities
Unlike those problems and tasks on majority, regular or evident patterns, anomaly detection
addresses minority, unpredictable/uncertain and rare events, leading to some unique problem
complexities to all (both deep and shallow) detection methods:
• Unknownness. Anomalies are associated with many unknowns, e.g., instances with unknown abrupt behaviors, data structures, and distributions. They remain unknown until
actually occur, such as novel terrorist attacks, frauds and network intrusions.
• Heterogeneous anomaly classes. Anomalies are irregular, and thus, one class of anomalies may demonstrate completely different abnormal characteristics from another class of
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Deep Learning for Anomaly Detection: A Review
anomalies. For example, in video surveillance, the abnormal events robbery, traffic accidents
and burglary are visually highly different.
• Rarity and class imbalance. Anomalies are typically rare data instances, contrasting to
normal instances that often account for an overwhelming proportion of the data. Therefore,
it is difficult, if not impossible, to collect a large amount of labeled abnormal instances.
This results in the unavailability of large-scale labeled data in most applications. The class
imbalance is also due to the fact that misclassification of anomalies is normally much more
costly than that of normal instances.
• Diverse types of anomaly. Three completely different types of anomaly have been explored
 . Point anomalies are individual instances that are anomalous w.r.t. the majority of
other individual instances, e.g., the abnormal health indicators of a patient. Conditional
anomalies, a.k.a. contextual anomalies, also refer to individual anomalous instances but in a
specific context, i.e., data instances are anomalous in the specific context, otherwise normal.
The contexts can be highly different in real-world applications, e.g., sudden temperature
drop/increase in a particular temporal context, or rapid credit card transactions in unusual
spatial contexts. Group anomalies, a.k.a. collective anomalies, are a subset of data instances
anomalous as a whole w.r.t. the other data instances; the individual members of the collective
anomaly may not be anomalies, e.g., exceptionally dense subgraphs formed by fake accounts
in social network are anomalies as a collection, but the individual nodes in those subgraphs
can be as normal as real accounts.
Main Challenges Tackled by Deep Anomaly Detection
The above complex problem nature leads to a number of detection challenges. Some challenges,
such as scalability w.r.t. data size, have been well addressed in recent years, while the following are
largely unsolved, to which deep anomaly detection can play some essential roles.
• CH1: Low anomaly detection recall rate. Since anomalies are highly rare and heterogeneous, it is difficult to identify all of the anomalies. Many normal instances are wrongly
reported as anomalies while true yet sophisticated anomalies are missed. Although a plethora
of anomaly detection methods have been introduced over the years, the current state-ofthe-art methods, especially unsupervised methods (e.g., ), still often incur high false
positives on real-world datasets . How to reduce false positives and enhance detection recall rates is one of the most important and yet difficult challenges, particularly for the
significant expense of failing to spotting anomalies.
• CH2: Anomaly detection in high-dimensional and/or not-independent data. Anomalies often exhibit evident abnormal characteristics in a low-dimensional space yet become
hidden and unnoticeable in a high-dimensional space. High-dimensional anomaly detection
has been a long-standing problem . Performing anomaly detection in a reduced lowerdimensional space spanned by a small subset of original features or newly constructed features
is a straightforward solution, e.g., in subspace-based and feature selectionbased methods . However, identifying intricate (e.g., high-order, nonlinear and
heterogeneous) feature interactions and couplings may be essential in high-dimensional
data, but it remains a major challenge for anomaly detection. Further, how to guarantee the
new feature space preserved proper information for specific detection methods is critical to
downstream accurate anomaly detection, but it is challenging due to the aforementioned
unknowns and heterogeneities of anomalies. Also, it is challenging to detect anomalies from
instances that may be dependent on each other such as by temporal, spatial, graph-based
and other interdependency relationships .
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Pang, et al.
• CH3: Data-efficient learning of normality/abnormality. Due to the difficulty and cost
of collecting large-scale labeled anomaly data, fully supervised anomaly detection is often
impractical as it assumes the availability of labeled training data with both normal and
anomaly classes. In the last decade, major research efforts have been focused on unsupervised
anomaly detection that does not require any labeled training data. However, unsupervised
methods do not have any prior knowledge of true anomalies. They rely heavily on their
assumption on the distribution of anomalies . On the other hand, it is often not difficult to
collect labeled normal data and some labeled anomaly data. In practice, it is often suggested
to leverage such readily accessible labeled data as much as possible . Thus, utilizing
those labeled data to learn expressive representations of normality/abnormality is crucial
for accurate anomaly detection. Semi-supervised anomaly detection, which assumes a set of
labeled normal training data1, is a research direction dedicated to this problem. Another
research line is weakly-supervised anomaly detection that assumes we have some labels for
anomaly classes yet the class labels are partial/incomplete (i.e., they do not span the entire
set of anomaly class), inexact (i.e., coarse-grained labels), or inaccurate (i.e., some given labels
can be incorrect). Two major challenges are how to learn expressive normality/abnormality
representations with a small amount of labeled anomaly data and how to learn detection
models that are generalized to novel anomalies uncovered by the given labeled anomaly data.
• CH4: Noise-resilient anomaly detection. Many weakly/semi-supervised anomaly detection methods assume the labeled training data is clean, which can be vulnerable to noisy
instances that are mistakenly labeled as an opposite class label. In such cases, we may use
unsupervised methods instead, but this fails to utilize the genuine labeled data. Additionally,
there often exists large-scale anomaly-contaminated unlabeled data. Noise-resilient models
can leverage those unlabeled data for more accurate detection. Thus, the noise here can be
either mislabeled data or unlabeled anomalies. The main challenge is that the amount of
noises can differ significantly from datasets and noisy instances may be irregularly distributed
in the data space.
• CH5: Detection of complex anomalies. Most of existing methods are for point anomalies,
which cannot be used for conditional anomaly and group anomaly since they exhibit completely different behaviors from point anomalies. One main challenge here is to incorporate
the concept of conditional/group anomalies into anomaly measures/models. Also, current
methods mainly focus on detect anomalies from single data sources, while many applications
require the detection of anomalies with multiple heterogeneous data sources, e.g., multidimensional data, graph, image, text and audio data. One main challenge is that some anomalies
can be detected only when considering two or more data sources.
• CH6: Anomaly explanation. In many safety-critical domains there may be some major
risks if anomaly detection models are directly used as black-box models. For example, the
rare data instances reported as anomalies may lead to possible algorithmic bias against the
minority groups presented in the data, such as under-represented groups in fraud detection
and crime detection systems. An effective approach to mitigate this type of risk is to have
anomaly explanation algorithms that provide straightforward clues about why a specific
data instance is identified as anomaly. Human experts can then look into and correct the bias.
Providing such explanation can be as important as detection accuracy in some applications.
However, most anomaly detection studies focus on detection accuracy only, ignoring the
1There have been some studies that refer the methods trained with purely normal training data to be unsupervised approach.
However, this setting is different from the general sense of an unsupervised setting. To avoid unnecessary confusion,
following , these methods are referred to as semi-supervised methods hereafter.
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Deep Learning for Anomaly Detection: A Review
capability of providing explanation of the identified anomalies. To derive anomaly explanation
from specific detection methods is still a largely unsolved problem, especially for complex
models. Developing inherently interpretable anomaly detection models is also crucial, but it
remains a main challenge to well balance the model’s interpretability and effectiveness.
Deep methods enable end-to-end optimization of the whole anomaly detection pipeline, and
they also enable the learning of representations specifically tailored for anomaly detection. These
two capabilities are crucial to tackle the above six challenges, but traditional methods do not
have. Particularly they help largely improve the utilization of labeled normal data or some labeled
anomaly data regardless of the data type, reducing the need of large-scale labeled data as in fullysupervised settings (CH2, CH3, CH4, CH5). This subsequently results in more informed models
and thus better recall rate (CH1). For the anomaly explanation challenge, although deep methods
are often black-box models, they offer options to unify anomaly detection and explanation into
single frameworks, resulting in more genuine explanation of the anomalies spotted by specific
models (see Section 8.5). Deep methods also excel at learning intricate structures and relations from
diverse types of data, such as high-dimensional data, image data, video data, graph data, etc. This
capability is important to address various challenges, such as CH1, CH2, CH3, and CH5. Further,
they offer many effective and easy-to-use network architectures and principled frameworks to
seamlessly learn unified representations of heterogeneous data sources. This empowers the deep
models to tackle some key challenges such as CH3 and CH5. Although there are shallow methods
for handling those complex data, they are generally substantially weaker and less adaptive than
the deep methods. A summary of this discussion is presented in Table 1.
Table 1. Deep Learning Methods vs. Traditional Methods in Anomaly Detection.
End-to-end Optimization
Tailored Representation Learning
Intricate Relation Learning
Heterogeneity Handling
Traditional
Challenges
CH1, CH2, CH3, CH5
ADDRESSING THE CHALLENGES WITH DEEP ANOMALY DETECTION
Preliminaries
Deep neural networks leverage complex compositions of linear/non-linear functions that can be
represented by a computational graph to learn expressive representations . Two basic building
blocks of deep learning are activation functions and layers. Activation functions determine the
output of computational graph nodes (i.e., neurons in neural networks) given some inputs. They
can be linear or non-linear functions. Some popular activation functions include linear, sigmoid,
tanh, ReLU (Rectified Linear Unit) and its variants. A layer in neural networks refers to a set of
neurons stacked in some forms. Commonly-used layers include fully connected, convolutional
& pooling, and recurrent layers. These layers can be leveraged to build different popular neural
networks. For example, multilayer perceptron (MLP) networks are composed by fully connected
layers, convolutional neural networks (CNN) are featured by varying groups of convolutional
& pooling layers, and recurrent neural networks (RNN), e.g., vanilla RNN, gated recurrent units
(GRU) and long short term memory (LSTM), are built upon recurrent layers. See for detailed
introduction of these neural networks.
Given a dataset X = {x1, x2, · · · , x𝑁} with x𝑖∈R𝐷, let Z ∈R𝐾(𝐾≪𝑁) be a representation
space, then deep anomaly detection aims at learning a feature representation mapping function
𝜙(·) : X ↦→Z or an anomaly score learning function 𝜏(·) : X ↦→R in a way that anomalies can be
easily differentiated from the normal data instances in the space yielded by the 𝜙or 𝜏function,
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Pang, et al.
where both 𝜙and 𝜏are a neural network-enabled mapping function with 𝐻∈N hidden layers
and their weight matrices Θ = {M1, M2, · · · , M𝐻}. In the case of learning the feature mapping
𝜙(·), an additional step is required to calculate the anomaly score of each data instance in the new
representation space, while 𝜏(·) can directly infer the anomaly scores with raw data inputs. Larger
𝜏outputs indicate greater degree of being anomalous.
Categorization of Deep Anomaly Detection
To have a thorough understanding of the area, we introduce a hierarchical taxonomy to classify
deep anomaly detection methods into three main categories and 11 fine-grained categories from
the modeling perspective. An overview of the taxonomy of the methods is shown in Fig. 1. Specifically, deep anomaly detection consists of three conceptual paradigms - Deep Learning for Feature
Extraction, Learning Feature Representations of Normality, and End-to-end Anomaly Score Learning.
Deep anomaly detection
Learning feature
representations of normality
Generic normality
feature learning
Autoencoders
Generative adversarial networks
Predictability modeling
Anomaly measure-dependent
feature learning
Distance-based measures
One-class classification measures
Clustering-based measures
End-to-end anomaly score
Prior-driven models
Ranking models
End-to-end one-class classification
Deep learning for feature
extraction
Softmax likelihoold models
Self-supervised classification
Challenges 1, 2
Challenges 1, 2, 4, 5
Challenges 1, 2
Challenges 1, 2, 5
Challenges 1, 2, 4
Challenges 1, 2, 3, 4
Challenges 1, 2, 3
Challenges 1, 2, 4
Challenges 1, 2, 3, 4, 6
Challenges 1, 2, 3, 4
Challenges 1, 2, 5
Challenges 1, 2
Fig. 1. The Proposed Taxonomy of Current Deep Anomaly Detection Techniques. The detection challenges
that each category of methods can address are also presented.
The procedure of these three paradigms is presented in Fig. 2. As shown in Fig. 2(a), deep learning
and anomaly detection are fully separated in the first main category (Section 4), so deep learning
techniques are used as some independent feature extractors only. The two modules are dependent
on each other in some form in the second main category (Section 5) presented in Fig. 2(b), with
an objective of learning expressive representations of normality. This category of methods can be
further divided into two subcategories based on how the representations are learned, i.e., whether
using existing shallow anomaly measures (e.g., distance- and clustering-based measures) to guide
the learning or not. These two subcategories encompass seven fine-grained categories of methods,
with each category taking a different approach to formulate its objective function. The two modules
are fully unified in the third main category (Section 6) presented in Fig. 2(c), in which the methods
are dedicated to learning anomaly scores via neural networks in an end-to-end fashion. This
category is further broken down into four subcategories based on the formulation of the anomaly
scoring learning. In the following three sections we review these three paradigms in detail.
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Deep Learning for Anomaly Detection: A Review
Anomaly Scoring
Anomaly Scores
Reconstruction/Prediction/Anomaly
Measure-driven Loss Function
Anomaly Scoring
Loss Function
(a) Deep Learning for Feature Extraction
(b) Learning Feature Representations of Normality
(c) End-toend Anomaly Score Learning
Fig. 2. Conceptual Frameworks of Three Main Deep Anomaly Detection Approaches
DEEP LEARNING FOR FEATURE EXTRACTION
This category of methods aims at leveraging deep learning to extract low-dimensional feature
representations from high-dimensional and/or non-linearly separable data for downstream anomaly
detection. The feature extraction and the anomaly scoring are fully disjointed and independent
from each other. Thus, the deep learning components work purely as dimensionality reduction
only. Formally, the approach can be represented as
z = 𝜙(x; Θ),
where 𝜙: X ↦→Z is a deep neural network-based feature mapping function, with X ∈R𝐷, Z ∈R𝐾
and normally 𝐷≫𝐾. An anomaly scoring method 𝑓that has no connection to the feature mapping
𝜙is then applied onto the new space to calculate anomaly scores.
Compared to the dimension reduction methods that are popular in anomaly detection, such
as principal component analysis (PCA) and random projection , deep
learning techniques have been demonstrating substantially better capability in extracting semanticrich features and non-linear feature relations .
Assumptions. The feature representations extracted by deep learning models preserve the discriminative information that helps separate anomalies from normal instances.
One research line is to directly uses popular pre-trained deep learning models, such as AlexNet
 , VGG and ResNet , to extract low-dimensional features. This line is explored in
anomaly detection in complex high-dimensional data such as image data and video data. One
interesting work of this line is the unmasking framework for online anomaly detection . The
key idea is to iteratively train a binary classifier to separate one set of video frames from its
subsequent video frames in a sliding window, with the most discriminant features removed in
each iteration step. This is analogous to an unmasking process. The framework assumes the first
set of video frames as normal and evaluates its separability from its subsequent video frames.
Thus, the training classification accuracy is expected to be high if the subsequent video frames
are abnormal, and low otherwise. Clearly the power of the unmasking framework relies heavily
on the quality of the features, so it is essential to have quality features to represent the video
frames. The VGG model pre-trained on the ILSVRC benchmark is shown to be effective to
extract expressive appearance features for this purpose . In , the masking framework is
formulated as a two-sample test task to understand its theoretical foundation. They also show that
using features extracted from a dynamically updated sampling pool of video frames is found to
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Pang, et al.
improve the performance of the framework. Additionally, similar to many other tasks, the feature
representations extracted from the deep models pre-trained on a source dataset can be transferred to
fine-tune anomaly detectors on a target dataset. As shown in , one-class support vector machines
(SVM) can be first initialized with the VGG models pre-trained on ILSVRC and then fine-tuned to
improve anomaly classification on the MNIST data . Similarly, the ResNet models pre-trained
on MNIST can empower abnormal event detection in various video surveillance datasets .
Another research line in this category is to explicitly train a deep feature extraction model
rather than a pre-trained model for the downstream anomaly scoring . Particularly,
in , three separate autoencoder networks are trained to learn low-dimensional features for
respective appearance, motion, and appearance-motion joint representations for video anomaly
detection. An ensemble of three one-class SVMs is independently trained on each of these learned
feature representations to perform anomaly scoring. Similar to , a linear one-class SVM is used
to enable anomaly detection on low-dimensional representations of high-dimensional tabular data
yielded by deep belief networks (DBNs) . Instead of one-class SVM, unsupervised classification
approaches are used in to enable anomaly scoring in the projected space. Specially, they
first cluster the low-dimensional features of video frames yielded by convolutional autoencoders,
and then treat the cluster labels as pseudo class labels to perform one-vs-the-rest classification.
The classification probabilities are used to define frame-wise anomaly scores. Similar approaches
can also be found in graph anomaly detection , in which unsupervised clustering-based
anomaly measures are used in the latent representation space to calculate the abnormality of graph
vertices or edges. To learn expressive representations of graph vertices, the vertex representations
are optimized by minimizing autoencoder-based reconstruction loss and pairwise distances of
neighbored graph vertices, taking one-hot encoding of graph vertices as input.
Advantages. The advantages of this approach are as follows. (i) A large number of state-of-the-art
(pre-trained) deep models and off-the-shelf anomaly detectors are readily available. (ii) Deep feature
extraction offers more powerful dimensionality reduction than popular linear methods. (iii) It is
easy-to-implement given the public availability of the deep models and detection methods.
Disadvantages. Their disadvantages are as follows. (i) The fully disjointed feature extraction and
anomaly scoring often lead to suboptimal anomaly scores. (ii) Pre-trained deep models are typically
limited to specific types of data.
Challenges Targeted. This category of methods projects high-dimensional/non-independent data
onto substantially lower-dimensional space, enabling existing anomaly detection methods to work
on simpler data space. The lower-dimensional space often helps reveal hidden anomalies and
reduces false positives (CH2). However, it should be noted that these methods may not preserve
sufficient information for anomaly detection as the data projection is fully decoupled with anomaly
detection. In addition, this approach allows us to leverage multiple types of features and learn
semantic-rich detection models (e.g., various predefined image/video features in ),
which also helps reduce false positives (CH1).
LEARNING FEATURE REPRESENTATIONS OF NORMALITY
The methods in this category couple feature learning with anomaly scoring in some ways, rather
than fully decoupling these two modules as in the last section. These methods generally fall into
two groups: generic feature learning and anomaly measure-dependent feature learning.
Generic Normality Feature Learning
This category of methods learns the representations of data instances by optimizing a generic
feature learning objective function that is not primarily designed for anomaly detection, but the
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Deep Learning for Anomaly Detection: A Review
learned representations can still empower the anomaly detection since they are forced to capture
some key underlying data regularities. Formally, this framework can be represented as
{Θ∗, W∗} = arg min
𝜓 𝜙(x; Θ); W
𝑠x = 𝑓(x,𝜙Θ∗,𝜓W∗),
where 𝜙maps the original data onto the representation space Z, 𝜓parameterized by W is a
surrogate learning task that operates on the Z space and is dedicated to enforcing the learning of
underlying data regularities, ℓis a loss function relative to the underlying modeling approach, and
𝑓is a scoring function that utilizes 𝜙and 𝜓to calculate the anomaly score 𝑠.
This approach include methods driven by several perspectives, including data reconstruction,
generative modeling, predictability modeling and self-supervised classification. Both predictability
modeling and self-supervised classification are built upon self-supervised learning approaches, but
they have different assumptions, advantages and flaws, and thus they are reviewed separately.
Autoencoders. This type of approach aims to learn some low-dimensional feature representation space on which the given data instances can be well reconstructed. This is a widely-used
technique for data compression or dimension reduction . The heuristic for using this
technique in anomaly detection is that the learned feature representations are enforced to learn
important regularities of the data to minimize reconstruction errors; anomalies are difficult to be
reconstructed from the resulting representations and thus have large reconstruction errors.
Assumptions. Normal instances can be better restructured from compressed space than anomalies.
Autoencoder (AE) networks are the commonly-used techniques in this category. An AE is
composed of an encoding network and an decoding network. The encoder maps the original
data onto low-dimensional feature space, while the decoder attempts to recover the data from
the projected low-dimensional space. The parameters of these two networks are learned with
a reconstruction loss function. A bottleneck network architecture is often used to obtain lowdimensional representations than the original data, which forces the model to retain the information
that is important in reconstructing the data instances. To minimize the overall reconstruction error,
the retained information is required to be as much relevant as possible to the dominant instances,
e.g., the normal instances. As a result, the data instances such as anomalies that deviate from
the majority of the data are poorly reconstructed. The data reconstruction error can therefore be
directly used as anomaly score. The basic formulation of this approach is given as follows.
z = 𝜙𝑒(x; Θ𝑒), ˆx = 𝜙𝑑(z; Θ𝑑),
𝑑} = arg min
 𝜙𝑒(x; Θ𝑒); Θ𝑑
where 𝜙𝑒is the encoding network with the parameters Θ𝑒and 𝜙𝑑is the decoding network with
the parameters Θ𝑑. The encoder and the decoder can share the same weight parameters to reduce
parameters and regularize the learning. 𝑠x is a reconstruction error-based anomaly score of x.
Several types of regularized autoencoders have been introduced to learn richer and more expressive feature representations . Particularly, sparse AE is trained in a way that
encourages sparsity in the activation units of the hidden layer, e.g., by keeping the top-𝐾most
active units . Denoising AE aims at learning representations that are robust to small
variations by learning to reconstruct data from some predefined corrupted data instances rather
than original data. Contractive AE takes a step further to learn feature representations that
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Pang, et al.
are robust to small variations of the instances around their neighbors. This is achieved by adding
a penalty term based on the Frobenius norm of the Jacobian matrix of the encoder’s activations.
Variational AE instead introduces regularization into the representation space by encoding
data instances using a prior distribution over the latent space, preventing overfitting and ensuring
some good properties of the learned space for enabling generation of meaningful data instances.
AEs are easy-to-implement and have straightforward intuitions in detecting anomalies. As a
result, they have been widely explored in the literature. Replicator neural network is the first
piece of work in exploring the idea of data reconstruction to detect anomalies, with experiments
focused on static multidimensional/tabular data. The Replicator network is built upon a feedforward multi-layer perceptron with three hidden layers. It uses parameterized hyperbolic tangent
activation functions to obtain different activation levels for different input values, which helps
discretize the intermediate representations into some predefined bins. As a result, the hidden layers
naturally cluster the data instances into a number of groups, enabling the detection of clustered
anomalies. After this work there have been a number of studies dedicated to further enhance
the performance of this approach. For instance, RandNet further enhances the basic AEs by
learning an ensemble of AEs. In RandNet, a set of independent AEs are trained, with each AE
having some randomly selected constant dropout connections. An adaptive sampling strategy is
used by exponentially increasing the sample size of the mini-batches. RandNet is focused on tabular
data. The idea of autoencoder ensembles is extended to time series data in . Motivated by robust
principal component analysis (RPCA), RDA attempts to improve the robustness of AEs by
iteratively decomposing the original data into two subsets, normal instance set and anomaly set.
This is achieved by adding a sparsity penalty ℓ1 or grouped penalty ℓ2,1 into its RPCA-alike objective
function to regularize the coefficients of the anomaly set.
AEs are also widely leveraged to detect anomalies in data other than tabular data, such as
sequence data , graph data and image/video data . In general, there are two types
of adaptions of AEs to those complex data. The most straightforward way is to follow the same
procedure as the conventional use of AEs by adapting the network architecture to the type of input
data, such as CNN-AE , LSTM-AE , Conv-LSTM-AE and GCN (graph convolutional
network)-AE . This type of AEs embeds the encoder-decoder scheme into the full procedure of
these methods. Another type of AE-based approaches is to first use AEs to learn low-dimensional
representations of the complex data and then learn to predict these learned representations. The
learning of AEs and representation prediction is often two separate steps. These approaches are
different from the first type of approaches in that the prediction of representations are wrapped
around the low-dimensional representations yielded by AEs. For example, in , denoising AE is
combined with RNNs to learn normal patterns of multivariate sequence data, in which a denoising
AE with two hidden layers is first used to learn representations of multidimensional data inputs in
each time step and a RNN with a single hidden layer is then trained to predict the representations
yielded by the denoising AE. A similar approach is also used for detecting acoustic anomalies ,
in which a more complex RNN, bidirectional LSTMs, is used.
Advantages. The advantages of data reconstruction-based methods are as follows. (i) The idea of
AEs is straightforward and generic to different types of data. (ii) Different types of powerful AE
variants can be leveraged to perform anomaly detection.
Disadvantages. Their disadvantages are as follows. (i) The learned feature representations can
be biased by infrequent regularities and the presence of outliers or anomalies in the training data.
(ii) The objective function of the data reconstruction is designed for dimension reduction or data
compression, rather than anomaly detection. As a result, the resulting representations are a generic
summarization of underlying regularities, which are not optimized for detecting irregularities.
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Deep Learning for Anomaly Detection: A Review
Challenges Targeted. Different types of neural network layers and architectures can be used
under the AE framework, allowing us to detect anomalies in high-dimensional data, as well as
non-independent data such as attributed graph data and multivariate sequence data 
(CH2). These methods may reduce false positives over traditional methods built upon handcrafted
features if the learned representations are more expressive (CH1). AEs are generally vulnerable to
data noise presented in the training data as they can be trained to remember those noise, leading to
severe overfitting and small reconstruction errors of anomalies. The idea of RPCA may be used
into AEs to train more robust detection models (CH4).
Generative Adversarial Networks. GAN-based anomaly detection emerges quickly as one
popular deep anomaly detection approach after its early use in . This approach generally aims
to learn a latent feature space of a generative network 𝐺so that the latent space well captures
the normality underlying the given data. Some form of residual between the real instance and the
generated instance are then defined as anomaly score.
Assumption. Normal data instances can be better generated than anomalies from the latent
feature space of the generative network in GANs.
One of the early methods is AnoGAN . The key intuition is that, given any data instances x,
it aims to search for an instance z in the learned latent feature space of the generative network 𝐺
so that the corresponding generated instance 𝐺(z) and x are as similar as possible. Since the latent
space is enforced to capture the underlying distribution of training data, anomalies are expected to
be less likely to have highly similar generated counterparts than normal instances. Specifically, a
GAN is first trained with the following conventional objective:
𝐷𝑉(𝐷,𝐺) = Ex∼𝑝X
1 −𝐷 𝐺(z)
where 𝐺and 𝐷are respectively the generator and discriminator networks parameterized by Θ𝐺and
Θ𝐷(the parameters are omitted for brevity), and 𝑉is the value function of the two-player minimax
game. After that, for each x, to find its best z, two loss functions - residual loss and discrimination
loss - are used to guide the search. The residual loss is defined as
ℓ𝑅(x, z𝛾) =
while the discrimination loss is defined based on the feature matching technique :
ℓfm(x, z𝛾) =
ℎ(x) −ℎ 𝐺(z𝛾)
where 𝛾is the index of the search iteration step and ℎis a feature mapping from an intermediate
layer of the discriminator. The search starts with a randomly sampled z, followed by updating z
based on the gradients derived from the overall loss (1 −𝛼)ℓ𝑅(x, z𝛾) + 𝛼ℓfm(x, z𝛾), where 𝛼is a
hyperparameter. Throughout this search process, the parameters of the trained GAN are fixed;
the loss is only used to update the coefficients of z for the next iteration. The anomaly score is
accordingly defined upon the similarity between x and z obtained at the last step 𝛾∗:
𝑠x = (1 −𝛼)ℓ𝑅(x, z𝛾∗) + 𝛼ℓfm(x, z𝛾∗).
One main issue with AnoGAN is the computational inefficiency in the iterative search of z. One
way to address this issue is to add an extra network that learns the mapping from data instances
onto the latent space, i.e., an inverse of the generator, resulting in methods like EBGAN and
fast AnoGAN . These two methods share the same spirit. Here we focus on EBGAN that is built
upon the bi-directional GAN (BiGAN) . Particularly, BiGAN has an encoder 𝐸to map x to z in
the latent space, and simultaneously learn the parameters of 𝐺, 𝐷and 𝐸. Instead of discriminating
x and 𝐺(z), BiGAN aims to discriminate the pair of instances (x, 𝐸(x)) from the pair (𝐺(z), z):
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Pang, et al.
Ez∼𝑝𝐸(·|x) log
Ex∼𝑝𝐺(·|z)
log  1 −𝐷(x, z)i
After the training, inspired by Eq. (10) in AnoGAN, EBGAN defines the anomaly score as:
𝑠x = (1 −𝛼)ℓ𝐺(x) + 𝛼ℓ𝐷(x),
where ℓ𝐺(x) =
x −𝐺 𝐸(x)
1 and ℓ𝐷(x) =
ℎ x, 𝐸(x) −ℎ 𝐺 𝐸(x), 𝐸(x)
1. This eliminates the
need to iteratively search z in AnoGAN. EBGAN is extended to a method called ALAD by
adding two more discriminators, with one discriminator trying to discriminate the pair (x, x) from
(x,𝐺(𝐸(x))) and another one trying to discriminate the pair (z, z) from (z, 𝐸(𝐺(z))).
GANomaly further improves the generator over the previous work by changing the generator
network to an encoder-decoder-encoder network and adding two more extra loss functions. The
generator can be conceptually represented as: x
𝐸−→ˆz, in which 𝐺is a composition of
the encoder 𝐺𝐸and the decoder 𝐺𝐷. In addition to the commonly used feature matching loss:
ℓfm = Ex∼𝑝X
ℎ(x) −ℎ 𝐺(x)
the generator includes a contextual loss and an encoding loss to generate more realistic instances:
ℓcon = Ex∼𝑝X
ℓenc = Ex∼𝑝X
𝐺𝐸(x) −𝐸 𝐺(x)
The contextual loss in Eq. (14) enforces the generator to consider the contextual information of
the input x when generating ˆx. The encoding loss in Eq. (15) helps the generator to learn how to
encode the features of the generated instances. The overall loss is then defined as
ℓ= 𝛼ℓfm + 𝛽ℓcon + 𝛾ℓenc,
where 𝛼, 𝛽and 𝛾are the hyperparameters to determine the weight of each individual loss. Since
the training data contains mainly normal instances, the encoders 𝐺and 𝐸are optimized towards
the encoding of normal instances, and thus, the anomaly score can be defined as
𝐺𝐸(x) −𝐸 𝐺(x)
in which 𝑠x is expected to be large if x is an anomaly.
There have been a number of other GANs introduced over the years such as Wasserstein GAN
 and Cycle GAN . They may be used to further enhance the anomaly detection performance
of the above methods, such as replacing the standard GAN with Wasserstein GAN . Another
relevant research line is to adversarially learn end-to-end one-class classification models, which is
categorized into the end-to-end anomaly score learning framework and discussed in Section 6.4.
Advantages. The advantages of these methods are as follows. (i) GANs have demonstrated
superior capability in generating realistic instances, especially on image data, empowering the
detection of abnormal instances that are poorly reconstructed from the latent space. (ii) A large
number of existing GAN-based models and theories may be adapted for anomaly detection.
Disadvantages. Their disadvantages are as follows. (i) The training of GANs can suffer from
multiple problems, such as failure to converge and mode collapse , which leads to to large
difficulty in training GANs-based anomaly detection models. (ii) The generator network can be
misled and generates data instances out of the manifold of normal instances, especially when the
true distribution of the given dataset is complex or the training data contains unexpected outliers.
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Deep Learning for Anomaly Detection: A Review
(iii) The GANs-based anomaly scores can be suboptimal since they are built upon the generator
network with the objective designed for data synthesis rather than anomaly detection.
Challenges Targeted. Similar to AEs, GAN-based anomaly detection is able to detect highdimensional anomalies by examining the reconstruction from the learned low-dimensional latent
space (CH2). When the latent space preserves important anomaly discrimination information, it
helps improve detection accuracy over that in the original data space (CH1).
Predictability Modeling. Predictability modeling-based methods learn feature representations
by predicting the current data instances using the representations of the previous instances within
a temporal window as the context. In this section data instances are referred to as individual
elements in a sequence, e.g., video frames in a video sequence. This technique is widely used for
sequence representation learning and prediction . To achieve accurate predictions,
the representations are enforced to capture the temporal/sequential and recurrent dependence
within a given sequence length. Normal instances are normally adherent to such dependencies
well and can be well predicted, whereas anomalies often violate those dependencies and are
unpredictable. Therefore, the prediction errors can be used to define the anomaly scores.
Assumption. Normal instances are temporally more predictable than anomalies.
This research line is popular in video anomaly detection . Video sequence involves
complex high-dimensional spatial-temporal features. Different constraints over appearance and
motion features are needed in the prediction objective function to ensure a faithful prediction of
video frames. This deep anomaly detection approach is initially explored in . Formally, given a
video sequence with consecutive 𝑡frames x1, x2, · · · , x𝑡, then the learning task is to use all these
frames to generate a future frame ˆx𝑡+1 so that ˆx𝑡+1 is as close as possible to the ground truth x𝑡+1.
Its general objective function can be formulated as
 ˆx𝑡+1, x𝑡+1
where ˆx𝑡+1 = 𝜓 𝜙(x1, x2, · · · , x𝑡; Θ); W, ℓpred is the frame prediction loss measured by mean
squared errors, ℓadv is an adversarial loss. The popular network architecture named U-Net 
is used to instantiate the 𝜓function for the frame generation. ℓpred is composed by a set of three
separate losses that respectively enforce the closeness between ˆx𝑡+1 and x𝑡+1 in three key image
feature descriptors: intensity, gradient and optical flow. ℓadv is due to the the use of adversarial
training to enhance the image generation. After training, for a given video frame x, a normalized
Peak Signal-to-Noise Ratio based on the prediction difference ||x𝑖−ˆx𝑖||2 is used to define
the anomaly score. Under the same framework, an additional autoencoder-based reconstruction
network is added in to further refine the predicted frame quality, which helps to enlarge the
anomaly score difference between normal and abnormal frames.
Another research line in this direction is based on the autoregressive models that assume
each element in a sequence is linearly dependent on the previous elements. The autoregressive
models are leveraged in to estimate the density of training samples in a latent space, which
helps avoid the assumption of a specific family of distributions. Specifically, given x and its latent
space representation z = 𝜙(x; Θ), the autoregressive model factorizes 𝑝(z) as
𝑝(𝑧𝑗|𝑧1:𝑗−1),
where 𝑧1:𝑗−1 = {𝑧1,𝑧2, · · · ,𝑧𝑗−1}, 𝑝(𝑧𝑗|𝑧1:𝑗−1) represents the probability mass function of 𝑧𝑗conditioned on all the previous instances 𝑧1:𝑗−1 and 𝐾is the dimensionality size of the latent space.
The objective in is to jointly learn an autoencoder and a density estimation network 𝜓(z; W)
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Pang, et al.
equipped with autoregressive network layers. The overall loss can be represented as
 𝜙𝑒(x; Θ𝑒); Θ𝑑
where the first term is a reconstruction error measured by MSE while the second term is an
autoregressive loss measured by the log-likelihood of the representation under an estimated
conditional probability density prior. Minimizing this loss enables the learning of the features
that are common and easily predictable. At the evaluation stage, the reconstruction error and the
log-likelihood are combined to define the anomaly score.
Advantages. The advantages of this category of methods are as follows. (i) A number of sequence
learning techniques can be adapted and incorporated into this approach. (ii) This approach enables
the learning of different types of temporal and spatial dependencies.
Disadvantages. Their disadvantages are as follows. (i) This approach is limited to anomaly
detection in sequence data. (ii) The sequential predictions can be computationally expensive. (iii)
The learned representations may suboptimal for anomaly detection as its underlying objective is
for sequential predictions rather than anomaly detection.
Challenges Targeted. This approach is particularly designed to learn expressive temporallydependent low-dimensional representations, which helps address the false positives of anomaly
detection in high-dimensional and/or temporal datasets (CH1 & CH2). The prediction here is
conditioned on some elapsed temporal instances, so this category of methods is able to detect
temporal context-based conditional anomalies (CH5).
Self-supervised Classification. This approach learns representations of normality by building
self-supervised classification models and identifies instances that are inconsistent to the classification models as anomalies. This approach is rooted in traditional methods based on cross-feature
analysis or feature models . These shallow methods evaluate the normality of data
instances by their consistency to a set of predictive models, with each model learning to predict one
feature based on the rest of the other features. The consistency of a test instance can be measured
by the average prediction results , the log loss-based surprisal , or the majority voting
of binary decisions given the classification/regression models across all features. Unlike
these studies that focus on tabular data and build the feature models using the original data, deep
consistency-based anomaly detection focuses on image data and builds the predictive models by
using feature transformation-based augmented data. To effectively discriminate the transformed
instances, the classification models are enforced to learn features that are highly important to
describe the underlying patterns of the instances presented in the training data. Therefore, normal
instances generally have stronger agreements with the classification models.
Assumptions. Normal instances are more consistent to self-supervised classifiers than anomalies.
This approach is initially explored in . To build the predictive models, different compositions
of geometric transformation operations, including horizontal flipping, translations, and rotations,
is first applied to normal training images. A deep multi-class classification model is trained on
the augmented data, treating data instances with a specific transformation operation comes from
the same class, i.e., synthetic class. At inference, test instances are augmented with each of transformation compositions, and their normality score is defined by an aggregation of all softmax
classification scores to the augmented test instance. Its loss function is defined as
𝐿cons = CE
𝜓 z𝑇𝑗; W, y𝑇𝑗
where z𝑇𝑗= 𝜙 𝑇𝑗(x); Θ is a low-dimensional feature representation of instance x augmented by
the transformation operation type 𝑇𝑗, 𝜓is a multi-class classifier parameterized with W, y𝑇𝑗is a
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Deep Learning for Anomaly Detection: A Review
one-hot encoding of the synthetic class for instances augmented using the transformation operation
𝑇𝑗, and CE is a standard cross-entropy loss function.
By minimizing Eq. (21), we obtain the representations that are optimized for the classifier 𝜓. We
then can apply the feature learner 𝜙(·, Θ∗) and the classifier𝜓(·, W∗) to obtain a classification score
for each test instance augmented with a transformation operation 𝑇𝑗. The classification scores of
each test instance w.r.t. different 𝑇𝑗are then aggregated to compute the anomaly score. To achieve
that, the classification scores conditioned on each 𝑇𝑗is assumed to follow a Dirichlet distribution in
 to estimate the consistency of the test instance to the classification model 𝜓; a simple average
of the classification scores associated with different 𝑇𝑗also works well.
A semi-supervised setting, i.e., training data contains normal instances only, is assumed in
 . A similar idea is explored in the unsupervised setting in , with the transformation sets
containing four transformation operations, i.e., rotation, flipping, shifting and path re-arranging.
Two key insights revealed in is that (i) the gradient magnitude induced by normal instances
is normally substantially larger than outliers during the training of such self-supervised multiclass classification models; and (ii) the network updating direction is also biased towards normal
instances. As a result of these two properties, normal instances often have stronger agreement with
the classification model than anomalies. Three strategies of using the classification scores to define
the anomaly scores are evaluated, including average prediction probability, maximum prediction
probability, and negative entropy across all prediction probabilities . Their results show that
the negative entropy-based anomaly scores perform generally better than the other two strategies.
Advantages. The advantages of deep consistency-based methods are as follows. (i) They work
well in both the unsupervised and semi-supervised settings. (ii) Anomaly scoring is grounded by
some intrinsic properties of gradient magnitude and its updating.
Disadvantages. Their disadvantages are as follows. (i) The feature transformation operations
are often data-dependent. The above transformation operations are applicable to image data only.
(ii) Although the classification model is trained in an end-to-end manner, the consistency-based
anomaly scores are derived upon the classification scores rather than an integrated module in the
optimization, and thus they may be suboptimal.
Challenges Targeted. The expressive low-dimensional representations of normality this approach
learns help detect anomalies better than in the original high-dimensional space (CH1 & CH2).
Due to some intrinsic differences between anomalies and normal instances presented in the selfsupervised classifiers, this approach is also able to work in an unsupervised setting , demonstrating good robustness to anomaly contamination in the training data (CH4).
Anomaly Measure-dependent Feature Learning
Anomaly measure-dependent feature learning aims at learning feature representations that are
specifically optimized for one particular existing anomaly measure. Formally, the framework for
this group of methods can be represented as
{Θ∗, W∗} = arg min
𝑓 𝜙(x; Θ); W
𝑠x = 𝑓 𝜙(x; Θ∗); W∗,
where 𝑓is an existing anomaly scoring measure operating on the representation space. Note that
whether 𝑓may involve trainable parameters W or not is dependent on the anomaly measure used.
Different from the generic feature learning approach as in Eqs. (2-3) that calculates anomaly scores
based on some heuristics after obtaining the learned representations, this research line incorporates
an existing anomaly measure 𝑓into the feature learning objective function to optimize the feature
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Pang, et al.
representations specifically for 𝑓. Below we review representation learning specifically designed for
three types of popular anomaly measures, including distance-based measure, one-class classification
measure and clustering-based measure.
Distance-based Measure. Deep distance-based anomaly detection aims to learn feature representations that are specifically optimized for a specific type of distance-based anomaly measures.
Distance-based methods are straightforward and easy-to-implement. There have been a number of
effective distance-based anomaly measures introduced, e.g., DB outliers , 𝑘-nearest neighbor
distance , average 𝑘-nearest neighbor distance , relative distance , and random
nearest neighbor distance . One major limitation of these traditional distance-based
anomaly measures is that they fail to work effectively in high-dimensional data due to the curse
of dimensionality. Since deep distance-based anomaly detection techniques project data onto
low-dimensional space before applying the distance measures, it can well overcome this limitation.
Assumption. Anomalies are distributed far from their closest neighbors while normal instances
are located in dense neighborhoods.
This approach is first explored in , in which the random neighbor distance-based anomaly
measure is leveraged to drive the learning of low-dimensional representations out of
ultrahigh-dimensional data. The key idea is that the representations are optimized so that the
nearest neighbor distance of pseudo-labeled anomalies in random subsamples is substantially larger
than that of pseudo-labeled normal instances. The pseudo labels are generated by some off-the-shelf
anomaly detectors. Let S ∈X be a subset of data instances randomly sampled from the dataset X,
A and N respectively be the pseudo-labeled anomaly and normal instance sets, with X = A ∪N
and ∅= A ∩N, its loss function is built upon the hinge loss function :
0,𝑚+ 𝑓(x′, S; Θ) −𝑓(x, S; Θ)
where 𝑚is a predefined constant for the margin between two distances yielded by 𝑓(x, S; Θ),
which is a random nearest neighbor distance function operated in the representation space:
𝑓(x, S; Θ) = min
𝜙(x; Θ),𝜙(x′; Θ)
Minimizing the loss in Eq. (24) guarantees that the random nearest neighbor distance of anomalies
are at least 𝑚greater than that of normal instances in the 𝜙-projected representation space. At the
evaluation stage, the random distance in Eq. (25) is used directly to obtain the anomaly score for
each test instance. Following this approach, we might also derive similar representation learning
tailored for other distance-based measures by replacing Eq. (25) with the other measures, such as the
𝑘-nearest neighbor distance or the average 𝑘-nearest neighbor distance . However, these
measures are significantly more computationally costly than Eq. (25). Thus, one major challenging
for such adaptions would be the prohibitively high computational cost.
Compared to that requires to query the nearest neighbor distances in random data subsets,
inspired by , a simpler idea explored in uses the distance between optimized representations and randomly projected representations of the same instances to guide the representation
learning. The objective of the method is as follows
Θ∗= arg min
𝑓 𝜙(x; Θ),𝜙′(x),
where 𝜙′ is a random mapping function that is instantiated by the neural network used in 𝜙with
fixed random weights, 𝑓is a measure of distance between the two representations of the same data
instance. As discussed in , solving Eq. (26) is equivalent to have a knowledge distillation from
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Deep Learning for Anomaly Detection: A Review
a random neural network and helps learn the frequency of different underlying patterns in the
data. However, Eq. (26) ignores the relative proximity between data instances and is sensitive to the
anomalies presented in the data. As shown in , such proximity information may be learned by
a pretext task, in which we aim to predict the distance between random instance pairs. A boosting
process can also be used to iteratively filter potential anomalies and build robust detection models.
At the evaluation stage, 𝑓(𝜙(x; Θ∗),𝜙′(x)) is used to compute the anomaly scores.
Advantages. The advantages of this category of methods are as follows. (i) The distance-based
anomalies are straightforward and well defined with rich theoretical supports in the literature. Thus,
deep distance-based anomaly detection methods can be well grounded due to the strong foundation
built in previous relevant work. (ii) They work in low-dimensional representation spaces and can
effectively deal with high-dimensional data that traditional distance-based anomaly measures fail.
(iii) They are able to learn representations specifically tailored for themselves.
Disadvantages. Their disadvantages are as follows. (i) The extensive computation involved in most
of distance-based anomaly measures may be an obstacle to incorporate distance-based anomaly
measures into the representation learning process. (ii) Their capabilities may be limited by the
inherent weaknesses of the distance-based anomaly measures.
Challenges Targeted. This approach is able to learn low-dimensional representations tailored for
existing distance-based anomaly measures, addressing the notorious curse of dimensionality in
distance-based detection (CH1 & CH2). As shown in , an adapted triplet loss can be
devised to utilize a few labeled anomaly examples to learn more effective normality representations
(CH3). Benefiting from pseudo anomaly labeling, the methods are also robust to potential
anomaly contamination and work effectively in the fully unsupervised setting (CH4).
One-class Classification-based Measure. This category of methods aims to learn feature
representations customized to subsequent one-class classification-based anomaly detection. Oneclass classification is referred to as the problem of learning a description of a set of data instances
to detect whether new instances conform to the training data or not. It is one of the most popular
approaches for anomaly detection . Most one-class classification models are
inspired by Support Vector Machines (SVM) , such as the two widely-used one-class models:
one-class SVM (or 𝑣-SVC) and Support Vector Data Description (SVDD) . One main
research line here is to learn representations that are specifically optimized for these traditional oneclass classification models. This is the focus of this section. Another line is to learn an end-to-end
adversarial one-class classification model, which will be discussed in Section 6.4.
Assumption. All normal instances come from a single (abstract) class and can be summarized by
a compact model, to which anomalies do not conform.
There are a number of studies dedicated to combine one-class SVM with neural networks
 . Conventional one-class SVM is to learn a hyperplane that maximize a margin
between training data instances and the origin. The key idea of deep one-class SVM is to learn
the one-class hyperplane from the neural network-enabled low-dimensional representation space
rather than the original input space. Let z = 𝜙(x; Θ), then a generic formulation of the key ideas in
 can be represented as
2 ||Θ||2 + 1
where 𝑟is the margin parameter, Θ are the parameters of a representation network, and w⊺z (i.e.,
w⊺𝜙(x; Θ)) replaces the original dot product
that satisfies 𝑘(x𝑖, x𝑗) =
Φ(x𝑖), Φ(x𝑗)
Here Φ is a RKHS (Reproducing Kernel Hilbert Space) associated mapping and 𝑘(·, ·) is a kernel
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Pang, et al.
function; 𝑣is a hyperparameter that can be seen as an upper bound of the fraction of the anomalies
in the training data. Any instances that have 𝑟−w⊺z𝑖> 0 can be reported as anomalies.
This formulation brings two main benefits: (i) it can leverage (pretrained) deep networks to
learn more expressive features for downstream anomaly detection, and (iii) it also helps remove
the computational expensive pairwise distance computation in the kernel function. As shown in
 , the reconstruction loss in AEs can be added into Eq. (27) to enhance the expressiveness
of representations z. As shown in , many kernel functions can be approximated with random
Fourier features. Thus, before w⊺z, some form of random mapping ℎmay be applied to z to generate
Fourier features, resulting in w⊺ℎ(z), which may further improve one-class SVM models. Another
research line studies deep models for SVDD . SVDD aims to learn a minimum hyperplane
characterized by a center c and a radius 𝑟so that the sphere contains all training data instances, i.e.,
𝑟,c,𝜉𝑟2 + 1
s.t. ||Φ(x𝑖) −c||2 ≤𝑟2 + 𝜉𝑖, 𝜉𝑖≥0, ∀𝑖.
Similar to deep one-class SVM, deep SVDD also aims to leverage neural networks to map
data instances into the sphere of minimum volume, and then employs the hinge loss function to
guarantee the margin between the sphere center and the projected instances. The feature learning
and the SVDD objective can then be jointly trained by minimizing the following loss:
𝑟,Θ 𝑟2 + 1
max{0, ||𝜙(x𝑖; Θ) −c||2 −𝑟2} + 𝜆
This assume the training data contains a small proportion of anomaly contamination in the unsupervised setting. In the semi-supervised setting, the loss function can be simplified as
𝑁||𝜙(x𝑖; Θ) −c||2 + 𝜆
which directly minimizes the mean distance between the representations of training data instances
and the center c. Note that including c as trainable parameters in Eq. (31) can lead to trivial
solutions. It is shown in that c can be fixed as the mean of the feature representations yielded
by performing a single initial forward pass. Deep SVDD can also be further extended to address
another semi-supervised setting where a small number of both labeled normal instances and
anomalies are available . The key idea is to minimize the distance of labeled normal instances
to the center while at the same time maximizing the distance of known anomalies to the center. This
can be achieved by adding Í𝑀
𝑗; Θ) −c||2𝑦𝑗into Eq. (31), where x′
𝑗is a labeled instance,
𝑦𝑗= +1 when it is a normal instance and 𝑦𝑗= −1 otherwise.
Advantages. The advantages of this category of methods are as follows. (i) The one-class
classification-based anomalies are well studied in the literature and provides a strong foundation of deep one-class classification-based methods. (ii) The representation learning and one-class
classification models can be unified to learn tailored and more optimal representations. (iii) They
free the users from manually choosing suitable kernel functions in traditional one-class models.
Disadvantages. Their disadvantages are as follows. (i) The one-class models may work ineffectively
in datasets with complex distributions within the normal class. (ii) The detection performance is
dependent on the one-class classification-based anomaly measures.
Challenges Targeted. This category of methods enhances detection accuracy by learning lowerdimensional representation space optimized for one-class classification models (CH1 & CH2). A
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Deep Learning for Anomaly Detection: A Review
small number of labeled normal and abnormal data can be leveraged by these methods to
learn more effective one-class description models, which can not only detect known anomalies but
also novel classes of anomaly (CH3).
Clustering-based Measure. Deep clustering-based anomaly detection aims at learning representations so that anomalies are clearly deviated from the clusters in the newly learned representation space. The task of clustering and anomaly detection is naturally tied with each other, so there
have been a large number of studies dedicated to using clustering results to define anomalies, e.g.,
cluster size , distance to cluster centers , distance between cluster centers , and cluster
membership . Gaussian mixture model-based anomaly detection is also included
into this category due to some of its intrinsic relations to clustering, e.g., the likelihood fit in the
Gaussian mixture model (GMM) corresponds to an aggregation of the distances of data instances
to the centers of the Gaussian clusters/components .
Assumptions. Normal instances have stronger adherence to clusters than anomalies.
Deep clustering, which aims to learn feature representations tailored for a specific clustering
algorithm, is the most critical component of this anomaly detection method. A number of studies
have explored this problem in recent years . The main motivation
is due to the fact that the performance of clustering methods is highly dependent on the input
data. Learning feature representations specifically tailored for a clustering algorithm can well
guarantee its performance on different datasets . In general, there are two key intuitions here: (i)
good representations enables better clustering and good clustering results can provide effective
supervisory signals to representation learning; and (ii) representations that are optimized for one
clustering algorithm is not necessarily useful for other clustering algorithms due to the difference
of the underlying assumptions made by the clustering algorithms.
The deep clustering methods typically consist of two modules: performing clustering in the
forward pass and learning representations using the cluster assignment as pseudo class labels in the
backward pass. Its loss function is often the most critical part, which can be generally formulated as
𝑓 𝜙(x; Θ); W,𝑦𝑥
+ 𝛽ℓaux(X),
where ℓclu is a clustering loss function, within which 𝜙is the feature learner parameterized by Θ,
𝑓is a clustering assignment function parameterized by W and 𝑦𝑥represents pseudo class labels
yielded by the clustering; ℓaux is a non-clustering loss function used to enforce additional constrains
on the learned representations; and 𝛼and 𝛽are two hyperparameters to control the importance
of the two losses. ℓclu can be instantiated with a 𝑘-means loss , a spectral clustering loss
 , an agglomerative clustering loss , or a GMM loss , enabling the representation
learning for the targeted clustering algorithm. ℓaux is often instantiated with an autoencoder-based
reconstruction loss to learn robust and/or local structure preserved representations.
After the deep clustering, the cluster assignments in the resulting 𝑓function can then be utilized
to compute anomaly scores based on . However, it should be noted that the deep
clustering may be biased by anomalies if the training data is anomaly-contaminated. Therefore, the
above methods can be applied to the semi-supervised setting where the training data is composed
by normal instances only. In the unsupervised setting, some extra constrains are required in ℓclu
and/or ℓaux to eliminate the impact of potential anomalies.
The aforementioned deep clustering methods are focused on learning optimal clustering results.
Although their clustering results are applicable to anomaly detection, the learned representations
may not be able to well capture the abnormality of anomalies. It is important to utilize clustering
techniques to learn representations so that anomalies have clearly weaker adherence to clusters
than normal instances. Some promising results for this type of approach are shown in ,
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Pang, et al.
in which they aim to learn representations for a GMM-based model with the representations
optimized to highlight anomalies. The general formation of these two studies is similar to Eq. (32)
with ℓclu and ℓaux respectively specified as a GMM loss and an autoencoder-based reconstruction
loss, but to learn deviated representations of anomalies, they concatenate some handcrafted features
based on the reconstruction errors with the learned features of the autoencoder to optimize the
combined features together. Since the reconstruction error-based handcrafted features capture the
data normality, the resulting representations are more optimal for anomaly detection than that
yielded by other deep clustering methods.
Advantages. The advantages of deep clustering-based methods are as follows. (i) A number of
deep clustering methods and theories can be utilized to support the effectiveness and theoretical
foundation of anomaly detection. (ii) Compared to traditional clustering-based methods, deep
clustering-based methods learn specifically optimized representations that help spot the anomalies
easier than on the original data, especially when dealing with intricate data sets.
Disadvantages. Their disadvantages are as follows. (i) The performance of anomaly detection is
heavily dependent on the clustering results. (ii) The clustering process may be biased by contaminated anomalies in the training data, which in turn leads to less effective representations.
Challenges Targeted. The clustering-based anomaly measures are applied to newly learned lowdimensional representations of data inputs; when the new representation space preserves sufficient
discrimination information, the deep methods can achieve better detection accuracy than that in
the original data space (CH1 & CH2). Some clustering algorithms are sensitive to outliers, so the
deep clustering and the subsequent anomaly detection can be largely misled when the given data
is contaminated by anomalies. Deep clustering using handcrafted features from the reconstruction
errors of autoencoders may help learn more robust models w.r.t. the contamination (CH4).
END-TO-END ANOMALY SCORE LEARNING
This research line aims at learning scalar anomaly scores in an end-to-end fashion. Compared to
anomaly measure-dependent feature learning, the anomaly scoring in this type of approach is not
dependent on existing anomaly measures; it has a neural network that directly learns the anomaly
scores. Novel loss functions are often required to drive the anomaly scoring network. Formally,
this approach aims at learning an end-to-end anomaly score learning network: 𝜏(·; Θ) : X ↦→R.
The underlying framework can be represented as
Θ∗= arg min
ℓ 𝜏(x; Θ),
𝑠x = 𝜏(x; Θ∗).
Unlike those methods in Section 5.1 that use some sort of heuristics to calculate anomaly scores
after obtaining the learned representations, the methods in this category simultaneously learn
the feature representations and anomaly scores. This greatly optimizes the anomaly scores and/or
anomaly ranking. In this perspective they share some similarities as the methods in Section 5.2.
However, the anomaly measure-dependent feature learning methods are often limited by the
inherent disadvantages of the incorporated anomaly measures, whereas the methods here do not
have such weakness; they also represent two completely different directions of designing the
models: one focuses on how to synthesize existing anomaly measures and neural network models,
while another focuses on devising novel loss functions for direct anomaly score learning.
Below we review four main approaches in this category: ranking models, prior-driven models,
softmax likelihood models and end-to-end one-class classification models. The key to this framework
is to incorporate order or discriminative information into the anomaly scoring network.
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Deep Learning for Anomaly Detection: A Review
Ranking Models
This group of methods aims to directly learn a ranking model, such that data instances can be sorted
based on an observable ordinal variable associated with the absolute/relative ordering relation of
the abnormality. The anomaly scoring neural network is driven by the observable ordinal variable.
Assumptions. There exists an observable ordinal variable that captures some data abnormality.
One research line of this approach is to devise ordinal regression-based loss functions to drive
the anomaly scoring neural network . In , a self-trained deep ordinal regression
model is introduced to directly optimize the anomaly scores for unsupervised video anomaly
detection. Particularly, it assumes an observable ordinal variable y = {𝑐1,𝑐2} with 𝑐1 > 𝑐2, let
𝜏(x; Θ) = 𝜂(𝜙(x; Θ𝑡); Θ𝑠), A and N respectively be pseudo anomaly and normal instance sets and
G = A ∪N, then the objective function is formulated as
ℓ 𝜏(x; Θ),𝑦x
where ℓ(·, ·) is a MSE/MAE-based loss function and 𝑦x = 𝑐1 , ∀x ∈A and 𝑦x = 𝑐2 , ∀x ∈N. Here 𝑦
takes two scalar ordinal values only, so it is a two-class ordinal regression.
The end-to-end anomaly scoring network takes A and N as inputs and learns to optimize the
anomaly scores such that the data inputs of similar behaviors as those in A (N) receive large (small)
scores as close 𝑐1 (𝑐2) as possible, resulting in larger anomaly scores assigned to anomalous frames
than normal frames. Due to the superior capability of capturing appearance features of image
data, ResNet-50 is used to specify the feature network 𝜙, followed by the anomaly scoring
network 𝜂built with a fully connected two-layer neural network. 𝜂consists of a hidden layer with
100 units and an output layer with a single linear unit. Similar to , A and N are initialized
by some existing anomaly measures. The anomaly scoring model is then iteratively updated and
enhanced in a self-training manner. The MAE-based loss function is employed in Eq. (35) to reduce
the negative effects brought by false pseudo labels in A and N.
Different from that addresses an unsupervised setting, a weakly-supervised setting is
assumed in . A very small number of labeled anomalies, together with large-scale unlabeled
data, is assumed to be available during training in . To leverage the known anomalies, the
anomaly detection problem is formulated as a pairwise relation prediction task. Specifically, a
two-stream ordinal regression network is devised to learn the relation of randomly sampled pairs
of data instances, i.e., to discriminate whether the instance pair contains two labeled anomalies,
one labeled anomaly, or just unlabeled data instances. Let A be the small labeled anomaly set, U
be the large unlabeled dataset and X = A ∪U, P =
{x𝑖, x𝑗,𝑦x𝑖x𝑗} | x𝑖, x𝑗∈X and 𝑦x𝑖x𝑗∈N
first generated. Here P is a set of random instance pairs with synthetic ordinal class labels, where
y = {𝑦x𝑎𝑖x𝑎𝑗,𝑦x𝑎𝑖x𝑢𝑖,𝑦x𝑢𝑖x𝑢𝑗} is an ordinal variable. The synthetic label 𝑦x𝑎𝑖x𝑢𝑖means an ordinal
value for any instance pairs with the instances x𝑎𝑖and x𝑢𝑖respectively sampled from A and U.
𝑦x𝑎𝑖x𝑎𝑗> 𝑦x𝑎𝑖x𝑢𝑖> 𝑦x𝑢𝑖x𝑢𝑗is predefined such that the pairwise prediction task is equivalent to
anomaly score learning. The method can then be formally framed as
Θ∗= arg min
{x𝑖,x𝑗,𝑦𝑖𝑗}∈P
𝑦x𝑖x𝑗−𝜏 (x𝑖, x𝑗); Θ
which is trainable in an end-to-end fashion. By minimizing Eq. (36), the model is optimized to learn
larger anomaly scores for the pairs of two anomalies than the pairs with one anomaly or none. At
inference, each test instance is paired with instances from A or U to obtain the anomaly scores.
The weakly-supervised setting in addresses frame-level video anomaly detection, but only
video-level class labels are available during training, i.e., a video is normal or contains abnormal
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Pang, et al.
frames somewhere - we do not know which specific frames are anomalies. A multiple instance
learning (MIL)-based ranking model is introduced in to harness the high-level class labels to
directly learn the anomaly score for each video segment (i.e., a small number of consecutive video
frames). Its key objective is to guarantee that the maximum anomaly score for the segments in a
video that contains anomalies somewhere is greater than the counterparts in a normal video. To
achieve this, each video is treated as a bag of instances in MIL, the videos that contains anomalies
are treated as positive bags, and the normal videos are treated as negative bags. Each video segment
is an instance in the bag. The ordering information of the anomaly scores is enforced as a relative
pairwise ranking order via the hinge loss function. The overall objective function is defined as
max{0, 1 −max
x∈B𝑝𝜏(x; Θ) + max
x∈B𝑛𝜏(x; Θ)}
 𝜏(x𝑖; Θ) −𝜏(x𝑖+1; Θ)2 + 𝜆2
where x is a video segment, B contains a bag of video segments, and B𝑝and B𝑛respectively
represents positive and negative bags. The first term is to guarantee the relative anomaly score
order, i.e., the anomaly score of the most abnormal video segment in the positive instance bag is
greater than that in the negative instance bag. The last two terms are extra optimization constraints,
in which the former enforces score smoothness between consecutive video segments while the
latter enforces anomaly sparsity, i.e., each video contains only a few abnormal segments.
Advantages. The advantages of deep ranking model-base methods are as follows. (i) The anomaly
scores can be optimized directly with adapted loss functions. (ii) They are generally free from the
definitions of anomalies by imposing a weak assumption of the ordinal order between anomaly
and normal instances. (iii) This approach may build upon well-established ranking techniques and
theories from areas like learning to rank .
Disadvantages. Their disadvantages are as follows. (i) At least some form of labeled anomalies
are required in these methods, which may not be applicable to applications where such labeled
anomalies are not available. The method in is fully unsupervised and obtains some promising
performance but there is still a large gap compared to semi-supervised methods. (ii) Since the
models are exclusively fitted to detect the few labeled anomalies, they may not be able to generalize
to unseen anomalies that exhibit different abnormal features to the labeled anomalies.
Challenges Targeted: Using weak supervision such as pseudo labels or noisy class labels provide
some important knowledge of suspicious anomalies, enabling the learning of more expressive lowdimensional representation space and better detection accuracy (CH1, CH2). The MIL scheme 
and the pairwise relation prediction provide an easy way to incorporate coarse-grained/limited
anomaly labels to detection model learning (CH3). More importantly, the end-to-end anomaly score
learning offers straightforward anomaly explanation by backpropagating the activation weights
or the gradient of anomaly scores to locate the features that are responsible for large anomaly
scores (CH6). In addition, the methods in also work well in data with anomaly
contamination or noisy labels (CH4).
Prior-driven Models
This approach uses a prior distribution to encode and drive the anomaly score learning. Since
the anomaly scores are learned in an end-to-end manner, the prior may be imposed on either the
internal module or the learning output (i.e., anomaly scores) of the score learning function 𝜏.
Assumptions. The imposed prior captures the underlying (ab)normality of the dataset.
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Deep Learning for Anomaly Detection: A Review
The incorporation of the prior into the internal anomaly scoring function is exemplified by a
recent study on the Bayesian inverse reinforcement learning (IRL)-based method . The key
intuition is that given an agent that takes a set of sequential data as input, the agent’s normal
behavior can be understood by its latent reward function, and thus a test sequence is identified as
anomaly if the agent assigns a low reward to the sequence. IRL approaches are used to infer
the reward function. To learn the reward function more efficiently, a sample-based IRL approach is
used. Specifically, the IRL problem is formulated as the below posterior optimization problem
log𝑝(s|Θ) + log𝑝(Θ)
where 𝑝(s|Θ) = 1
(𝑜,𝑎) ∈s 𝜏Θ(𝑜,𝑎), 𝜏Θ(𝑜,𝑎) is a latent reward function parameterized by Θ,
(𝑜,𝑎) is a pair of state and action in the sequence s, 𝑍represents the partition function which is the
integral of exp   Í
(𝑜,𝑎) ∈s 𝜏Θ(𝑜,𝑎) over all the sequences consistent with the underlying Markov
decision process dynamics, 𝑝(Θ) is a prior distribution of Θ, and S is a set of observed sequences.
Since the inverse of the reward yielded by 𝜏is used as the anomaly score, maximizing Eq. (38) is
equivalent to directly learning the anomaly scores.
At the training stage, a Gaussian prior distribution over the weight parameters of the reward
function learning network is assumed, i.e., Θ ∼N (0, 𝜎2). The partition function 𝑍is estimated
using a set of sequences generated by a sample-generating policy 𝜋,
The policy 𝜋is also represented as a neural network. 𝜏and 𝜋are alternatively optimized, i.e., to
optimize the reward function 𝜏with a fixed policy 𝜋and to optimize 𝜋with the updated reward
function 𝜏. Note that 𝜏is instantiated with a bootstrap neural network with multiple output heads
in ; Eq. (38) presents a simplified 𝜏for brevity.
The idea of enforcing a prior on the anomaly scores is explored in . Motivated by the
extensive empirical results in that show the anomaly scores in a variety of real-world data
sets fits Gaussian distribution very well, the work uses a Gaussian prior to encode the anomaly
scores and enable the direct optimization of the scores. That is, it is assumed that the anomaly
scores of normal instances are clustered together while that of anomalies deviate far away from
this cluster. The prior is leveraged to define a loss function, called deviation loss, which is built
upon the well-known contrastive loss .
𝐿dev = (1 −𝑦x)|dev(x)| + 𝑦x max
0,𝑚−dev(x)
dev(x) = 𝜏(x; Θ) −𝜇𝑏
where 𝜇𝑏and 𝜎𝑏are respectively the estimated mean and standard deviation of the prior N (𝜇, 𝜎),
𝑦x = 1 if x is an anomaly and 𝑦x = 0 if x is a normal object, and 𝑚is equivalent to a Z-Score confidence interval parameter. 𝜇𝑏and 𝜎𝑏are estimated using a set of values {𝑟1,𝑟2, · · · ,𝑟𝑙} drawn from
N (𝜇, 𝜎) for each batch of instances to learn robust representations of normality and abnormality.
The detection model is driven by the deviation loss to push the anomaly scores of normal
instances as close as possible to 𝜇while guaranteeing at least 𝑚standard deviations between 𝜇
and the anomaly scores of anomalies. When x is an anomaly and it has a negative dev(x), the loss
would be particularly large, resulting in large positive deviations for all anomalies. As a result, the
deviation loss is equivalent to enforcing a statistically significant deviation of the anomaly score of
the anomalies from that of normal instances in the upper tail. Further, this Gaussian prior-driven
loss also results in well interpretable anomaly scores, i.e., given any anomaly score 𝜏(x), we can
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Pang, et al.
use the Z-score confidence interval 𝜇± 𝑧𝑝𝜎to explain the abnormality of the instance x. This is an
important and very practical property that existing methods do not have.
Advantages. The advantages of prior-driven models are as follows. (i) The anomaly scores can
be directly optimized w.r.t. a given prior. (ii) It provides a flexible framework for incorporating
different prior distributions into the anomaly score learning. Different Bayesian deep learning
techniques may be adapted for anomaly detection. (iii) The prior can also result in more
interpretable anomaly scores than the other methods.
Disadvantages. Their disadvantages are as follows. (i) It is difficult, if not impossible, to design a
universally effective prior for different anomaly detection application scenarios. (ii) The models
may work less effectively if the prior does not fit the underlying distribution well.
Challenges Targeted: The prior empowers the models to learn informed low-dimensional representations of different complex data such as high-dimensional data and sequential data (CH1
& CH2). By imposing a prior over anomaly scores, the deviation network method shows
promising performance in leveraging a limited amount of labeled anomaly data to enhance the
representations of normality and abnormality, substantially boosting the detection recall (CH1 &
CH3). The detection models here are driven by a prior distribution w.r.t. anomaly scoring function
and work well in data with anomaly contamination in the training data (CH4).
Softmax Likelihood Models
This approach aims at learning anomaly scores by maximizing the likelihood of events in the
training data. Since anomaly and normal instances respectively correspond to rare and frequent
patterns, from the probabilistic perspective, normal instances are presumed to be high-probability
events whereas anomalies are prone to be low-probability events. Therefore, the negative of the
event likelihood can be naturally defined as anomaly score. Softmax likelihood models are shown
effective and efficient in achieving this goal via tools like noise contrastive estimation (NCE) .
Assumptions. Anomalies and normal instances are respectively low- and high-probability events.
The idea of learning anomaly scores by directly modeling the event likelihood is introduced in
 . Particularly, the problem is framed as
Θ∗= arg max
log𝑝(x; Θ),
where 𝑝(x; Θ) is the probability of the instance x (i.e., an event in the event space) with the
parameters Θ to be learned. To easy the optimization, 𝑝(x; Θ) is modeled with a softmax function:
exp  𝜏(x; Θ)
x∈X exp  𝜏(x; Θ) ,
where 𝜏(x; Θ) is an anomaly scoring function designed to capture pairwise feature interactions:
𝑖,𝑗∈{1,2,···,𝐾}
where z𝑖is a low-dimensional embedding of the 𝑖th feature value of x in the representation space
Z, 𝑤𝑖𝑗is the weight added to the interaction and is a trainable parameter. Since Í
x∈X exp  𝜏(x; Θ)
is a normalization term, learning the likelihood function 𝑝is equivalent to directly optimizing the
anomaly scoring function 𝜏. The computation of this explicit normalization term is prohibitively
costly, the well-established NCE is used in to learn the following approximated likelihood
log𝑝(𝑑= 1|x; Θ) + log
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Deep Learning for Anomaly Detection: A Review
where 𝑝(𝑑= 1|x; Θ) =
exp  𝜏(x;Θ)
exp  𝜏(x;Θ)
+𝑘𝑄(x′) and 𝑝(𝑑= 0|x′; Θ) =
exp  𝜏(x;Θ)
+𝑘𝑄(x′) ; for each instance
x, 𝑘noise samples x′
1,···,𝑘∼𝑄are generated from some synthetic known ‘noise’ distribution 𝑄.
In , a context-dependen method is used to generate the 𝑘negative samples by univariate
extrapolation of the observed instance x.
The method is primarily designed to detect anomalies in categorical data . Motivated by this
application, a similar objective function is adapted to detect abnormal events in heterogeneous
attributed bipartite graphs . The problem in is to detect anomalous paths that span both
partitions of the bipartite graph. Therefore, x in Eq. (43) is a graph path containing a set of
heterogeneous graph nodes, with z𝑖and z𝑗be the representations of every pair of the nodes in the
path. To map attributed nodes into the representation space Z, multilayer perceptron networks
and autoencoders are respectively applied to the node features and the graph topology.
Advantages. The advantages of softmax model-based methods are as follows. (i) Different types
of interactions can be incorporated into the anomaly score learning process. (ii) The anomaly scores
are faithfully optimized w.r.t. the specific abnormal interactions we aim to capture.
Disadvantages. Their disadvantages are as follows. (i) The computation of the interactions can
be very costly when the number of features/elements in each data instance is large, i.e., we have
𝑂(𝐷𝑛) time complexity per instance for 𝑛-th order interactions of 𝐷features/elements. (ii) The
anomaly score learning is heavily dependent on the quality of the generation of negative samples.
Challenges Targeted: The formulation in this category of methods provides a promising way to
learn low-dimensional representations of datasets with heterogeneous data sources (CH2 & CH5).
The learned representations often capture more normality/abnormality information from different
data sources and thus enable better detection than traditional methods (CH1).
End-to-end One-class Classification
This category of methods aims to train a one-class classifier that learns to discriminate whether a
given instance is normal or not in an end-to-end manner. Different from the methods in Section
5.2.2, this approach does not rely on any existing one-class classification measures such as one-class
SVM or SVDD. This approach emerges mainly due to the marriage of GANs and the concept of
one-class classification, i.e., adversarially learned one-class classification. The key idea is to learn a
one-class discriminator of the normal instances so that it well discriminates those instances from
adversarially generated pseudo anomalies. This approach is also very different from the GAN-based
methods in Section 5.1.2 due to two key differences. First, the GAN-based methods aim to learn a
generative distribution to maximally approximate the real data distribution, achieving a generative
model that well captures the normality of the training normal instances; while the methods in this
section aim to optimize a discriminative model to separate normal instances from adversarially
generated fringe instances. Second, the GAN-based methods define the anomaly scores based on
the residual between the real instances and the corresponding generated instances, whereas the
methods here directly use the discriminator to classify anomalies, i.e., the discriminator 𝐷acts as 𝜏
in Eq. (33). This section is separated from Sections 5.1.2 and 5.2.2 to highlight the above differences.
Assumptions. (i) Data instances that are approximated to anomalies can be effectively synthesized.
(ii) All normal instances can be summarized by a discriminative one-class model.
The idea of adversarially learned one-class (ALOCC) classification is first studied in . The
key idea is to train two deep networks, with one network trained as the one-class model to separate
normal instances from anomalies while the other network trained to enhance the normal instances
and generate distorted outliers. The two networks are instantiated and optimized through the
GANs approach. The one-class model is built upon the discriminator network and the generator
network is based on a denoising AE . The objective of the AE-empower GAN is defined as
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Pang, et al.
𝐷𝑉(𝐷,𝐺) = Ex∼𝑝X
1 −𝐷 AE(ˆx)
where 𝑝ˆX denotes a data distribution of X corrupted by a Gaussian noise, i.e., ˆx = x + n with
n ∼N (0, 𝜎2I). This objective is jointly optimized with the following data construction error in AE.
ℓae = ∥x −AE(ˆx)∥2.
The intuition in Eq. (45) is that AE can well reconstruct (and even enhance) normal instances,
but it can be confused by input outliers and consequently generates distorted outliers. Through the
minimax optimization, the discriminator 𝐷learns to better discriminate normal instances from
the outliers than using the original data instances. Thus, 𝐷 AE(ˆx) can be directly used to detect
anomalies. In the outliers are randomly drawn from some classes other than the classes where
the normal instances come from.
However, obtaining the reference outliers beyond the given training data as in may be
unavailable in many domains. Instead of taking random outliers from other datasets, we can
generate fringe data instances based on the given training data and use them as negative reference
instances to enable the training of the one-class discriminator. This idea is explored in .
One-class adversarial networks (OCAN) is introduced in to leverage the idea of bad GANs
 to generate fringe instances based on the distribution of the normal training data. Unlike
conventional generators in GANs, the generator network in bad GANs is trained to generate data
instances that are complementary, rather than matching, to the training data. The objective of the
complement generator is as follows
𝐺−H (𝑝Z) + Eˆz∼𝑝Z log𝑝X(ˆz)I[𝑝X(ˆz) > 𝜖] + ∥Eˆz∼𝑝Zℎ(ˆz) −Ez∼𝑝Xℎ(z)∥2,
where H (·) is the entropy, I[·] is an indicator function, 𝜖is a threshold hyperparameter, and
ℎis a feature mapping derived from an intermediate layer of the discriminator. The first two
terms are devised to generate low-density instances in the original feature space. However, it is
computationally infeasible to obtain the probability distribution of the training data. Instead the
density estimation 𝑝X(ˆz) is approximated by the discriminator of a regular GAN. The last term is
the widely-used feature matching loss that helps better generate data instances within the original
data space. The objective of the discriminator in OCAN is enhanced with an extra conditional
entropy term to enable the detection with high confidence:
log  1 −𝐷(ˆz)
𝐷(x) log 𝐷(x)
In , Fence GAN is introduced with the objective to generate data instances tightly lying
at the boundary of the distribution of the training data. This is achieved by introducing two loss
functions into the generator that enforce the generated instances to be evenly distributed along a
sphere boundary of the training data. Formally, the objective of the generator is defined as
Ez∼𝑝Z ∥𝐺(z) −𝝁∥2
where 𝛼∈(0, 1) is a hyperparameter used as a discrimination reference score for the generator to
generate the boundary instances and 𝝁is the center of the generated data instances. The first term
is called encirclement loss that enforces the generated instances to have the same discrimination
score, ideally resulting in instances tightly enclosing the training data. The second term is called
dispersion loss that enforces the generated instances to evenly cover the whole boundary.
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Deep Learning for Anomaly Detection: A Review
There have been some other methods introduced to effectively generate the reference instances.
For example, uniformly distributed instances can be generated to enforce the normal instances to
be distributed uniformly across the latent space ; an ensemble of generators is used in ,
with each generator synthesizing boundary instances for one specific cluster of normal instances.
Advantages. The advantages of this category of methods is as follows. (i) Its anomaly classification
model is adversarially optimized in an end-to-end fashion. (ii) It can be developed and supported
by the affluent techniques and theories of adversarial learning and one-class classification.
Disadvantages. Their disadvantages are as follows. (i) It is difficult to guarantee that the generated
reference instances well resemble the unknown anomalies. (ii) The instability of GANs may lead
to generated instances with diverse quality and consequently unstable anomaly classification
performance. This issue is recently studied in , which shows that the performance of this type
of anomaly detectors can fluctuate drastically in different training steps. (iii) Its applications are
limited to semi-supervised anomaly detection scenarios.
Challenges Targeted: The adversially learned one-class classifiers learn to generate realistic
fringe/boundary instances, enabling the learning of expressive low-dimensional normality representations (CH1 & CH2).
ALGORITHMS AND DATASETS
Representative Algorithms
To gain a more in-depth understanding of methods in this area, in Table 2 we summarize some key
characteristics of representative algorithms from each category of methods. Since these methods
are evaluated on diverse datasets, it is difficult to have an universal meta-analysis of their empirical
performance. Instead, some main observations w.r.t. the model design are summarized as follows:
(i) most methods operate in an unsupervised or semi-supervised mode; (ii) deep learning tricks like
data augmentation, dropout and pre-training are under-explored; (iii) the network architecture
used is not that deep, with a majority of the methods having no more than five network layers; (iv)
(leaky) ReLU is the most popular activation function; and (v) diverse backbone networks can be
used to handle different types of input data. The source code of most of these algorithms is publicly
accessible. We summarize those source codes in Table A1 in Appendix A to facilitate the access.
Datasets with Real Anomalies
One main obstacle to the development of anomaly detection is the lack of real-world datasets with
real anomalies. Many studies (e.g., ) evaluate the performance of their
presented methods on datasets converted from popular classification data for this reason. This way
may fail to reflect the performance of the methods in real-world anomaly detection applications. We
summarize a collection of 21 publicly available real-world datasets with real anomalies in Table 3 to
promote the performance evaluation on these datasets. The datasets cover a wide range of popular
application domains presented in a variety of data types. Only large-scale and/or high-dimensional
complex datasets are included here to provide challenging testbeds for deep anomaly detection. In
addition, a continuously updated collection of widely-used anomaly detection datasets (including
some pre-processed datasets from Table 3) is made available at 
CONCLUSIONS AND FUTURE OPPORTUNITIES
In this work we review 12 diverse modeling perspectives on harnessing deep learning techniques for
anomaly detection. We also discuss how these methods address some notorious anomaly detection
challenges to demonstrate the importance of deep anomaly detection. Through such a review, we
identify some exciting opportunities as follows.
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Pang, et al.
Table 2. Key Characteristics of 30 Representative Algorithms. DA, DP, PT and Archit. are short for data
augmentation, dropout, pre-training and architecture, respectively. # layers account for all layers except the
input layer. lReLU represents leaky ReLU.
Activation
Reconstruction
Replicator
 (5.1.1)
Reconstruction
 (5.1.1)
Reconstruction
 (5.1.1)
Reconstruction
 (5.1.1)
Reconstruction
 (5.1.2)
Generative
 (5.1.2)
Generative
Conv. & MLP
ReLU/lReLU
Image & Tabular
 (5.1.3)
Predictive
 (5.1.3)
Predictive
 (5.1.4)
Classification
 (5.1.4)
Classification
 (5.2.1)
 (5.2.1)
 (5.2.2)
AE & Conv.
Tabular & image
 (5.2.2)
 (5.2.2)
 (5.2.2)
Conv. & MLP
Image & Tabular
 (5.2.3)
Clustering
Image & Tabular
 (5.2.3)
Clustering
Likelihood
 (6.1)
Anomaly scores
ResNet & MLP
 (6.1)
Anomaly scores
 (6.1)
Anomaly scores
3DConv. & MLP
 (6.2)
Anomaly scores
Likelihood
 (6.2)
Anomaly scores
 (6.3)
Anomaly scores
 (6.3)
Anomaly scores
 (6.4)
Anomaly scores
 (6.4)
Anomaly scores
LSTM-AE & MLP
 (6.4)
Anomaly scores
Conv. & MLP
lReLU/Sigmoid
Image & Tabular
 (6.4)
Anomaly scores
Table 3. 21 Publicly Accessible Real-world Datasets with Real Anomalies.
Anomaly (%)
Intrusion detection
KDD Cup 99 
4,091-567,497
0.30%-7.70%
 
Intrusion detection
UNSW-NB15 
 
Excitement prediction
KDD Cup 14
 
Dropout prediction
KDD Cup 15
0.10%-0.40%
Malicious URLs detection
Spam detection
Webspam 
Tabular/text
Fraud detection
Credit-card-fraud 
 
Vandal detection
UMDWikipedia 
Mutant activity detection
p53 Mutants 
Internet ads detection
Disease detection
Thyroid 
 
Disease detection
Arrhythmia 
 
Defect detection
Video surveillance
UCSD Ped 1 
14,000 frames
 
Video surveillance
UCSD Ped 2 
4,560 frames
 
Video surveillance
7,739 frames
15.5%- 18.1%
Video surveillance
Avenue 
30,652 frames
Video surveillance
ShanghaiTech Campus
317,398 frames
Video surveillance
1,900 videos (13.8m frames)
System log analysis
HDFS Log 
System log analysis
OpenStack log
Exploring Anomaly-supervisory Signals
Informative supervisory signals are the key for deep anomaly detection to learn accurate anomaly
scores or expressive representations of normality/abnormality. While a wide range of unsupervised
or self-supervised supervisory signals have been explored, as discussed in Section 5.1, to learn the
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Deep Learning for Anomaly Detection: A Review
representations, a key issue for these formulations is that their objective functions are generic but
not optimized specifically for anomaly detection. Anomaly measure-dependent feature learning
in Section 5.2 helps address this issue by imposing constraints derived from traditional anomaly
measures. However, these constraints can have some inherent limitations, e.g., implicit assumptions
in the anomaly measures. It is critical to explore new sources of anomaly-supervisory signals that
lie beyond the widely-used formulations such as data reconstruction and GANs, and have weak
assumptions on the anomaly distribution. Another possibility is to develop domain-driven anomaly
detection by leveraging domain knowledge such as application-specific knowledge of anomaly
and/or expert rules as the supervision source.
Deep Weakly-supervised Anomaly Detection
Deep weakly-supervised anomaly detection aims at leveraging deep neural networks to learn
anomaly-informed detection models with some weakly-supervised anomaly signals, e.g., partially/inexactly/inaccurately labeled anomaly data. This labeled data provides important knowledge
of anomaly and can be a major driving force to lift detection recall rates .
One exciting opportunity is to utilize a small number of accurate labeled anomaly examples to
enhance detection models as they are often available in real-world applications, e.g., some intrusions/frauds from deployed detection systems/end-users and verified by human experts. However,
since anomalies can be highly heterogeneous, there can be unknown/novel anomalies that lie
beyond the span set of the given anomaly examples. Thus, one important direction here is unknown
anomaly detection, in which we aim to build detection models that are generalized from the limited
labeled anomalies to unknown anomalies. Some recent studies show that deep
detection models are able to learn abnormality that lie beyond the scope of the given anomaly
examples. It would be important to further understand and explore the extent of the generalizability
and to develop models to further improve the accuracy performance.
To detect anomalies that belong to the same classes of the given anomaly examples can be as
important as the detection of novel/unknown anomalies. Thus, another important direction is to
develop data-efficient anomaly detection or few-shot anomaly detection, in which we aim at learning
highly expressive representations of the known anomaly classes given only limited anomaly
examples . It should be noted that the limited anomaly examples may come
from different anomaly classes, and thus, exhibit completely different manifold/class features. This
scenarios is fundamentally different from the general few-shot learning , in which the limited
examples are class-specific and assumed to share the same manifold/class structure. Additionally, as
shown in Table 2, the network architectures are mostly not as deep as that in other machine learning
tasks. This may be partially due to the limitation of the labeled training data size. It is important
to explore the possibility of leveraging those small labeled data to learn more powerful detection
models with deeper architectures. Also, inexact or inaccurate (e.g., coarse-grained) anomaly labels
are often inexpensive to collect in some applications ; learning deep detection models with
this weak supervision is important in these scenarios.
Large-scale Normality Learning
Large-scale unsupervised/self-supervised representation learning has gained tremendous success
in enabling downstream learning tasks . This is particular important for learning tasks,
in which it is difficult to obtain sufficient labeled data, such as anomaly detection (see Section
2.1). The goal is to first learn transferable pre-trained representation models from large-scale
unlabeled data in an unsupervised/self-supervised mode, and then fine-tune detection models in
a semi-supervised mode. The self-supervised classification-based methods in Section 5.1.3 may
provide some initial sources of supervision for the normality learning. However, precautions must
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Pang, et al.
be taken to ensure that (i) the unlabeled data is free of anomaly contamination and/or (ii) the
representation learning methods are robust w.r.t. possible anomaly contamination. This is because
most methods in Sections 5 implicitly assume that the training data is clean and does not contain
any noise/anomaly instances. This robustness is important in both the pre-trained modeling and
the fine-tuning stage. Additionally, anomalies and datasets in different domains vary significantly,
so the large-scale normality learning may need to be domain/application-specific.
Deep Detection of Complex Anomalies
Most deep anomaly detection methods focus on point anomalies, showing substantially better
performance than traditional methods. However, deep models for conditional/group anomalies
have been significantly less explored. Deep learning has superior capability in capturing complex
temporal/spatial dependence and learning representations of a set of unordered data points; it
is important to explore whether deep learning could also gain similar success in detecting such
complex anomalies. Novel neural network layers or objectives functions may be required.
Similar to traditional methods, current deep anomaly detection mainly focus on single data
sources. Multimodal anomaly detection is a largely unexplored research area. It is difficult for
traditional approaches to bridge the gap presented by those multimodal data. Deep learning has
demonstrated tremendous success in learning feature representations from different types of raw
data for anomaly detection ; it is also able to concatenate the representations
from different data sources to learn unified representations , so deep approaches present
important opportunities of multimodal anomaly detection.
Interpretable and Actionable Deep Anomaly Detection
Current deep anomaly detection mainly focuses on the detection accuracy aspect. Interpretable
deep anomaly detection and actionable deep anomaly detection are essential for understanding model
decisions and results, mitigating any potential bias/risk against human users and enabling decisionmaking actions. In recent years, there have been some studies that explore the
anomaly explanation issues by searching for a subset of features that makes a reported anomaly most
abnormal. The abnormal feature selection methods may also be utilized for anomaly
explanation purpose. The anomalous feature searching in these methods is independent from the
anomaly detection methods, and thus, may be used to provide explanation of anomalies identified
by any detection methods, including deep models. On the other hand, this model-agnostic approach
may render the explanation less useful, because they cannot provide a genuine understanding
of the mechanisms underlying specific detection models, resulting in weak interpretability and
actionability (e.g., quantifying the impact of detected anomalies and mitigation actions). Deep
models with inherent capability to provide anomaly explanation is important, such as . To
achieve this, methods for deep model explanation and actionable knowledge discovery 
could be explored with deep anomaly detection models.
Novel Applications and Settings
There have been some exciting emerging research applications and problem settings, into which
there could be some important opportunities of extending deep detection methods. First, out-ofdistribution (OOD) detection is a closely related area, which detects data instances that
are drawn far away from the training distribution. This is an essential technique to enable machine
learning systems to deal with instances of novel classes in open-world environments. OOD detection
is also an anomaly detection task, but in OOD detection it is generally assumed that fine-grained
normal class labels are available during training, and we need to retain the classification accuracy
of these normal classes while performing accurate OOD detection. Second, curiosity learning
ACM Comput. Surv., Vol. 1, No. 1, Article 1. Publication date: January 2020.
Deep Learning for Anomaly Detection: A Review
 aims at learning a bonus reward function in reinforcement learning with sparse
rewards. Particularly, reinforcement learning algorithms often fail to work in an environment with
very sparse rewards. Curiosity learning addresses this problem by augmenting the environment
with a bonus reward in addition to the original sparse rewards from the environment. This bonus
reward is defined typically based on the novelty or rarity of the states, i.e., the agent receives
large bonus rewards if it discovers novel/rare states. The novel/rare states are concepts similar
to anomalies. Therefore, it would be interesting to explore how deep anomaly detection could
be utilized to enhance this challenging reinforcement learning problem; conversely, there can
be opportunities to leverage curiosity learning techniques for anomaly detection, such as the
method in . Third, most shallow and deep models for anomaly detection assume that the
abnormality of data instances is independent and identically distributed (IID), while the abnormality
in real applications may suffer from some non-IID characteristics, e.g., the abnormality of different
instances/features is interdependent and/or heterogeneous . For example, the abnormality of
multiple synchronized disease symptoms is mutually reinforced in early detection of diseases. This
requires non-IID anomaly detection that is dedicated to learning such non-IID abnormality.
This task is crucial in complex scenarios, e.g., where anomalies have only subtle deviations and
are masked in the data space if not considering these non-IID abnormality characteristics. Lastly,
other interesting applications include detection of adversarial examples , anti-spoofing in
biometric systems , and early detection of rare catastrophic events (e.g., financial crisis
 and other black swan events ).
LINKS TO OPEN-SOURCE ALGORITHMS
Table 4. Links to Access 23 Open-source Algorithms.
Tensorflow
 
AnoGAN 
Tensorflow
 
Fast AnoGAN 
Tensorflow
 
EBGAN 
 
ALAD 
 
GANomaly 
 
Tensorflow
 
 
 
E3Outlier 
 
REPEN 
 
 
AE-1SVM 
Tensorflow
 
OC-NN 
 
Deep SVDD 
Tensorflow
 
Deep SAD 
 
DAGMM 
 
 
DevNet 
 
ALOCC 
Tensorflow
 
OCAN 
Tensorflow
 
FenceGAN 
 
OCGAN