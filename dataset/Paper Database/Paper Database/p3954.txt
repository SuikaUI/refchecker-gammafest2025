NASA Contractor Report 178382
ICASE REPORT NO. 87-66
FRONTS PROPAGATING WITH CURVATURE DEPENDENT SPEED:
ALGORITHMS BASED ON HAMILTON-JACOB1
FORMULATIONS
AS A-CB- 1783 8 2)
FRONTS PROP AG AT I IG Y IT H
M88- 19495
CURVATURE DEPENDENT SPEED: A L G O R I T H H S BhSED
OI E A H X L T O N - J A C O B X
POR?IULATIONS F i n a l Repart
( N A S A )
A v a i l : NTIS €IC AO4/nP
CSCL 12A 63/59
Stanley %her
James A. Sethian
C o n t r a c t No. NAS1-18107
S e p t e m b e r 1987
INSTITUTE FOR COMPUTER APPLICATIONS IN SCIENCE AND ENGINEERING
NASA Laugley Research Center, Rampton, Virginia 23665
Operated by the Universities Space Research Association
Fronts Propagating with Curvature Dependent Speed:
Algorithms Based on Hamilton-Jacobi Formulations
Stanley Osher
Department of Mathematics
University of California
Los Angeles, California 90024
James A. Sethian
Department of Mathematics
University of California
Berkeley, California 94720
We devise new numerical algorithms, called PSC algorithms, for following fronts propagating with
curvature-dependent speed. The speed may be an arbitrary function of curvature, and the front can also be
passively advected by an underlying flow. These algorithms approximate the equations of motion, which
resemble Hamilton-Jacobi equations with parabolic right-hand-sides, by using techniques from the hyper-
bolic conservation laws. Non-oscillatory schemes of various orders of accuracy are used to solve the equa-
tions, providing methods that accurately capture the formation of sharp gradients and cusps in the moving
fronts. The algorithms handle topological merging and breaking naturally, work in any number of space
dimensions, and do not require that the moving surface be written as a function. The methods can be also
used for more general Hamilton-Jacobi-type problems. We demonstrate our algorithms by computing the
solution to a variety of surface motion problems.
This work is supported in part by the Applied Mathematics Subprogram of the Office of Energy Research
under contract DE-AC03-76SF00098, NSF under the National Science Foundation Mathematical Sciences
Program, Sloan Foundation, NSF Grant No., DMs85-03294, ARO Grant. No. DAAG29-85-K-0190,
DARPA Grant in the ACMP Program, ONR Grant N00014-86-K-0691, NASA Langley Grant NAG1-270.
This work was also supported by the National Aeronautics and Space Administration under NASA Con.
tract No. NAS1-18107 while the first author was in residence at the Institute for Computer Application!;
in Science and Engineering (ICASE), NASA Langley Research Center, Hampton, VA 23665.
Fronts Propagating with Curvature Dependent Speed:
Algorithms Based on Hamilton-Jacobi Formulations
I. INTRODUCTION
In a variety of physical phenomena, one wants to track the motion of a front whose speed depends on
the local curvature. Two well-known examples are crystal growth [3,19,20,24,25,30,381 and flame propa-
gation . In this paper, we introduce, analyze, and utilize a collection of new numerical
algorithms for studying such problems. These new algorithms approximate the equations of motion of pro-
pagating fronts, which resemble Hamilton-Jacobi equations with viscosity terms. We demonstrate our algo-
rithms by computing the solutions to a variety of surface motion problems.
The background theory and numerical experimentation behind this approach have been developed in
a series of papers, see . In this paper, these ideas are coupled to the technology for the
numerical approximation of hyperbolic conservation laws to produce algorithms which we call PSC
schemes, for Propagation of Surfaces under Curvature. These new schemes allow one to follow the motion
of an N-1 dimensional surface in N space dimensions. The speed may be an arbitrary function of the curva-
ture, and the h n t can also be passively advected by an underlying flow. The algorithms can be con-
structed with any desired accuracy in space and time and do not require the front to remain a function. The
methods are in a Eulerian framework, thus the number of computational elements is fixed at the outset.
Topological merging and breaking is hahdled naturally, and the basic first order scheme is extremely sim-
ple to program.
As illustration of the wide applicability of such algorithms, consider the case of flame propagation,
see . A common model idealizes the burning flame as an infinitely thin boundary which separates
regions of constant steady-state velocity, density, and temperature and propagates into the unburnt fluid at a
speed dependent on the local curvature. The idea here is that cool convex fingers reaching out into the
unburnt gas somehow propagate slower than do concave regions which are hot gases surrounding a small
unburnt pocket. At the same time, particles along the flame front undergo an increase in volume as they
bum, creating a jump in velocity across the flame front. This discontinuity in the velocity field creates vor-
ticity along the burning flame, which can be related to the local curvature, and this new vorticity field con-
tributes to the advection of the propagating flame. Thus, there are at least two distinct ways in which the
speed of the moving flame depends on the local curvature.
Typically, there have been two types of numerical algorithms employed in the solution of such prob-
lems. The &st parameterizes the moving front by some variable and discretizes this parameterization into a
set of marker points. The positions of the marker points are updated in time according to approximations to
the equations of motion. Such techniques can be extremely accurate in the attempt to follow the motions of
small perturbations. However, for large, complex motion, several problems soon occur. First, marker parti-
cles come together in regions where the curvature of the propagating front builds, causing numerical insta-
bility unless a regridding technique is employed. The regridding mechanism usually contains a error term
which resembles diffusion and dominates the real effects of curvature under analysis. Secondly, such
methods suffer from topological problems; when two regions "bum" together to form a single one, ad-hoc
techniques to eliminate parts of the boundary are required to make the algorithm work.
Other algorithms commonly employed fall under the category of "volume of fluid " techniques,
which, rather than track the boundary of the propagating front, track the motion of the interior region. An
example of this type of algorithm is SLIC . In these algorithms, the interior is discretized, usually by
employing a grid on the domain and assigning to each cell a "volume fraction" corresponding to the
amount of interior fluid currently located in that cell. An advantage of such techniques is that no new com-
putational elements are required as the calculation progresses (unlike the parameterization methods), and
complicated topological boundaries are easily handled, see [4.321. Unfortunately, it is difficult to calculate
the curvature of the front from such a representation of the boundary.
The central idea in this paper is the formulation of the correct equation of motion for a front pro-
pagating with curvature-dependent speed. This equation in an initial-value Hamilton-Jacobi equation with
right-hand-side that depends on curvature effects. The limit of the right-hand-side as the curvature effects
go to zero is an eikonal equation with an associated entropy condition. By viewing the surface as a level
set, topological complexities and changes in the moving front are handled naturally. With these equations
as a basis, any number of numerical algorithms may be devised of arbitrary degree of accuracy, using the
technology developed for the solution of hyperbolic conservation laws. In particular, algorithms can be
devised to have the correct limiting entropy-satisfying solution. In fact, some previous algorithms may be
viewed as less sophisticated approximations to our equations of motion.
The evolution of this approach is somewhat interesting. Motivated by the use of SLIC in a
Huyghen’s principle flame propagation scheme , in an entropy condition was formulated for mov-
ing fronts. In , it was then shown that the Huyghen’s approach was an approximation to the eikonal
equation, which is a constant coefficient Hamilton-Jacobi equation with zero right-hand-side, and that the
postulated entropy condition occurs naturally in this equation. Viewed from the eikonal framework, the
inherent instability of marker particles was shown and demonstrated, see . We then studied the
effects of curvature on a propagating front and showed in that curvature added a parabolic
right-hand-side to the Hamilton-Jacobi equations of motion. Numerical evidence was given in show-
ing that the entropy condition formulated in picked out the correct viscous limit as the curvature
effects vanished. Attempts to approximate the solution to these equations using Lax-Friedrichs were satis-
factory, however, the use of centered differences created spurious boundary conditions. This then led
naturally to the higher-dimensional formulation and introduction of the higher-order upwind schemes
employed here.
The outline of this paper is as follows. In Section 11, we give the equations of motion for propagating
curves and surfaces in a form appropriate for numerical discretization. We then describe some past work,
provide new proofs of some previous results, and present some new work. In Section III, we give back-
ground for the numerical methods for hyperbolic conservation schemes to be used and show how they can
be used to provide solutions to Hamilton-Jacobi equations. In Sections IV and V, we use these techniques
to approximate solutions to a variety of problems involving propagating curves and surfaces. In Appendix
A, we discuss the inherent difficulty (linear ill-posedness) that any marker particle discretization (without
regridding) must encounter. In Appendix B, we construct the essential non-oscillatory interpolant used in
high order accurate approximation for general Hamilton-Jacobi equations.
II. PRELIMINARY ANALYSIS
We present the equations of motion and some theoretical results about curves and surfaces moving
with curvature dependent speed. We follow the analysis in 1321 and begin with a simple, smooth, closed
initial curve r(0) in R 2. Let r(t ) be the one parameter family of curves, where t E [ O p ) is time, generated by
moving the initial curve along the normal vector field with speed F , where F is a function of the curvature
K . Let X(s,t)=(x(s,t),y(s,t)) be the position vector which parameterizes r ( t ) by s , &Is,
X(O,t)=X(S ,t). The curve is parameterized so that the interior is on the left in the direction of increasing s .
With K (s ,t ) as the curvature at X (s ,t ), the equations of motion can be written as
to be solved for t E [O,+ with X(s ,O)+O),
s E [OS 3 given. Here, the curvature K is defined to be
yssxs - xssys
Given the mapping from [O,S ]x [ O p ) to R 2 generated by the moving curve, there
exists near t=O an inverse mapping function f defined by t=f (x,y). The curvature K can be written in
terms of this function f as
K = ( f xxfyL2f xyf x f y + f y y f 2 ).
V x h f y2)3'2
Our first result is
PROPOSITION 2.1 f satisfies the partial differential equation
F 2 ( f 2 + fy')= 1
as long as the curve y stays smooth and non-intersecting.
PROOF: The Jacobian of the mapping defined through Eqn.(2.1) is
J = 1 " " 1 = F ( K ) (XSZ+~SZ)'~
where K is the curvature in Cartesian coordinates. As long as this map stays smooth and one to one, we
have f 2 + f y" = t? + ty' = ys lJ2 + x$IJ2 = 1IF 2, which completes the proof.
We notice that Eqn. (2.2) is, in general, a second order nonlinear partial differential equation to be
solved in (x y f ) space near (xo (s),yo (s),O), yet we are only given initial data f (xo (s),yo (s)) = constant
on the initial curve and no information about the normal derivative off on this curve. This seemingly para-
doxical situation is resolved by
PROPOSITION 2.2 Given a constant to, let yo be the level curve off , Le.,
to = f (xo (s ) , Y ~ 1).
Then yo (s) is a characteristic curve for Eqn. (2.2).
PROOF: Differentiating f along y with respect to s gives f .x, + fy y, = 0. Differentiating with respect to
s again yields fu (x?) + 2f,x,y, +f,.,.(y,? +fxxss +fyyss = 0. Using the former, we may write
x, = af, y, = -afx
for some a(s)#O, which, using the latter, gives us
Thus, the required second derivatives off are uniquely determined on the curve from fx and fy , which in
turn are obtained uniquely from the above. This completes the proof.
Following we define the metric g (s ,t)=(x? + y,3112 and the angle 8 = tan-'(yS/x,). A simple cal-
culation gives us 0, = gK. We differentiate Eqn. (2.1) with respect to s and rewrite the resulting system,
using g and 8, as
Define the variation of the front at time t by
IK(s,t)l g(s,t)ds = le, I &.
Using this formulation, we generalize a result that first appeared in .
PROPOSITION (23) Consider a curve moving with speed F ( K ) via Eqn. (2.1). Assume F'(0)10 and 8
remains in the class BV[[O,Slx[O,Tl1 for OItIT. Then ar
d Vur(t) I O .
PROOF: The idea of the proof for smooth functions goes back to Oleinik and was generalized by
Kruz'kov to the present class of functions. We shall mimic Oleinik's proof only -- the more general
Bvcasefollowsasin . LetH(s,t)= 1 if8,(s,t)>O,-l if~,(~,t)<O,andOif8,(s,t)=0. Then,
Let [si ,si+l] be an interval on which 0, >O with 0, vanishing at the end points. Then
= F ' ( z )
The first term on the right vanishes because 8, = 0 at each end point; the second term is non-positive
because -F'(O)20 and 8m(si+,)S&Om (si). A similar argument works on intervals for which 8, <O in the
interior and 8, vanishes at the end points. This completes the proof.
Using Eqns. (2.3) and (2.4), we have
Kt = -[&F(K)/g].
Letting F = 1-EK, we obtain, as in 
Kt = EK,, -+ EK3 - K2.
and, for &=O,
K ( s , t ) =
This becomes infinite in finite time if K (s ,0) is anywhere negative and is analogous to shock formation
experienced in the single scalar convex conservation law. More precisely, consider the "viscous"
conservation law with G concave, namely
+ [G(u)]~ = E U ~ .
If we take &=O (the shock case), weak solutions to
Uf + [G (u)1, = 0
u(x,O) = uo(x)
are not unique, and an additional entropy condition is needed to select the correct viscosity limit. In order
to assure that the solution to Eqn. (2.7) be the unique limit as E+O of Eqn. (2.6), any of an equivalent class
of entropy conditions is imposed [17,21,281. The relevant one for our purposes is geometric, namely that
characteristics flow into a shock in the direction of increasing time. This means, for a piecewise continuous
weak solution u (x ,t) having a jump moving with
that G’(u,) > S > G’(u,).
For the moving curve problem Eqn. (2.1), or equivalently, Eqn. (2.2), with F=l, we need an entropy
condition which yields the unique limit solution as &+O, of the problem with F=l-&. Imagine the curve y
as a flame separating a burnt region on the inside from an unburnt region on the outside, and an indicator
function for the burnt region was defined to be +(x y ,f )=1 if the particle at (x y ) is burnt at time f , and zero
otherwise. In [3 11 Sethian suggested the following entropy condition: if +(x y ,t* )=1, then $(x y ,t )=1 for
t >f * , i.e., once a particle is burnt it remains burnt. This was shown to be equivalent to requiring that igni-
tion curves flow into comers. In 1321 numerical evidence was provided to show that the weak solution gen-
erated by this entropy condition is indeed the correct limiting solution. We now prove that this is so.
We consider a small section of the curve t=f (x ,y), which, without loss of generality, we can write
as y =Y(x t ). We insert this into the expression fx2cf,2-/P, arriving at
Here, we have also chosen a positive square root. Letting u = Y, and taking the x derivative of the above,
we have 
Ur + [G(U)l, = E7&+1 a
for G(~)=--(l+u~)l/~,
G(u) concave. The criterion for the inviscid limit problem given in is easily
seen to be that characteristics propagate into shocks for Eqn. (2.9) with SO, that is, into corners for Eqn.
(2.8) with F=l. For concave f (u), this is well known to be equivalent to the statement that limits of solu-
tions to Eqn. (2.9) (and thus Eqn. (2.8)) converge to solutions satisfying this criterion .
We may rewrite Eqn. (2.8) in the following form, namely
]([1 + Y p ) = 0
which is a Hamilton-Jacobi equation with second-order viscosity. For the more general case of a speed
function F (K),
-r=m](l + Y y 2 = 0
which is also a Hamilton-Jacobi equation with second-order perturbation if the speed function F satisfies
and 2)F'(0)20.
This formulation can be used to devise a numerical algorithm to approximate the solution of a curve
propagating with curvature-dependent speed, as long as the front remains a function, using the advanced
technology for shock dynamics. However, there is a different formulation of the problem which yields a
different Hamilton-Jacobi type equation and does not require that the propagating front remain a function.
Define a Lipschitz continuous function $ ( x y ,t) so that at t=O, $(x y ,O)> 1 inside the burnt region 51 , i.e.,
the region bounded by -y(O), +(x ,y ,0)<1 outside a, and $(x ,y ,0)=1 on &2. Next, let $(x y ,t) be defined by
$(x y ,t) = C where t=f (x ,y ) is defined from Eqn. (2.2) for any fixed constant C . This yields
and hence F2 (+? + $3 = $?. Thus, choosing the direction of propagation to be outwards, we have
This is also a Hamilton-Jacobi equation with second order right-hand-side. However, this different formu-
lation allows us to compute the solution even when the front is not a function and when two "burnt" regions
merge together.
Using this formulation, and the recent theory of viscosity solutions to Hamilton-Jacobi equations,
Barles [l] has proven that the entropy condition in picks out the unique viscosity solution even when
the front is not a function. He defines $(x y ,0) = (l-d (x y ;a))+
+ d (x .y ;ac)
where x+=max(x ,0) and nc
is the complement of n and evolves $ according to Eqn. (2.11) in the special case F=l. He then chooses
the unique viscosity solution which is characterized by the entropy condition of Crandall-Lions [SI and
shows that the resulting surface y(t)4n,, defined by a!&
Ig(x y ,t)=l), evolves according to the
entropy condition in .
Our results easily extend to initial surfaces. Suppose the surface ‘r(0) =(x(~lr~2),~(~1*r2)r(~lr~2)),
moves along its normal vector field with speed F ( K ) , yielding ‘Y(s1~2,t)=?l(t).
It may be rewritten as
t=f (x,y,t),whereF2(f,2+fy2+f?)= 1. Here,F =F(K),where
if we use the Gaussian curvature, and
if we choose the mean curvature. Following the previous discussion for the propagating curve, we may
focus on a small section of the initial surface and produce an evolution equation of the form
Yt - F ( K ) (1 +Y,2+Yy2)1’2=0
where z=Y(x y ,t) and K is the chosen form of the curvature. At the same time, we may once again view
the initial surface as a level set of the function $(x y c ,t ) = C. More generally, to move an n -dimensional
surface f ( X I , .... j,,)=t. we are led to the Hamilton-Jacobi-like problem
$1-F(K) lV$l =o
with initial data
$(T,O) = ( 1 4 (TQ))+ + d (T,Q)
where $(XI, ....... j,,,t)=l, and the curvature is chosen appropriately. Of course, it is crucial that our numeri-
cal scheme pick out, when necessary, the correct entropy condition.
III. NUMERICAL METHODS
We have seen that the problem of following a front moving with curvaturedependent speed becomes
a Hamilton-Jacobi equation with second-order right hand side. Given an (n-1) dimensional surface pro-
pagating in R n, we have two formulations, namely
Eqn. (2.12). which is a Hamilton-Jacobi type equation for Y in N=n-1 space variables and applies
when the front can be written as a function or
Eqn. (2.13), which is a Hamilton-Jacobi type equation for
regardless of whether the front can be written as a function.
in N=n space variables, and applies
Thus, PSC algorithms, or Propagation of Surfaces under Curvature algorithms, rely on approximations of
w(x P O ) = w o (x 1
with D y = wx,,.......,yr%, where we have written the equations for the case F(K)=l for simplicity. In For-
mulation l),
H ( U l , ....., UN) = -(l+Uf + ..... +U&)In
whereas in Formulation 2),
H ( U l , ....., UN) = -(I48 +.....+U&)1’2.
While Formulation 2) is more general, Formulation 1) requires one less dimension, and thus is less time-
consuming from the point of view of numerical computations. In this section, we describe numerical
methods that can be used to approximate the solution to Eqn. (3.1). First, we describe first order monotone
methods for one dimension, followed by higher order methods. Then we present algorithms for first order
monotone methods for several dimensions, followed by higher order schemes. We then show how these
schemes can be used to solve the general case of speed function F (K). Initialization and bo&~dary condi-
tions are then discussed, followed by the extension of the algorithm to propagation plus passive advection.
A. One Space Dimension
I) First order schemes for one space dimension
In one space dimension, the technology for single conservation laws goes over almost directly. We
differentiate Eqn. (3.1) with respect to the single space variable x and let u=yx to produce
u, + [H(u)], = 0.
An algorithm to approximate the solution to the above is said to be in conservation form (that is, conserves
u) if it can be written in the form
requirement g(u ,....... u)=H(u). From here on, let y (Y) be the exact (approximate) solution).
A scheme is called monotone if the right-hand-side of Eqn. (3.9) is a non-decreasing function of all
its arguments. It can be shown that conservative monotone schemes have no spurious overshoots nor wig-
gles near discontinuities [ 161 and obey an entropy condition for limit solutions. In view of the link between
the Hamilton-Jacobi equation and the conservation law equation in one space variable, we may easily adapt
first order monotone schemes for shock equations to our problem (in fact, the theory goes over word-for-
word). The simplest scheme is Lax-Friedrichs, which relies on a central difference approximation to g , and
preserves monotonicity through a second-order linear smoothing term. Unfortunately, this scheme is not
upwind (to be described later), and this will turn out to be a critical requirement for boundaries.
Thus, we begin with the canonical upwind monotone scheme, namely Godunov's method . A
key aspect of this scheme is that the flux function g is the least viscous of all 2 point monotone fluxes .
In this scheme, g is constructed as follows. View the data [u,D]jL, as representing a piecewise constant
uA(x it") E u,!!
xj-112 3 2 , + 1 / 2 .
For &/Ax small enough, the initial value problem Eqn. (3.4) with u (x ,0)=uA(x;t,,) is a sequence of con-
necteed Riemann problems; i.e., only adjacent constant states interact and thus may be solved "exactly" for
one time step. This exact solution at time tn+l is then averaged over each cell to produce the numerical
approximation u,~+l,
Using the divergence theorem, the scheme can be put in conservation form with g,+112 = H (u(x,+l12,0+)). In
other words, the numerical flux is the same as the physical flux applied to the exact solution of the Riemann
problem Eqn. (3.4), with initial data
u (x ,O) = u;
u (x ,O) = u;+1
x >Xj+1/2.
We label this flux function gmD(u;,u;+l)+'+112.
This is clearly an "upwind difference scheme in the
sense that, if H'>O, then g,+112 = f (u,), likewise, if H'<O. then g,+1/2 = f (u,+l). Another formulation of the
above flux function [27l is simply that
There are other useful upwind monotone schemes, see , which, while powerful in their own
right, do not easily extend to several dimensions and thus are severely limited. We now present a new
upwind monotone scheme (HJ), for the particular case when
H ( u ) =f <u2)
with f '(u) < 0. Define
gHJ (u;,u;+l)
= f ((min(u,nm2 + (mWq+1 ,O))?.
The advantage to this scheme is that it easily generalizes to several space dimensions (see below).
It is a simple matter to put any of these schemes in terms of the Hamilton-Jacobi variable y~. The
numerical flux g approximates H. In the shock formulation, g must be differentiated (Eqns. 3.4, 3.5).
However, H (and hence its numerical approximation g) appears directly in the Hamilton-Jacobi formula-
tion (Eqn. 3.1). thus we may immediately write
Y;+l= Y,LAt g (D-Y;,D+Y;).
Here, g is any of the above numerical fluxes. (In the Hamilton-Jacobi context, it is natural to thus refer to g
as the numerical Hamiltonian, and we shall now do so.) We note that the CFL condition is for gm
(Atlhx) IH'I 1112.
2) Higher order schemes for one space dimension
Although monotone schemes have the desirable properties of conservation form, no spurious oscilla-
tions and an entropy limit, unfortunately they are limited to first order and smear out most discontinuities.
However, they do suggest other kinds of schemes of higher accuracy that retain these properties.
One new class of higher order accurate algorithms was devised for conservation laws in [13,141.
They rely on an essentially non-oscillatory interpolant (and are thus called "ENO" schemes) and can be
constructed to arbitrary high order. In fact, viewing them in the Hamilton-Jacobi framework results in sub-
stantial simplification; thus we proceed directly to this setting.
The idea is as follows. Consider the solution to yft + H (yfx) = 0, with yf given at t=t
We integrate
this in time from t =tn to r =t n+l
for any fixed x and arrive at
W(x,tn+l)=yr(x,tn) -%H(yrx(x,tn+s))ds.
To approximate this procedure, let Y; approximate the exact solution at time n Aft.
We want to devise a
function RM(x;Yn) which approximates yf(x ,tn) in regions of smoothness of yf, up to 0 (Ax>M+l. More-
over, this approximating function should be non-oscillatory even if yfx is discontinuous, i.e., no new
significant oscillations are introduced. We build the interpolants from the ground up as follows. For M=l,
R l ( x ; Y") is defined to be the unique piecewise linear function connecting the points (xv, Y;), thus produc-
ing precisely Godunov's first order algorithm. For M=2, in each cell x,IxIx,+l, R2(x;Yn) is the parabola
passing through (xi; Y;),
(on the left) or (xj+2, Yr+2) (on the
right) yields the smallest (in magnitude) second derivative, thus limiting oscillations. We store this choice
and repeat inductively for more accuracy: that is, a cubic is obtained using the three points for the parabola,
and an additional point, either just to the left or to the right, whichever yields a smaller magnitude third
derivative. (The general M degree construction may be found in Appendix B.) This procedure creates a
function which 1) interpolates Y; at M+1 consecutive points containing X j and xj+l and 2) minimizes the
magnitude of all derivatives, given the above constraint. It can be shown (see ) that, if yf(x) is piece-
wise C r , has at most a finite number of isolated jumps in its derivatives and is smooth at X=XO, then for Ax
sufficiently small,
Y;+l), and whichever point
[(&)Vyf(X)
- (&)vwx;~)Ix, = 0
(LLr)M-v+l
where v=O,1,2,.M. The global statement is also true, namely,
where TV is the total variarion of a B.V. function as defined in . To continue the algorithm, we then
solve the initial value problem (Eqn. (3.1)), with Y(x.0) = R'(x;
Y"), either exactly (as in the Godunov
scheme) or approximately, using any other monotone approximation. To obtain the new Yn+l, we define
,s) dS + Y? = Yj' -
( Y x ( X j J)) dS
where Ar is taken small enough so that only waves from adjacent cells interact.
We simplify this method for our calculations. First, instead of solving the exact problem, we approxi-
mate the Godunov flux by the simpler monotone flux gw. The numerical time integration can be performed
either by formally replacing higher time derivatives to arbitrary order by space derivatives, see , or by
producing a non-oscillatory Runge-Kutta type algorithm [291 from the semi-discrete formulation
We note that for first order monotone approximations to a linear equation ut=-ux, the Hamilton-
Jacobi and conservation law formulations yield the same schemes. However, differences occur for higher
order methods. A second order approximation for conservation form gives
--D-[u~ + = m [ D ~ c i , D + ~ j ] ]
[D-Yj + T m [ D D - Y j , D D + Y j ] ]
for Hamilton-Jacobi form (rn is defined below). The first is only first order accurate near critical points
because the term with m [ ] gives ux+O (Ax), and the coefficient in the O(&)
is not Lipschitz continuous
near these points. The second is uniformly second order accurate since the analogous term yields
Yn+O(bx). We also have estimates
a CID+uj 110 a CID+D-Yj 110.
B. Several Dimensions
In general, the Hamilton-Jacobi equations in several dimensions cannot be recast as a simple system
of conservation laws. However, we now design a new class of monotone upwind schemes for arbitrary H
in several space dimensions. In our application here, namely the case H(yx,,
(y&....y$), wheref
is non-increasing in each of its arguments, we devise a particularly simple class of algorithms.
I ) First order schemes for several dimensions
Crandall and Lions have analyzed monotone (and hence first order) difference approximations to
the Hamilton-Jacobi equations. As an introduction, we consider the two-space dimension discrete approxi-
where p ,q,r,s,20, and gis thus a function of (p+q+l)(r+s+l) variables. Consistency requires that g be
Lipshitz continuous and that g (a ,....... p ;b b.. .. ..b ) = H (a .b ). Crandall and Lions proved a rate of conver-
gence result of 0 (Ar)1’2 in the max norm. Their only example however is Lax-Friedrichs, which relys on a
central difference formulation, and suffers from excessive diffusion. Unfortunately, in our solution of front
propagation problems, the computational domain must be limited to a finite region, and thus far-field boun-
dary conditions are required. A central difference scheme creates spurious waves at the boundary because
it does not make use of the direction of propagating characteristics. In fact, the second author’s original
attempt to solve the level surface Hamilton-Jacobi equation (Eqn. (2.13)) using Lax-Friedrichs suffered
from just this problem, and this is what ultimately led to the introduction of upwind schemes.
We begin by defining a new upwind first order generalization of Godunov’s scheme . Let
= H(DfYjk; Dg'I'jk). The same holds for the other three cases, and the numerical Hamiltonian g
does not depend on the ordering of the operators. In fact, the scheme is monotone if
12 Ar/Ax IH1 I + &/Ay
l H 2 l . Near sonic points, Le., points where au
aH vanish, the Hamiltonian
defined in Eqn. (3.9) becomes a bit complicated, and we resist reproducing the formula here.
In our special case H(u,v) = f ( u2 ,v?, with f non-increasing in both variables, our one-
dimensional HJ scheme is easily extended to two dimensions through
gw = f (((min(D?\Yjk,0))2+(maX(Df'I'jk,0))2)
,((min(Dx\Yik, 0))2+(maX(Dgyjk.0))2)) (3.11)
which is fully upwind and monotone, subject to the CFL restriction 1 2 2 [ 2 I H 1 I + -
I H 2 I I.
2) Higher order schemes for higher dimensions
We extend our higher order methods to higher dimensions by using the spatially discrete temporally
continuous formulation obtained from our one-dimensional EN0 reconstruction procedure dimension by
dimension. Thus, for example, a second order in space method is
Dxyjk+ym [Dmzyjk, D ~ x ~ j k ] ~ ~ ~ j k - ~ m
[Dwg\yir, D&DZ'I'jk]]
where m [x y ]=xif Ix I I I y I and rn [x y ]=y if Ix I > I y I. There is no loss of the desirable properties if m
is defined as above except if xy <O in which case it is taken to be zero. We shall use this definition in the
next section , since it yields a "smoother" flux function.
To obtain a fully discrete algorithm of the appropriate accuracy in time, we view Eqn. (3.12) as a
nonlinear evolution operator of the type
J k - -- L[y,j,kl
and employ certain Runge-Kutta type schemes (see for a theoretical justification). For example, a
second order essentialIy non-oscilIatory Runge-Kutta algorithm is
IDYJ+ 1/2+,1+1-+~[++1, j , k ] ,
which has a slightly reduced CFL restriction from the underlying monotone algorithm.
C. General F (K)
For general F (K),
VI + F ( K ) H ( V y ) = O
where K is the curvature and involves terms like yxl, yw , yq. We have found that it is necessary to
separate F ( K ) into a constant term (the convection part) and those terms dependent on K, that is,
F ( K ) = Fo + F1(K), where Fo is a constant (possibly zero) and F1(0)=0. Equation (3.13) then becomes
0) H (Vy) = -F I(K) H (VV).
While the convection term H(Vy) on the left is approximated using one of our non-oscillatory upwind
methods, all derivatives on the right, including Vy, are approximated by central differences. The reason for
this may easily be Seen from the following illustration: Consider a circular front of initial radius one mov-
ing with speed F(K)=K. In Formulation 2, (Eqns. 3.1,3.3), this is one of an infinite number of concentric
level curves: those with small radii near the center have large curvatures. Since the term K H (Vy) on the
right depends on multiplication and division by (y2%y,?)ln,
which is very close to zero near the origin, the
approximation to y2 and yr must be the same within K and H(Vy), otherwise, large errors result. Thus, it
is simplest to stick to central differences throughout the right hand side. One can also show linear stability
of this semi-discrete approximation. We make this spatially discrete algorithm fully discrete using either
just a forward Euler time discretization (first order accurate) or a higher-order Runge-Kutta procedure, as
in . Because of the "parabolic" right-hand-side, any such method will have a somewhat smaller CFl
restriction than the "inviscid approximation.
D. Initialization and Singularities
For propagating level surfaces, we initialize y by taking y(T,O) = 1 rt d2, where d is the distance
from the point X to the initial surface, and the plus (minus) sign is chosen if X is inside (outside) the initial
There will be points where Vyr vanishes. On the right-hand-side of Eqn. (3.14), division by zero then
occurs in the denominator of the curvature evaluation (N.B., this does not happen in the functional
representation (Formulation 1)). Given the above initialization function, to a first approximation such
points are surrounded by spherical level surfaces, and we may formally evaluate the limit F 1(K)Vyr as the
radius of the concentric level spheres goes to zero. If a mesh point falls exactly on a critical point of y~,
limit is employed directly into the scheme at that point.
E. Far-Field Boundary Conditions
In the case of a propagating function (Formulation 1, Eqn. (3.1-3.2)). if yx(x,0)=O at X I and x2
(using one dimension as an example), then we can employ symmetric boundary conditions at each end.
However, in the level surface case (Formulation 2, Eqn.(3.1,3.3)), Eqn. (3.1) must be initialized and solved
for all of RN. Thus the computational domain must be truncated. With a non-zero convection term S in
Eqn. (3.14). characteristics will head outwards far from the region of interest, and our upwind schemes are
perfectly suited for these problems. In first order schemes, no far field numerical boundary conditions are
needed for the convection term, since the schemes "look in the right direction. Higher order schemes
involve a choice of directions in order to remove spurious oscillations, thus we replace
rn [DXDfY,,DEEY,] with the second order term DELE'€',, at the right-hand far-field boundary, etc.
However, the curvature term on the right-hand-side of Eqn. (3.14) must be treated with some care. If
the convection term is relatively large, instabilities in this approximation will be swept out of the domain.
However, if F d ,
the boundary plays a role. If the boundary is far from the initial surface, we may ima-
gine that the level surface passing through each boundary point is almost a sphere. Thus, we use the exact
solution to the collapsing sphere as the far-field boundary condition to the right-hand-side of $,..
F. Addition of Passive Advection
Suppose the propagating front is also passively advected by an underlying velocity field
V = (ul, ......,, U N ) inN-dimensional domain space. It can be shown that Eqn. (3.13) becomes
vt + F (K)
H (vv) + V - VY = 0.
Here, of course, 6
may depend on x and t . For the numerical results in the next section, we used first order
upwind differencing in each term
-ui+D-yi -I-
However, when
depends on y, the front moves itself in a non-local manner, and more sophisticated
methods are required. We will report on the extension of our algorithms to this important problem else-
where .
IV. MOVING CURVES
In this section, we demonstrate the versatility of our PSC algorithms applied to a variety of test prob-
lems involving moving curves in a plane. We use the first and second order Hamilton-Jacobi schemes
applied to both propagating functions and level curves. In all of these examples, the only input parameters
are the initial curves, the time step Ar, the space step h=l/Npht, the order of the scheme and the speed
function F (K).
Everything else is handled automatically by the Hamilton-Jacobi formulation.
A. F(K)=l-&K, Propagating function, Dependence on E
First, we show the effect of the curvature term on the formation of singularities in the propagating
fronts. Consider the initial curve ~
,O)=cos8m, 0 9 SI. Using these initial data, we compute the solution
to the initial value problem mn. 3.1, 3.2) with our second order Hamilton-Jacobi scheme and
F(K)=l-&K, where K=
Thus, the "peaks" move slower than the "troughs". Periodic boundary
conditions are employed in this scheme. In Figures la (E=O.O), lb (~=.025), and IC (~=.l), we graph the
position of the front at various times. There are Nph~160 mesh points in the unit interval with time step
At=.001. In the case SO (Fig. la), comers form in the moving front, and these "shocks" propagate
upwards. In the case e.025 (Fig. lb), the front stays smooth due to the curvature term. In the case e . 1
(Fig. IC), diffusion is so large that the peaks first start moving downwards ( 1-EK eo) before they flatten out
enough to propagate upwards.
B. Error analysis
We wish to verify that our Hamilton-Jacobi schemes are indeed first and second order. We consider
initial data ~ ( x
,O)=cos2m, OIrIl, F (K)=l-EK, ~=.01
and compute the solution Uh(x ,t) to Eqn. (3.1-3.2)
forh=.01/2,At=.005/2P,p=O,1,2,3,4,5,6.
If weassume that theexact solutionv(x,t) canbe writtenas
v(Xrt)=Uh(X,f)fChR +O(hR+'),
then we can estimate the order R of the method by
Since we do not know the exact solution, we approximate v by the most accurate calculation. In Table 1,
we give the value of R found by comparing Uh and Uh/2 for various values of h at time t=1.0, using
Uh=1/6400 (p=6) as the exact solution. Here, errors are measured using the discrete L2 norm. The value of R
approaches 1 for the first order scheme and approaches 2 for the second order scheme. Although the results
appear a little better than that, we hesitate to draw any conclusions.
Actual Order of Hamilton-Jacobi Schemes
Mesh size I "First" Order 1 "Second" Order
h=.01/10 I
h=.01/20 I
C. F (K)=K, Propagating functions
We consider a periodic curve ~
,O)=sin2m as initial data, F (K)=K, and solve Eqn. (3.1-3.2) using
our second-order scheme. This corresponds to a curve moving under its curvature. This problem has been
studied extensively in and reduces to a relatively straightforward parabolic equation. In Figure 2,
we draw the front at various times, demonstrating that the periodic front relaxes to a straight line with
increasing time.
D. Level Curve, Burning out, Development of Corners
We consider a seven-pointed star
= (.1+(.065) sin(7.2m)(cos(2m),sin(2m))
as the initial curve and solve Eqns. (3,1), (3.3) with F (K)
= 1, using the initialization given in Section
1II.D. The computational domain is a square centered at the origin of side length 1/2. We use 300 mesh
points per side and a time step At=.0005. At any time n At, the front is plotted by passing the discrete grid
function Yr) to a standard contour plotter and asking for the contour Y=l.
The initial curve corresponds to
the boundary of the shaded region, and the position of the front at various times is shown in Fig. 3. The
smooth initial curve develops sharp comers which then open up as the front burns, asymptotically
approaching a circle.
E. Level Curve, Motion Under Curvature
With the Same initial curve as Example 1V.D above, we let F (K)=K, corresponding to a front mov-
ing in with speed equal to its curvature. It has recently been shown [lo] that any non-intersecting curve
must collapse smoothly to a circle under this motion. With Npkt=300, and At=.0005, in Fig. 4a, we show
the front at time t=.0,.01,.02,.03,.04,.05.
Here, we have scaled time by a factor of 100, because the real
front moves so quickly. In Figures 4a4d we show the continued evolution of the surface from td.0 to t=.2.
The plots show the relaxation of the peaks and troughs and the smoothing into a circle. In Figure 5, we
show the results of the same motion applied to a different initial curve, namely the wound spiral traced out
y(s) = (.1e(-loy(s)) - (.I-x(s))DO)(cos(a (s)), sin(a (s)))
whereu(s)=25tan-'(lOy(s)) and
x ( s ) = (.l)cos(2m)+.l
y ( s ) = (.05)sin(2m)+.l SE .
With N , h ~ 2 0 0 and Llt=.OoOl, Figure 5a shows the unwrapping of the spiral from t=O to t=0.65. In Fig-
ures 5a-d we show the collapse to a circle and eventual disappearance at t=.295 (The surface vanishes
when Y; < 1 for all ij.)
F. Level Curve, F (K)=l-&, Merging and Breaking
Using the wound spiral initial curve in the above example, Figure 6 shows the results with
F(K)=l-&K, N,hp200 and At=.0001. Figure 6a shows the initial curve as the boundary of the shaded
region. In Fig. 6b, the spiral expands and pinches off due to the strong convection component, separating
into two curves, one propagating outwards and one shrinking in. In Fig. 6c, the front at t=.W is the boun-
dary of the shaded region. The outer front expands and the inner front collapses and disappears. In Fig. 6d,
all that remains is the outer front which asymptotically approaches a circle.
G. Level Curve, Passive Advection and Propagation
Finally, we solve the passive advection plus propagation equation (Eqn. 3.15) with the initial seven-
pointed star in Example D, F (K)=l, and
= (u 1(x Y ,t 1, u2(x Y ,t 1) = ( -Y , x ) (WX2 + y2)).
This corresponds to solid body counterclockwise rotation around the origin with tangential velocity 1 along
the circle with radius . 1 centered at the the origin. In Figure 7, we show the expanding and spinning star at
various times.
V. MOVING SURFACES
In this section, we use PSC algorithms to compute the evolution of several two-dimensional surfaces
in three space dimensions. We use the initializing function given in Section 1II.D.
A. Propagating Function Surfaces, F (K)=l
We evolve the initial surface
yf(x.y.0) = -.25[cos(2m)-ll[cos(2lty)-ll+ 1
according to Eqns. (3.1), (3.2), with F (K)=l, Af=.Ol, NPht=50 (in each direction) and periodic boundary
conditions. This surface is flat in the boundary of the unit square centered at the origin and has a global
minimum at (0,O). In Figure 8a, we plot the surface at various times, showing the focussing of the
minimum into a deep dent which then opens up. The surface moves upward with unit speed, asymptotically
approaching a flat sheet. Next, we add curvature effects to the speed function and let F(K)=l-EK, e . 1 .
The time step is reduced to Af=.OoOl because of stability requirements from the addition of a parabolic
term. In Figure 8b, we plot the surface at various times. Here, the dent is greatly smoothed due to the cur-
vature effects, and the surface becomes flat much faster, similar to the one-dimensional case (Fig. l).
We then consider a saddle surface, described by
y(x,y ,O) = cos(2m) - cos(2xy).
Again, we start with F(K)=l, Af=.Ol, N+,=50
and periodic boundary conditions. In Figure 9a, we plot
the surface at various times. Here, the rising surface develops a discontinuity passing through the saddle
point in the y coordinate direction, corresponding to a shock in the tangent vector. Adding curvature (Fig.
9b, F (K)=l-EK, &=.l), the shock is smoothed out, and the surface smoothly approaches a flat sheet.
Finally, we move the saddle surface purely under its own curvature (F (K)=K, where K is the mean
curvature). In Figure 10, we show the front at various times and show the rapid motion toward the steady
state flat sheet.
B. Level Surface, Sphere, F (K)
= 1, Mean Curvature
We evolve the initial surface described by the sphere of radius .5. We initialize tyrjr using the dis-
tance function, as described in 1II.D; in this case, the distance function from the initial surface may be
analytically expressed. The computational domain is a rectangular parallelpiped with lower left comer
(-1,-1,-1)
and upper right comer (l.,l.,l). We evolve the surface according to Eqns. (3.1), (3.3), with
= 1, Af =.01 and N+,,,=50 points per side of the domain. The solution to this problem is just a sphere
whose radius r is increasing at the constant rate dr/dt=l. In Figure 11 (Figs. 1 la and llb), we show the
front at various times. (In the display of all of the following three-dimensional plots, the axes shown are for
orientation purposes only, and are not necessarily located at the real origin of the figure.) As expected, the
sphere expands smoothly. Of particular interest are the three surfaces in Fig. llb. As the sphere expands,
part of its boundary intersects the edge of the computational domain. This is reflected in the slicing of the
level surface yr=l by the sides of the box. This demonstrates the advantage of an upwind formulation: since
information flows into the boundary, the surface does not know about the boundary, and the interior points
of the level surface proceed unharmed.
C. Level Surface, Torus, F (K)
We evolve the toroidal initial surface, described by the set of all points (x y J ) satisfying
z2 = (RO)Z-((X%Y~)”LR
where R F . ~
and R 1=.05. This is a torus with main radius .5 and smaller radius .05. Again, to save labor,
the initialization may be analytically expressed. The computational domain is a rectangular parallelpiped
with lower left comer (-1,-1,-.8)
and upper right comer (1.,1.,.8). We evolve the surface with
= 1-EK, &=.001, &=.01, and N,bt=90 points per x and y side of the domain and the correct number
in the z direction so that the mesh is uniform. Physically, we might think of this problem as the boundary
of a toms separating products on the inside from reactants outside, with the burning interface propagating
with speed K=l-EK. Here, K is the mean curvature. In Figure 12 (Figs. 12a and 12b), we plot the surface
at various times. First, the torus burns smoothly (and reversibly) until the main radius collapses to zero. At
that time (T=0.3), the genus goes from 1 to 0, characteristics collide, and the entropy conditionis automati-
cally invoked. The surface then looks like a sphere with deep inward spikes at the top and bottom. These
spikes open up as the surface moves, and the surface approaches the asymptotic spheroidal shape. Again,
when the expanding toms hits the boundaries of the computational domain, the level surface yf=1 is clipped
by the edges of the box. In the final frame (T=0.8), the edge of the box slices off the top of the front,
revealing the smoothed inward spike.
D. Level Surface, Sphere and Torus, F (K)
Mean Curvature
Finally, we show the flow of two surfaces under their mean curvature. This problem has been studied
extensively, see [2,113. First, we evolve the initial sphere of radius 1 .O moving with speed F (K)=K. Again,
time is scaled by a factor of 100 because the real solution goes so fast. By symmetry arguments, the evolv-
ing surface should be a sphere of decreasing radius which eventually disappears. In Figure 13 (Figs. 13a
and 13b), we show the collapsing sphere at various times. As easily seen, the radius decreases slowly at
first and very quickly at the very end. The final shape shown (T=6.6) is the smallest surface that can be
resolved on the given mesh size.
Finally, we evolve a toroidal initial surface under its mean curvature. The inner radius is .25 and the
outer radius is .5. We imbed the problem in a unit cube of side length 2., and use a fairly come mesh of
N w t = 4 5 per side. In Figure 14 (Figs. 14a and 14b), we show the surface of the front at various times. For
our particular initial surface, the torus deflates smoothly and collapses to the ring shown at T4.1 before it
We have presented a class of algorithms, called PSC schemes, for moving surfaces under their curva-
ture. These algorithms rely on numerically solving Hamilton-Jacobi equations with viscous terms, using
approximation techniques from hyperbolic conservation laws. To demonstrate our techniques, we compute
the solution to a variety of surface motion problems. We hope that this tool can be applied in several areas,
such as flame stretch, vortex sheet rollup, Hele-Shaw cells, and crystal growth.
Copies of the computer program are available from the second author. All calculations were performed at
the University of California , Berkeley and at the Lawrence Berkeley Laboratory.
Acknowledgements: We would like to thank G. Barles, A. Chorin, 0. Hald, M. Grayson, and P.L. Lions.
In addition, we would like to thank Bill Johnston and the Graphics Group at the Lawrence Berkeley
Laboratory, University of California, Berkeley for help with the figures.
APPENDIX A: INSTABILITY OF MARKER PARTICLES
Here, we analyze in some detail the difficulties inherent in a marker particle discretization of any
Hamilton-Jacobi equation, and relate this to the motion of a front moving with constant speed.
Consider the general Hamilton-Jacobi equation
WI = H ( W x W
with smooth initial data ~ ( x o ( s ) , O ) + yo (s). The method of characteristics tells us that vx is constant
along curves in x ,v space defined by
Following our notation in Section 11, we define g = (x? + y?)112 and 8 = tan-' E,
x=x (s ,t ) and p y ( s ,t). This leads to a generalization of Eqns. (2.3-2.4) with F (Kkl, namely
For a curve moving with constant speed, H"(tan(0)) = C COS^)-^, and the system becomes linear
This is a slightly ill-posed non-strictly hyperbolic system. However, the exact solution is easily seen to be
which "loses" a derivative.
This linear ill-posedness is manifested by g (s ,t ) becoming zero, which corresponds to the intersec-
tion of characteristics in the original problem (Eqn. (A-1)) at time t=tc,i,=min(-go(s)/(B~(s))-), as in Eqn.
For general concave ("'eo) Hamilton-Jacobi equation, this occurs at
and is hence determined by the second derivative of the initial curve, when written as y=v(x ,O). This is a
subtle point, which we illustrate by example.
Consider the flat initial data
The true solution to a unit speed moving front with this initial data is just x s , y=s+f. We now consider a
sequence of initial data which converge to the above flat data as the initial space step is refined. Take the
initial data
YO = -As(sin(As)ll2) =yo(&) = -y0(2&) = -y0(3&)
and yoO’As)=y0o(O’-4)As) for all j, and
defined on the grid jAs=0,3A+2,
the following fashion:
the discrete initial data converges to the flat line ty=O in
yo(j&) = 0 + 0
y6O’A.S) = 0 + 0 ((As)ln)
x6O’As) = 1 + 0(&)
However, a marker particle numerical scheme (without regridding) blows up after 0 (l/(&)l’Z) time steps.
With any relationship between Af and As of the form Af =(As )p , p > 1/2, the actual numerical blow up time
is 0(Ar))o(l/(A~)~/~)=
O(AS)P-~/~,
which goes to zero as As vanishes, even though the real solution is
finite (in fact, zero in all derivatives) for all time.
APPENDIX B: GENERAL EN0 CONSTRUCTION
We build R
by induction on M . In each cell X j l x l x j + l , R is defined as follows:
R'(x;Y")=Y~'+(x-x~)D+Y~'
= Yj' + (x-x~)"" [Xj ;si+1]
where v[x,-p, ......,s,+v
1 denotes the usual coefficient in the Newton interpolating polynomial. We also
= j, k,Qx =j+l. Suppose we have definedRM-l(x;Yn) f o r x j l x l x j + l , and al~ok$$,-~),
(the leftmost and rightmost indices, respectively). Then we compute
and proceed inductively.
I f laM 121bM 1,theninthisinterval
with ki!$,, = k&-l)-l, and k&
I f I uM I < I bM I, then in this interval
To summarize, in each cell xjlxlx,+l, we have constructed an essentially non-oscillatory polyno-
mial of degree M . This polynomial is the restriction to the cell of a polynomial interpolating (Y,?) at M+1
consecutive points xv, including x, and x,+l; moreover, these points are chosen so that all derivatives of the
polynomial are as small as possible in absolute value.