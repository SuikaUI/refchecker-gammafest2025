Block-Based Methods for Image Retrieval Using
Local Binary Patterns
Valtteri Takala, Timo Ahonen, and Matti Pietik¨ainen
Machine Vision Group, Infotech Oulu, PO Box 4500,
FI-90014 University of Oulu, Finland
{vallu, tahonen, mkp}@ee.oulu.fi,
 
Abstract. In this paper, two block-based texture methods are proposed
for content-based image retrieval (CBIR). The approaches use the Local
Binary Pattern (LBP) texture feature as the source of image description.
The ﬁrst method divides the query and database images into equally
sized blocks from which LBP histograms are extracted. Then the block
histograms are compared using a relative L1 dissimilarity measure based
on the Minkowski distances. The second approach uses the image division
on database images and calculates a single feature histogram for the
query. It sums up the database histograms according to the size of the
query image and ﬁnds the best match by exploiting a sliding search
window. The ﬁrst method is evaluated against color correlogram and
edge histogram based algorithms. The second, user interaction dependent
approach is used to provide example queries. The experiments show the
clear superiority of the new algorithms against their competitors.
Introduction
Content-based image retrieval (CBIR) has gained a reasonable amount of interest in recent years. The growing number of image and video databases in the
Internet and other information sources has forced us to strive after better retrieval methods. There is certainly a continuous need for novel ideas in all areas
While choosing feature descriptors for image retrieval we have several choices
to begin with. The most common categories of descriptors are based on color,
texture, and shape, and there are many alternatives in each of these. The popular
color features in today’s content-based image retrieval applications include color
histograms , color correlograms , color moments and MPEG-7 color descriptors . As for the texture feature extractors, that have been under research
since the late 1960s, there exist numerous methods. Many approaches like two
of the MPEG-7 texture descriptors are based on Gabor ﬁltering . Others
put their trust on algorithms that rely on DFT transformation . There are
also usable features like MR-SAR , Wold features and, of course, the old
but still popular Tamura approach . In addition to the previous ones, simple
algorithms based on statistical feature distribution have proved to be eﬃcient
H. Kalviainen et al. (Eds.): SCIA 2005, LNCS 3540, pp. 882–891, 2005.
⃝Springer-Verlag Berlin Heidelberg 2005
Block-Based Methods for Image Retrieval Using Local Binary Patterns
in texture classiﬁcation. For example, the edge histogram , which is a blockbased descriptor included in the MPEG-7 standard, LBP , and its derivative
LEP have been in successful use.
LBP is one of the best texture methods available today. It is invariant to
monotonic changes in gray-scale and fast to calculate. Its eﬃciency originates
from the detection of diﬀerent micro patterns (edges, points, constant areas
etc.). LBP has already proved its worth in many applications , , in
which texture plays an important role. There already exist some CBIR platforms
with LBP features included, but the use of the operator has been limited to the
original version and it has been applied on full images only .
Most of the current CBIR texture descriptors used in commercial systems
are calculated for full images. The full image approach is well justiﬁed as it
usually keeps the size of the feature database reasonably low – depending on
the used features and the amount of images, of course. Still there is a problem
while considering only full images. The local image areas of interest are easily left unnoticed as the global features do not contain enough information for
local discrimination. A way to pay attention to local properties is to use image segmentation. However, the segmentation is usually prone to errors so it is
not very suitable for images with general – in other words unknown – content.
Another way to enhance the retrieval results is to apply the image extractor to
the subimage areas without using any type of segmentation and compare the obtained feature descriptors separately. For instance, in ﬁve constant subimage
zones were used with several diﬀerent features. In this paper a similar kind of
approach is used, but instead of constant areas it is extended to arbitrary-sized
image blocks which can be overlapping.
Texture Descriptor
The original LBP method , shown in Fig. 1, was ﬁrst introduced as a complementary measure for local image contrast. It operated with eight neighboring
pixels using the center as a threshold. The ﬁnal LBP code was then produced
by multiplying the thresholded values by weights given by powers of two and
adding the results in a way described by Fig. 1. By deﬁnition, LBP is invariant
to any monotonic transformation of the gray scale and it is quick to compute.
The original LBP has been extended to a more generalized approach in
which the number of neighboring sample points is not limited. In Fig. 2 three
diﬀerent LBP operators are given. The predicate (radius, R) has no constraints
like in the original version and the samples (P) that do not fall on exact pixel
positions are interpolated by using bi-linear interpolation.
With larger neighborhoods, the number of possible LBP codes increases exponentially. This can be avoided, to some extent, by considering only a subset
of the codes. One approach is to use so called uniform patterns representing
the statistically most common LBP codes. With them the size of the feature
V. Takala, T. Ahonen, and M. Pietik¨ainen
Fig. 1. The original LBP
P = 8, R = 1.0
P = 12, R = 2.5
P = 16, R = 4.0
Fig. 2. The general LBPP,R with three diﬀerent circularly symmetric neighbor sets,
where subscript P stands for the number of samples and R for the sampling radius
histogram generated by an LBP operator can be reduced without signiﬁcant
loss in its discrimination capability. For example, if we consider only those LBP
codes that have U value of 2 (U refers to the measure of uniformity, that is
the number of 0/1 and 1/0 transitions in the circular binary code pattern), in
case of a 3 × 3 operator (LBPu2
8.1) we get a feature vector of 58 bins instead of
original 256 bins. When the remaining patterns are accumulated to a single bin
the histogram becomes 59. That is only a fraction (59/256) of the original.
The spatial support area of LBP feature extractor can be extended by using
operators with diﬀerent radii and sample counts and combining the results .
By utilizing N operators we get N diﬀerent LBP codes which can be connected to
form a single feature descriptor vector of N codes. While inserting the marginal
distributions of feature extractors one after another, the distance between the
sample and model is given by Eq. 1:
L (Sn, M n) ,
where Sn and M n are the sample and model distributions extracted by the nth
Nonparametric Dissimilarity Measure
A distance function is needed for comparing images through their LBP features.
There are many diﬀerent dissimilarity measures to choose from. Most of the
Block-Based Methods for Image Retrieval Using Local Binary Patterns
LBP studies have favored a nonparametric log-likelihood statistic as suggested
by Ojala et al. . In this study, however, a relative L1 measure similar to the
one proposed by Huang et al. was chosen due to its performance in terms
of both speed and good retrieval rates when compared to the log-likelihood and
other available statistics. In the initial tests the log-likelihood and relative L1,
which were clearly better than the rest, produced even results but the calculation
of relative L1 measure took only a third of the time required by log-likelihood.
The dissimilarity measure is given in Eq. 2, where x 1 and x 2 represent the
feature histograms to be compared and subscript i is the corresponding bin.
(x 1, x 2) =
x1,i −x2,i
x1,i + x2,i
Block-Based CBIR
The Block Division Method
The block division method is a simple approach that relies on subimages to
address the spatial properties of images. It can be used together with any histogram descriptors similar to LBP. The method works in the following way: First
it divides the model images into square blocks that are arbitrary in size and overlap. Then the method calculates the LBP distributions for each of the blocks
and combines the histograms into a single vector of sub-histograms representing
the image. In the query phase the same is done for the query image(s) after
which the query and model are compared by calculating the distance between
each sub-histogram of the query and model. The ﬁnal image dissimilarity D for
classiﬁcation is the sum of minimum distances as presented by Eq. 3:
minj(Di,j),
where N is the total amount of query image blocks and Di,j the distance (relative L1) between the ith query and jth model block histograms. An example
of the approach in operation is shown in Fig. 3. Note, that in this ﬁgure the
shown histograms are only examples and not the actual LBP distributions of
corresponding image blocks.
The Primitive Blocks
Another way to utilize image blocks is to use small constant-sized elements
referred here as primitive blocks. Instead of larger and less adaptive equivalents,
the primitive blocks can be combined to match the size of the query image with
reasonable accuracy and speed as there is no heavy processing involved like in
the pixel-by-pixel sliding window methods. In this approach the model images
are handled as in the previous method but the query images are left untouched
V. Takala, T. Ahonen, and M. Pietik¨ainen
Fig. 3. The block division method
H = H0 + H1 + H2 + … + HN-1
Fig. 4. The primitive blocks approach
and only a global LBP histogram is produced for each of them. The model’s
sub-histograms H i are summed up to a single feature histogram according to
by ﬁrst adapting to the size of the query image, and then they are normalized. The primitive blocks (actually the corresponding block histograms) are
connected in the way depicted in Fig. 4, where the search window goes through
the whole model image and does the matching by using the distance measure of
Block-Based Methods for Image Retrieval Using Local Binary Patterns
Eq. 2. The size of the search window is the same or a bit larger, depending on
the chosen block size, than the area dictated by the query image dimensions.
While using primitive blocks, there exist two types of overlapping. The blocks
themselves can overlap, as in the case of previous block division method, and
then the measure of overlapping is determined in single pixels. The same applies
to the search window areas consisting of primitive blocks but in their case the
overlap is quantiﬁed to the dimensions of the used primitive blocks.
Experiments
Test Database and Conﬁgurations
Both image retrieval methods were tested on a database consisting of commercial Corel Image Gallery images of sizes 384×256 and 256×384. The image
categorization was set according to the original image database structure of the
Corel set, so there were 27 categories of 50 images each making up 1350 images
in total. No further categorization was utilized. This kind of categorization may
sound rude but it was used to ensure the reproducibility of the tests. The following categories (physical database folder names) where chosen from the image
gallery: Apes, Bears, Butterﬂies, Cards, Death Valley, Dogs, Elephants, Evening
Skies, Fancy Flowers, Fireworks, Histology, Lighthouses, Marble Textures, Night
Scenes, Owls, Rhinos and Hippos, Roads and Highways, Rome, Skies, Snakes
Lizards and Salamanders, Space Voyage, Sunsets Around the World, Tigers,
Tools, Waterscapes, Wildcats, and Winter. Some example images are shown in
Fig. 5. Image examples from the Corel Gallery database
The category experiments were carried on ﬁve diﬀerent image categories
(Apes, Death Valley, Fireworks, Lighthouses, and Tigers), so there were 250
queries per experiment. Two diﬀerent image feature descriptors, one based on
color and the other one on texture, were chosen to be compared to the queries
attained with LBP operators. The ﬁrst one of them was the color correlogram
 , which is still one of the most powerful color descriptors, and the other one
V. Takala, T. Ahonen, and M. Pietik¨ainen
was the edge histogram , that operates with image blocks and is included
in the MPEG-7 Visual Stardard . The correlogram was applied with four distances (1, 3, 5, and 7) and four quantization levels per color channel, that is 64
quantization levels in total. The edge histogram used the standard parameters
as used by Park et al. , thus the method produced histograms of 80 bins.
LBP was applied both on full images and image blocks of sizes 128×128 and
96×96. Two clearly diﬀerent LBP operators were tried out: one using eight uninterpolated samples and a predicate of 1 (LBPu2
8.1) and a multiresolution version
with three diﬀerent radii and eight interpolated samples in each (LBPu2
8,5.4). Both operators relied on uniform patterns with U value of 2 (u2), so the
corresponding histograms had 59 and 177 bins, respectively.
The results of the experiments are shown in Table 1. The used measures are
precision (the ratio between the correct and all retrieved images) and recall
(the ratio between the correct retrieved images and all correct images in the
Table 1. The results (precision/recall) for diﬀerent methods
Block size(overlap)
10 images(%)
Color Correlogram
full image
Edge Histogram
image dependent
full image
full image
128 × 128(0 × 0)
128 × 128(0 × 0)
128 × 128(64 × 64)
128 × 128(64 × 64)
96 × 96(0 × 0)
96 × 96(0 × 0)
96 × 96(48 × 48)
96 × 96(48 × 48)
database), and the numbers are marked as percentages. The LBPs using overlapping blocks achieve precision rates of about 45 % (over 9 % for recall) for
10 images and are clearly better than any of the other extractors. Their results
for 50 images are almost as good as those obtained with the best full image
operators for 25 images. Using blocks, especially overlapping ones, instead of
full images seems to make a clear diﬀerence. It is also to be noticed that using
overlap has a large impact regardless of the block size. Several percentages are
gained through 50 % overlapping.
The test with the primitive block approach was performed with an LBPu2
operator without interpolation. Fig. 6 shows an example query obtained by using
Block-Based Methods for Image Retrieval Using Local Binary Patterns
32 × 32 sized primitive blocks with overlap of two pixels (the overlap between
search windows was set to 50 %). The query images have been taken from an
original database image and they have been outlined in such a way that they are
composed of mostly homogeneous texture. The actual retrieval task was not an
easy one: two subimages were needed to get satisfying results, that is seven out
of 16 images from the right category (Lighthouses). The chosen subimages have
both very distinctive appearance but the image of a rock appeared to have more
positive inﬂuence on the outcome than the carefully outlined picture of the white
lighthouse itself. The probable reason for this is the clear distinction in the properties of the two subimages – the image of the rock is rich in its texture content.
Fig. 6. A test query. The left box of images in the user interface is the query group from
which only the outlined (darkened) subimages were selected for the eventual search
Some additional tests were also conducted with a stamp database consisting
of about 900 German stamp images . A couple of LBP extractors were used
and their performance was evaluated against a commercial stamp image retrieval
software. The block division method fared at least as well or even better than
the matured retrieval application making use of multiple diﬀerent image features
(color, texture, motive, and image size and aspect ratios).
V. Takala, T. Ahonen, and M. Pietik¨ainen
Conclusions
In this paper, we considered the use of LBP texture features combined with two
diﬀerent block-based image division methods. The results obtained show that
the LBP can be successfully used to retrieve images with general content as it is
fast to extract and it has useful qualities like invariance to monotonic transitions
in gray scale and small descriptor size. The color correlogram, that represents
the current state of the art in CBIR, was clearly outperformed by one of the
developed subimage approaches.
The increased retrieval rates of the tested methods come at the expense of
higher computational demands. The time needed for query grows linearly with
the amount of used image blocks. With large images and small block sizes the
required processing capacity slips easily out of the grasp of applications that
have real-time requirements. Still, it should be noted that it does not seem to
be necessary to use large numbers of small blocks as, according to the obtained
results, a few blocks per image is usually enough to make a considerable diﬀerence
when compared to descriptors calculated for full images.
The method based on primitive blocks was hard to assess as there is a level
of user interaction involved in the query procedure. Nevertheless, it has some
important properties that increase its value in the ﬁeld of CBIR: It is faster than
conventional search window approaches as it does not extract features for every
possible search window size separately. Another noteworthy feature is that it
can be used to ﬁnd objects consisting of a single texture or larger entities with
several diﬀerent areas of interest as the query can be adjusted by using more
than one sample image.
For the future studies, there are many ways that could enhance the performance and speed of the studied methods. For instance, diﬀerent block matching algorithms, like the three-step search method, could be used to speed up
the matching process. Another possibility could be to use image blocks that are
weighted according to their spatial positions. In the case of multiresolution LBP,
the use of weights could be extended to emphasize the LBPs containing the most
relevant texture information. These and other enhancements could improve the
usability of LBP features in the CBIR of the future.
Acknowledgments. This study was funded in part by the Academy of Finland.