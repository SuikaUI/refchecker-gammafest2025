Observe Locally, Infer Globally: a Space-Time MRF for Detecting Abnormal
Activities with Incremental Updates
Jaechul Kim and Kristen Grauman
Department of Computer Sciences
University of Texas at Austin
{jaechul,grauman}@cs.utexas.edu
We propose a space-time Markov Random Field (MRF)
model to detect abnormal activities in video. The nodes in
the MRF graph correspond to a grid of local regions in the
video frames, and neighboring nodes in both space and time
are associated with links. To learn normal patterns of activity at each local node, we capture the distribution of its typical optical ﬂow with a Mixture of Probabilistic Principal
Component Analyzers. For any new optical ﬂow patterns
detected in incoming video clips, we use the learned model
and MRF graph to compute a maximum a posteriori estimate of the degree of normality at each local node. Further,
we show how to incrementally update the current model parameters as new video observations stream in, so that the
model can efﬁciently adapt to visual context changes over
a long period of time. Experimental results on surveillance
videos show that our space-time MRF model robustly detects abnormal activities both in a local and global sense:
not only does it accurately localize the atomic abnormal activities in a crowded video, but at the same time it captures
the global-level abnormalities caused by irregular interactions between local activities.
1. Introduction
Detecting unusual activities in video is of considerable
practical interest. Algorithms able to single out abnormal
events within streaming or archival videos would serve a
range of applications—from monitoring surveillance feeds,
or suggesting frames of interest in scientiﬁc visual data that
an expert ought to analyze, to summarizing the interesting
content on a day’s worth of web-cam data. In any such case,
automatically detecting anomalies should signiﬁcantly improve the efﬁciency of video analysis, saving valuable human attention for only the most salient content.
Despite the problem’s practical appeal, abnormality detection remains quite challenging technically, and intellectually it can even be hard to deﬁne. The foremost challenge
is that “unusual” things naturally occur with unpredictable
variations, making it hard to discriminate a truly abnormal
event from noisy normal observations. Furthermore, the visual context in a scene tends to change over time. This implies that a model of what is normal must be incrementally
updated as soon as new observations come in; a model requiring batch access to all data of interest at once would be
useless in many real scenarios.
In this work, we introduce a space-time Markov Random Field (MRF) model that addresses these two primary
challenges. To build a MRF graph, we divide a video into
a grid of spatio-temporal local regions. Each region corresponds to a single node, and neighboring nodes are connected with links. We associate each node with continual
optical ﬂow observations, and learn atomic motion patterns
via a Mixture of Probabilistic Principal Component Analyzers (MPPCA) . Based on the learned patterns, we
compute parameters for the MRF. Finally, by carrying out
inference on the graph, we obtain probabilistic estimates of
whether each node is normal or abnormal. To efﬁciently
adapt the model as new video data streams in, we devise
incremental updates for the MPPCA and associated MRF
parameters. Figure 1 summarizes the approach.
The main advantages of our approach are twofold. First,
we can detect abnormal activities both in a local and global
context. Since we directly compute abnormality levels at
each local node, we can provide “high-resolution” and localized estimates. This often aids in disambiguating abnormal activity within a crowded but otherwise normal scene—
events that a global representation could easily miss. At the
same time, our model accounts for space-time interactions
between local activities, due to its global maximum a posteriori estimation with the MRF. This global context helps
catch unusual interactions involving multiple local activities, which a purely local model may otherwise ignore. It
also provides a smoothing effect that improves robustness
in the face of noisy ﬂow measurements.
Secondly, we show that the model parameters can be up-
To appear, Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition (CVPR), June 2009.
Learn optical flow patterns of
local nodes using MPPCA
Belief propagation in MRF
Abnormality
Space!time MRF graph
Incrementally update MPPCA and MRF parameters
Compute MRF parameters
based on learned MPPCA model
Bayesian inference on the
normality of each graph node
Figure 1. Summary of our algorithm
dated incrementally whenever new observations come in.
The MPPCA parameters permit a closed-form update for
each mixture component, while the MRF parameters are
designed to allow straightforward adjustments according
to the new MPPCA values. The efﬁciency of the updates
means that inference and revisions to the model can both be
performed continuously in real-time.
We demonstrate the approach using hours of real videos
collected at a subway station. When learning only from past
(unlabeled) observations of the scene, our algorithm successfully detects many situations of interest for unmanned
surveillance applications, such as loitering, passing through
the gate without payment, dropping belongings, or getting
stuck at the gate due to a malfunction.
1.1. Related work
To detect abnormal activities, most algorithms attempt
to deﬁne normal activity patterns ﬁrst, and then determine how much new observations deviate.
Existing approaches vary in the amount of operator supervision entailed, ranging from rule-based approaches to unsupervised methods that directly learn normal activity patterns . We take an unsupervised approach
to handle abnormal activities with unpredictable variations.
Broadly considered, previous unsupervised methods have
explored explicit tracking-based methods based on typical
trajectories , activity learning techniques based
on more implicit low-level measurements ,
clustering-based techniques , and indexing-based
methods that search for previously seen activity .
Tracking-based algorithms determine the abnormality for each object’s trajectory. While tracks directly
capture an important semantic aspect of activity (where and
how are people/vehicles moving), it is difﬁcult to rely on
tracks in crowded scenes with occlusions.
The approach of builds a multi-observation Hidden Markov Model (HMM) and uses iterative EM for incremental updates. Similar to our approach, this work explores a graphical model and can account for where local activities typically happen in the video.
while our MRF model captures space-time dependencies
between local atomic activities, the HMM used in deals
with atomic activities independently due to complexity constraints. Furthermore, only a clip-level measure of abnormality is considered, whereas we localize events. In terms
of evaluation, this is an advantage, in that we can more precisely say whether the detection is correct, or just a “lucky”
hit due to some other noise in the clip.
Approaches using Bayesian topic models can
also evaluate the normality of each local activity (i.e., word)
while considering interactions (i.e., topic) between them.
However, these methods do not impose explicit spatiotemporal dependencies between local activities, and only
run in a batch mode. Clustering methods can automatically ﬁnd outlier sequences and have shown good results, though the entire corpus is analyzed at once (in batch)
to ﬁnd the normal clusters.
The above methods can be considered
“global”, in the sense that they typically attempt to ﬁnd the
abnormal global activity patterns in a video clip in which
several local activities can co-occur. An alternative is to focus attention on individual local activities, as in , where
typical ﬂow directions and speeds are measured on a grid in
the video frame. While efﬁcient and simple to implement,
such an approach fails to model temporal relationships between motions.
Rather than attempt to learn a model of normal variations, the method in stores all previously seen spatiotemporal local patches in a database, so as to see if any con-
ﬁguration exists similar to a new observation. The method
shows good performance in discriminating complex and detailed motions (such as a ballet performance) and makes incremental updates simple, yet it faces scalability issues once
the database is very large.
Space-time MRFs have recently also been explored for
some low-level video tasks, such as stereo matching 
and image-denoising with video sequences. The spacetime MRF model we deﬁne is particularly well-suited for
abnormality detection, as it can integrate the merits of both
local and global approaches. By capturing both spatial and
temporal interdependencies between local activity patterns,
the proposed method translates low-level cues (motion) into
a richer summary of activity. At the same time, it maintains
efﬁciency with incremental updates fast enough to perform
online with every frame.
2. Approach
Our goal is to infer when something unusual happens in
a streaming video. The only data used to “train” the system
is whatever initial video is captured to display the scene of
interest, which is used to automatically initialize the model
parameters. We extract optical ﬂow features at each frame,
use MPPCA to identify the typical patterns, and construct a
space-time MRF to enable inference at each local site. For
all subsequent video, we simultaneously infer abnormality
levels, while incrementally updating the model.
2.1. Learning of local activity patterns
We use optical ﬂow as a low-level measure of activity
in local regions. We compute the ﬂow with a multi-scale
block-based matching between adjacent frames.
ﬂows obtained at each scale are summed into a ﬁnal ﬂow
vector, from which we compute a 9-dimensional optical
ﬂow vector (8 orientations + 1 speed) for every pixel. To
construct a feature descriptor representing the atomic activity in each local region (corresponding to each node in
Figure 1), we divide the region L into u by v sub-regions;
each sub-region is represented by a 9-d vector obtained by
summing the ﬂow from all pixels within it. Finally, we concatenate the ﬂow vectors of each sub-region into a 9uv dimensional activity descriptor for local region L. The number of sub-regions (i.e., u and v) is determined depending
on how ﬁnely we want to capture the motion details.
After extracting descriptors for all local regions in the
initial training video, we apply the Mixture of Probabilistic Principal Component Analyzers (MPPCA) algorithm to
learn a generative model for local activity patterns. The dimensionality reduction offered by MPPCA gives us a compact representation of the high-dimensional descriptors. An
MPPCA model is deﬁned as follows:
πipi(t|Ci, µi),
where t is an activity descriptor, pi(t|Ci, µi) is a probability
density function of mixture component i, and Ci and µi
denote the covariance matrix and mean vector of component
i, respectively. The variable πi is a mixing coefﬁcient for
component i. Expectation-Maximization (EM) is used to
compute all MPPCA parameters .
Rather than ﬁt one model per local region, we construct
a common MPPCA over all local regions. This is due to
the fact that some local regions do not have enough samples in the initial video to allow stable convergence in EM;
that is, most of the observations are motion-free at some local regions. Essentially, the mixture model probabilistically
encodes the “vocabulary” of low-level motions. From the
learned MPPCA, we compute two histograms: a frequency
histogram at each node, and a co-occurrence histogram at
each link. The frequency histogram represents how often
each MPPCA component is observed at each node; the cooccurrence histogram records how often two MPPCA components co-occur at neighboring nodes. Together these empirical distributions describe the typical local activities and
their interactions, and are used to establish the space-time
MRF (to be deﬁned in the following section).
Let Hi denote the frequency histogram at node i, and let
Hi,j denote the co-occurrence histogram for neighboring
nodes i and j, computed as follows:
p(l|ti,k),
Hi,j(l, m) =
p(l|ti,k)p(m|tj,k),
where Hi(l) denotes the lth bin of Hi, and Hi,j(l, m) denotes the (l, m)th bin of Hi,j.
The terms p(l|ti,k) and
p(m|tj,k) are the posterior probabilities of the occurrence
of MPPCA components l and m respectively, given activity
descriptors ti,k and tj,k at nodes i and j at the kth frame.
Thus, Hi(l) accumulates the posterior probability of component l over all previous activity descriptors observed at
node i, thereby representing the likelihood of that low-level
motion “type” occurring in that region of the video. Similarly, Hi,j(l, m) represents the likelihood that components l
and m co-occur at neighbor nodes i and j, thereby capturing
the common interactions between nearby regions, whether
spatially or temporally.
The posteriors are deﬁned using Eq. (1):
p(l|ti,k) =
πlpl(ti,k|Cl, µl)
n πnpn(ti,k|Cn, µn),
p(m|tj,k) =
πmpm(tj,k|Cm, µm)
n πnpn(tj,k|Cn, µn).
Having deﬁned the distributions to capture local activity, we next show how to evaluate the normality of new observations using the learned MPPCA model and the established histograms. Then we describe our incremental learning strategy in section 2.3.
2.2. Bayesian inference on the space-time MRF
Whenever a new video frame comes in, we construct a
space-time MRF in an online manner using the new frame
and a ﬁxed-length history of recently seen frames (we use
10 in our experiments). The MRF is deﬁned in terms of two
functions: the node evidence and the pair-wise potentials.
We compute them both in terms of the learned MPPCA
model deﬁned above. Ultimately, inference on the graph
will yield the maximum a posteriori (MAP) labeling that
speciﬁes which nodes are normal or abnormal, as computed
by maximizing the following:
i,j∈neighbor
ρ(xi, xj),
where n(·) is the node evidence function, and ρ(·, ·) is a
pair-wise potential function. The value λ is a constant to
weight the node evidence, and xi denotes the label telling
whether node i is normal or abnormal. (xi = 0 signiﬁes
node i is abnormal; xi = 1 means it is normal.)
The node evidence function itself consists of two terms:
a frequency term nf(·) and a suitability term ns(·). The frequency term measures how often an activity pattern (i.e., a
MPPCA component) similar to the current activity descriptor at the given node has been observed before at that node.
The suitability term evaluates how likely it is that the current activity descriptor was generated by the existing MP-
PCA model.
The frequency term imposes a relational constraint on
each node-component pair.
Simply speaking, if the activity descriptor detected at node i belongs to one of the
frequently observed components for node i, the value of
nf(xi = 1) becomes higher (or conversely, for a rarely observed component, it becomes lower). Complementarily,
nf(xi = 0) = 1 −nf(xi = 1). We compute the frequency
term from each node’s histogram Hi:
nf(xi = 1) = Tk
Hi(c)p(c|ti)
where Hi(c) is a (normalized) frequency histogram for node
i deﬁned by Eq. (2), and p(c|ti) is the posterior probability
of component c given activity descriptor ti, as deﬁned in
Eq. (3). The function Tk(·) is a transformation function
to control the degree of sensitivity to abnormalities, and is
deﬁned as:
1 −0.5 log x
Lower values of the control parameter k will lead to fewer
abnormal activity detections (i.e., less sensitivity to deviations from the model). This function is similar to those
used for outlier rejection in robust statistics . In sum,
nf(xi = 1) is the (transformed) normalized correlation between the frequency histogram Hi and the probability distribution of MPPCA components for a node i’s current activity descriptor.
The suitability term reﬂects how well the current MP-
PCA model explains the new activity descriptor t. We compute it as: ns(xi = 1) ∝p(t), where the term p(t) denotes
the pdf given in Eq. (1). For numeric stability we directly
use the Mahalanobis distance to evaluate it. Thus, the suitability is deﬁned as follows:
ns(xi = 0) = Tk
dc(ti)p(c|ti)
where dc(ti) = Fc
 (ti −µc)TCc-1(ti −µc)
is the Mahalanobis distance between activity descriptor ti and the
MPPCA component c, normalized to be in . The normalization function, Fc(·) is the cumulative distribution of
distances at the component c over all previous observations,
which we implement using a cumulative histogram of the
distances for all previous descriptors. Tk(·) is deﬁned as
above, and ns(xi = 1) = 1 −ns(xi = 0).
Finally, we have the complete node evidence function:
 (1 −τ)nf(xi) + τns(xi) if ns(xi = 0) > 0.5,
τnf(xi) + (1 −τ)ns(xi) otherwise,
where τ is a weighting constant and is always set with
τ > 0.5. Essentially, this serves to down-weight the frequency term should the activity descriptor at node i deviate signiﬁcantly from the current MPPCA model (i.e.,
ns(xi = 0) > 0.5), which is important since the frequency
term assumes that the observation can be explained well
by the current model. Otherwise, we weight the frequency
more than the suitability, as it is more discriminative in detecting abnormality as long as the activity descriptor’s Mahalanobis distance is low. In short, the node evidence function measures the normality of an activity descriptor at each
node, and it balances the frequency and suitability terms depending on how well the descriptor can be explained by the
existing MPPCA model.
The pair-wise potential function, ρ(·, ·), consists of
two terms: a co-occurrence frequency term ρf(·, ·) and a
smoothness term ρs(·, ·). The co-occurrence frequency term
evaluates how often we have observed two MPPCA components co-occurring at neighboring nodes i and j. If xi = 1
and xj = 1, then
ρf(xi, xj) = Tk
Hi,j(ci, cj)p(ci|ti)p(cj|tj)
Otherwise, ρf(xi, xj) = 1 −ρf(xi = 1, xj = 1). This
deﬁnition has a similar form to the frequency term of Eq.
(5), except it uses the normalized co-occurrence histogram
Hi,j deﬁned in Eq. (2). Here p(ci|ti) and p(cj|tj) denote
the posterior probabilities of components ci and cj given
activity descriptors ti and tj at nodes i and j, respectively.
This term will measure how normal it is for two motions to
co-occur at neighboring nodes.
The smoothness term imposes smoothness on label assignments between neighboring nodes based on their motion similarity: more similar motions lead to more smoothing, which is based on the fact that similar motions at neighboring nodes are more likely to be involved in a common activity, so they have higher probability of the same labeling
being assigned. We compute this term based on the normalized correlation between the two activity descriptors:
ρs(xi, xj) =
if xi = xj,
otherwise.
From Eqs. (9) and (10), we can now deﬁne the complete
pair-wise potential function, ρ(·, ·):
ρ(xi, xj) = ρf(xi, xj) + αρs(xi, xj),
where α is a constant to weight smoothness.
Given the MRF parameters in Eqs. (8) and (11) at every node and link of the graph, we carry out MAP inference to maximize the function deﬁned in Eq. (4). We use
loopy belief propagation with max-sum message passing,
which provides the MAP labeling of whether each node is
normal or abnormal. By capturing the spatial and temporal
interdependency between local motion patterns, our MRF
model enhances the descriptive power of what are initially
purely local measurements.
2.3. Incremental updates for activity patterns
Having built an MPPCA model using a small amount
of initial training video (section 2.1), we can continuously
update its parameters using the new activity descriptors extracted at every video frame. All the histograms (i.e., frequency histograms, co-occurrence histograms, and cumulative histogram of Mahalanobis distances) and MRF parameters are straightforward to adjust according to the updated
MPPCA parameters.
To update the MPPCA parameters given a new activity descriptor, we ﬁrst pick the most likely component
cmax = arg max
p(c|t) for the descriptor, and then update
the covariance matrix C and mean vector µ of that component cmax using the algorithm given in . The mixing
coefﬁcients πi for all components are also adjusted:
πt+1,i = Nt+1,i
Nt+1 = Nt + 1,
 Nt,i + 1
if i = cmax,
otherwise,
in which Nt and Nt+1 are the total numbers of activity descriptors observed until times t and t + 1, and Nt,i and
Nt+1,i are the total numbers of activity descriptors belonging to the component i until times t and t + 1, respectively,
and πt+1,i is the updated mixing coefﬁcient of the component i at time t + 1.
Our incremental algorithm is quite simple and easy to
implement. However, we should note one necessary approximation that it makes: we assume that the posterior
probability of each component is unchanged once the descriptor is inserted into the model. Since the MPPCA parameters change whenever a new input comes in, the posterior probabilities of all previous descriptors should also
change in response. However, re-calculating all the posteriors would mean touching every previous observation,
thus defeating the purpose of an incremental update. (The
method given in incrementally adjusts a single component, without such a backward computation.) This is a wellknown issue with incremental learning and mixture models.
Following , we assume that the posterior probability of
an activity descriptor is ﬁxed to the value computed at the
time when the descriptor was ﬁrst introduced to the model.
To choose the number of MPPCA components automatically, we empirically identify the minimum number of components that appear to account for most of the initial dataset.
Starting with a single component, we increase the number
of components until it happens that some trivial component is formed that accounts for only a very small number
of activity descriptors (e.g., less than 5% of overall training data). In future implementations, model selection techniques for EM (such as ) could be used.
3. Experimental Results
We tested our algorithm using over two hours of surveillance videos from a subway station: one video monitors the
entrance gates, and the other watches the exit gates. In both,
there are typically one to 10 people moving in the scene
at the same time. The videos are provided by courtesy of
Adam et al. . We discuss each one in turn below.
The frame size of the videos is 512 x 384. We divide
the frames into 14 by 9 overlapping local regions of size
60 x 90 pixels each; each local region is further divided into
2 by 3 sub-regions, each of size 30 x 30 pixels. This yields
a 54 (= 2 x 3 x 9) dimensional descriptor to represent activities at each local region.
For every input frame, we build a space-time MRF using
the 10 most recent frames, and carry out MAP inference using belief propagation. After every MAP computation, the
MPPCA parameters (see Eq. (1) and section 2.3), frequency
and co-occurrence histograms (see Eq. (2)) and cumulative
histograms (see section 2.2) are updated.
For all results, we use the following parameters: λ = 1
in Eq. (4), τ = 0.85 in Eq. (8) and α = 0.5 in Eq. (11). Below we evaluate the true-positive/false-positive tradeoff as
a function of the control parameter k in Eq. (6), which dic-
Ground truth
No payment
Wrong direction
Irregular interaction
False alarm
Incremental
Table 1. Comparison of accuracy using incremental vs. batch learning for both subway videos. Numbers in parens denote count for each
abnormal activity in the ground truth. The ﬁrst number in the slash (/) denotes the entrance gate result; the second is for the exit gate result.
Figure 2. Example abnormal activities detected by our algorithm.
Red rectangles indicate where abnormality is detected. (a) Loitering. (b)-(c) No payment. (d) Wrong direction. (e) Wrong direction
and loitering: A left person is moving in the wrong direction. A
person on the right is loitering as he sees the other going in the
wrong direction. (f)-(g) Irregular interaction. In (f), two people
are at the same gate. In (g), left person runs in hurry, and right
person pauses to yield. (h) Misc.: woman drops her belonging.
Both (d) and (e) illustrate detections in spite of crowded scenes
and partial occlusions. Best viewed in the electronic version.
tates how selective we want the system to be about raising
alerts for abnormalities detected.
Due to space limitations, we cannot display all of the
detected abnormal activities in the paper. Interested readers may see our supplementary video which contains all of
the detection results: 
˜jaechul/activity.html.
3.1. Entrance gate
The entrance gate video is 1 hour 36 minutes long, with
144,249 total frames. We initially train the MPPCA model
using the video clips containing normal activities in the ﬁrst
15 minutes of video. The number of clusters in the initial
MPPCA was automatically selected to be 10.
Results: In this video, the following types of abnormal
activities occur: (i) Wrong direction: occasionally people
exit through the entrance gate. (ii) No payment: some people sneak through or jump over the gate without tagging a
payment card. (iii) Loitering: some people loiter for a long
time at the station. (iv) Irregular interactions between persons: e.g. two people awkwardly zigzag to avoid each other.
(v) Misc.: e.g., a person abruptly stops walking, or runs fast.
We annotated the data to form a ground truth set of abnormal events, identifying a total of 66 unusual activities. We
Figure 3. Examples of false alarms and abnormalities missed by
our algorithm. (a)-(c) are false alarms; (d) is missed. (a) A person
goes to the gate, and a person nearer to the camera is walking left
to right. While this situation happens occasionally, here the nearer
person slows down to talk, and the system raises an alert. (b) A
person is getting on the train. Optical ﬂows are often unreliable
in the far-ﬁeld areas, and it leads to a false alarm. (c) A person
walks too fast. (d) Our method misses the “no payment action”,
perhaps because the motion is very similar to passing through the
gate normally. Best viewed in the electronic version.
used the ground truth deﬁned in on the same data as a
starting point, which marks 21 occurrences of abnormalities, primarily of the “wrong direction” event. We reﬁned
this to also capture all the more subtle abnormalities, such
as “no payment” and “loitering”—in a sense, raising the bar
for our algorithm, as the wrong direction events are easily
detected. Admittedly, the very deﬁnition of abnormality is
somewhat subjective; we took every effort to come up with
the most accurate manual annotation possible.
Figure 2 shows examples of abnormal activities detected
by our algorithm. Our method can identify an abnormal
activity even within a crowded scene with signiﬁcant occlusions (e.g. Figure 2 (d) and (e)), or cases where both normal
activities and abnormal activities are mixed (e.g. Figure 2
(c) and (e)). Also, we can see that the algorithm captures the
abnormality caused by irregular interactions between persons (e.g. Figure 2 (f) and (g)).
Table 1 summarizes the results of this experiment. Most
errors occur when detecting the “no payment” behavior;
about 40% of such actions are missed. This is largely due
to poor optical ﬂow measurements in the far-ﬁeld area from
the camera where the gate is located. Furthermore, some
“no payment” actions can be too subtle to be recognized
(see Figure 3 (d)). However, some errors are also due to our
representation, which cares about the speed of motions; for
example, our method issues a false alarm for slow walking
in Figure 3 (a) or fast walking in Figure 3 (c), actions which
deviate from existing local motions in the MPPCA model,
but the ground truth says are normal.
false positive rate
true positive rate
Figure 4. ROC curve with varying control parameter k.
Figure 5. An effect of incremental learning. (a) Frame 41207. A
movement from the right entrance to the gate (indicated by a red
arrow) is detected as “normal”. (b) Frame 75381. Later, the same
type of movements are detected as “abnormal” because many of
the most recent motions were along another path, making the motion in (a) a rarer event. (c) Frame 98104. A movement from the
right entrance to the gate is again detected as “normal” because
several similar observations are accumulated between (b) and (c).
The ROC curve in Figure 4 illustrates the falsepositive/true-positive tradeoff, plotted as a function of k.
For this data, the algorithm is quite robust to how the control parameter is set. Overall, smaller values of k will result
in more selectivity in the detections (less false positives).
Incremental learning: Our method continuously updates the parameters for the MPPCA components and corresponding histograms using the new activity descriptors observed at every frame. Qualitatively, we can see how such
an update inﬂuences the subsequent detections: Figure 5
shows how the same category of activity that is earlier detected as abnormal may later be detected as normal, depending on what kind of activities prevail at each observation
period. Table 1 quantitatively compares our incremental algorithm’s accuracy relative to a batch alternative, where all
normal frames are observed at once. For the batch baseline,
we trained MPPCA using all video clips containing normal
activities. There are only minor differences in detection accuracy and false alarm rates, even though our incremental
method has access only to a portion of the normal data and
adjusts the model in real-time.
An “extreme” form of a batch model would re-compute
the MPPCA model from scratch after each new frame,
which is clearly not feasible computationally, since each update would require at least 10 minutes.
Run-times: We implemented our algorithm using C++
with a 2.4GHz CPU, 2Gbyte RAM machine. For the ﬁrst
video, the initial MPPCA training took about 10 minutes,
while a batch training of MPPCA using the entire video
Figure 6. Illustrative examples comparing our algorithm and baselines that are purely local or global (clustering-based). (a) - (e)
Correctly detected results using our method. (f) False alarm by
our method. (g) False alarm in the crowded scene by global baseline. (h) Missed abnormality by both baselines. (a) An employee
cleans up the wall. (b) and (h) A person abruptly stops walking
and changes his direction, which is missed by both baselines. (c)
A person gets off the train and then gets on the train again very
soon, which is missed by the global baseline. (d) Wrong direction: a person (left) is entering through the exit gate. Rare event:
a child’s movement is observed for the ﬁrst time. (e) Loitering. (f)
False alarm: a person is going from the right to the left, which is
normal but very unusual, since most people exit the station from
left to right. Best viewed in the electronic version.
took about 90 minutes. (The times were 3 vs. 26 minutes on the shorter second video.) Incremental parameter
updates were done about at frame rate (25 frames per second). In the MAP computation, belief propagation usually
converges within 10 iterations, or about 100 ms.
3.2. Exit gate
The second video monitors an exit gate, and is 43 minutes long with 64,900 total frames. We use the ﬁrst ﬁve
minutes of video to train the initial MPPCA model, obtaining 8 total components.
This video contains the following unusual
events: (i) Wrong direction (ii) Loitering (iii) Misc.: e.g.,
an employee of the subway station is washing the wall. The
ground truth data consists of 19 total abnormal activities.
Table 1 summarizes our detection results. Figure 6 shows
examples of detected abnormal activities and false alarms.
We should note that all of the false alarms are raised due
to the “from right exit to left exit” movement, which is
“normal”, but very rare compared to the “from left exit to
the right exit” movement. Table 1 also compares the batch
mode and incremental mode for this video. In batch mode,
there are no false alarms: the batch mode can detect the
“from right exit to left exit” movements as normal, since it
can use all data to train.
Comparison to other types of methods: Finally, we
compare against our own implementation of two existing
methods: a local monitoring algorithm modeled after ,
and a “global” spectral clustering-based method modeled
after . Our goal is to demonstrate the relative strengths
and weaknesses of local and global representations, and
to see how well our MRF-based strategy can combine the
strengths of both. Our implementation is necessarily a simpliﬁed version of the representative baselines.
Both approaches provide similar results in detecting conspicuous abnormalities such as “wrong direction”, where
the optical ﬂow patterns are quite easy to discriminate.
However, the local method fails to detect abnormal activities with irregular temporal orderings. In Figure 6 (b) and
(h), people abruptly stop walking and turn around. Since a
local method can only consider frame-by-frame individual
actions, these kinds of actions cannot be detected. Also, the
local method is sensitive to optical ﬂow parameters, often
resulting in a high false alarm rate, about an order of magnitude more false alarms than our method. Global MAP
inference with a smoothness constraint in our MRF model
helps reduce the number of false alarms caused by noisy
local observations.
On the other hand, the global method fails to detect abnormal activity happening at a ﬁne local scale. For example,
in Figure 6 (c), the abnormal activity happens within a region so small that it is simply regarded as negligible noise in
a global sense. At the other extreme, the global method generates false alarms in crowded scenes (Figure 6 (g)), where
measurement noise accumulated over many normal activities is above the threshold. In contrast, our approach succeeds in these scenarios since we can localize individual
abnormal activities at each node while taking into account
spatio-temporal dependencies between them.
4. Conclusion
We proposed a space-time MRF for detecting abnormal
activities that combines the advantages of both local and
global approaches. Not only can the method localize abnormal activities even in crowded scenes, but it can also capture
irregular interactions between local activities in a global
sense. In addition, we demonstrated incremental real-time
updates, which allow our algorithm to adapt to visual context changes over a long period of time. Experimental results on long surveillance videos show that our algorithm
can work robustly in practical applications.
Acknowledgement
This research was supported in part by NSF CAREER
0747356, Microsoft Research, Texas Higher Education Coordinating Board award # 003658-01-40-2007, the DARPA
VIRAT program, NSF EIA-0303609, and the Henry Luce
Foundation. Jaechul Kim was also supported in part by a
Fellowship from the ILJU Foundation, Korea.