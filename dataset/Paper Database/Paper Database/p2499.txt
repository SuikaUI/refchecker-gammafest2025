Detecting and localizing edges composed of steps, peaks and roofs
Pietro Perona *and Jitendra Malik t
It is well known that the projection of depth or orientation discontinuities in a physical scene results in image intensity edges which are not ideal step edges but
are more typically a combination of steps, peak and
roof profiles.
However most edge detection schemes
ignore the composite nature of these edges, resulting
in systematic errors in detection and localization. We
address the problem of detecting and localizing these
edges, while at the same time also solving the problem of false responses in smoothly shaded regions with
constant gradient of the image brightness. We show
that a class of nonlinear filters, known as quadratic
filters, are appropriate for this task, while linear filters
are not. A series of performance criteria are derived
for characterizing the SNR, localization and multiple
responses of these filters in a manner analogous to
Canny's criteria for linear filters. A two-dimensional
version of the approach is developed which has the
property of being able to represent multiple edges at the
same location and determine the orientation of each
to any desired precision. This permits junctions to be
localized without rounding. Experimental results are
presented.
Introduction
The problem of detecting and localizing discontinuities
in greyscale intensity images has traditionally been approached as one of finding step edges. This is true both
for the classical linear filtering approaches as well as
the more recent approaches based on surface reconstruction.
Unfortunately, step edges are an inadequate model
for the discontinuities in the image that result from
the projection of depth or orientation discontinuities
in physical scene. Mutual illumination and specularities are quite common and their effects are particularly
•mpartimento di Elettronica ed Informatica, Universita
di Padova, and Inti' Computer Science Institute, Berkeley.
Present address: MIT 35-308, Cambridge MA 02139. Email: 
tEECS dept., Evans Hall, U.C.Berkeley CA94720. Email: 
CH2934-8/90/0000/0052$01.00 © 1990 IEEE
step + ramp
}-step + delta
mutual reflection
Figure 1: Some examples of edges.
significant in the neighborhood of convex or concave
object edges. In addition, there will typically be a
shading gradient on the image regions bordering the
edge. As a consequence of these effects, real image
edges are not step functions but more typically a combination of steps, peak and roof profiles {Figure 1).
This had been noted experimentally by Herskovits and
Binford back in 1970. Quantitative analyses of the associated physical phenomeifa have also been provided-
Horn and more recently Forsyth and Zisserman .
The aim of this paper is to address the computational problem of detecting and localizing these composite edges.
Most local edge detection methods are based on
some decision making stage following a linear filtering stage. Typically one looks for maxima in the filtered image perpendicular to the orientation of the
edge. Such an approach (e.g. Canny )results in
a systematic error in localization whenever there is a
composite edge( [ll]{page 9), or (Fig. 2. 1)). In
section 2, we prove that this problem is not specific to
the Gaussian derivative filters used by Canny, but is
present whatever the linear filter used. For any such
filter there is a systematic localization error for composite edges. Using any {finite) number oflinear filters
does not help. However, we are able to show that a
quadratic filtering approach is adequate. Instead of
looking for maxima in (I * f) one looks for maxima in
W = (I* 1!)2 +(I* /2) 2 , or more generally 'L{I * /;) 2 .
A special case of this approach, when two filters which
are Hilbert pairs are used, gives the energy based approach due to Morrone, Owens and their colleagues
In section 3, we look at the problem of false responses in the presence of smooth shading.
A linear filter which does not suffer from this problem is
presented. A suitable quadratic filter is designed and
tested on several one-dimensional examples. It correctly localizes composite edges and does not not give
false responses in areas of smooth shading.
If one is to design an 'optimal' quadratic filtering
approach, one needs to formulate computable forms of
design criteria, analogous to the ones used by Canny
 for linear filtering. We do this in Section 4. We are
not yet able to analytically derive the 'optimal' filterhowever one can use the criteria to compare competing
choices of quadratic filters.
So far, our analysis was in 1-D. To detect edges in
2D, we use a Gaussian window to compute the 2D
extension of the filter. Rotated copies of the filter are
used to (conceptually) compute W(x, y, 0 ). A finite
representation is developed which provides an optimal
approximation to W(x, y, 0). At each point, the locally
dominant orientations 0; which correspond to the local
maxima(over 0) are determined. Allowing for multiple
orientations enables junctions to be correctly localized
without any rounding. Edge points are defined as the
points where the directional derivative in the direction
perpendicular to a locally dominant orientation is 0.
Experimental results are presented.
Dealing with composite edges
We want to detect and localize edges which are arbitrary combinations of lines, steps and roofs. For specificity and simplicity, in this section we assume that the
composite edge is I = c18 + c28(-1), though similar
considerations apply for other composite edges.
A word about notation: we will write f(- 1)(x) for
f~oo f(t)dt, and f(-n)(x) = (f(-n+l))(-1)(x).
8(-1) will be the step function and 8(-2) a ramp.
First we establish a proposition which show that
edge localization by looking at peaks in the responses
of a fixed, finite family of linear filters leads to systematic errors.
Proposition 1 For any fixed finite family of filters
{h, h, ... , /k}, there exists an image I = c18+c28(-l)
for which none of the filter responses have a maximum
Edges are declared at the maxima of the
response I* f(x) = cd(x) + c2J<- 1}{x). To ensure
correct localization, there should be a maximum at
x = 0 for any combination of c1, c2. For a filter /;, its
response has a maximum at x = 0 only if (I* /;)'(0) =
0. Now (I*/;)'= cd' + c2f, implying that the vector
[c1 c2JT is orthogonal to [ff(O) /;(O)]T. To establish
the proposition, one has only to pick a composite edge
for which the vector [c1 c2]T is not orthogonal to any
of the vectors in the fixed, finite family of the k 2D
vectors [/i(O) /;(O)]T, i = 1, ... , k.
In other words, if we had available to us the outputs
of k different filters with a clever strategy which would
enable us to pick the 'right' filter /; whose response
should be used to localize the edge, we would still be
unable to guarantee zero localization error.
Somehow the problem seems to be that for any particular linear filter we are able to construct a composite edge for which the filter is not matched. This
suggests an alternative view-construct a parametrized
filter which is a linear combination of an even filter
fe (matched to 8(x)) and an odd filter fo (matched to
8( - 1 )) and try to 'adapt' it to the particular composite
edge in the image by picking the parameter value that
maximizes the filter response at each point.
Call fa(x) =cos afe(x) +sin af0 (x) the filter, I=
c16 + c28(-l) the image, and U(a, x) = (I* fa)(x)
the response. We want to choose a such that at each
point x the response is maximized. Define V(x) =
maXa U(a, x) and call a(x) the maximizing parameter (i.e. V(x) = U(a(x), x)). Notice that a(x) must
satisfy the equation 8
8aU(a(x), x) = 0.
We would like the 'maximal' response V(x) to have
a maximum in zero, corresponding to the location of
the edge: V'(O) = (Uaax + Ux)(a(O), 0) = 0. Since
Ua(a(x), x) = 0 then it must be Ux(a(O), 0) = 0. Making use of the fact that /o(O) = J£- 1)(0) = 0 we get
the following system of equations:
Ux(a(O), 0) = c1 sin a/~(0) + c2 cos afe(O) = 0 (1)
Ua(a(O), 0) = -c1 sin a/e(O) + c2 cos a/~-
1 )(0) = 0 (2)
The maximizing value of a, a(O), can be obtained from
Equation 2. Substituting this into Equation 1 gives the
following condition:
!1(0) =- t£-l)(0)/~(0)
If this condition is satisfied, the mixed edge c18 +
c28( - 1) will be localized exactly by the maximum of
V(x) defined above.
An alternative approach yields the same condition.
Define the vector of filters F(x) = [fe(x),/o(x)]T. We
localize features by looking for local maxima in the
norm of the (vector) response to this filter of I. The
squared norm of the response, I I* F 12 is
Equating the derivative of this expression with respect
to x at the origin to 0 gives the condition
which is the same as Equation 3
Thus, we have the possibility of getting arbitrarily
precise localization of composite edges simply by looking for peaks in the response to a quadratic filter, i.e.
in"£(!* /;) 2 .
This is similar in form to the approach used by Morrone, Owens et al. Morrone et al by a series of
psychophysical experiments demonstrated that the human visual system detects features at points of strong
phase congruency-these could be edges (spectral components have 0 phase), narrow bars (spectral components have 90 phase) or points on trapezoids where
ramps meet plateaus (spectral components have 45 or
135 phase). To detect points of phase congruency,
Morrone and Owens find maxima of a local energy function E(z) = F 2(z) + H 2(z) where F(z) is
the result of a convolution I* f(z), and H(z) is its
Hilbert transform (equivalently I could be convolved
with the Hilbert transform of f). Morrone and Owens
show good empirical results for a particular choice of
While their reasoning was in the Fourier domain and
aimed at detecting phase congruency based on a psychophysical definition of a feature, we arrive at a similar formulation purely motivated by a computational
criterion of localizing composite edges exactly.
From our formulation it follows that there is nothing particularly sacred about the use of Hilbert filter
pairs as done by Morrone, Owens et al. In fact, if the
composite edge consists of, say a bar and a step edge
at quite different scales, one should probably use fe
and fo tuned to different widths (scales) and thus not
Hilbert pairs. To make a proper choice of these filters,
one should instead bring to bear the criteria of having
a good signal-to-noise ratio, low stochastic localization
error etc. analogous to the approach used by Canny
for linear filters.
Dealing with shading gradients
A well known problem of first derivative edge detectors is that they respond with false edges in areas with
smooth shading even when the gradient of brightness is
constant. To avoid these false positives, one may have
to set a threshold which leads to the rejection of genuine low-contrast edges. This problem has persisted in
the 'modern' approaches based on surface reconstruction. Whether the formulation is a probabilistic one
using MRFs (e.g. Geman and Geman) or a variational
one (e.g. Blake and Zissserman ), ifthe cost function
includes terms like the squared gradient there will be a
tendency towards piecewise constant reconstructions.
In the linear filtering framework, Binford describing the Binford-Horn line finder discusses one solution
to this problem- a lateral inhibition stage preceding
the stage of finding directional derivatives. Essentially
this amounts to using third derivatives, and suffers
from the expected weakness-low signal to noise ratio
compared to first derivative operators. A simple calculation using the SNR criterion defined by Canny 
confirms this.
A compact characterization of filters which do not
suffer from the linear gradient problem can be obtained
as follows: suppose that the image just consists of a
delta+ step
::l : : ( : j~· '
roof+ step
Figure 2: 1 dimensional examples. The energy peaks
correspond to the edge position and the constant gradient areas generate zero energy.
ramp function I(z) = oC- 2)(z). The response of a
linear filter f to such a ramp is I* f = JC- 2)(z). It
can be seen that JC- 2)(z) should satisfy the following
two conditions:
1. llf(- 2)(z)ll-> 0 for llzll-> oo. This ensures that
far enough from the roof junction, the response to
a ramp is negligible.
2. JC- 2)(x) either has a zero crossing or a maximum
or a minimum at the origin. This is to enable the
localization of onset of the ramp without any bias.
While the third derivative of a Gaussian G~'(z)
is one filter which would satisfy these criteria, there
are others which do so without that significant a
drop in SNR. One such choice is the Hilbert Transform of G~(z) which is an odd-symmetric filter. We
computed Canny's SNR and localization criteria for
this filter and compared it with G~(zJ . It turns
out that for G~ ( z), the SNR is 1.062u ·5 and localization is 0.8673u- 0·5.
For (G~)H(x) , the SNR is
0.6920u0·5 and localization is 0.87535u-0 ·5 . Considering the product of the SNR and the localization, the
numbers are 0.92 and 0.606 respectively implying that
(G~)H is worse by about 34%. However, its r value is
0.676 which is 32 % better than r = 0.51 for the G~.
In other words, while the ( G~)H is roughly comparable to the G~ filter used by Canny, its immunity to
smooth shading makes it preferable.
For a particular choice of quadratic filter, namely
fe = G~ and / 0 = (G~)H, Figure 2 shows the response
to a number of different stimuli. Note how in each case,
the composite edge is correctly localized and that the
filter is insensitive to linear shading.
Computation of the performance
In the choice of a filter one would like to mimmize
different types of edge-detection errors. What follows
is a list of criteria for evaluating quadratic filteringbased edge-detectors
Signal to noise ratio - Ratio of signal response to
the variance of the response due to noise.
Stochastic Localization error -
Localization error due to noise.
Systematic Localization error -
Error committed in locating the edge in the no-noise situation.
Multiple responses -Edges detected in the neighbourhood of a true one due to noise in the data.
After establishing some notation we report the formulae for computing the criteria for a given filter. For
a derivation of the formulae see .
Edge - G(x) = c16(- 2)(x) + c26(-l)(x) + c36(x)
Noise - N(x) = n077(x), 17(x) being white zero-mean
unit-variance Gaussian noise.
Image - I(x) = G(x) + N(x)- Signal+ noise.
Filters - f(x)T = [fl(x), ... , fn(x)], and, for convenience, F(x)T = [F(x)I, ... , F(x)n], with
F"(x) = f(x)
Responses - rG(x) = (f*G)(x), rN(x) = (f*N)(x),
r(x) = rG(x) + rN(x)
Power - W(x) = llr(x)ll2
Correlations -The nxn correlation matrix R(t) defined componentwise by:
~j(t) = (/;(- + t), /j(-))L 2
R"(t) defined similarly as:
R";j(t) ='=(If(-+ t), Jj(-))L2
Figure 3: Localization error due to noise.
Signal to noise ratio
Define signal to noise ratio as the ratio of the response
to pure signal at the edge and the standard deviation
of the response to pure noise. In the special case that
the edge is a combination of roof, step and line: G =
c16(-2) + c26(-l) + c36 the signal to noise ratio is:
noJtr(R(O))
Where c indicates the vector of components
cl,c2,c3, and His defined componentwise by H;j
F(i-l) . -
, ... , an J -
, ... , n.
Stochastic localization error
Label x = 0 the position where the response WG(x)
to noiseless signal peaks (i.e. Wb(O) = 0), and x =
x0 the coordinate where the response to noisy signal
W(x) does (i.e. W'(xo) = 0, see Fig 3).
The expectation of the stochastic localization error
is zero, and the variance is:
E 2 ,...._
2E((h~ 0 * 7J)(xo))2 _
- no Wc';(0)2
where hx 0 is defined by:
(hxo * 7J)(xo) ='= 2(G * ff(xo)(f * 7J)(xo)
R~0 (0) is the autocorrelation matrix of h~ 0
Systematic localization error
Consider a signal G defined as in section 4.1; whatever the choice of the coefficients c, the edge is located
at x = 0. Call Xe the position of the corresponding
maximum of W(x), which we use to localize the edge;
0 = Xe is a systematic localization error.
A necessary and sufficient condition for Xe to be a
maximum point is that W'(xe) = 0 and W"(xe) <
0. Expanding W' in Taylor sum around x = 0 and
computing it in x = Xe we obtain:
0 = W'(xe) = W'(O) + W"(O)xe + O(x;)
which gives us an estimate of x. in terms of the derivatives of W at the origin:
cTHtT(O)H(O)c
Xe ~ -W"(O) =
cTH'IT(O)H(O)c + IIH'(O)cll2
where cT = [c1, c2, c3) and His defined componentwise
, J = , ... , an z = , ... , n.
A sufficient condition for the systematic localization
error to be zero is therefore (see ) that the filter
collection f satisfies the conditions:
LF:(O)F~i-
)(0) =- LFj(O)F~i-
)(0) i,j = 1 ... 3
This is a more general form of equation 3.
Spacing of the maxima in the
neighbourhood of an edge
We suppose that the noise variance, n0 , is small with
respect to the magnitude of the signal. Therefore we
approximate the value of W(x) disregarding the terms
that are quadratic in n0 :
~ II(G * f)ll
2 + 2no(G * rf(r * 77) =
WG(x) + 2no[G * fTf) * 77 =
WG(x) + noh., * 77
Where h is the scalar space-varying kernel defined
as h.,(r)::::: 2(G * rf(x)f(r).
We may apply Rice's formula to compute the expected value of the distance between maxima of the
random process Wa(x) = W(x)- WG(x) = n0 h., * 77:
dw4 (x) = 21r
The expectation has an argument x since it depends
on the distance from the location of the edge G( x). In
a neighbourhood of the edge we expect the derivative
of W G to be close to zero and thus the estimate of the
spacing of the maxima of W a ( x) to be a good estimate
of the spacing of the maxima of W ( x).
Define a= G * g, then h = 2&Tf. The autocorrelations are:
~Rh, (0) = atTR1(0)a' + a'TRj(O)a + aTR'j(O)a
Detecting edges in two dimensions
To detect edges in 2D, we use a Gaussian window
to compute the 2D extension of the filter F(x, y) =
f(x)G"~(y). We use two kernels, even and odd; rotated copies F8, F;, of the filter are used to compute
the square modulus W(x, y, 0) = (F8 * 1)2 + (F; * 1)2 ,
where I is the image. In practice one cannot afford
to compute convolutions of the image with filters at
an infinity of orientations. It turns out that it is possible to approximate kernels F(x, y, 0) with arbitrary
precision using linear combinations of a finite number
of functions. This technique is based on the singular
value decomposition of the linear operator associated
to the kernel and is described in detail in [10). What
is important to remark here is that it is possible to
reason on a continuum of orientations.
Edge detection
At edge points the filter output 'energy' W will have
a maximum at the orientation o. parallel to the edge.
Fix o. and consider W(x, y, O.). Along a line orthogonal to the edge the problem reduces to the 1D case:
there will be an energy maximum at the edge. Edges
can be found by marking as 'edge points' all the points
p = ( x, y, 0) that satisfy:
where v11 is the unit vector orthogonal to the orientation associated to 0.
The search for the edge points has been implemented
as follows:
1. For each image pixel ( x, y) the angles Oi ( x, y) at
which the response is maximized are found. For
this operation we use Brent's method which cleverly combines golden section search with inverse
parabolic interpolation. The upper bound on the
orientation error was set at 1 degree. The angle
space is coarsely sampled ( approx. a sample every 5 degrees) to provide initial conditions for the
bracketing algorithm. The energies Wi(x, y) corresponding to Oi(x, y) are also stored. The lower
70% of the sampled energies at each point are averaged to give a global noise .estimate.
2. Points (x, y, Oi(x, y)) are marked as edge points
only if the associated energy is greater than the
energy at the two neighbouring pixels in the direction orthogonal to oi.
3. The edge pixels are thresholded.
4. The position of the edges is refined to subpixel accuracy by fitting a parabolic cylinder to
W(x, y, Oi) at the edge pixels. The axis of the
cylinder is taken to be the local estimate of the
edge position. In our implementation 3x3 neighbourhoods were used and the three parameters of
the parabola estimated; see for the details.
We have tested the algorithm on both natural and
synthetic data. We used a quadratic filter with /e =
, /o = ( G~JH, and the 2D extension computed
using a windowing function G"~ with u2 : u 1 = 2 or
3. One of our series of experiments used a synthetic
image of three concentric circles (alternate rings black
and white) with added Gaussian noise. Comparison
of estimates of orientation and curvature from our algorithm with the ground truth yielded very good results . For example, for a SNR of 6.4, and using
a quadratic filter (u1 = 2, u2 = 6 pixels) orientation
could be estimated on circles of radii 60 and 90 pixels with median absolute error of 0.8° and on a circle
of radius 30 pixels with an error of 1.1°. Curvature,
which was estimated pointwise by a finite difference
approximation using orientation estimates in a 2 x 2
window could be measured to a median error of 22%,
18%, and 14% respectively for the circles of radii 90,
60 and 30 pixels.
In Figure 5 we compare the edges obtained by our
edge detector with those found by the Canny edgedetector. While the false positives are largely a matter of threshold selection (in this case), note how the
junction is broken up and rounded by the Canny edge
detector. Figure 4 shows a comparison for a more complex image.
Acknowledgements
The experimentation reported in this paper was carried out
using Paul Kube's 'viz' image processing package. This
research was partially funded by an NSF-PYI grant.