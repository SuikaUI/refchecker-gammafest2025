User-Level Sentiment Analysis Incorporating Social
Chenhao Tan
Dept. of Computer Science
Cornell University
 
Lillian Lee
Dept. of Computer Science
Cornell University
 
Dept. of Computer Science
Tsinghua University
 
Long Jiang
Microsoft Research Asia
Microsoft Corporation
 
Microsoft Research Asia
Microsoft Corporation
 
Dept. of Statistical Science
Cornell University
 
We show that information about social relationships can be used to
improve user-level sentiment analysis. The main motivation behind
our approach is that users that are somehow “connected” may be
more likely to hold similar opinions; therefore, relationship information can complement what we can extract about a user’s viewpoints from their utterances. Employing Twitter as a source for our
experimental data, and working within a semi-supervised framework, we propose models that are induced either from the Twitter
follower/followee network or from the network in Twitter formed
by users referring to each other using “@” mentions. Our transductive learning results reveal that incorporating social-network
information can indeed lead to statistically signiﬁcant sentimentclassiﬁcation improvements over the performance of an approach
based on Support Vector Machines having access only to textual
Categories and Subject Descriptors
Management]:
[Information Storage and Retrieval]:
Miscellaneous;
[Social and Behavioral Sciences]: Miscellaneous
General Terms
Algorithms, Experimentation
social networks, sentiment analysis, opinion mining, Twitter
INTRODUCTION
Sentiment analysis is one of the key emerging technologies in the effort to help people navigate the huge amount of usergenerated content available online. Systems that automatically de-
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
KDD’11, August 21–24, 2011, San Diego, California, USA.
Copyright 2011 ACM 978-1-4503-0813-7/11/08 ...$10.00.
termine viewpoint would enable users to make sense of the enormous body of opinions expressed on the Internet, ranging from
product reviews to political positions.
We propose to improve sentiment analysis by utilizing the information about user-user relationships made evident by online social
networks. We do so for two reasons. First, user-relationship information is now more easily obtainable, since user-generated content
often appears in the context of social media. For example, Twitter
maintains not just tweets, but also lists of followers and followees.
Second, and more importantly, when a user forms a link in a network such as Twitter, they do so to create a connection. If this
connection corresponds to a personal relationship, then the principle of homophily — the idea that similarity and connection
tend to co-occur, or “birds of a feather ﬂock together” — suggests that users that are “connected” by a mutual personal relationship may tend to hold similar opinions; indeed, one study found
some evidence of homophily for both positive and negative sentiment among MySpace Friends . Alternatively, the connection
a user creates may correspond to approval (e.g., of a famous ﬁgure)
or a desire to pay attention (e.g., to a news source), rather than necessarily a personal relationship; but such connections are still also
suggestive of the possibility of a shared opinion.
Therefore, employing Twitter as the basis for our sentiment classiﬁcation experiments, we incorporate user-relation information, as
follows. We ﬁrst utilize a model based on the follower/followee
network that has dependencies not only between the opinion of
a user and the opinions expressed in his/her tweets, but also between his/her opinion and those of the users that he/she follows.
We also consider an @-network-based variant, in which we have
dependencies between a user’s opinion and the opinions of those
whom he/she mentions via an “@”-reference.
We work within a semi-supervised, user-level framework. The
reason we adopt a semi-supervised approach is that the acquisition
of a large quantity of relevant sentiment-labeled data can be a timeconsuming and error-prone process, as discussed later in this paper. We focus on user-level rather than tweet-level (corresponding
to document- or sentence-level) sentiment because the end goal for
many users of opinion-mining technologies is to ﬁnd out what people think; determining the sentiment expressed in individual texts is
usually a subtask of or proxy for that ultimate objective. Additionally, it is plausible that there are cases where some of a user’s tweets
are genuinely ambiguous (perhaps because they are very short), but
his/her overall opinion can be determined by looking at his/her collection of tweets and who he/she is connected to.
Contributions First, we empirically conﬁrm that the probability
that two users share the same opinion is indeed correlated with
whether they are connected in the social network.
We then show that using graphical models incorporating socialnetwork information can lead to statistically signiﬁcant improvements in user-level sentiment polarity classiﬁcation with respect to
an approach using only textual information.
Additionally, we perform an array of experimental comparisons
that encompasses not only the variation in underlying network (follower/followee vs. @-network) mentioned above, but also variation
in how the parameters of our model are learned; how the baseline
SVMs are trained; and which graph we employ, i.e., is it enough
for user vi to follow user vj (corresponding to attention and/or homophily), or should we require that vi and vj mutually follow each
other (more in line with homophily only)? For some topics, a combination of homophily and approval/attention links performs better
than homophily links alone; but in other topics, homophily-only
links are best. Interestingly, we ﬁnd that when the edge quality is
sufﬁciently high, even a very small number of edges can lead to
statistically signiﬁcant improvements.
Paper organization §2 gives a formal characterization of our userlevel sentiment categorization problem within the setting of Twitter. §3 introduces the data set we collect and presents some motivational analysis. §4 explains our proposed model and describes
algorithms for parameter estimation and prediction. §5 presents
our experimental results. §6 introduces related work not mentioned
otherwise. §7 concludes by summarizing our work and discussing
future directions.
CONCRETE PROBLEM SETTING
In this section, we frame the problem in the context of Twitter
to keep things concrete, although adaptation of this framework to
other social-network settings is straightforward. In brief, we address the semi-supervised topic-dependent sentiment-polarity user
categorization task. In doing so, we consider four different ways in
which Twitter users can be considered to be “connected”.
Our task is to classify each user’s sentiment on a speciﬁc topic
into one of two polarities: “Positive” and “Negative”.1 “Positive”
means that the user supports or likes the target topic, whereas “Negative” stands for the opposite. (As stated above, this differs from
classifying each of a user’s tweets.) Given the scale of Twitter and
the difﬁculty in acquiring labels (see §3), we work within the semisupervised learning paradigm. That is, we assume that we are given
a topic and a user graph, where a relatively small proportion of the
users have already been labeled, and the task is to predict the labels
of all the unlabeled users.
Our motivating intuition, that “connected” users will tend to hold
similar opinions, requires us to deﬁne what “connected” means.
For Twitter, there are several possibilities. These roughly correspond to whether we should consider only “personal connections”,
in accordance with homophily, or “any connection”, which is more
in line with the approval/attention hypothesis mentioned in the introduction. Note that focusing on personal connections presumably
means working with less data.
The ﬁrst possibility we consider is to deem two Twitter users to
be connected if one “follows” the other. (From now on, to distinguish between the Twitter-deﬁned “following” relationship and
ordinary English usages of the word “follow”, we use “t-follow” to
refer to the Twitter version.) This corresponds to the idea that users
often agree with those they pay attention to. Of course, this isn’t
1We initially worked with positive/negative/neutral labels, but determining neutrality was difﬁcult for the annotators.
always true: for example, 21% of US Internet users usually consult
websites that hold opposing political viewpoints . So, alternatively, we may instead only consider pairs of users who know
each other personally. As a rough proxy for this sort of relationship information, we look at whether a user mentions another by
name using the Twitter @-convention; the intuition is that a user
will address those who they are having a conversation with, and
thus know. Again, though, this is only a heuristic.
Another factor to take into account is whether we should require
both users in a potential pair to connect with each other. Mutual
connections presumably indicate stronger relationships, but attention effects may be more important than homophily effects with
respect to shared sentiment.
We thus have 2 × 2 possibilities for our deﬁnition of when we
decide that a connection (edge) between users exists.
• Directed t-follow graph: user vi t-follows vj (vj may or may
not t-follow vi in return).
• Mutual t-follow graph: user vi t-follows vj and user vj
t-follows vi.
• Directed @ graph: vi has mentioned vj via a tweet containing “@vj” (vj may or may not @-mention vi in return).
• Mutual @ graph: vi has mentioned vj via a tweet containing
“@vj” and vice versa.
DATA AND INITIAL OBSERVATIONS
Data Collection
Motivation We ﬁrst planned to adopt the straightforward approach
to creating a labeled test set, namely, manually annotating arbitrary
Twitter users as to their sentiment on a topic by reading the users’
on-topic tweets. However, inter-annotator agreement was far below what we considered to be usable levels. Contributing factors
included the need for familiarity with topic-speciﬁc information
and cultural context to interpret individual tweets; for example, the
tweet “#lakers b**tch!” was mistakenly labeled negative for the
topic “Lakers” (the expletive was spelled out in full in the original).
Fortunately, this problem can be avoided to some degree by taking advantage of the fact that user metadata is often much easier to
interpret. For example, with respect to the topic “Obama”, there are
Twitter users with the bios “social engineer, karma dealer, & obama
lover” and “I am a right wing radical-American that is anti-Sharia
law, anti-muslim, pro-Israel, anti-Obama and America FIRST”, another with username “against_obama”, and so on.2 We thus employed the following data-acquisition procedure.
Initial pass over users Our goal was to ﬁnd a large set of users
whose opinions are clear, so that the gold-standard labels would
be reliable. To begin the collection process, we selected as seed
users a set of high-proﬁle political ﬁgures and a set of users who
seemed opposed to them (e.g., “BarackObama”, “RepRonPaul”,
“against_obama”). We performed a crawl by traversing edges starting from our seed set.
Topic selection and gold-standard user labeling In the crawl just
described, the set of proﬁles containing the corresponding keyword
tended to be hugely biased towards the positive class. We therefore
used the initially-gathered proﬁles to try to ﬁnd topics with a more
balanced class distribution: we computed those keywords with the
highest frequencies among the words in the proﬁles, resulting in
2In practice, we also require that such users actually tweet on the
Table 1: Statistics for our main datasets.
#t-follow edges
# on-topic tweets
Sarah Palin
Glenn Beck
the topics “Obama”, “Sarah Palin”, “Glenn Beck”, “Fox News”,
and “Lakers” (e.g., “Ron Paul” was not in this ﬁnal set). Then
we employed a very conservative strategy: we annotated each user
according to their biographical information (this information was
not used in our algorithms), keeping only those whose opinions we
could clearly determine from their name and bio.3 This approach
does mean that we are working with graphs in which the users have
strong opinions on the target topic, but the resulting gold-standard
sentiment labels will be trustworthy.
Resultant graphs Finally, we constructed the graphs for our main
experiments from the users with gold-standard labels and the edges
between them. Table 1 shows basic statistics across topics. “Ontopic tweets” means tweets mentioning the topic by the name we
assigned it (e.g., a tweet mentioning “Barack” but not “Obama”
would not be included): our experiments only consider on-topic
Observations
Before proceeding, we ﬁrst engage in some high-level investigation of the degree to which network structure and user labels correlate, since a major motivation for our work is the intuition that
connected users tend to exhibit similar sentiment. We study the interplay between user labels and network inﬂuence via the following
two kinds of statistics:
1. Probability that two users have the same label, conditioned
on whether or not they are connected
2. Probability that two users are connected, conditioned on
whether or not they have the same label
As stated in §2, we have four types of user-user connections to
consider: t-follow and mutually-t-follow relationships, and @mentioned and mutually-@-mentioned relationships.
Shared sentiment conditioned on being connected
clearly shows that the probability of two connected users sharing
the same sentiment on a topic is much higher than chance. The
effect is a bit more pronounced overall in the t-follow graph (red
bars) than in the @-graph (blue bars): for instance, more of the bars
are greater than .8. In terms of “mutual” links (mutual t-follow or
@-mentions) compared with “directed” links, where the t-follow
or @-mentioning need not be mutual, it is interesting to note that
“mutual” corresponds to a higher probability of shared sentiment
in the topics “Obama”, “Sarah Palin”, and “Glenn Beck”, while the
reverse holds for “Lakers”.
Connectedness conditioned on labels We now turn to our second
statistic, which measures whether shared sentiment tends to imply
connectedness. Figure 2 clearly shows that in our graphs, it is much
3 When the strictness of these constraints led to a small result set
for some topics, we augmented the labeled dataset with more users
whose labels could be determined by examination of their tweets.
In the case of “Lakers”, we were able to acquire more negative
users by treating users with positive sentiment towards “Celtics” as
negative for “Lakers”, since the Celtics and Lakers are two traditional rivals among US basketball teams.
t-Follow Graph
obamasarah glenn lakers fox
obamasarah glenn lakers fox
Figure 1: Shared sentiment conditioned on type of connection.
Y-axis: probability of two users vi and vj having the same sentiment
label, conditioned on relationship type. The left plot is for the t-follow
graph, while the right one is for the @ graph. “random”: pairs formed
by randomly choosing users. “directed”: at least one user in the pair
links to the other. “mutual”: both users in the pair link to each other.
Note that the very last bar (a value of 1 for “Fox News”, mutual @graph) is based on only 5 edges (datapoints).
t-Follow Graph
obamasarah glenn lakers fox
same with any link
diff with any link
obamasarah glenn lakers fox
same with any link
diff with any link
Figure 2: Connectedness conditioned on labels. Y-axis: probability that two users are connected, conditioned on whether or not the
users have the same sentiment.
more likely for users to be connected if they share an opinion than if
they differ. The probability that same-opinion users are connected
is much larger in the t-follow graph than in the @ graph. This may
be a result of the fact that the @-graph is more sparse, as can be
seen from Table 1.
Summary We have seen that ﬁrst, user pairs in which at least one
party links to the other are more likely to hold the same sentiment,
and second, two users with the same sentiment are more likely to
have at least one link to the other than two users with different
sentiment. These points validate our intuitions that links and shared
sentiment are clearly correlated, at least in our data.
MODEL FRAMEWORK
In this section, we give a formal deﬁnition of the model we work
with. We propose a factor-graph model for user labels. With our
formulation, more-or-less standard technologies can be employed
for learning and inference. We employ transductive learning algorithms in our models. The main advantage of our formulation is
that it employs social-network structure to help us overcome both
the paucity of textual information in short tweets and the lack of a
large amount of labeled data.
Formulation
We are given a “query” topic q, which induces a set of users Vq
who have tweeted about q.4 Our goal is to determine which users
in Vq are positive towards q and which are negative.
4We omit users who have never expressed an opinion about q; it
Figure 3: Example directed heterogeneous graph (dependence
on topic q suppressed for clarity). The corresponding factor graph
has factors corresponding to user-tweet dependencies (label “f”) and
user-user dependencies (label “h”).
For each user vi ∈Vq, we have the set tweets vi,q of vi’s tweets
about q, and we know which users vj ∈Vq t-follow or @-mention
vi and vice versa. Recall that we are working in a semi-supervised
setting where we are given sentiment labels on a relatively small
subset of the users in Vq. (We do not assume sentiment labels on
the tweets.)
We incorporate both textual and social-network information in a
single heterogeneous graph on topic q, where nodes can correspond
to either users or tweets. Figure 3 shows an example.
DEFINITION 1. A heterogeneous graph on topic q is a graph
HGq = {Vq ∪{tweets vi,q | vi ∈Vq}, Eq}. The edge set Eq is the
union of two sets: the tweet edges {(vi, tweets vi,q) | vi ∈Vq}, indicating that vi posted tweets vi,q, and network-induced user-user
As already mentioned in §2, we consider four types of heterogeneous graphs, characterized by the deﬁnition of when sociallyinduced edge (vi, vj) exists in Eq:
directed t-follow, mutual
t-follow, directed @, and mutual @ graphs.
Tweet edges are taken to be either directed or undirected to match
the type of the socially-induced edges.
Proposed Model
Let the topic be ﬁxed, so that we can suppress it in the notation
that follows and say that we are working with heterogeneous graph
HG involving a set of users V = {vi}. Let yvi be the label for
user vi, and let Y be the vector of labels for all users. We make
the Markov assumption that the user sentiment yvi is inﬂuenced
only by the (unknown) sentiment labels ˆyt of tweets t ∈tweets vi
and the (probably unknown) sentiment labels of the immediate user
neighbors Neighbors vi of vi. This assumption leads us to the following factor-graph-based model:
log P(Y) =
t∈tweetsvi ,k,ℓ
µk,ℓfk,ℓ(yvi, ˆyt)
vj∈Neighborsvi ,k,ℓ
λk,ℓhk,ℓ(yvi, yvj)
where the ﬁrst and second inner sums correspond to user-tweet factors and user-user factors, respectively (see below for more details),
seems rash to judge someone’s opinion based solely on who their
associates are.
and the indices k, ℓrange over the set of sentiment labels {0,1}.
fk,ℓ(·, ·) and hk,ℓ(·, ·) are feature functions, and µk,ℓand λk,ℓare
parameters representing impact. (For instance, we might set µ0,1
to 0 to give no credit to cases in which user label yvi is 0 but tweet
t’s label ˆyt is 1.) Z is the normalization factor.
User-tweet factor Feature function fk,ℓ(yvi, ˆyt) ﬁres for a particular conﬁguration, speciﬁed by the indices k and ℓ, of user and
individual-tweet labels (example conﬁguration: both are 1). After
all, we expect vi’s tweets to provide information about their opinion. Given our semi-supervised setting, we opt to give different
values to the same conﬁguration depending on whether or not user
vi was one of the initially labeled items, the reason being that the
initial labels are probably more dependable. Thus, we use wlabeled
and wunlabeled to indicate our different levels of conﬁdence in users
that were or were not initially labeled:
fk,ℓ(yvi, ˆyt) =
|tweetsvi |
yvi = k, ˆyt = ℓ, vi labeled
wunlabeled
|tweetsvi |
yvi = k, ˆyt = ℓ, vi unlabeled
We normalize by |tweets vi| because each t ∈tweets vi contributes
to the ﬁrst exponential in Eq. 1.
User-user factor Next, our observations in §3 suggest that socialnetwork connections between users can correlate with agreement
in sentiment. Hence, we deﬁne feature functions hk,ℓ(yvi, yvj),
which ﬁre for a particular conﬁguration of labels, speciﬁed by the
indices k and ℓ, between neighboring users vi and vj:
hk,ℓ(yvi, yvj) =
|Neighborsvi |
yvi = k, yvj = ℓ
Note that for a directed heterogeneous graph with edge set E,
we deﬁne Neighbors vi
= {vj | (vi, vj) ∈E}, since the Twitter
interface makes the tweets of t-followee vj visible to t-follower vi
(and similarly for @-mentions), so we have some reason to believe
that vi is aware of vj’s opinions.
Implementation Note in our experiments, we empirically set the
weights within the feature functions as follows: wlabeled = 1.0,
wunlabeled = 0.125, wrelation = 0.6;5 thus, the greatest emphasis
is on tweet labels matching the label of an initially-labeled user.
Parameter Estimation and Prediction
We now address the problems of estimating the remaining free
parameters and inferring user sentiment labels once the parameter
values have been learned. We provide more details below, but to
summarize: Inference is performed using loopy belief propagation,
and for parameter estimation, we employ two approaches. The ﬁrst
is simple estimation from the small set of labeled data we have
access to; the second applies SampleRank to the semi-supervised
setting .
Parameter Estimation
To avoid needing to always distinguish between µk,ℓ’s and
λk,ℓ’s, we introduce a change of notation. We write φ for the vec-
5 These parameters are set to adjust the importance of labeled data,
unlabeled data and relation information. We did try different parameter values. In accordance with the intuition that labeled users
are the most trustworthy, and that user relations are the next most
trustworthy, we ﬁxed wlabeled = 1.0, and then varied wrelation
between [0.5, 0.8] and wunlabeled between [0.1, 0.5]. The parameter settings given in the main text exhibited the best performance
across topics, but performance was relatively stable across different
tor of parameters µk,ℓand λk,ℓ, and write Φφ(Y) for the function
log P(Y), given in Eq.1, induced by a particular φ on a vector of
user labels Y. If we were in the fully supervised setting — that is,
if we were given Y — then in principle all we would need to do is
ﬁnd the φ maximizing Φφ(Y); but recall that we are working in a
semi-supervised setting. We propose the following two approaches.
Direct estimation from simple statistics (“NoLearning” for
short) One way around this problem is to not learn the parameters φ via optimization, but to simply use counts from the labeled
subset of the data. Thus, letting Elabeled be the subset of edges in
our heterogeneous graph in which both endpoints are labeled, we
estimate the four user-user parameters as follows:
(vi,vj )∈Elabeled I(yvi = k, yvj = ℓ)
(vi,vj )∈Elabeled I(yvi = k, yvj = 1) + I(yvi = k, yvj = 0)
where I(·) is the indicator function. Remember, though, that we do
not have any labels on the (short, often hard-to-interpret) tweets.
We therefore make the strong assumption that positive users only
post positive (on-topic) tweets, and negative users only post negative tweets; we thus set µk,ℓ:= 1 if k = ℓ, 0 otherwise.
SampleRank (“Learning”) If we instead seek to learn the parameters φ by maximizing Φφ(·), we need to determine how to deal
with the normalization factor and how to best handle having both
labeled and unlabeled data. We employ SampleRank , Algorithm 1:
Input: Heterogeneous graph HG with labels on some of the user nodes,
learning rate η
Output: Parameter values φ and full label-vector Y
Randomly initialize Y;
Initialize φ from NoLearning;
for i := 1 to Number of Steps do
Ynew := Sample(Y);
if (RelPerf(Ynew, Y) > 0 and LLRφ(Ynew, Y) < 0)
//performance is better but the objective function is lower
or (RelPerf(Ynew, Y) < 0 and LLRφ(Ynew, Y) > 0)
//performance is worse but the objective function is higher
φ := φ −η∇φLLRφ(Ynew, Y);
if convergence then
if RelPerf(Ynew, Y) > 0 then
Y := Ynew;
Algorithm 1: SampleRank. In our experiments, η= .001; varying η did not affect performance much.
In the above, Sample is the sampling function; we use the uniform distribution in our experiments . LLRφ(Ynew, Y) is the loglikelihood ratio for the new sample Ynew and previous label set Y:
LLRφ(Ynew, Y) = log
= Φφ(Ynew) −Φφ(Y) (this
causes the normalization terms to cancel out). We can use all the
users, labeled and unlabeled, to compute LLRφ(Ynew, Y), since
we only need the underlying graph structure to do so (the label sets
to be compared are inputs to the function).
relative-performance
RelPerf(Ynew, Y) as the difference in performance,
measured on the labeled
data only,
between Ynew
performance
Perf(Y) = Accuracylabeled(Y) + MacroF1labeled(Y). Singh
et al. propose a more sophisticated approach to deﬁning
truth functions in the semi-supervised setting, but our emphasis
in this paper is on showing that our model is effective even when
deployed with simple learning techniques.
Prediction
We employ loopy belief propagation to perform inference for a
given learned model6, as handling the normalization factor Z is still
difﬁcult. To account for the fact that SampleRank is randomized,
we do learning-then-inference 5 times to get 5 predictions, and take
a majority vote among the ﬁve label possibilities for each user.
EXPERIMENTS
In this section, we ﬁrst describe our experimental procedure. We
then present a case study that validates our intuitions as to how the
network-structure information helps user-level sentiment classiﬁcation. Finally, we analyze the performance results, and examine
the effects of graph density, edge “quality”, SVM training data, and
amount of unlabeled data.
Experimental Procedure
We ran each experiment 10 times. In each run, we partitioned
the data for which we had ground-truth labels into a training set,
consisting of 50 positive plus 50 negative randomly-chosen users
whose labels are revealed to the algorithms under consideration,
and an evaluation set consisting of the remaining labeled users.7
One issue we have not yet addressed is our complete lack of annotations on the tweets; we need tweet labels as part of our model.
We construct training data where the “positive” tweets were all (ontopic) tweets from users labeled positive, and the “negative” tweets
all (on-topic) tweets from users labeled negative. (We discuss some
alternative approaches later.) Different classiﬁers are trained for
different topics.
We compare three user-classiﬁcation methods, two of which
were introduced in §4 and the other of which is our baseline:
• Majority-vote Baseline (SVM Vote): The user’s sentiment
label is simply the majority label among their (on-topic)
tweets, according to the SVM. 8
• Heterogeneous Graph Model with Direct estimation from
simple statistics (HGM-NoLearning): We derive parameter
values according to the statistics in the labeled data, and then
apply loopy belief propagation to infer user sentiment labels.
• Heterogeneous Graph Model with SampleRank (HGM-
Learning): We perform semi-supervised learning on the heterogeneous graph and then apply loopy belief propagation to
get user-level sentiment labels.
We measure performance via both accuracy and Macro F1 on the
evaluation set.
Case Study
We ﬁrst engage in a case study to show how our graph information can improve sentiment analysis. Figure 4 shows an example
generated from our experiments. In the depicted portion (a) of the
ground-truth user graph for the topic “Obama”, we see that positive
(green) and negative (red) users are relatively clustered. Deriving
user labels from an SVM run on text alone yields graph (b), in
which we see much less clustering and a number of mistakes compared to ground truth: this is probably because tweet text is short
6Using SampleRank for inference led to worse performance.
7Note that the ratios of |training set|/|evaluationset| are different in different topics.
8We also tried the baseline of combining all the (on-topic) tweets
of a user into a single document; the results were much worse.
(a) Ground Truth
(b) Text-Only Approach
(c) Our algorithm
Figure 4: Case study: Portion of the t-follow graph for the topic “Obama”, where derived labels on users are indicated by green (positive) and red
(negative), respectively. Each node is a user, and the center one is “BarackObama”. The numbers in the nodes are indices into the table below. (a):
Ground truth (human annotation). (b) SVM Vote (baseline). (c) HGM-Learning in the directed t-follow graph. Filled nodes indicate cases where the
indicated algorithm was right and the other algorithm was wrong; for instance, only our algorithm was correct on node 4.
Sample tweets of users classiﬁed correctly only when network information is incorporated
Obama is making the repubs look silly and petty. #hrc
Is happy Obama is President
Obama collectable 
I am praying that the government is able to get health care reformed this year! President Obama seems like the ONE to get it worked
Watching House on TV. I will be turning to watch Rachel M. next. I am hoping Pres. Obama gets his budget passed. Especially Health
RT @TeaPartyProtest Only thing we have 2 fear is Obama himself & Pelosi & Cong & liberal news & Dems &... 
RT @GlennBeckClips: Barack Obama can no more disown ACORN than he could disown his own grandmother. #TCOT
RT @JosephAGallant Twitlonger: Suppose I wanted to Immigrant to Mexico? A Letter to President Obama.. 
George Bush was and acted like a war time President. Obama is on a four year power grab and photo op. #tcot
ObamaCare forces Americans to buy or face a ﬁne! It is UNCONSTITUITIONAL to force us to buy obamacare. Marxist Govt. taking
our Freedoms!
Look up Chicago Climate Exchange,an organization formed years ago by Obama & his Marxist-Commie Cronies to form a proﬁt off
cap & trade.
and relatively difﬁcult to interpret, according to our initial inspections of the data. In contrast, graph (c) shows that our text- and
network-aware algorithm produces labels that are more coherently
clustered and correct more often than (b).
We investigate more by looking at a speciﬁc example. The table in the lower part of Figure 4 shows a selection of tweets for
users that only our algorithm classiﬁed correctly. We see that the
text of these tweets is often seemingly hard (for an SVM) to classify. For example, user 1’s “Obama is making the repubs look silly
and petty. #hrc” has negative words in it, although it is positive
towards Obama. In these cases, the network structure may connect
initially-misclassiﬁed users to users with the same sentiment, and
our network-aware algorithm is able to use such relationship information to overcome the difﬁculties of relying on text interpretation
It should be pointed out that there are cases where text alone
is a better source of information. Consider user 7 in Figure 4, who
resides in a two-node connected component and was correctly classiﬁed by SVM Vote but not HGM-Learning. User 7 is particularly
proliﬁc, so there is a great deal of data for the text-based SVM to
work with; but the network-based method forced user 7 to share its
neighbor’s label despite this preponderance of textual evidence.
Performance Analysis
We now present the performance results for the different methods we considered. Figure 5 shows the average performance of
the different methods across topics. The green dot represents the
performance of the baseline, the red ones are results for t-follow
graphs, and the blue ones are results for @ graphs. The presence
of a △indicates that the corresponding approach is signiﬁcantly
better than the baseline for more than 3 topics.
First, our approaches all show better performance than the baseline both in Accuracy and MacroF1, though the improvement is
rather small in @ graphs. This validates the effectiveness of incorporating network information.
Second, t-follow graphs (red) show better performance than @
graphs (blue). It seems that t-follow relations between people are
more reliable indicators of sentiment similarity, which is consistent
with our analysis of Figure 2.
Third, directed graphs work better than mutual graphs.
could either be because approval/attention links are more related
Sarah Palin
Glenn Beck
t−follow−Dir
t−follow−Mut
t−follow−Dir
t−follow−Mut
t−follow−Dir
t−follow−Mut
t−follow−Dir
t−follow−Mut
t−follow−Dir
t−follow−Mut
Sarah Palin
Glenn Beck
t−follow−Dir
t−follow−Mut
t−follow−Dir
t−follow−Mut
t−follow−Dir
t−follow−Mut
t−follow−Dir
t−follow−Mut
t−follow−Dir
t−follow−Mut
Figure 6: Performance Analysis in Different Topics. The x-axes are the same as in Figure 5. Bars summarize performance results for our “10run” experiments: the bottom and top of a bar indicate the 25th and 75th percentiles, respectively. Dots indicate median results; in pairs connected
by lines, the left is “NoLearning”, while the right is “Learning”. Green: SVM vote, our baseline. Red: network-based approaches applied to the
t-follow graphs. Blue: results for the @ graphs. Stars (∗) indicate performance that is signiﬁcantly better than the baseline, according to the paired
t−follow−Dir
t−follow−Mut
t−follow−Dir
t−follow−Mut
Figure 5: Average Performance Analysis. Red indicates t-follow
graphs, blue indicates @ graphs. For each connected pair, the left one
is from NoLearning, while the right one is from Learning. A △marks
those approaches that are signiﬁcantly better than the baseline for more
than 3 topics.
to shared sentiment than any effects due to homophily, or because
the directed graphs are denser than the mutual ones, as can be seen
from Table 2.
Fourth, NoLearning and Learning performed quite similarly.
(However, we show below that Learning can provide more robustness when more unlabeled users are added.)
Per-topic performance: density vs. quality analysis We now
look at the topics individually to gain a better understanding of
what factors affect performance. Figure 6 gives the per-topic breakdown. Again, we use green, red, and blue to indicate, respectively,
the SVM-vote baseline, our graph-based methods using t-follow
graphs, and our graph-based methods using @ graphs. The ∗’s
denote where our approach is signiﬁcantly better than the baseline (paired t-test, .05 level). Overall, we see that for the topics
“Obama”, “Sarah Palin” and “Glenn Beck”, the t-follow graph is
much more effective than the @ graph in terms of providing statistically signiﬁcant improvements over the baseline; but for the topics
“Lakers” and “Fox”, the @ graph provides more instances of statistically signiﬁcant improvements, and overall there are fewer statistically signiﬁcant improvements over SVM vote. What accounts
for these differences?
Table 2: Average degree statistics. Directed degree refers to
out-degree.
t-follow graph
Sarah Palin
Glenn Beck
Some initially plausible hypotheses are not consistent with our
data. For instance, one might think that sparsity or having a smaller
relative amount of labeled training data would affect the performance rankings. However, neither graph sparsity nor the relative or
absolute amount of users in the graph explain why there are more
improvements in “Glenn Beck” than “Lakers” or why “Fox News”
performs relatively poorly. Table 2 shows the average degree in different topics as an approximation for sparsity. In comparison to the
Glenn Beck graphs, the Lakers graphs are denser. And, Fox News
Sarah Palin
Glenn Beck
Total Number of Users
NoLearning
Total Number of Users
Total Number of Users
Total Number of Users
Total Number of Users
Figure 7: Accuracy in the Largest Connected Component. We show the average accuracy in the largest connected component of the directed
t-follow graph as the amount of unlabeled data increases.
Table 3: Statistics on the expanded graphs. Boldface indicates the setting used in Figure 7.
# t-follow edges
average t-follow degree
average @ degree
total # of on-topic tweets
60,137,108
19,204,843
Sarah Palin
14,318,290
Glenn Beck
17,197,997
has the highest proportion of labeled to unlabeled data (since it has
the fewest users), but our algorithm yields relatively few improvements there.
However, the topic statistics depicted back in Figure 1 do reveal two important facts that help explain why “Lakers” and “Fox
News” act differently. First, they are the two topics for which the
mutual t-follow edges have the lowest probability of connecting
same-label users, which explains the paucity of red ∗’s in those
topics’ plots. Second, the reason “Lakers” and “Fox News” exhibit
more statistically signiﬁcant improvements for the @ graph is that,
as Figure 1 again shows, they are the topics for which directed @
edges and mutual @ edges, respectively, have the highest probability among all edge types of corresponding to a shared label. Thus,
we see that when the quality of the underlying graph is high, our
graph-based approach can produce signiﬁcant improvements even
when the graph is quite sparse — for Fox News, there are only 5
mutual @ pairs. (The high performance of SVM Vote for “Lakers”
makes it more difﬁcult to make further improvements.)
Variation in SVM training We now brieﬂy mention our experiments with two alternative training sets for the tweet-level SVM
that underlies the SVM vote baseline: (a) a single set of outof-domain tweets labeled using emoticons as distant supervision
 ; (b) the same 5 topical sets described in §5.1, except that
we discarded tweets to enforce a 50/50 class balance.
the statistical-signiﬁcance results were roughly the same as for our
main training scheme, except for “Obama”, where the SVM-vote
results themselves were very poor. Presumably, a graph-based approach cannot help if it is based on extremely inaccurate information. For (b), there were some small differences in which graphs
provided signiﬁcant improvements; but we believe that in a semisupervised setting, it is best to not discard parts of what little labeled data there is.
Adding more unlabeled data How much does adding more unlabeled data help? To provide some insight into this question, we
consider one underlying graph type and evaluation metric — directed t-follow graph, accuracy — and plot in Figure 7 how performance is affected by increasing the number of unlabeled users.
Note that what we plot is the average accuracy for the largest connected component of the labeled evaluation data, since this constitutes a more stable measure with respect to increase in overall
graph size. Also, note that the way we increase the number of unlabeled users is taking them from the crawl we obtained in our initial pass over users, which contained 1, 414, 340 users, 1, 414, 211
user proﬁles, 480, 435, 500 tweets, 274, 644, 047 t-follow edges,
and 58, 387, 964 @-edges; Table 3 shows the statistics for all the
expanded graphs we collected.
Figure 7 shows that HGM-Learning is generally better than
the SVM Vote baseline and at worst does comparably.
NoLearning tends to degrade more than HGM-Learning, suggesting that learning-based parameter estimation is effective at adjusting for graphs with more unlabeled data. Edge density does not
explain the relatively larger improvements in “Lakers” and “Fox
News” because those are not the densest graphs.
RELATED WORK
Recently, there has been some work on sentiment analysis
on Twitter, focusing on the tweet level .
deployed twitter-sentiment websites (e.g., www.tweetfeel.com,
www.tweetsentiments.com, www.twitrratr.com), the techniques
employed are generally standard tweet-level algorithms that ignore
links between users.
There has been some previous work on automatically determining user-level opinion or ideology , generally looking at information just in the text that the users generate.
A number of different graphs have been exploited in documentor sentence-level sentiment analysis ,
including in a semi-supervised setting . Our use of @mentions is similar to previous sentiment-analysis work using the
network of references that one speaker makes to another .
CONCLUSIONS AND FUTURE WORK
We demonstrated that user-level sentiment analysis can be significantly improved by incorporating link information from a social
network. These links can correspond to attention, such as when
a Twitter user wants to pay attention to another’s status updates,
or homophily, where people who know each other are connected.
Choice of follower/followee network vs @ network and directed vs.
mutual connections represent different aspects of the homophily vs
attention alternatives. We have some slight evidence that considering both homophily and attention is superior to homophily alone,
although we also observed some exceptions. Regardless, signiﬁcant gains can be achieved even when the underlying graph is very
sparse, as long as there is a strong correlation between user connectedness and shared sentiment.
The general idea in this paper, to explore social network structures to help sentiment analysis, represents an interesting research
direction in social network mining. There are many potential future directions for this work.
A straightforward task would be
to build a larger labeled dataset across more general topics; also,
datasets from other online social media systems with other kinds
of social networks and more information on users would also be
worth exploring. Looking farther ahead, different models and semisupervised learning algorithms for exploiting network structures
should be beneﬁcial. For example, we tried some preliminary experiments with a Markov Random Field formulation, although the
sparsity of the graphs may be an issue in applying such an approach. Finding which parts of the whole network are helpful with
respect to prediction on a topic is another interesting direction. Finally, building a theory of why and how users correlate on different
topics in different kinds of networks is an intriguing direction for
future research.
Acknowledgments
Portions of this work were done while the
ﬁrst author was interning at Microsoft Research Asia. We thank
Claire Cardie, Cristian Danescu-Niculescu-Mizil, Jon Kleinberg,
Myle Ott, Karthik Raman, Lu Wang, Bishan Yang, Ainur Yessenalina and the anonymous reviewers for helpful comments. This
work is supported by Chinese National Key Foundation Research
60933013 and 61035004, a Google Research Grant, a grant from
Microsoft, ONR YIP-N000140910911, China’s National Hightech R&D Program 2009AA01Z138, Natural Science Foundation
of China 61073073, US NSF DMS-0808864 and IIS-0910664, and
a Yahoo! Faculty Research and Engagement Award.