Robust Image Sentiment Analysis Using Progressively Trained and Domain
Transferred Deep Networks
Quanzeng You and Jiebo Luo
Department of Computer Science
University of Rochester
Rochester, NY 14623
{qyou, jluo}@cs.rochester.edu
Hailin Jin and Jianchao Yang
Adobe Research
345 Park Avenue
San Jose, CA 95110
{hljin, jiayang}@adobe.com
Sentiment analysis of online user generated content is
important for many social media analytics tasks. Researchers have largely relied on textual sentiment analysis to develop systems to predict political elections,
measure economic indicators, and so on. Recently, social media users are increasingly using images and
videos to express their opinions and share their experiences. Sentiment analysis of such large scale visual
content can help better extract user sentiments toward
events or topics, such as those in image tweets, so that
prediction of sentiment from visual content is complementary to textual sentiment analysis. Motivated by the
needs in leveraging large scale yet noisy training data to
solve the extremely challenging problem of image sentiment analysis, we employ Convolutional Neural Networks (CNN). We ﬁrst design a suitable CNN architecture for image sentiment analysis. We obtain half a
million training samples by using a baseline sentiment
algorithm to label Flickr images. To make use of such
noisy machine labeled data, we employ a progressive
strategy to ﬁne-tune the deep network. Furthermore, we
improve the performance on Twitter images by inducing domain transfer with a small number of manually
labeled Twitter images. We have conducted extensive
experiments on manually labeled Twitter images. The
results show that the proposed CNN can achieve better
performance in image sentiment analysis than competing algorithms.
Introduction
Online social networks are providing more and more convenient services to their users. Today, social networks have
grown to be one of the most important sources for people to
acquire information on all aspects of their lives. Meanwhile,
every online social network user is a contributor to such
large amounts of information. Online users love to share
their experiences and to express their opinions on virtually
all events and subjects.
Among the large amount of online user generated data, we
are particularly interested in people’s opinions or sentiments
towards speciﬁc topics and events. There have been many
Copyright c⃝2015, Association for the Advancement of Artiﬁcial
Intelligence (www.aaai.org). All rights reserved.
Figure 1: Examples of Flickr images related to the 2012
United States presidential election.
works on using online users’ sentiments to predict boxofﬁce revenues for movies , political elections 
and economic indicators . These works have suggested that online users’ opinions or sentiments are closely
correlated with our real-world activities. All of these results
hinge on accurate estimation of people’s sentiments according to their online generated content. Currently all of these
works only rely on sentiment analysis from textual content.
However, multimedia content, including images and videos,
has become prevalent over all online social networks. Indeed, online social network providers are competing with
each other by providing easier access to their increasingly
powerful and diverse services. Figure 1 shows example images related to the 2012 United States presidential election.
Clearly, images in the top and bottom rows convey opposite
sentiments towards the two candidates.
A picture is worth a thousand words. People with different backgrounds can easily understand the main content of
an image or video. Apart from the large amount of easily
available visual content, today’s computational infrastructure is also much cheaper and more powerful to make the
analysis of computationally intensive visual content analysis feasible. In this era of big data, it has been shown that
the integration of visual content can provide us more reliable or complementary online social signals .
To the best of our knowledge, little attention has been paid
to the sentiment analysis of visual content. Only a few recent
works attempted to predict visual sentiment using features
 
from images and videos . Visual sentiment analysis is extremely challenging. First, image sentiment analysis is inherently more challenging than object recognition as the latter is usually well deﬁned. Image sentiment involves a much
higher level of abstraction and subjectivity in the human
recognition process , on top of a wide variety of visual recognition tasks including object, scene, action
and event recognition. In order to use supervised learning, it
is imperative to collect a large and diverse labeled training
set perhaps on the order of millions of images. This is an
almost insurmountable hurdle due to the tremendous labor
required for image labeling. Second, the learning schemes
need to have high generalizability to cover more different
domains. However, the existing works use either pixel-level
features or a limited number of predeﬁned attribute features,
which is difﬁcult to adapt the trained models to images from
a different domain.
The deep learning framework enables robust and accurate
feature learning, which in turn produces the state-of-the-art
performance on digit recognition , image classiﬁcation , musical signal processing and natural
language processing . Both the academia
and industry have invested a huge amount of effort in building powerful neural networks. These works suggested that
deep learning is very effective in learning robust features in a
supervised or unsupervised fashion. Even though deep neural networks may be trapped in local optima , using different optimization techniques, one
can achieve the state-of-the-art performance on many challenging tasks mentioned above.
Inspired by the recent successes of deep learning, we are
interested in solving the challenging visual sentiment analysis task using deep learning algorithms. For images related
tasks, Convolutional Neural Network (CNN) are widely
used due to the usage of convolutional layers. It takes into
consideration the locations and neighbors of image pixels,
which are important to capture useful features for visual
tasks. Convolutional Neural Networks have been proved very powerful in solving computer
vision related tasks. We intend to ﬁnd out whether applying
CNN to visual sentiment analysis provides advantages over
using a predeﬁned collection of low-level visual features or
visual attributes, which have been done in prior works.
To that end, we address in this work two major challenges:
1) how to learn with large scale weakly labeled training
data, and 2) how to generalize and extend the learned model
across domains. In particular, we make the following contributions.
• We develop an effective deep convolutional network architecture for visual sentiment analysis. Our architecture
employs two convolutional layers and several fully connected layers for the prediction of visual sentiment labels.
• Our model attempts to address the weakly labeled nature
of the training image data, where such labels are machine
generated, by leveraging a progressive training strategy
and a domain transfer strategy to ﬁne-tune the neural network. Our evaluation results suggest that this strategy is
effective for improving the performance of neural network in terms of generalizability.
• In order to evaluate our model as well as competing algorithms, we build a large manually labeled visual sentiment
dataset using Amazon Mechanical Turk. This dataset will
be released to the research community to promote further
investigations on visual sentiment.
Related Work
In this section, we review literature closely related to our
study on visual sentiment analysis, particularly in sentiment
analysis and Convolutional Neural Networks.
Sentiment Analysis
Sentiment analysis is a very challenging task . Researchers from natural language
processing and information retrieval have developed different approaches to solve this problem, achieving promising
or satisfying results . In the context of
social media, there are several additional unique challenges.
First, there are huge amounts of data available. Second, messages on social networks are by nature informal and short.
Third, people use not only textual messages, but also images
and videos to express themselves.
Tumasjan et al. and Bollen et al. employed
pre-deﬁned dictionaries for measuring the sentiment level
of Tweets. The volume or percentage of sentiment-bearing
words can produce an estimate of the sentiment of one particular tweet. Davidov et al. used the weak labels
from a large amount of Tweets. In contrast, they manually
selected hashtags with strong positive and negative sentiments and ASCII smileys are also utilized to label the sentiments of tweets. Furthermore, Hu et al. incorporated social signals into their unsupervised sentiment analysis framework. They deﬁned and integrated both emotion
indication and correlation into a framework to learn parameters for their sentiment classiﬁer.
There are also several recent works on visual sentiment
analysis. Siersdorfer et al. proposes a machine learning algorithm to predict the sentiment of images using pixellevel features. Motivated by the fact that sentiment involves
high-level abstraction, which may be easier to explain by
objects or attributes in images, both 
and propose to employ visual entities or
attributes as features for visual sentiment analysis. In , 1200 adjective noun pairs (ANP), which may
correspond to different levels of different emotions, are extracted. These ANPs are used as queries to crawl images
from Flickr. Next, pixel-level features of images in each
ANP are employed to train 1200 ANP detectors. The responses of these 1200 classiﬁers can then be considered as
mid-level features for visual sentiment analysis. The work
in employed a similar mechanism. The
main difference is that 102 scene attributes are used instead.
Figure 2: Convolutional Neural Network for Visual Sentiment Analysis.
Convolutional Neural Networks
Convolutional Neural Networks (CNN) have been very successful in document recognition . CNN
typically consists of several convolutional layers and several fully connected layers. Between the convolutional layers, there may also be pooling layers and normalization layers. CNN is a supervised learning algorithm, where parameters of different layers are learned through back-propagation.
Due to the computational complexity of CNN, it has only be
applied to relatively small images in the literature. Recently,
thanks to the increasing computational power of GPU, it is
now possible to train a deep convolutional neural network on
a large scale image dataset . Indeed, in the past several years, CNN has been
successfully applied to scene parsing , feature learning , visual recognition 
and image classiﬁcation . In our work, we intend to use CNN to learn features
which are useful for visual sentiment analysis.
Visual Sentiment Analysis
We propose to develop a suitable convolutional neural network architecture for visual sentiment analysis. Moreover,
we employ a progressive training strategy that leverages the
training results of convolutional neural network to further
ﬁlter out (noisy) training data. The details of the proposed
framework will be described in the following sections.
Visual Sentiment Analysis with regular CNN
CNN has been proven to be effective in image classiﬁcation tasks, e.g., achieving the state-of-the-art performance
in ImageNet Challenge . Visual sentiment analysis can also be treated
as an image classiﬁcation problem. It may seem to be a
much easier problem than image classiﬁcation from ImageNet (2 classes vs. 1000 classes in ImageNet). However,
visual sentiment analysis is quite challenging because sentiments or opinions correspond to high level abstractions from
a given image. This type of high level abstraction may require viewer’s knowledge beyond the image content itself.
Meanwhile, images in the same class of ImageNet mainly
contain the same type of object. In sentiment analysis, each
class contains much more diverse images. It is therefore extremely challenging to discover features which can distinguish much more diverse classes from each other. In addition, people may have totally different sentiments over the
same image. This adds difﬁculties to not only our classiﬁcation task, but also the acquisition of labeled images. In
other words, it is nontrivial to obtain highly reliable labeled
instances, let alone a large number of them. Therefore, we
need a supervised learning engine that is able to tolerate a
signiﬁcant level of noise in the training dataset.
The architecture of the CNN we employ for sentiment
analysis is shown in Figure 2. Each image is resized to
256 × 256 (if needed, we employ center crop, which ﬁrst
resizes the shorter dimension to 256 and then crops the middle section of the resized image). The resized images are
processed by two convolutional layers. Each convolutional
layer is also followed by max-pooling layers and normalization layers. The ﬁrst convolutional layer has 96 kernels of
size 11 × 11 × 3 with a stride of 4 pixels. The second convolutional layer has 256 kernels of size 5 × 5 with a stride
of 2 pixels. Furthermore, we have four fully connected layers. Inspired by , we constrain
the second to last fully connected layer to have 24 neurons.
According to the Plutchik’s wheel of emotions , there are a total of 24 emotions belonging to two categories: positive emotions and negative emotions. Intuitively.
we hope these 24 nodes may help the network to learn the 24
emotions from a given image and then classify each image
into positive or negative class according to the responses of
these 24 emotions.
The last layer is designed to learn the parameter w by
maximizing the following conditional log likelihood function (xi and yi are the feature vector and label for the i-th
instance respectively):
ln p(yi = 1|xi, w) + (1 −yi) ln p(yi = 0|xi, w)
p(yi|xi, w) =
exp(w0 + Pk
j=1 wjxij)yi
1 + exp(w0 + Pk
j=1 wjxij)yi
Train convolutional Neural Network
2) CNN model
4) Sampling
5) Fine-tune
6) PCNN model
Figure 3: Progressive CNN (PCNN) for visual sentiment analysis.
Visual Sentiment Analysis with Progressive CNN
Since the images are weakly labeled, it is possible that the
neural network can get stuck in a bad local optimum. This
may lead to poor generalizability of the trained neural network. On the other hand, we found that the neural network
is still able to correctly classify a large proportion of the
training instances. In other words, the neural network has
learned knowledge to distinguish the training instances with
relatively distinct sentiment labels. Therefore, we propose to
progressively select a subset of the training instances to reduce the impact of noisy training instances. Figure 3 shows
the overall ﬂow of the proposed progressive CNN (PCNN).
We ﬁrst train a CNN on Flickr images. Next, we select training samples according to the prediction score of the trained
model on the training data itself. Instead of training from the
beginning, we further ﬁne-tune the trained model using these
newly selected, and potentially cleaner training instances.
This ﬁne-tuned model will be our ﬁnal model for visual sentiment analysis.
Algorithm 1 Progressive CNN training for Visual Sentiment
Input: X = {x1, x2, . . . , xn} a set of images of size 256 ×
Y = {y1, y2, . . . , yn} sentiment labels of X
1: Train convolutional neural network CNN with input X
2: Let S ∈Rn×2 be the sentiment scores of X predicted
3: for si ∈S do
Delete xi from X with probability pi (Eqn.(3))
5: end for
6: Let X′ ⊂X be the remaining training images, Y ′ be
their sentiment labels
7: Fine-tune CNN with input X′ and Y ′ to get PCNN
8: return PCNN
In particular, we employ a probabilistic sampling algorithm to select the new training subset. The intuition is that
we want to keep instances with distinct sentiment scores
between the two classes with a high probability, and conversely remove instances with similar sentiment scores for
both classes with a high probability. Let si = (si1, si2) be
the prediction sentiment scores for the two classes of instance i. We choose to remove the training instance i with
probability pi given by Eqn.(3). Algorithm 1 summarizes the
steps of the proposed framework.
pi = max (0, 2 −exp(|si1 −si2|))
When the difference between the predicted sentiment scores
of one training instance are large enough, this training instance will be kept in the training set. Otherwise, the smaller
the difference between the predicted sentiment scores become, the larger the probability of this instance being removed from the training set.
Experiments
We choose to use the same half million Flickr images
from SentiBank1 to train our Convolutional Neural Network.
These images are only weakly labeled since each image belongs to one adjective noun pair (ANP). There are a total
of 1200 ANPs. According to the Plutchik’s Wheel of Emotions , each ANP is generated by the combination of adjectives with strong sentiment values and nouns
from tags of images and videos . These
ANPs are then used as queries to collect related images
for each ANP. The released SentiBank contains 1200 ANPs
with about half million Flickr images. We train our convolutional neural network mainly on this image dataset. We implement the proposed architecture of CNN on the publicly
available implementation Caffe . All of our experiments are evaluated on a Linux X86 64 machine with 32G
RAM and two NVIDIA GTX Titan GPUs.
Comparisons of different CNN architectures
The architecture of our model is shown in Figure 2. However, we also evaluate other architectures for the visual sentiment analysis task. Table 1 summarizes the performance
of different architectures on a randomly chosen Flickr testing dataset. In Table 1, iCONV-jFC indicates that there are
1 
i convolutional layers and j fully connected layers in the architecture. The model in Figure 2 shows slightly better performance than other models in terms of F1 and accuracy. In
the following experiments, we mainly focus on the evaluation of CNN using the architecture in Figure 2.
Table 1: Summary of performance of different architectures
on randomly chosen testing data.
Architecture
We compare the performance of PCNN with three other
baselines or competing algorithms for image sentiment classiﬁcation.
Low-level Feature-based
Siersdorfer et al. deﬁned
both global and local visual features. Speciﬁcally, the global
color histograms (GCH) features consist of 64-bin RGB histogram. The local color histogram features (LCH) ﬁrst divided the image into 16 blocks and used the 64-bin RGB
histogram for each block. They also employed SIFT features
to learn a visual word dictionary. Next, they deﬁned bag of
visual word features (BoW) for each image.
Mid-level Feature-based
Damian et al. 
proposed a framework to build visual sentiment ontology
and SentiBank according to the previously discussed 1200
ANPs. With the trained 1200 ANP detectors, they are able
to generate 1200 responses for any given test image using
these pre-trained 1200 ANP detectors. A sentiment classiﬁer
is built on top of these mid-level features according to the
sentiment label of training images. Sentribute also employed mid-level features for sentiment prediction. However, instead of using adjective noun pairs, they
employed scene-based attributes 
to deﬁne the mid-level features.
Deep Learning on Flickr Dataset
We randomly choose 90% images from the half million
Flickr images as our training dataset. The remaining 10%
images are our testing dataset. We train the convolutional
neural network with 300,000 iterations of mini-batches
(each mini-batch contains 256 images). We employ the sampling probability in Eqn.(3) to ﬁlter the training images according to the prediction score of CNN on its training data.
In the ﬁne-tuning stage of PCNN, we run another 100,000
iterations of mini-batches using the ﬁltered training dataset.
Table 2 gives a summary of the number of data instances in
our experiments. Figure 4 shows the ﬁlters learned in the
ﬁrst convolutional layer of CNN and PCNN, respectively.
There are some differences between 4(a) and 4(b). While
it is somewhat inconclusive that the neural networks have
reached a better local optimum, at least we can conclude that
the ﬁne-tuning stage using a progressively cleaner training
Table 2: Statistics of the number of Flickr image dataset.
# of iterations
Table 3: Performance on the Testing Dataset by CNN and
dataset has prompted the neural networks to learn different
knowledge. Indeed, the evaluation results suggest that this
ﬁne-tuning leads to the improvement of performance.
Table 3 shows the performance of both CNN and PCNN
on the 10% randomly chosen testing data. PCNN outperformed CNN in terms of Precision, Recall, F1 and Accuracy. The results in Table 3 and the ﬁlters from Figure 4
shows that the ﬁne-tuning stage of PCNN can help the neural network to search for a better local optimum.
(a) Filters learned from CNN
(b) Filters learned from PCNN
Figure 4: Filters of the ﬁrst convolutional layer.
Twitter Testing Dataset
We also built a new image dataset from image tweets. Image tweets refer to those tweets that contain images. We
built a total of 1269 images as our candidate testing images. We employed crowd intelligence, Amazon Mechanical Turk (AMT), to generate sentiment labels for these testing images, in a similar fashion to . We
recruited 5 AMT workers for each of the candidate image.
Table 4 shows the statistics of the labeling results from the
Amazon Mechanical Turk. In the table, “ﬁve agree” indicates that all the 5 AMT workers gave the same sentiment
label for a given image. Only a small portion of the images,
153 out of 1269, had signiﬁcant disagreements between the
Table 5: Performance of different algorithms on the Twitter image dataset (Acc stands for Accuracy).
Algorithms
Five Agree
At Least Four Agree
At Least Three Agree
Table 4: Summary of AMT labeled results for the Twitter
testing dataset.
Five Agree
At Least Four
Three Agree
5 workers (3 vs. 2). We evaluate the performance of Convolutional Neural Networks on this manually labeled image
dataset according to the model trained on Flickr images. Table 5 shows the performance of the two frameworks. Not
surprisingly, both models perform better on the less ambiguous image set (“ﬁve agree” by AMT). Meanwhile, PCNN
shows better performance than CNN on all the three labeling sets in terms of both F1 and accuracy. This suggests that
the ﬁne-tuning stage of CNN effectively improves the generalizability extensibility of the neural networks.
Transfer Learning
Half million Flickr images are used in our CNN training.
The features learned are generic features on these half million images. Table 5 shows that these generic features also
have the ability to predict visual sentiment of images from
other domains. The question we ask is whether we can further improve the performance of visual sentiment analysis
on Twitter images by inducing transfer learning. In this section, we conduct experiments to answer this question.
The users of Flickr are more likely to spend more time
on taking high quality pictures. Twitter users are likely to
share the moment with the world. Thus, most of the Twitter
images are casually taken snapshots. Meanwhile, most of the
images are related to current trending topics and personal
experiences, making the images on Twitter much diverse in
content as well as quality.
In this experiment, we ﬁne-tune the pre-trained neural network model in the following way to achieve transfer learning. We randomly divide the Twitter images into 5 equal partitions. Every time, we use 4 of the 5 partitions to ﬁne-tune
our pre-trained model from the half million Flickr images
and evaluate the new model on the remaining partition. The
averaged evaluation results are reported. The algorithm is
detailed in Algorithm 2.
Similar to , we also employ 5-fold
cross-validation to evaluate the performance of all the baseline algorithms. Table 6 summarizes the averaged performance results of different baseline algorithms and our two
CNN models. Overall, both CNN models outperform the
baseline algorithms. In the baseline algorithms, Sentribute
gives slightly better results than the other two baseline al-
Figure 5: Positive (top block) and Negative (bottom block)
examples. Each column shows the negative example images for each algorithm (PCNN, CNN, Sentribute, Sentibank, GCH, LCH, GCH+BoW, LCH+BoW). The images
are ranked by the prediction score from top to bottom in a
decreasing order.
Algorithm 2 Transfer Learning to ﬁne-tune CNN
Input: X = {x1, x2, . . . , xn} a set of images of size 256 ×
Y = {y1, y2, . . . , yn} sentiment labels of X
Pre-trained CNN model M
1: Randomly partition X and Y into 5 equal groups
{(X1, Y1), . . . , (X5, Y5)}.
2: for i from 1 to 5 do
Let (X′, Y ′) = (X, Y ) −(Xi, Yi)
Fine-tune M with input (X′, Y ′) to obtain model Mi
Evaluate the performance of Mi on (Xi, Yi)
6: end for
7: return The averaged performance of Mi on (Xi, Yi) (i
from 1 to 5)
gorithms. Interestingly, even the combination of using low-
Table 6: 5-Fold Cross-Validation Performance of different algorithms on the Twitter image dataset. Note that compared with
Table 5, both ﬁne-tuned CNN models have been improved due to domain transfer learning (Acc stands for Accuracy).
Algorithms
Five Agree
At Least Four Agree
At Least Three Agree
Sentribute
level features local color histogram (LCH) and bag of visual
words (BoW) shows better results than SentiBank on our
Twitter dataset. Both ﬁne-tuned CNN models have been improved. This improvement is signiﬁcant given that we only
use four ﬁfth of the 1269 images for domain adaptation.
Both neural network models have similar performance on
all the three sets of the Twitter testing data. This suggests
that the ﬁne-tuning stage helps both models to ﬁnd a better
local minimum. In particular, the knowledge from the Twitter images starts to determine the performance of both neural
networks. The previously trained model only determines the
start position of the ﬁne-tuned model.
Meanwhile, for each model, we respectively select the top
5 positive and top 5 negative examples from the 1269 Twitter images according to the evaluation scores. Figure show
those examples for each model. In both ﬁgures, each column
contains the images for one model. A green solid box means
the prediction label of the image agrees with the human label. Otherwise, we use a red dashed box. The labels of top
ranked images in both neural network models are all correctly predicted. However, the images are not all the same.
This on the other hand suggests that even though the two
models achieve similar results after ﬁne-tuning, they may
have arrived at somewhat different local optima due to the
different starting positions, as well as the transfer learning
process. For all the baseline models, it is difﬁcult to say
which kind of images are more likely to be correctly classiﬁed according to these images. However, we observe that
there are several mistakenly classiﬁed images in common
among the models using low-level features (the four rightmost columns in Figure ). Similarly, for Sentibank and Sentribute, several of the same images are also in the top ranked
samples. This indicates that there are some common learned
knowledge in the low-level feature models and mid-level
feature models.
Conclusions
Visual sentiment analysis is a challenging and interesting
problem. In this paper, we adopt the recent developed convolutional neural networks to solve this problem. We have
designed a new architecture, as well as new training strategies to overcome the noisy nature of the large-scale training samples. Both progressive training and transfer learning
inducted by a small number of conﬁdently labeled images
from the target domain have yielded notable improvements.
The experimental results suggest that convolutional neural
networks that are properly trained can outperform both classiﬁers that use predeﬁned low-level features or mid-level visual attributes for the highly challenging problem of visual
sentiment analysis. Meanwhile, the main advantage of using convolutional neural networks is that we can transfer
the knowledge to other domains using a much simpler ﬁnetuning technique than those in the literature e.g., . We are able to directly leverage
a much larger weakly labeled data set for training, as well
as a larger manually labeled dataset for testing. The larger
data sets, along with the proposed deep CNN and its training
strategies, give rise to better generalizability of the trained
model and higher conﬁdence of such generalizability. In the
future, we plan to develop robust multimodality models that
employ both the textual and visual content for social media sentiment analysis. We also hope our sentiment analysis
results can encourage further research on online user generated content.
We believe that sentiment analysis on large scale online
user generated content is quite useful since it can provide
more robust signals and information for many data analytics
tasks, such as using social media for prediction and forecasting. In the future, we plan to develop robust multimodality models that employ both the textual and visual content
for social media sentiment analysis. We also hope our sentiment analysis results can encourage further research on online user generated content.
Acknowledgments
This work was generously supported in part by Adobe Research. We would like to thank Digital Video and Multimedia (DVMM) Lab at Columbia University for providing the
half million Flickr images and their machine-generated labels.