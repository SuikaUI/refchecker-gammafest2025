Information Retrieval in Folksonomies: Search and
Andreas Hotho1, Robert J¨aschke1,2, Christoph Schmitz1, and Gerd Stumme1,2
1 Knowledge & Data Engineering Group, Department of Mathematics and Computer Science,
University of Kassel, Wilhelmsh¨oher Allee 73, D–34121 Kassel, Germany
 
2 Research Center L3S, Expo Plaza 1, D–30539 Hannover, Germany
 
Abstract. Social bookmark tools are rapidly emerging on the Web. In such systems users are setting up lightweight conceptual structures called folksonomies.
The reason for their immediate success is the fact that no speciﬁc skills are needed
for participating. At the moment, however, the information retrieval support is
limited. We present a formal model and a new search algorithm for folksonomies,
called FolkRank, that exploits the structure of the folksonomy. The proposed algorithm is also applied to ﬁnd communities within the folksonomy and is used to
structure search results. All ﬁndings are demonstrated on a large scale dataset.
Introduction
Complementing the Semantic Web effort, a new breed of so-called “Web 2.0” applications is currently emerging on the Web. These include user-centric publishing and
knowledge management platforms like Wikis, Blogs, and social resource sharing tools.
These tools, such as Flickr1 or del.icio.us,2, have acquired large numbers of users
within less than two years.3 The reason for their immediate success is the fact that no
speciﬁc skills are needed for participating, and that these tools yield immediate beneﬁt
for each individual user (e.g. organizing ones bookmarks in a browser-independent,
persistent fashion) without too much overhead. Large numbers of users have created
huge amounts of information within a very short period of time. The frequent use of
these systems shows clearly that web- and folksonomy-based approaches are able to
overcome the knowledge acquisition bottleneck, which was a serious handicap for many
knowledge-based systems in the past.
Social resource sharing systems all use the same kind of lightweight knowledge
representation, called folksonomy. The word ‘folksonomy’ is a blend of the words ‘taxonomy’ and ‘folk’, and stands for conceptual structures created by the people. Folksonomies are thus a bottom-up complement to more formalized Semantic Web technologies, as they rely on emergent semantics which result from the converging
1 
2 
3 From discussions on the del.icio.us mailing list, one can approximate the number of users on
del.icio.us to be more than three hundred thousand.
Y. Sure and J. Domingue (Eds.): ESWC 2006, LNCS 4011, pp. 411–426, 2006.
c⃝Springer-Verlag Berlin Heidelberg 2006
A. Hotho et al.
use of the same vocabulary. The main difference to ‘classical’ ontology engineering approaches is their aim to respect to the largest possible extent the request of non-expert
users not to be bothered with any formal modeling overhead. Intelligent techniques may
well be inside the system, but should be hidden from the user.
A ﬁrst step to searching folksonomy based systems – complementing the browsing interface usually provided as of today – is to employ standard techniques used in
information retrieval or, more recently, in web search engines. Since users are used to
web search engines, they likely will accept a similar interface for search in folksonomybased systems. The research question is how to provide suitable ranking mechanisms,
similar to those based on the web graph structure, but now exploiting the structure of
folksonomies instead. To this end, we propose a formal model for folksonomies, and
present a new algorithm, called FolkRank, that takes into account the folksonomy structure for ranking search requests in folksonomy based systems. The algorithm will be
used for two purposes: determining an overall ranking, and speciﬁc topic-related rankings.
This paper is organized as follows. Section 2 reviews recent developments in the
area of social bookmark systems, and presents a formal model. Section 3 recalls the basics of the PageRank algorithm, describes our adaptation to folksonomies, and discusses
experimental results. These results indicate the need for a more sophisticated algorithm
for topic-speciﬁc search. Such an algorithm, FolkRank, is presented in Section 4. This
section includes also an empirical evaluation, as well as a discussion of its use for generating personal recommendations in folksonomies. Section 5 concludes the paper with
a discussion of further research topics on the intersection between folksonomies and
ontologies.
Social Resource Sharing and Folksonomies
Social resource sharing systems are web-based systems that allow users to upload their
resources, and to label them with arbitrary words, so-called tags. The systems can be
distinguished according to what kind of resources are supported. Flickr, for instance, allows the sharing of photos, del.icio.us the sharing of bookmarks, CiteULike4 and Connotea5 the sharing of bibliographic references, and 43Things6 even the sharing of goals
in private life. Our own system, BibSonomy,7 allows to share simultaneously bookmarks
and bibtex entries (see Fig. 1).
In their core, these systems are all very similar. Once a user is logged in, he can
add a resource to the system, and assign arbitrary tags to it. The collection of all his
assignments is his personomy, the collection of all personomies constitutes the folksonomy. The user can explore his personomy, as well as the personomies of the other users,
in all dimensions: for a given user one can see all resources he had uploaded, together
with the tags he had assigned to them (see Fig. 1); when clicking on a resource one
4 
5 
6 
7 
Information Retrieval in Folksonomies: Search and Ranking
Fig. 1. Bibsonomy displays bookmarks and BibTeX based bibliographic references simultaneously
sees which other users have uploaded this resource and how they tagged it; and when
clicking on a tag one sees who assigned it to which resources.
The systems allow for additional functionality. For instance, one can copy a resource
from another user, and label it with one’s own tags. Overall, these systems provide a
very intuitive navigation through the data. However, the resources that are displayed
are usually ordered by date, i. e., the resources entered last show up at the top. A more
sophisticated notion of ‘relevance’ – which could be used for ranking – is still missing.
State of the Art
There are currently virtually no scientiﬁc publications about folksonomy-based web
collaboration systems. The main discussion on folksonomies and related topics is currently taking place on mailing lists only, e.g. . Among the rare exceptions are and
 who provide good overviews of social bookmarking tools with special emphasis on
folksonomies, and who discusses strengths and limitations of folksonomies. In ,
Mika deﬁnes a model of semantic-social networks for extracting lightweight ontologies
from del.icio.us. Besides calculating measures like the clustering coefﬁcient, (local)
betweenness centrality or the network constraint on the extracted one-mode network,
Mika uses co-occurence techniques for clustering the folksonomy.
There are several systems working on top of del.icio.us to explore the underlying
folksonomy. CollaborativeRank8 provides ranked search results on top of del.icio.us
bookmarks. The ranking takes into account how early someone bookmarked an URL
and how many people followed him or her. Other systems show popular sites (Populicious9) or focus on graphical representations (Cloudalicious10, Grafolicious11) of statistics about del.icio.us.
8 
9 
10 
11 
A. Hotho et al.
Confoto,12 the winner of the 2005 Semantic Web Challenge, is a service to annotate
and browse conference photos and offers besides rich semantics also tagging facilities
for annotation. Due to the representation of this rich metadata in RDF it has limitations
in both size and performance.
Ranking techniques have also been applied in traditional ontology engineering. The
tool Ontocopi performs what is called Ontology Network Analysis for initially populating an organizational memory. Several network analysis methods are applied to
an already populated ontology to extract important objects. In particular, a PageRanklike algorithm is used to ﬁnd communities of practice within sets of individuals
represented in the ontology. The algorithm used in Ontocopi to ﬁnd nodes related to
an individual removes the respective individual from the graph and measures the difference of the resulting Perron eigenvectors of the adjacency matrices as the inﬂuence
of that individual. This approach differs insofar from our proposed method, as it tracks
which nodes beneﬁt from the removal of the invidual, instead of actually preferring the
individual and measuring which related nodes are more inﬂuenced than others.
A Formal Model for Folksonomies
A folksonomy describes the users, resources, and tags, and the user-based assignment
of tags to resources. We present here a formal deﬁnition of folksonomies, which is also
underlying our BibSonomy system.
Deﬁnition 1. A folksonomy is a tuple F := (U, T, R, Y, ≺) where
– U, T , and R are ﬁnite sets, whose elements are called users, tags and resources,
– Y is a ternary relation between them, i. e., Y ⊆U ×T ×R, called tag assignments
(TAS for short), and
– ≺is a user-speciﬁc subtag/supertag-relation, i. e., ≺⊆U × T × T , called subtag/supertag relation.
The personomy Pu of a given user u ∈U is the restriction of F to u, i. e., Pu :=
(Tu, Ru, Iu, ≺u) with Iu := {(t, r) ∈T × R | (u, t, r) ∈Y }, Tu := π1(Iu), Ru :=
π2(Iu), and ≺u:= {(t1, t2) ∈T × T | (u, t1, t2) ∈≺}, where πi denotes the projection
on the ith dimension.
Users are typically described by their user ID, and tags may be arbitrary strings. What is
considered as a resource depends on the type of system. For instance, in del.icio.us, the
resources are URLs, and in ﬂickr, the resources are pictures. From an implementation
point of view, resources are internally represented by some ID.
In this paper, we do not make use of the subtag/supertag relation for sake of simplicity. I. e., ≺= ∅, and we will simply note a folksonomy as a quadruple F := (U, T, R, Y ).
This structure is known in Formal Concept Analysis as a triadic context .
An equivalent view on folksonomy data is that of a tripartite (undirected) hypergraph
G = (V, E), where V = U ˙∪T ˙∪R is the set of nodes, and E = {{u, t, r} | (u, t, r) ∈
Y } is the set of hyperedges.
12 
Information Retrieval in Folksonomies: Search and Ranking
Del.ico.us — A Folksonomy-Based Social Bookmark System
In order to evaluate our retrieval technique detailed in the next section, we have analyzed the popular social bookmarking sytem del.icio.us, which is a server-based system with a simple-to-use interface that allows users to organize and share bookmarks
on the internet. It is able to store in addition to the URL a description, an extended
description, and tags (i. e., arbitrary labels). We chose del.icio.us rather than our own
system, BibSonomy, as the latter went online only after the time of writing of this
For our experiments, we collected data from the del.ico.us system in the following
way. Initially we used wget starting from the top page of del.ico.us to obtain nearly
6900 users and 700 tags as a starting set. Out of this dataset we extracted all users and
resources (i. e., del.icio.us’ MD5-hashed urls). From July 27 to 30, 2005, we downloaded in a recursive manner user pages to get new resources, and resource pages to
get new users. Furthermore we monitored the del.icio.us start page to gather additional
users and resources. This way we collected a list of several thousand usernames which
we used for accessing the ﬁrst 10000 resources each user had tagged. From the collected data we ﬁnally took the user ﬁles to extract resources, tags, dates, descriptions,
extended descriptions, and the corresponding username.
We obtained a core folksonomy with |U| = 75, 242 users, |T | = 533, 191 tags
and |R| = 3, 158, 297 resources, related by in total |Y | = 17, 362, 212 TAS.13 After
inserting this dataset into a MySQL database, we were able to perform our evaluations,
as described in the following sections.
Percentage
Number of Occurrences
"Resources"
Fig. 2. Number of TAS occurrences for tags, users, resources in del.icio.us
13 4,313 users additionally organised 113,562 of the tags with 6,527 so-called bundles. The bundles will not be discussed in this paper; they can be interpreted as one level of the ≺relation.
A. Hotho et al.
As expected, the tagging behavior in del.icio.us shows a power law distribution, see
Figure 2. This ﬁgure presents the percentage of tags, users, and resources, respectively,
which occur in a given number of TAS. For instance, the rightmost ‘+’ indicates that
a fraction of 2.19 · 10−6 of all tags (i. e. one tag) occurs 415950 times – in this case
it is the empty tag. The next ‘+’ shows that one tag (“web”) occurs 238891 times, and
so on. One observes that while the tags follow a power law distribution very strictly,
the plot for users and resources levels off for small numbers of occurrences. Based on
this observation, we estimate to have crawled most of the tags, while many users and
resources are still missing from the dataset. A probable reason is that many users only
try posting a single resource, often without entering any tags (the empty tag is the most
frequent one in the dataset), before they decide not to use the system anymore. These
users and resources are very unlikely to be connected with others at all (and they only
appear for a short period on the del.icio.us start page), so that they are not included in
our crawl.
Ranking in Folksonomies Using Adapted PageRank
Current folksonomy tools such as del.icio.us provide only very limited search support
in addition to their browsing interface. Searching can be performed over the text of tags
and resource descriptions, but no ranking is done apart from ordering the hits in reverse
chronological order. Using traditional information retrieval, folksonomy contents can
be searched textually. However, as the documents consist of short text snippets only
(usually a description, e. g. the web page title, and the tags themselves), ordinary ranking schemes such as TF/IDF are not feasible.
As shown in Section 2.2, a folksonomy induces a graph structure which we will
exploit for ranking in this section. Our FolkRank algorithm is inspired by the seminal
PageRank algorithm . The PageRank weight-spreading approach cannot be applied
directly on folksonomies because of the different nature of folksonomies compared to
the web graph (undirected triadic hyperedges instead of directed binary edges). In the
following we discuss how to overcome this problem.
Adaptation of PageRank
We implement the weight-spreading ranking scheme on folksonomies in two steps.
First, we transform the hypergraph between the sets of users, tags, and resources into an
undirected, weighted, tripartite graph. On this graph, we apply a version of PageRank
that takes into account the edge weights.
Converting the Folksonomy into an Undirected Graph. First we convert the folksonomy F = (U, T, R, Y ) into an undirected tripartite graph GF = (V, E) as follows.
1. The set V of nodes of the graph consists of the disjoint union of the sets of tags,
users and resources: V = U ˙∪T ˙∪R. (The tripartite structure of the graph can be
exploited later for an efﬁcient storage of the – sparse – adjacency matrix and the
implementation of the weight-spreading iteration in the FolkRank algorithm.)
Information Retrieval in Folksonomies: Search and Ranking
2. All co-occurrences of tags and users, users and resources, tags and resources become undirected, weighted edges between the respective nodes: E = {{u, t},
{t, r}, {u, r} | (u, t, r) ∈Y }, with each edge {u, t} being weighted with |{r ∈
R : (u, t, r) ∈Y }|, each edge {t, r} with |{u ∈U : (u, t, r) ∈Y }|, and each edge
{u, r} with |{t ∈T : (u, t, r) ∈Y }|.
Folksonomy-Adapted Pagerank. The original formulation of PageRank reﬂects
the idea that a page is important if there many pages linking to it, and if those pages
are important themselves. The distribution of weights can thus be described as the ﬁxed
point of a weight passing scheme on the web graph. This idea was extended in a similar fashion to bipartite subgraphs of the web in HITS and to n-ary directed graphs
in ). We employ the same underlying principle for our ranking scheme in folksonomies. The basic notion is that a resource which is tagged with important tags by
important users becomes important itself. The same holds, symmetrically, for tags and
users. Thus we have a graph of vertices which are mutually reinforcing each other by
spreading their weights.
Like PageRank, we employ the random surfer model, a notion of importance for web
pages that is based on the idea that an idealized random web surfer normally follows
hyperlinks, but from time to time randomly jumps to a new webpage without following
a link. This results in the following deﬁnition of the rank of the vertices of the graph the
entries in the ﬁxed point ⃗w of the weight spreading computation ⃗w ←dA⃗w +(1−d)⃗p,
where ⃗w is a weight vector with one entry for each web page, A is the row-stochastic14
version of the adjacency matrix of the graph GF deﬁned above, ⃗p is the random surfer
component, and d ∈ is determining the inﬂuence of ⃗p. In the original PageRank,
⃗p is used to outweigh the loss of weight on web pages without outgoing links. Usually,
one will choose ⃗p = 1, i. e., the vector composed by 1’s. In order to compute personalized PageRanks, however, ⃗p can be used to express user preferences by giving a higher
weight to the components which represent the user’s preferred web pages.
We employ a similar motivation for our ranking scheme in folksonomies. The basic
notion is that a resource which is tagged with important tags by important users becomes
important itself. The same holds, symmetrically, for tags and users, thus we have a
tripartite graph in which the vertices are mutually reinforcing each other by spreading
their weights. Formally, we spread the weight as follows:
α⃗w + βA⃗w + γ⃗p
where A is the row-stochastic version of the adjacency matrix of GF, ⃗p is a preference
vector, α, β, γ ∈ are constants with α + β + γ = 1. The constant α is intended to
regulate the speed of convergence, while the proportion between β and γ controls the
inﬂuence of the preference vector.
We call the iteration according to Equation 1 – until convergence is achieved –
the Adapted PageRank algorithm. Note that, if ||⃗w||1 = ||⃗p||1 holds,15 the sum of the
weights in the system will remain constant. The inﬂuence of different settings of the
parameters α, β, and γ is discussed below.
14 i. e., each row of the matrix is normalized to 1 in the 1-norm.
15 . . . and if there are no rank sinks – but this holds trivially in our graph GF.
A. Hotho et al.
As the graph GF is undirected, part of the weight that went through an edge at
moment t will ﬂow back at t + 1. The results are thus rather similar (but not identical)
to a ranking that is simply based on edge degrees, as we will see now. The reason for
applying the more expensive PageRank approach nonetheless is that its random surfer
vector allows for topic-speciﬁc ranking, as we will discuss in the next section.
Results for Adapted PageRank
We have evaluated the Adapted PageRank on the del.ico.us dataset described in Section 2.3. As there exists no ‘gold standard ranking’ on these data, we evaluate our results
empirically.
First, we studied the speed of convergence. We let ⃗p := 1 (the vector having 1 in
all components), and varied the parameter settings. In all settings, we discovered that
Table 1. Folksonomy Adapted PageRank applied without preferences (called baseline)
ad. PageRank
system:unﬁled 0,0078404
programming 0,0037100
javascript
photography
ad. PageRank
ubi.quito.us
johncollins
frizzlebiscuit
tidesonar02
onpause tv anytime 0,0003600
triple entendre
ad. PageRank
 
 0,0002320
 
 
 
 Page
 
 
 
 
 
 
 
 
 
 46 free utilities.htm
 
 
 
 
 
Information Retrieval in Folksonomies: Search and Ranking
α ̸= 0 slows down the convergence rate. For instance, for α = 0.35, β = 0.65, γ = 0,
411 iterations were needed, while α = 0, β = 1, γ = 0 returned the same result in only
320 iterations. It turns out that using γ as a damping factor by spreading equal weight
to each node in each iteration speeds up the convergence considerably by a factory of
approximately 10 (e. g., 39 iterations for α = 0, β = 0.85, γ = 0.15).
Table 1 shows the result of the adapted PageRank algorithm for the 20 most important tags, users and resources computed with the parameters α = 0.35, β = 0.65, γ = 0
(which equals the result for α = 0, β = 1, γ = 0). Tags get the highest ranks, followed
by the users, and the resources. Therefore, we present their rankings in separate lists.
As we can see from the tag table, the most important tag is “system:unﬁled” which
is used to indicate that a user did not assign any tag to a resource. It is followed by
“web”, “blog”, “design” etc. This corresponds more or less to the rank of the tags given
by the overall tag count in the dataset. The reason is that the graph GF is undirected.
We face thus the problem that, in the Adapted PageRank algorithm, weights that ﬂow
in one direction of an edge will basically ‘swash back’ along the same edge in the next
iteration. Therefore the resulting is very similar (although not equal!) to a ranking based
on counting edge degrees.
The resource ranking shows that Web 2.0 web sites like Slashdot, Wikipedia, Flickr,
and a del.icio.us related blog appear in top positions. This is not surprising, as early
users of del.ico.us are likely to be interested in Web 2.0 in general. This ranking correlates also strongly with a ranking based on edge counts.
The results for the top users are of more interest as different kinds of users appear.
As all top users have more than 6000 bookmarks; “notmuch” has a large amount of
tags, while the tag count of “fritz” is considerably smaller.
To see how good the topic-speciﬁc ranking by Adapted PageRank works, we combined it with term frequency, a standard information retrieval weighting scheme. To this
end, we downloaded all 3 million web pages referred to by a URL in our dataset. From
these, we considered all plain text and html web pages, which left 2.834.801 documents.
We converted all web pages into ASCII and computed an inverted index. To search for a
term as in a search engine, we retrieved all pages containing the search term and ranked
them by tf(t) · ⃗w[v] where tf(t) is the term frequency of search term t in page v, and
⃗w[v] is the Adapted PageRank weight of v.
Although this is a rather straightforward combination of two successful retrieval
techniques, our experiments with different topic-speciﬁc queries indicate that this adaptation of PageRank does not work very well. For instance, for the search term “football”,
the del.icio.us homepage showed up as the ﬁrst result. Indeed, most of the highly ranked
pages have nothing to do with football.
Other search terms provided similar results. Apparently, the overall structure of the
– undirected – graph overrules the inﬂuence of the preference vector. In the next section,
we discuss how to overcome this problem.
FolkRank – Topic-Speciﬁc Ranking in Folksonomies
In order to reasonably focus the ranking around the topics deﬁned in the preference vector, we have developed a differential approach, which compares the resulting rankings
with and without preference vector. This resulted in our new FolkRank algorithm.
A. Hotho et al.
The FolkRank Algorithm
The FolkRank algorithm computes a topic-speciﬁc ranking in a folksonomy as follows:
1. The preference vector ⃗p is used to determine the topic. It may have any distribution
of weights, as long as ||⃗w||1 = ||⃗p||1 holds. Typically a single entry or a small set
of entries is set to a high value, and the remaining weight is equally distributed over
the other entries. Since the structure of folksonomies is symmetric, we can deﬁne a
topic by assigning a high value to either one or more tags and/or one or more users
and/or one or more resources.
2. Let ⃗w0 be the ﬁxed point from Equation (1) with β = 1.
3. Let ⃗w1 be the ﬁxed point from Equation (1) with β < 1.
4. ⃗w := ⃗w1 −⃗w0 is the ﬁnal weight vector.
Thus, we compute the winners and losers of the mutual reinforcement of resources
when a user preference is given, compared to the baseline without a preference vector.
We call the resulting weight ⃗w[x] of an element x of the folksonomy the FolkRank of x.
Whereas the Adapted PageRank provides one global ranking, independent of any
preferences, FolkRank provides one topic-speciﬁc ranking for each given preference
vector. Note that a topic can be deﬁned in the preference vector not only by assigning
higher weights to speciﬁc tags, but also to speciﬁc resources and users. These three
dimensions can even be combined in a mixed vector. Similarly, the ranking is not restricted to resources, it may as well be applied to tags and to users. We will show below
that indeed the rankings on all three dimensions provide interesting insights.
Comparing FolkRank with Adapted PageRank
To analyse the proposed FolkRank algorithm, we generated rankings for several topics, and compared them with the ones obtained from Adapted PageRank. We will here
discuss two sets of search results, one for the tag “boomerang”, and one for the URL
http.//www.semanticweb.org. Our other experiments all provided similar results.
The leftmost part of Table 2 contains the ranked list of tags according to their
weights from the Adapted PageRank by using the parameters α = 0.2, β = 0.5, γ =
0.3, and 5 as a weight for the tag “boomerang” in the preference vector ⃗p, while the
other elements were given a weight of 0. As expected, the tag “boomerang” holds the
ﬁrst position while tags like “shop” or “wood” which are related are also under the Top
20. The tags “software”, “java”, “programming” or “web”, however, are on positions
4 to 7, but have nothing to do with “boomerang”. The only reason for their showing
up is that they are frequently used in del.icio.us (cf. Table 1). The second column from
the left in Table 2 contains the results of our FolkRank algorithm, again for the tag
“boomerang”. Intuitively, this ranking is better, as the globally frequent words disappear and related words like “wood” and “construction” are ranked higher.
A closer look reveals that this ranking still contains some unexpected tags; “kassel” or “rdf” are for instance not obviously related to “boomerang”. An analysis of the
user ranking (not displayed) explains this fact. The top-ranked user is “schm4704”, and
he has indeed many bookmarks about boomerangs. A FolkRank run with preference
Information Retrieval in Folksonomies: Search and Ranking
Table 2. Ranking results for the tag “boomerang” (two left at top: Adapted PageRank and
FolkRank for tags, middle: FolkRank for URLs) and for the user “schm4704” (two right at top:
Adapted PageRank and FolkRank for tags, bottom: FolkRank for URLs)
programming 0,0016296
system:unﬁled 0,0014199
construction
construction
socialnetworkanalysis 0,0004822
programming 0,0037894
system:unﬁled 0,0029393
documentation 0,0016182
 
 
 
 
 mods.php
 
 
 
 shoulder injuries/
 0,0031606
 
 
 
 
 
 article/
 
 
 
 
 
 
 
 hoschek/colt/api/overview-summary.html
 
 
 
 
 
 radev/
 mccallum/
 
 birchall/HTM COOK.HTM
 
 
 
 
 
 
 0,0010402
 
 
A. Hotho et al.
weight 5 for user “schm4704” shows his different interests, see the rightmost column
in Table 2. His main interest apparently is in boomerangs, but other topics show up as
well. In particular, he has a strong relationship to the tags “kassel” and “rdf”. When a
community in del.ico.us is small (such as the boomerang community), already a single user can thus provide a strong bridge to other communities, a phenomenon that is
equally observed in small social communities.
A comparison of the FolkRank ranking for user “schm4704” with the Adapted
PageRank result for him (2nd ranking from left) conﬁrms the initial ﬁnding from above,
that the Adapted PageRank ranking contains many globally frequent tags, while the
FolkRank ranking provides more personal tags. While the differential nature of the
FolkRank algorithm usually pushes down the globally frequent tags such as “web”,
though, this happens in a differentiated manner: FolkRank will keep them in the top
positions, if they are indeed relevant to the user under consideration. This can be seen
for example for the tags “web” and “java”. While the tag “web” appears in schm4704’s
tag list – but not very often, “java” is a very important tag for that user. This is reﬂected
in the FolkRank ranking: “java” remains in the Top 5, while “web” is pushed down in
the ranking.
The ranking of the resources for the tag “boomerang” given in the middle of Table 2
also provides interesting insights. As shown in the table, many boomerang related web
pages show up (their topical relatedness was conﬁrmed by a boomerang aﬁcionado).
Comparing the Top 20 web pages of “boomerang” with the Top 20 pages given by
the “schm4704” ranking, there is no “boomerang” web page in the latter. This can
be explained by analysing the tag distribution of this user. While “boomerang” is the
most frequent tag for this user, in del.icio.us, “boomerang” appears rather infrequently.
The ﬁrst boomerang web page in the “schm4704” ranking is the 21st URL (i. e., just
outside the listed TOP 20). Thus, while the tag “boomerang” itself dominates the tags
of this user, in the whole, the semantic web related tags and resources prevail. This
demonstrates that while the user “schm4704” and the tag “boomerang” are strongly
correlated, we can still get an overview of the respective related items which shows
several topics of interest for the user.
Let us consider a second example. Table 3 gives the results for the web page
 The two tables on the left show the tags and
users for the adapted PageRank, resp., and the two ones on the right the FolkRank results. Again, we see that the differential ranking of FolkRank makes the right decisions:
in the Adaptive PageRank, globally frequent tags such as “web”, “css”, “xml”, “programming” get high ranks. Of these, only two turn up to be of genuine interest to the
members of the Semantic Web community: “web” and “xml” remain at high positions,
while “css” and “programming” disappear altogether from the list of the 20 highest
ranked tags. Also, several variations of tags which are used to label Semantic Web related pages appear (or get ranked higher): “semantic web” (two tags, space-separated),
“semantic web”, “semweb”, “sem-web”. These co-occurrences of similar tags could be
exploited further to consolidate the emergent semantics of a ﬁeld of interest. While the
discovery in this case may also be done in a simple syntactic analysis, the graph based
approach allows also for detecting inter-community and inter-language relations.
Information Retrieval in Folksonomies: Search and Ranking
Table 3. Ranking for the resource (Left two tables:
Adapted PageRank for tags and users; right two tables: FolkRank for tags and users. Bottom:
FolkRank for resources).
semanticweb
system:unﬁled
semantic web
programming
imported-bo...
.idate2005-04-11 0,0017779
ad. PageRank
chaizzilla
dissipative
williamteo
stevecassidy
morningboat 0,0025913
philip.fennell 0,0025338
nymetbarton 0,0023790
alphajuliet
semanticweb
semantic web
imported-bo...
.idate2005-04-11 0,0017555
chaizzilla
dissipative
williamteo
stevecassidy
morningboat 0,0025875
philip.fennell 0,0025145
alphajuliet
nymetbarton 0,0023666
 
 
 
 
 
 
 
 0,0001637
 
 
 
 
 
 
 
 overrated.html
 
 
 
 
 syllogism.html
The user IDs can not be checked for topical relatedness immediately, since they are
not related to the users’ full names – although a former winner of the Semantic Web Challenge and the best paper award at a Semantic Web Conference seems to be among them.
The web pages that appear in the top list, on the other hand, include many well-known
resources from the Semantic Web area. An interesting resource on the list is PiggyBank,
which has been presented in November 2005 at the ISWC conference. Considering that
the dataset was crawled in July 2005, when PiggyBank was not that well known, the
prominent position of PiggyBank in del.icio.us at such an early time is an interesting result. This indicates the sensibility of social bookmarking systems for upcoming topics.
A. Hotho et al.
These two examples – as well as the other experiments we performed – show that
FolkRank provides good results when querying the folksonomy for topically related
elements. Overall, our experiments indicate that topically related items can be retrieved
with FolkRank for any given set of highlighted tags, users and/or resources.
Our results also show that the current size of folksonomies is still prone to being
skewed by a relatively small number of perturbations – a single user, at the moment,
can inﬂuence the emergent understanding of a certain topic in the case that a sufﬁcient
number of different points of view for such a topic has not been collected yet. With the
growth of folksonomy-based data collections on the web, the inﬂuence of single users
will fade in favor of a common understanding provided by huge numbers of users.
As detailed above, our ranking is based on tags only, without regarding any inherent
features of the resources at hand. This allows to apply FolkRank to search for pictures
(e. g., in ﬂickr) and other multimedia content, as well as for all other items that are
difﬁcult to search in a content-based fashion. The same holds for intranet applications,
where in spite of centralized knowledge management efforts, documents often remain
unused because they are not hyperlinked and difﬁcult to ﬁnd. Full text retrieval may
be used to ﬁnd documents, but traditional IR methods for ranking without hyperlink
information have difﬁculties ﬁnding the most relevant documents from large corpora.
Generating Recommendations
The original PageRank paper already pointed out the possibility of using the random
surfer vector ⃗p as a personalization mechanism for PageRank computations. The results
of Section 4 show that, given a user, one can ﬁnd set of tags and resources of interest to
him. Likewise, FolkRank yields a set of related users and resources for a given tag. Following these observations, FolkRank can be used to generate recommendations within
a folksonomy system. These recommendations can be presented to the user at different
points in the usage of a folksonomy system:
– Documents that are of potential interest to a user can be suggested to him. This
kind of recommendation pushes potentially useful content to the user and increases
the chance that a user ﬁnds useful resources that he did not even know existed by
“serendipitous” browsing.
– When using a certain tag, other related tags can be suggested. This can be used, for
instance, to speed up the consolidation of different terminologies and thus facilitate
the emergence of a common vocabulary.
– While folksonomy tools already use simple techniques for tag recommendations,
FolkRank additionally considers the tagging behavior of other users.
– Other users that work on related topics can be made explicit, improving thus the
knowledge transfer within organizations and fostering the formation of communities.
Conclusion and Outlook
In this paper, we have argued that enhanced search facilities are vital for emergent
semantics within folksonomy-based systems. We presented a formal model for folk-
Information Retrieval in Folksonomies: Search and Ranking
sonomies, the FolkRank ranking algorithm that takes into account the structure of folksonomies, and evaluation results on a large-scale dataset.
The FolkRank ranking scheme has been used in this paper to generate personalized
rankings of the items in a folksonomy, and to recommend users, tags and resources. We
have seen that the top folksonomy elements which are retrieved by FolkRank tend to
fall into a coherent topic area, e.g. “Semantic Web”. This leads naturally to the idea of
extracting communities of interest from the folksonomy, which are represented by their
top tags and the most inﬂuential persons and resources. If these communities are made
explicit, interested users can ﬁnd them and participate, and community members can
more easily get to know each other and learn of others’ resources.
Another future research issue is to combine different search and ranking paradigms.
In this paper, we went a ﬁrst step by focusing on the new structure of folksonomies.
In the future, we will incorporate additionally the full text that is contained in the web
pages addressed by the URLs, the link structure of these web pages, and the usage
behavior as stored in the log ﬁle of the tagging system. The next version will also
exploit the tag hierarchy.
Currently, spam is not a serious problem for social bookmarking systems. With the
increasing attention they currently receive, however, we anticipate that ‘spam posts’
will show up sooner or later. As for mail spam and link farms in the web, solutions will
be needed to ﬁlter out spam. We expect that a blend of graph structure analysis together
with content analysis will give the best results.
When folksonomy-based systems grow larger, user support has to go beyond enhanced retrieval facilities. Therefore, the internal structure has to become better organized. An obvious approach for this are semantic web technologies. The key question
remains though how to exploit its beneﬁts without bothering untrained users with its
rigidity. We believe that this will become a fruitful research area for the Semantic Web
community for the next years.
Acknowledgement. Part of this research was funded by the EU in the Nepomuk project
(FP6-027705).