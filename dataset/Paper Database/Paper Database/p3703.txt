SDNET: CONTEXTUALIZED ATTENTION-BASED DEEP
FOR CONVERSATIONAL QUESTION AN-
Chenguang Zhu1, Michael Zeng1, Xuedong Huang1
1 Microsoft Speech and Dialogue Research Group, Redmond, WA 98052, USA
{chezhu, nzeng, xdh}@microsoft.com
Conversational question answering (CQA) is a novel QA task that requires understanding of dialogue context. Different from traditional single-turn machine reading comprehension (MRC) tasks, CQA includes passage comprehension, coreference resolution, and contextual understanding. In this paper, we propose an
innovated contextualized attention-based deep neural network, SDNet, to fuse
context into traditional MRC models. Our model leverages both inter-attention
and self-attention to comprehend conversation context and extract relevant information from passage. Furthermore, we demonstrated a novel method to integrate
the latest BERT contextual model. Empirical results show the effectiveness of our
model, which sets the new state of the art result in CoQA leaderboard, outperforming the previous best model by 1.6% F1. Our ensemble model further improves
the result by 2.7% F1.
INTRODUCTION
Traditional machine reading comprehension (MRC) tasks share the single-turn setting of answering
a single question related to a passage. There is usually no connection between different questions
and answers to the same passage. However, the most natural way humans seek answers is via
conversation, which carries over context through the dialogue ﬂow.
To incorporate conversation into reading comprehension, recently there are several public datasets
that evaluate QA model’s efﬁcacy in conversational setting, such as CoQA ,
QuAC and QBLink . In these datasets, to generate correct
responses, models are required to fully understand the given passage as well as the context of previous questions and answers. Thus, traditional neural MRC models are not suitable to be directly
applied to this scenario. Existing approaches to conversational QA tasks include BiDAF++ , FlowQA , DrQA+PGNet , which all try to ﬁnd the
optimal answer span given the passage and dialogue history.
In this paper, we propose SDNet, a contextual attention-based deep neural network for the task
of conversational question answering. Our network stems from machine reading comprehension
models, but has several unique characteristics to tackle contextual understanding during conversation. Firstly, we apply both inter-attention and self-attention on passage and question to obtain a
more effective understanding of the passage and dialogue history. Secondly, SDNet leverages the
latest breakthrough in NLP: BERT contextual embedding . Different from the
canonical way of appending a thin layer after BERT structure according to ,
we innovatively employed a weighted sum of BERT layer outputs, with locked BERT parameters.
Thirdly, we prepend previous rounds of questions and answers to the current question to incorporate
contextual information. Empirical results show that each of these components has substantial gains
in prediction accuracy.
We evaluated SDNet on CoQA dataset, which improves the previous state-of-the-art model’s result
by 1.6% (from 75.0% to 76.6%) overall F1 score. The ensemble model further increase the F1 score
to 79.3%. Moreover, SDNet is the ﬁrst model ever to pass 80% on CoQA’s in-domain dataset.
 
Word Embedding
Contextualized
Word Embedding
Word-level
Understanding
Self Attention
Question Final
Representation
Self Attention
Multilevel Attention
Inter-Attention
Self-Attention
Context Final
Representation
Answer Span
Prediction
Scoring Layer
Transformer Layer
Transformer Layer
Transformer Layer
No gradient
Figure 1: SDNet model structure.
In this section, we propose the neural model, SDNet, for the conversational question answering
task, which is formulated as follows. Given a passage C, and history question and answer utterances
Q1, A1, Q2, A2, ..., Qk−1, Ak−1, the task is to generate response Ak given the latest question Qk.
The response is dependent on both the passage and history utterances.
To incorporate conversation history into response generation,
we employ the idea from
DrQA+PGNet to prepend the latest N rounds of utterances to the current question Qk . The problem is then converted into a machine reading comprehension task. In other words,
the reformulate question is Qk = {Qk−N; Ak−N; ..., Qk−1; Ak−1; Qk}. To differentiate between
question and answering, we add symbol ⟨Q⟩before each question and ⟨A⟩before each answer in
the experiment.
MODEL OVERVIEW
Encoding layer encodes each token in passage and question into a ﬁxed-length vector, which includes both word embeddings and contextualized embeddings. For contextualized embedding, we
utilize the latest result from BERT . Different from previous work, we ﬁx the
parameters in BERT model and use the linear combination of embeddings from different layers in
Integration layer uses multi-layer recurrent neural networks (RNN) to capture contextual information within passage and question. To characterize the relationship between passage and question, we
conduct word-level attention from question to passage both before and after the RNNs. We employ
the idea of history-of-word from FusionNet to reduce the dimension of output
hidden vectors. Furthermore, we conduct self-attention to extract relationship between words at
different positions of context and question.
Output layer computes the ﬁnal answer span. It uses attention to condense the question into a ﬁxedlength vector, which is then used in a bilinear projection to obtain the probability that the answer
should start and end at each position.
An illustration of our model SDNet is in Figure 1.
ENCODING LAYER
We use 300-dim GloVe embedding and contextualized embedding for each
word in context and question. We employ BERT as contextualized embedding.
Instead of adding a scoring layer to BERT structure as proposed in , we use the
transformer output from BERT as contextualized embedding in our encoding layer. BERT generates
L layers of hidden states for all BPE tokens in a sentence/passage and we
employ a weighted sum of these hidden states to obtain contextualized embedding. Furthermore, we
lock BERT’s internal weights, setting their gradients to zero. In ablation studies, we will show that
this weighted sum and weight-locking mechanism can signiﬁcantly boost the model’s performance.
In detail, suppose a word w is tokenized to s BPE tokens w = {b1, b2, ..., bs}, and BERT generates
L hidden states for each BPE token, hl
t, 1 ≤l ≤L, 1 ≤t ≤s. The contextual embedding BERTw
for word w is then a per-layer weighted sum of average BERT embedding, with weights α1, ..., αL.
INTEGRATION LAYER
Word-level Inter-Attention. We conduct attention from question to context (passage) based on
GloVe word embeddings. Suppose the context word embeddings are {hC
1 , ..., hC
m} ⊂Rd, and the
question word embeddings are {hQ
1 , ..., hQ
n } ⊂Rd. Then the attended vectors from question to
context are {ˆhC
1 , ..., ˆhC
m}, deﬁned as,
Sij = ReLU(UhC
i )D ReLU(UhQ
αij ∝exp(Sij),
where D ∈Rk×k is a diagonal matrix and U ∈Rd×k, k is the attention hidden size.
To simplify notation, we deﬁne the attention function above as Attn(A, B, C), meaning we
compute the attention score αij based on two sets of vectors A and B, and use that to
linearly combine vector set C.
So the word-level attention above can be simpliﬁed as
For each context word in C, we also include a feature vector fw including 12-dim POS embedding,
8-dim NER embedding, a 3-dim exact matching vector emi indicating whether each context word
appears in the question, and a normalized term frequency, following the approach in DrQA .
Therefore, the input vector for each context word is ˜wC
i = [GloVe(wC
i ); BERTwC
input vector for each question word is ˜wQ
i = [GloVe(wQ
i ); BERTwQ
RNN. In this component, we use two separate bidirectional RNNs ) to form the contextualized understanding for C and Q.
, ..., hC,k
= BiLSTM for input vector to each layer of RNN, i.e. the dropout mask is shared over different timesteps.
Question Understanding. For each question word in Q, we employ one more layer of RNN to
generate a higher level of understanding of the question.
, ..., hQ,K+1
= BiLSTM (hQ
1 , ..., hQ
; ...; hQ,K
Self-Attention on Question. As the question has integrated previous utterances, the model needs
to directly relate previously mentioned concept with the current question.
This is helpful for
concept carry-over and coreference resolution. We thus employ self-attention on question. The
formula is the same as word-level attention, except that we are attending a question to itself:
i=1 = Attn({hQ,K+1
i=1, {hQ,K+1
i=1, {hQ,K+1
i=1). The ﬁnal question representation is thus {uQ
Multilevel Inter-Attention. After multiple layers of RNN extract different levels of understanding of each word, we conduct multilevel attention from question to context based on all layers of
generated representations.
However, the aggregated dimensions can be very large, which is computationally inefﬁcient. We
thus leverage the history-of-word idea from FusionNet : we use all previous
levels to compute attentions scores, but only linearly combine RNN outputs.
In detail, we conduct K + 1 times of multilevel attention from each RNN layer output of question
to context.
i=1 = Attn({HoWC
i=1, {HoWQ
i=1, {hQ,k
i=1), 1 ≤k ≤K + 1
where history-of-word vectors are deﬁned as
i = [GloVe(wC
i ); BERTwC
; ..., hC,k
i = [GloVe(wQ
i ); BERTwQ
; ..., hQ,k
An additional RNN layer is applied to obtain the contextualized representation vC
i for each word in
; ...; hC,k
; ...; m(K+1),C
1 , ..., vC
m = BiLSTM (yC
1 , ..., yC
Self Attention on Context. Similar to questions, we conduct self attention on context to establish
direct correlations between all pairs of words in C. Again, we use the history of word concept to
reduce the output dimension by linearly combining vC
i =[GloVe(wC
i ); BERTwC
; ...; hC,k
; ...; m(K+1),Q
i=1 = Attn({sC
The self-attention is followed by an additional layer of RNN to generate the ﬁnal representation of
i=1 = BiLSTM ([vC
1 ], ..., [vC
OUTPUT LAYER
Generating Answer Span. This component is to generate two scores for each context word corresponding to the probability that the answer starts and ends at this word, respectively.
Firstly, we condense the question representation into one vector: uQ = P
i , where βi ∝
exp (wT uQ
i ) and w is a parametrized vector.
Table 1: Domain distribution in CoQA dataset.
Child Story
Literature
Mid/High Sc.
Out of domain
Secondly, we compute the probability that the answer span should start at the i-th word:
i ∝exp ((uQ)T WSuC
where WS is a parametrized matrix. We further fuse the start-position probability into the computation of end-position probability via a GRU, tQ = GRU (uQ, P
i ). Thus, the probability that
the answer span should end at the i-th word is:
∝exp ((tQ)T WEuC
where WE is another parametrized matrix.
For CoQA dataset, the answer could be afﬁrmation “yes”, negation “no” or no answer “unknown”.
We separately generate three probabilities corresponding to these three scenarios, PY , PN, PU, respectively. For instance, to generate the probability that the answer is “yes”, PY , we use:
∝exp ((uQ)T WY uC
where WY and wY are parametrized matrix and vector, respectively.
Training. For training, we use all questions/answers for one passage as a batch. The goal is to
maximize the probability of the ground-truth answer, including span start/end position, afﬁrmation,
negation and no-answer situations. Equivalently, we minimize the negative log-likelihood function
k (log(P S
k) + log , a large-scale conversational question answering dataset. In CoQA, many questions require understanding of both the passage and previous
questions and answers, which poses challenge to conventional machine reading models. Table 1
summarizes the domain distribution in CoQA. As shown, CoQA contains passages from multiple
domains, and the average number of question answering turns is more than 15 per passage. Many
questions require contextual understanding to generate the correct answer.
Table 2: Model and human performance (% in F1 score) on the CoQA test set.
Child. Liter. Mid-High. News Wiki Reddit Science Overall
DrQA+PGNet
SDNet (single)
SDNet (ensemble)
Table 3: Ablation study of SDNet on CoQA development dataset.
–Variational dropout
–Question self attention
Using last layer of BERT output
(no weighted sum)
For each in-domain dataset, 100 passages are in the development set, and 100 passages are in the
test set. The rest in-domain dataset are in the training set. The test set also includes all of the
out-of-domain passages.
Baseline models and metrics. We compare SDNet with the following baseline models: PGNet
(Seq2Seq with copy mechanism) , DrQA , DrQA+PGNet , BiDAF++ and FlowQA . Aligned with the ofﬁcial
leaderboard, we use F1 as the evaluation metric, which is the harmonic mean of precision and recall
at word level between the predicted answer and ground truth.1
Results. Table 2 report the performance of SDNet and baseline models.2 As shown, SDNet achieves
signiﬁcantly better results than baseline models. In detail, the single SDNet model improves overall
F1 by 1.6%, compared with previous state-of-art model on CoQA, FlowQA. Ensemble SDNet model
further improves overall F1 score by 2.7%, and it’s the ﬁrst model to achieve over 80% F1 score on
in-domain datasets (80.7%).
Figure 2 shows the F1 score on development set over epochs. As seen, SDNet overpasses all but one
baseline models after the second epoch, and achieves state-of-the-art results only after 8 epochs.
Ablation Studies. We conduct ablation studies on SDNet model and display the results in Table 3.
The results show that removing BERT can reduce the F1 score on development set by 7.15%. Our
proposed weight sum of per-layer output from BERT is crucial, which can boost the performance by
1.75%, compared with using only last layer’s output. This shows that the output from each layer in
BERT is useful in downstream tasks. This technique can also be applied to other NLP tasks. Using
BERT-base instead of BERT-large pretrained model hurts the F1 score by 2.61%, which manifests
the superiority of BERT-large model. Variational dropout and self attention can each improve the
performance by 0.24% and 0.75%, respectively.
Contextual history. In SDNet, we utilize conversation history via prepending the current question
with previous N rounds of questions and ground-truth answers. We experimented the effect of N
and show the result in Table 4. Excluding dialogue history (N = 0) can reduce the F1 score by as
1According to ofﬁcial evaluation of CoQA, when there are more than one ground-truth answers, the ﬁnal
score is the average of max F1 against all-but-one ground-truth answers.
2Result was taken from ofﬁcial CoQA leaderboard on Nov. 30, 2018.
GGGGGGGGGGGGGGSDNet (78.0)
FlowQA (76.2)
BiDAF++ (69.2)
BERT base (68.4)
DrQA+PGNet (66.2)
11 13 15 17 19 21 23 25 27 29
Number of Epochs
Dev Set F1 Score
Figure 2: F1 score on CoQA dev set over training epochs. For BERT base model, as there is no
associated paper, we use the number on test set from the leaderboard.
much as 8.56%, showing the importance of contextual information in conversational QA task. The
performance of our model peaks when N = 2, which was used in the ﬁnal SDNet model.
Table 4: Performance of SDNet on development set when prepending different number of history
questions and answers to the question. The model uses BERT-Large contextual embedding and ﬁxes
BERT’s weights.
#previous QA rounds N
CONCLUSIONS
In this paper, we propose a novel contextual attention-based deep neural network, SDNet, to tackle
conversational question answering task. By leveraging inter-attention and self-attention on passage
and conversation history, the model is able to comprehend dialogue ﬂow and fuse it with the digestion of passage content. Furthermore, we incorporate the latest breakthrough in NLP, BERT, and
leverage it in an innovative way. SDNet achieves superior results over previous approaches. On
the public dataset CoQA, SDNet outperforms previous state-of-the-art model by 1.6% in overall F1
Our future work is to apply this model to open-domain multiturn QA problem with large corpus or
knowledge base, where the target passage may not be directly available. This will be an even more
realistic setting to human question answering.