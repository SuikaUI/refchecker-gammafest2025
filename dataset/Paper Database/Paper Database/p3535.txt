“© 2020 IEEE. Personal use of this material is permitted. Permission from IEEE must be obtained for all
other uses, in any current or future media, including reprinting/republishing this material for advertising or
promotional purposes, creating new collective works, for resale or redistribution to servers or lists, or reuse
of any copyrighted component of this work in other works.”
DM-GAN: Dynamic Memory Generative Adversarial Networks for
Text-to-Image Synthesis
Minfeng Zhu1,3∗
Pingbo Pan3
Yi Yang2,3†
1 State Key Lab of CAD&CG, Zhejiang University
2 Baidu Research
3 Centre for Artiﬁcial Intelligence, University of Technology Sydney
{minfeng zhu@, chenwei@cad}zju.edu.cn
{pingbo.pan@student,Yi.Yang@}uts.edu.au
In this paper, we focus on generating realistic images
from text descriptions. Current methods ﬁrst generate an
initial image with rough shape and color, and then reﬁne
the initial image to a high-resolution one. Most existing
text-to-image synthesis methods have two main problems.
(1) These methods depend heavily on the quality of the
initial images. If the initial image is not well initialized,
the following processes can hardly reﬁne the image to a
satisfactory quality.
(2) Each word contributes a different level of importance when depicting different image contents, however, unchanged text representation is used in existing image reﬁnement processes. In this paper, we propose the Dynamic Memory Generative Adversarial Network
(DM-GAN) to generate high-quality images. The proposed
method introduces a dynamic memory module to reﬁne fuzzy
image contents, when the initial images are not well generated. A memory writing gate is designed to select the important text information based on the initial image content,
which enables our method to accurately generate images
from the text description. We also utilize a response gate
to adaptively fuse the information read from the memories
and the image features. We evaluate the DM-GAN model
on the Caltech-UCSD Birds 200 dataset and the Microsoft
Common Objects in Context dataset. Experimental results
demonstrate that our DM-GAN model performs favorably
against the state-of-the-art approaches.
1. Introduction
The last few years have seen remarkable growth in the
use of Generative Adversarial Networks (GANs) for
image and video generation. Recently, GANs have been
∗This work was done when Minfeng Zhu was visiting the University of
Technology Sydney.
†Part of this work was done when Yi Yang was visiting Baidu Research
during his Professional Experience Program.
This small bird has
a yellow crown
and a white belly.
This bird has a
blue crown with
white throat and
brown secondaries.
Real images
Synthesized images
People at the park
flying kites and
The bathroom with
the white tile has
been cleaned.
Figure 1. Examples of text-to-image synthesis by our DM-GAN.
widely used to generate photo-realistic images according to
text descriptions (see Figure 1). Fully understanding the relationship between visual contents and natural languages is
an essential step towards artiﬁcial intelligence, e.g., image
search and video understanding . Multi-stage methods
 ﬁrst generate low-resolution initial images and
then reﬁne the initial images to high-resolution ones.
Although these multi-stage methods achieve remarkable
progress, there remain two problems. First, the generation
result depends heavily on the quality of initial images. The
image reﬁnement process cannot generate high-quality images, if the initial images are badly generated. Second, each
word in an input sentence has a different level of information depicting the image content. Current models utilize
the same word representations in different image reﬁnement
processes, which makes the reﬁnement process ineffective.
The image information should be taken into account to determine the importance of every word for reﬁnement.
In this paper, we introduce a novel Dynamic Memory
Generative Adversarial Network (DM-GAN) to address the
aforementioned issues. For the ﬁrst issue, we propose to
add a memory mechanism to cope with badly-generated initial images. Recent work has shown the memory network’s ability to encode knowledge sources. Inspired by
 
this work, we propose to add the key-value memory structure to the GAN framework. The fuzzy image features
of initial images are treated as queries to read features from
the memory module. The reads of the memory are used
to reﬁne the initial images. To solve the second issue, we
introduce a memory writing gate to dynamically select the
words that are relevant to the generated image. This makes
our generated image well conditioned on the text description. Therefore, the memory component is written and read
dynamically at each image reﬁnement process according to
the initial image and text information. In addition, instead
of directly concatenating image and memory, a response
gate is used to adaptively receive information from image
and memory.
We conducted experiments to evaluate the DM-GAN
model on the Caltech-UCSD Birds 200 (CUB) dataset and
the Microsoft Common Objects in Context (COCO) dataset.
The quality of generated images is measured using the Inception Score (IS), the Fr´echet Inception Distance (FID)
and the R-precision.
The experiments illustrate that our
DM-GAN model outperforms the previous text-to-image
synthesis methods, quantitatively and qualitatively.
model improves the IS from 4.36 to 4.75 and decreases
the FID from 23.98 to 16.09 on the CUB dataset. The Rprecision is improved by 4.49% and 3.09% on the above
two datasets.
The qualitative evaluation proves that our
model generates more photo-realistic images.
This paper makes the following key contributions:
• We propose a novel GAN model combined with a
dynamic memory component to generate high-quality
images even if the initial image is not well generated.
• We introduce a memory writing gate that is capable of
selecting relevant word according to the initial image.
• A response gate is proposed to adaptively fuse information from image and memory.
• The experimental results demonstrate that the DM-
GAN outperforms the state-of-the-art approaches.
2. Related Work
2.1. Generative Adversarial Networks.
With the recent successes of Variational Autoencoders
(VAEs) and GANs , a large number of methods have
been proposed to handle generation and domain adaptation task . Recently, generating images
based on the text descriptions gains interest in the research
community nowadays.
Single-stage. The text-to-image synthesis problem is decomposed by Reed et al. into two sub-problems: ﬁrst,
the joint embedding is learned to capture the relations between natural language and real-world images; second, a
deep convolutional generative adversarial network is
trained to synthesize a compelling image. Dong et al. 
adopted the pair-wise ranking loss to project both images and natural languages into a joint embedding space.
Since previous generative models failed to add the location
information, Reed et al. proposed GAWWN to encode
localization constraints. To diversify the generated images,
the discriminator of TAC-GAN not only distinguishes
real images from synthetic images, but also classiﬁes synthetic images into true classes. Similar to TAC-GAN, PPGN
 includes a conditional network to synthesize images
conditioned on a caption.
Multi-stage.
StackGAN and StackGAN++ 
generate photo-realistic high-resolution images with two
stages. Yuan et al. employed symmetrical distillation
networks to minimize the multi-level difference between
real and synthetic images. DA-GAN translates each
word into a sub-region of an image. Our method considers the interaction between each word and the whole generated image. Conditioning on the global sentence vector
may result in low-quality images, AttnGAN reﬁnes the
images to high-resolution ones by leveraging the attention
mechanism. Each word in an input sentence has a different
level of information depicting the image content. However,
AttnGAN takes all the words equally, it employs an attention module to use the same word representation. Our proposed memory module is able to uncover such difference
for image generation, as it dynamically selects the important word information based on the initial image content.
2.2. Memory Networks.
Recently, memory network provides a new architecture to reason answers from memories more effectively
using explicit storage and a notion of attention. Memory
network ﬁrst writes information into an external memory
and then reads contents from memory slots according to
a relevance probability. Weston et al. introduced the
memory network to produce the output by searching supporting memories one by one.
End-to-end memory network is a continues form of memory network, where
each memory slot is weighted according to the inner product between the memory and the query. To understand the
unstructured documents, the Key-Value Memory Network
(KV-MemNN) performs reasoning by utilizing different encodings for key memory and value memory. The key
memory is used to infer the weight of the corresponding
value memory when predicting the ﬁnal answer. Inspired
by the recent success of the memory network, we introduce
DM-GAN, a novel network architecture to generate highquality images via nontrivial transforms between key and
value memories.
Initial Image Generation
Dynamic Memory based Image Refinement
sent feat s
text encoder
img feat R0
3 x 3 Conv
text description
This small bird has
a yellow crown
and a white belly.
img feat Rk-1
dynamic memory
img feat Rk
3 x 3 Conv
initial image x0
refined image xk
FC: fully connected layer
Response Gate
Memory Writing Gate
CA: conditioning augmentation
Memory Writing
Value Reading
Key Addressing
Figure 2. The DM-GAN architecture for text-to-image synthesis. Our DM-GAN model ﬁrst generates an initial image, and then reﬁnes the
initial image to generate a high-quality one.
As shown in Figure 2, the architecture of our DM-GAN
model is composed of two stages: initial image generation
and dynamic memory based image reﬁnement.
At the initial image generation stage, ﬁrstly, the input
text description is transformed into some internal representation (a sentence feature s and several word features W)
by a text encoder. Then, a deep conventional generator predicts an initial image x0 with a rough shape and few details
according to the sentence feature and a random noise vector
z: x0, R0 = G0(z, s), where R0 is the image feature. The
noise vector is sampled from a normal distribution.
At the dynamic memory based image reﬁnement stage,
more ﬁne-grained visual contents are added to the fuzzy
initial images to generate a photo-realistic image xi: xi =
Gi(Ri−1, W), where Ri−1 is the image feature from the
last stage. The reﬁnement stage can be repeated multiple
times to retrieve more pertinent information and generate a
high-resolution image with more ﬁne-grained details.
The dynamic memory based image reﬁnement stage consists of four components: Memory Writing, Key Addressing,
Value Reading, and Response (Section 3.1). The Memory
Writing operation stores the text information into a keyvalue structured memory for further retrieval. Then, Key
Addressing and Value Reading operations are employed to
read features from the memory module to reﬁne the visual
features of the low-quality images. At last, the Response operation is adopted to control the fusion of the image features
and the reads of the memory. We propose a memory writing gate to highlight important word information according
to the image content in memory writing step (Section 3.2).
We also utilize a response gate to adaptively fuse the information read from the memory and the image features (Section 3.3).
3.1. Dynamic Memory
We start with the given input word representations W,
image x and image features Ri:
W = {w1, w2, ..., wT }, wi ∈RNw,
Ri = {r1, r2, ..., rN}, ri ∈RNr,
where T is the number of words, Nw is the dimension of
word features, N is the number of image pixels and image
pixel feature is a Nr dimensional vector. We are intended to
learn a model to reﬁne the image using a more effective way
to fuse text and image information via nontrivial transforms
between key and value memory. The reﬁnement stage includes the following four steps.
Memory Writing: Encoding prior knowledge is an important part of the dynamic memory, which enables recovering high-quality images from text. A naive way to write
the memory is considering only partial text information.
mi = M(wi), mi ∈RNm
where M(·) denotes the 1×1 convolution operation which
embeds word features into the memory feature space with
Nm dimensions.
Key Addressing: In this step, we retrieve relevant memories using key memory. We compute a weight of each
memory slot as a similarity probability between a memory
slot mi and an image feature rj:
exp(φK(mi)T rj)
exp(φK(ml)T rj)
where αi,j is the similarity probability between the i-th
memory and the j-th image feature and φK() is the key
memory access process which maps memory features into
dimension Nr. φK() is implemented as a 1×1 convolution.
Value Reading: The output memory representation is
deﬁned as the weighted summation of value memories according to the similarity probability:
αi,jφV (mi),
where φV () is the value memory access process which maps
memory features into dimension Nr. φV () is implemented
as a 1×1 convolution.
Response: After receiving the output memory, we combine the current image and the output representation to provide a new image feature. A naive approach will be simply
concatenating the image features and the output representation. The new image features are obtained by:
= [oi, ri],
where [·, ·] denotes concatenation operation. Then, we are
able to utilize an upsampling block and several residual
blocks to upscale the new image features into a highresolution image. The upsampling block consists of a nearest neighbor upsampling layer and a 3×3 convolution. Finally, the reﬁned image x is obtained from the new image
features using a 3×3 convolution.
3.2. Gated Memory Writing
Instead of considering only partial text information using
Eq.3, the memory writing gate allows the DM-GAN model
to select the relevant word to reﬁne the initial images. The
memory writing gate gw
i combines image features Ri from
the last stage with word features W to calculate the importance of a word:
i (R, wi) = σ(A ∗wi + B ∗1
where σ is the sigmoid function, A is a 1 × Nw matrix, and
B is a 1 × Nr matrix. Then, the memory slot mi ∈RNm is
written by combining the image and word features.
mi = Mw(wi) ∗gw
ri) ∗(1 −gw
where Mw(·) and Mr(·) denote the 1x1 convolution operation. Mw(·) and Mr(·) embed image and word features into
the same feature space with Nm dimensions.
3.3. Gated Response
We utilize the adaptive gating mechanism to dynamically
control the information ﬂow and update image features:
i = σ(W[oi, ri] + b),
i + ri ∗(1 −gr
i is the response gate for information fusion, σ is
the sigmoid function, W and b are the parameter matrix and
bias term.
3.4. Objective Function
The objective function of the generator network is de-
LGi + λ1LCA + λ2LDAMSM,
in which λ1 and λ2 are the corresponding weights of conditioning augmentation loss and DAMSM loss. G0 denotes
the generator of the initial generation stage. Gi denotes the
generator of the i-th iteration of the image reﬁnement stage.
Adversarial Loss: The adversarial loss for Gi is deﬁned
as follows:
2[Ex∼pGilogDi(x) + Ex∼pGilogDi(x, s)], (11)
where the ﬁrst term is the unconditional loss which makes
the generated image real as much as possible and the second
term is the conditional loss which makes the image match
the input sentence. Alternatively, the adversarial loss for
each discriminator Di is deﬁned as:
2[Ex∼pdatalogDi(x)+Ex∼pGilog(1−Di(x))
unconditional loss
+Ex∼pdatalogDi(x, s)+Ex∼pGilog(1−Di(x, s))]
conditional loss
where the unconditional loss is designed to distinguish the
generated image from real images and the conditional loss
determines whether the image and the input sentence match.
Conditioning Augmentation Loss: The Conditioning
Augmentation (CA) technique is proposed to augment
training data and avoid overﬁtting by resampling the input
sentence vector from an independent Gaussian distribution.
Thus, the CA loss is deﬁned as the Kullback-Leibler divergence between the standard Gaussian distribution and the
Gaussian distribution of training data.
LCA = DKL(N(µ(s), Σ(s))||N(0, I)),
where µ(s) and Σ(s) are mean and diagonal covariance matrix of the sentence feature. µ(s) and Σ(s) are computed by
fully connected layers.
DAMSM Loss: We utilize the DAMSM loss to
measure the matching degree between images and text descriptions. The DAMSM loss makes generated images better conditioned on text descriptions.
3.5. Implementation Details
For text embedding, we employ a pre-trained bidirectional LSTM text encoder by Xu et al. and ﬁx their parameters during training. Each word feature corresponds to
the hidden states of two directions. The sentence feature is
generated by concatenating the last hidden states of two directions. The initial image generation stage ﬁrst synthesizes
images with 64x64 resolution. Then, the dynamic memory based image reﬁnement stage reﬁnes images to 128x128
and 256x256 resolution. We only repeat the reﬁnement process with dynamic memory module two times due to GPU
memory limitation. Introducing dynamic memory to lowresolution images (i.e. 16x16, 32x32) can not further improve the performance. Because low-resolution images are
not well generated and their features are more like random
vectors. For all discriminator networks, we apply spectral
normalization after every convolution to avoid unusual
gradients to improve text-to-image synthesis performance.
By default, we set Nw = 256, Nr = 64 and Nm = 128
to be the dimension of text, image and memory feature vectors respectively. We set the hyperparameter λ1 = 1 and
λ2 = 5 for the CUB dataset and λ1 = 1 and λ2 = 50 for
the COCO dataset. All networks are trained using ADAM
optimizer with batch size 10, β1 = 0.5 and β2 = 0.999.
The learning rate is set to be 0.0002. We train the DM-GAN
model with 600 epochs on the CUB dataset and 120 epochs
on the COCO dataset.
4. Experiments
In this section, we evaluate the DM-GAN model quantitatively and qualitatively. We implemented the DM-GAN
model using the open-source Python library PyTorch .
Datasets. To demonstrate the capability of our proposed
method for text-to-image synthesis, we conducted experiments on the CUB and the COCO datasets. The
CUB dataset contains 200 bird categories with 11,788 images, where 150 categories with 8,855 images are employed
for training while the remaining 50 categories with 2,933
images for testing. There are ten captions for each image
in CUB dataset. The COCO dataset includes a training set
with 80k images and a test set with 40k images. Each image
in the COCO dataset has ﬁve text descriptions.
Evaluation Metric. We quantify the performance of the
DM-GAN in terms of Inception Score (IS), Fr´echet Inception Distance (FID), and R-precision. Each model generated 30,000 images conditioning on the text descriptions
from the unseen test set for evaluation.
The IS uses a pre-trained Inception v3 network
 to compute the KL-divergence between the conditional
class distribution and the marginal class distribution.
large IS means that the generated model outputs a high diversity of images for all classes and each image clearly belongs to a speciﬁc class.
The FID computes the Fr´echet distance between synthetic and real-world images based on the extracted features
from a pre-trained Inception v3 network. A lower FID implies a closer distance between generated image distribution
and real-world image distribution.
Following Xu et al. , we use the R-precision to evaluate whether a generated image is well conditioned on the
given text description. The R-precision is measured by retrieving relevant text given an image query. We compute
the cosine distance between a global image vector and 100
candidate sentence vectors. The candidate text descriptions
include R ground truth and 100-R randomly selected mismatching descriptions. For each query, if r results in the
top R ranked retrieval descriptions are relevant, then the Rprecision is r/R. In practice, we compute the R-precision
with R=1. We divide the generated images into ten folds for
retrieval and then take the mean and standard deviation of
the resulting scores.
4.1. Text-to-Image Quality
We compare our DM-GAN model with the state-of-theart models on the CUB and COCO test datasets. The performance results are reported in Table 1 and 2.
As shown in Table 1, our DM-GAN model achieves 4.75
IS on the CUB dataset, which outperforms other methods by a large margin.
Compared with AttnGAN, DM-
GAN improves the IS from 4.36 to 4.75 on the CUB
dataset (8.94% improvement) and from 25.89 to 30.49 on
the COCO dataset (17.77% improvement). The experimental results indicate that our DM-GAN model generates images with higher quality than other approaches.
Table 2 compares the performance between AttnGAN
and DM-GAN with respect to the FID on the CUB and
COCO datasets. We measure the FID of AttnGAN from
the ofﬁcially pre-trained model. Our DM-GAN decreases
the FID from 23.98 to 16.09 on the CUB dataset and from
35.49 to 32.64 on the COCO dataset, which demonstrates
that DM-GAN learns a better data distribution.
As shown in Table 2, the DM-GAN improves the Rprecision by 4.49% on the CUB dataset and 3.09% on the
COCO dataset. Higher R-precision indicates that the generated images by the DM-GAN are better conditioned on
the given text description, which further demonstrates the
effectiveness of the employed dynamic memory.
In summary, the experimental results indicate that our
DM-GAN is superior to the state-of-the-art models.
GAN-INT-CLS 
GAWWN 
StackGAN 
AttnGAN 
25.89±0.47
30.49±0.57
Table 1. The inception scores (higher is better) of GAN-INT-CLS , GAWWN , StackGAN , PPGN , AttnGAN and
our DM-GAN on the CUB and COCO datasets. The best results are in bold.
R-precision↑
67.82±4.43
72.31±0.91
R-precision↑
85.47±3.69
88.56±0.28
Table 2. Performance of FID and R-precision for AttnGAN 
and our DM-GAN on the CUB and COCO datasets. The FID of
AttnGAN is calculated from ofﬁcially released weights. Lower is
better for FID and higher is better for R-precision.
4.2. Visual Quality
For qualitative evaluation, Figure 3 shows text-to-image
synthesis examples generated by our DM-GAN and the
state-of-the-art models. In general, our DM-GAN approach
generates images with more vivid details as well as more
clear backgrounds in most cases, comparing to the AttnGAN , GAN-INT-CLS and StackGAN , because it employs a dynamic memory model using varied
weighted word information to improve image quality.
Our DM-GAN method has the capacity to better understand the logic of the text description and present a more
clear structure of the images. Observing the samples generated on the CUB dataset in Figure 3(a), with a single character, although DM-GAN and AttnGAN both perform well
in accurately capture and present the character’s feature,
our DM-GAN model better highlights the main subject of
the image, the bird, differentiating from its background. It
demonstrates that, with the dynamic memory module, our
DM-GAN model is able to bridge the gap between visual
contents and natural languages. In terms of multi-subjectsimage generation, for example, the COCO dataset in Figure 3(b), it is more challenging to generate photo-realistic
images when the text description is more complicated and
contains more than one subject. DM-GAN precisely captures the major scene based on the most important subject
and arrange the rest descriptive contents logically, which
improves the global structure of the image. For instance,
DM-GAN is the only successful method clearly identiﬁes
the bathroom with required components in the column 3 in
Figure 3(b). The visual results show that our DM-GAN is
more effective to capture important subjects using a memory writing gate to dynamically select important words.
Figure 4 indicates that our DM-GAN model is able to
reﬁne badly initialized images and generate more photo-
Architecture
R-Precision↑
68.60±0.73
70.66±0.69
71.40±0.64
72.31±0.91
Table 3. The performance of different architectures of our DM-
GAN on the CUB datasets. M, WG and RG denote dynamic memory, memory writing gate and response gate respectively.
realistic high-resolution images. So the image quality is
obviously well-improved, with clear backgrounds and convincing details. In most cases, the initial stage generates a
blurry image with rough shape and color, so that the background is ﬁne-tuned to be more realistic with ﬁne-grained
textures, while the reﬁned image will be better conditioned
on the input text and provide more photo-realistic highresolution images. In the fourth column of Figure 4, no
white streaks can be found on the bird’s body from the initial image with 64×64 resolution. The reﬁnement process
helps to encode ”white streaks” information from text description and add back missing features based on the text
description and image content. In order word, our DM-
GAN model is able to reﬁne the image to match the input
text description.
To evaluate the diversity of our DM-GAN model, we
generate several images using the same text description, and
multiple noise vectors. Figure 5 shows text descriptions and
synthetic images with different shapes and backgrounds.
Images are similar but not identical to each other, which
means our DM-GAN generates images with high diversity.
4.3. Ablation Study
In order to verify the effectiveness of our proposed components, we evaluate the DM-GAN architecture and its variants on the CUB dataset. The control components between
architectures include the key-value memory (M), the writing gate (WG) and the response gate (RG). We deﬁne a
baseline model which removes M, WG and RG from DM-
GAN. The memory is written according to partial text information (Eq.3). The response operation simply concatenates
the image features and the memory output (Eq.6). The performance of the DM-GAN architecture and its variants is reported in Table 3. Our baseline model produces slightly better performance than AttnGAN. By integrating these com-
GAN-INT-CLS
This bird has wings
that are grey and
has a white belly.
A silhouette of a
man surfing over
This bird has wings
that are black and
has a white belly.
Room with wood
floors and a stone
fire place.
This is a grey bird
with a brown wing
and a small orange
The bathroom with
the white tile has
been cleaned.
This bird has a short
brown bill, a white
eyering, and a
medium brown
A fruit stand that
has bananas,
papaya, and plantains.
This particular bird
has a belly that is
yellow and brown.
A train accident
where some cars
when into a river.
This bird is a lime
green with greyish
wings and long
A bunch of various
vegetables on a
This yellow bird
has a thin beak and
jet black eyes and
thin feet.
A plane parked at
an airport near a
This bird has a
white throat and a
dark yellow bill and
grey wings.
GAN-INT-CLS
A stop sign that is
sitting in the grass.
(a) The CUB dataset
(b) The COCO dataset
Figure 3. Example results for text-to-image synthesis by DM-GAN and AttnGAN. (a) Generated bird images by conditioning on text from
CUB test set. (b) Generated images by conditioning on text from COCO test set.
This bird has a blue
crown with white
throat and brown secondaries.
This small bird has a
yellow crown and a
white belly.
A primarily black bird
with streaks of white
and yellow and a
medium sized beak.
This bird has a red
head, throat and chest,
with a white belly.
People at the park
flying kites and walking.
The bathroom with the
white tile has been
Multiple people are
standing on the beach
at the edge of the
A clock that is on the
side of a tower.
Figure 4. The results of different stages of our DM-GAN model, including the initial images, the images after one reﬁnement process and
the images after two reﬁnement processes.
This bird has wings that are grey and has a white belly.
A group of people standing on a beach next to the ocean.
Figure 5. Generated images using the same text description.
ponents, our model can achieve further improvement which
demonstrates the effectiveness of every component.
Further, we visualize the most relevant words selected
by the AttnGAN and our DM-GAN. We notice that
the attention mechanism cannot accurately select relevant
words when the initial images are not well generated. We
propose the dynamic memory module to select the most relevant words based on the global image feature. As Fig.
6 (a) shows, although a bird with incorrect red breast is
generated, dynamic memory module selects the word, i.e.,
”white” to correct the image. The DM-GAN selects and
combines word information with image features in two
steps (see Fig. 6 (b)). The gated memory writing step ﬁrst
roughly selects words relevant to the image and writes them
into the memory. Then the key addressing step further reads
more relevant words from the memory.
5. Conclusions
In this paper, we have proposed a new architecture called
DM-GAN for text-to-image synthesis task.
a dynamic memory component to reﬁne the initial generated image, a memory writing gate to highlight important
(a) This bird is red in color with
a black and white breast and a
black eyering.
Dynamic memory
(b) This bird is blue with white
and has a very short beak.
Memory writing
Key addressing
Figure 6. (a) Comparison between the top 5 relevant words selected by attention module and dynamic memory module. (b) The
top 5 relevant words selected by memory writing step and key addressing step.
text information and a repose gate to fuse image and memory representation. Experiment results on two real-world
datasets show that DM-GAN outperforms the state-of-theart by both qualitative and quantitative measures. Our DA-
GAN reﬁnes initial images with wrong color and rough
shapes. However, the ﬁnal results still rely heavily on the
layout of multi-subjects in initial images. In the future, we
will try to design a more powerful model to generate initial
images with better organizations.
Acknowledgment
This research has been supported by National Key Research and Development Program (2018YFB0904503) and
National Natural Science Foundation of China (U1866602,
61772456).