TRANSACTIONS ON ROBOTICS
Data-Driven Grasp Synthesis - A Survey
Jeannette Bohg, Member, IEEE, Antonio Morales, Member, IEEE, Tamim Asfour, Member, IEEE,
Danica Kragic Member, IEEE
©2014 IEEE. Personal use of this material is permitted. Permission from IEEE must be obtained for all other uses, in any current or future media, including
reprinting/republishing this material for advertising or promotional purposes, creating new collective works, for resale or redistribution to servers or lists, or
reuse of any copyrighted component of this work in other works. DOI: <10.1109/TRO.2013.2289018>
Abstract—We review the work on data-driven grasp synthesis
and the methodologies for sampling and ranking candidate
grasps. We divide the approaches into three groups based on
whether they synthesize grasps for known, familiar or unknown
objects. This structure allows us to identify common object representations and perceptual processes that facilitate the employed
data-driven grasp synthesis technique. In the case of known
objects, we concentrate on the approaches that are based on
object recognition and pose estimation. In the case of familiar
objects, the techniques use some form of a similarity matching
to a set of previously encountered objects. Finally, for the
approaches dealing with unknown objects, the core part is the
extraction of speciﬁc features that are indicative of good grasps.
Our survey provides an overview of the different methodologies
and discusses open problems in the area of robot grasping. We
also draw a parallel to the classical approaches that rely on
analytic formulations.
Index Terms—Object grasping and manipulation, grasp synthesis, grasp planning, visual perception, object recognition and
classiﬁcation, visual representations
I. INTRODUCTION
Given an object, grasp synthesis refers to the problem of
ﬁnding a grasp conﬁguration that satisﬁes a set of criteria
relevant for the grasping task. Finding a suitable grasp among
the inﬁnite set of candidates is a challenging problem and has
been addressed frequently in the robotics community, resulting
in an abundance of approaches.
In the recent review of Sahbani et al. , the authors divide
the methodologies into analytic and empirical. Following Shimoga , analytic refers to methods that construct forceclosure grasps with a multi-ﬁngered robotic hand that are
dexterous, in equilibrium, stable and exhibit a certain dynamic
behaviour. Grasp synthesis is then usually formulated as a
constrained optimization problem over criteria that measure
one or several of these four properties. In this case, a grasp is
typically deﬁned by the grasp map that transforms the forces
exerted at a set of contact points to object wrenches .
The criteria are based on geometric, kinematic or dynamic
formulations. Analytic formulations towards grasp synthesis
have also been reviewed by Bicchi and Kumar .
Empirical or data-driven approaches rely on sampling grasp
candidates for an object and ranking them according to a
J. Bohg is with the Autonomous Motion Department at the MPI for
Intelligent Systems, Tübingen, Germany, e-mail: .
A. Morales is with the Robotic Intelligence Lab. at Universitat Jaume I,
Castelló, Spain, e-mail: .
T. Asfour is with the KIT, Karlsruhe, Germany, e-mail: .
D. Kragic is with the Centre for Autonomous Systems, Computational
Vision and Active Perception Lab, Royal Institute fo Technology KTH,
Stockholm, Sweden, e-mail: .
This work has been supported by FLEXBOT (FP7-ERC-279933).
speciﬁc metric. This process is usually based on some existing
grasp experience that can be a heuristic or is generated in
simulation or on a real robot. Kamon et al. refer to this
as the comparative and Shimoga as the knowledge-based
approach. Here, a grasp is commonly parameterized by :
• the grasping point on the object with which the tool center
point (TCP) should be aligned,
• the approach vector which describes the 3D angle that
the robot hand approaches the grasping point with,
• the wrist orientation of the robotic hand and
• an initial ﬁnger conﬁguration
Data-driven approaches differ in how the set of grasp candidates is sampled, how the grasp quality is estimated and how
good grasps are represented for future use. Some methods
measure grasp quality based on analytic formulations, but
more commonly they encode e.g. human demonstrations,
perceptual information or semantics.
A. Brief Overview of Analytic Approaches
Analytic approaches provide guarantees regarding the criteria that measure the previously mentioned four grasp properties. However, these are usually based on assumptions such as
simpliﬁed contact models, Coulomb friction and rigid body
modeling . Although these assumptions render grasp
analysis practical, inconsistencies and ambiguities especially
regarding the analysis of grasp dynamics are usually attributed
to their approximate nature.
In this context, Bicchi and Kumar identiﬁed the problem of ﬁnding an accurate and tractable model of contact
compliance as particularly relevant. This is needed to analyze
statically-indeterminate grasps in which not all internal forces
can be controlled. This case arises e.g. for under-actuated
hands or grasp synergies where the number of the controlled
degrees of freedom is fewer than the number of contact forces.
Prattichizzo et al. model such a system by introducing a set
of springs at the contacts and joints and show how its dexterity
can be analyzed. Rosales et al. adopt the same model of
compliance to synthesize feasible and prehensile grasps. In
this case, only statically-determinate grasps are considered.
The problem of ﬁnding a suitable hand conﬁguration is cast
as a constrained optimization problem in which compliance is
introduced to simultaneously address the constraints of contact
reachability, object restraint and force controllability. As is
the case with many other analytic approaches towards grasp
synthesis, the proposed model is only studied in simulation
where accurate models of the hand kinematics, the object and
their relative alignment are available.
In practice, systematic and random errors are inherent to
a robotic system and are due to noisy sensors and inaccurate models of the robot’s kinematics and dynamics, sensors
 
TRANSACTIONS ON ROBOTICS
or of the object. The relative position of object and hand
can therefore only be known approximately which makes
an accurate placement of the ﬁngertips difﬁcult. In 2000,
Bicchi and Kumar identiﬁed a lack of approaches towards
synthesizing grasps that are robust to positioning errors. One
line of research in this direction explores the concept of
independent contact regions (ICRs) as deﬁned by Nguyen
 : a set of regions on the object in which each ﬁnger can be
independently placed anywhere without the grasp loosing the
force-closure property. Several examples for computing them
are presented by Roa and Suárez or Krug et al. .
Another line of research towards robustness against inaccurate
end-effector positioning makes use of the caging formulation.
Rodriguez et al. found that there are caging conﬁgurations
of a three-ﬁngered manipulator around a planar object that are
speciﬁcally suited as a waypoint to grasping it. Once the manipulator is in such conﬁguration, either opening or closing the
ﬁngers is guaranteed to result in an equilibrium grasp without
the need for accurate positioning of the ﬁngers. Seo et al. 
exploited the fact that two-ﬁngered immobilizing grasps of an
object are always preceded by a caging conﬁguration. Full
body grasps of planar objects are synthesized by ﬁrst ﬁnding
a two-contact caging conﬁguration and then using additional
contacts to restrain the object. Results have been presented in
simulation and demonstrated on a real robot.
Another assumption commonly made in analytic approaches
is that precise geometric and physical models of an object are
available to the robot which is not always the case. In addition,
we may not know the surface properties or friction coefﬁcients,
weight, center of mass and weight distribution. Some of these
can be retrieved through interaction: Zhang and Trinkle 
propose to use a particle ﬁlter to simultaneously estimate the
physical parameters of an object and track it while it is being
pushed. The dynamic model of the object is formulated as a
mixed nonlinear complementarity problem. The authors show
that even when the object is occluded and the state estimate
cannot be updated through visual observation, the motion of
the object is accurately predicted over time. Although methods
like this relax some of the assumptions, they are still limited
to simulation or consider 2D objects .
B. Development of Data-Driven Methods
Up to the year 2000, the ﬁeld of robotic grasping1 was
clearly dominated by analytic approaches . Apart
from e.g. Kamon et al. , data-driven grasp synthesis started
to become popular with the availability of GraspIt! in
2004. Many highly cited approaches have been developed,
analyzed and evaluated in this or other simulators . These approaches differ in how grasp candidates
are sampled from the inﬁnite space of possibilities. For grasp
ranking, they rely on classical metrics that are based on analytic formulations such as the widely used ϵ-metric proposed
in Ferrari and Canny . It constructs the grasp wrench space
1Citation counts for the most inﬂuential articles in the ﬁeld. Extracted from
scholar.google.com in October 2013. : 733. : 490. : 477. : 405.
 : 77. : 384. : 353. : 100. : 110. : 95. : 96. :
108. : 38. : 156. : 39. : 277. : 75. : 40. : 21. :
43. : 77. : 26. : 191. : 58. : 75. : 39.
(GWS) by computing the convex hull over the wrenches at the
contact points between the hand and the object. ϵ quantiﬁes the
quality of a force closure grasp by the radius of the maximum
sphere still fully contained in the GWS.
Developing and evaluating approaches in simulation is
attractive because the environment and its attributes can be
completely controlled. A large number of experiments can
be efﬁciently performed without having access to expensive
robotics hardware that would also add a lot of complexity to
the evaluation process. However, it is not clear if the simulated
environment resembles the real world well enough to transfer
methods easily. Only recently, several articles 
have analyzed this question and came to the conclusion that
the classic metrics are not good predictors for grasp success
in the real world. They do not seem to cope well with the
challenges arising in unstructured environments. Diankov 
claims that in practice grasps synthesized using these metrics
tend to be relatively fragile. Balasubramanian et al. 
systematically tested a number of grasps in the real world that
were stable according to classical grasp metrics. Compared
to grasps planned by humans and transferred to a robot by
kinesthetic teaching on the same objects, they under-performed
signiﬁcantly. A similar study has been conducted by Weisz and
Allen . It focuses on the ability of the ϵ-metric to predict
grasp stability under object pose error. The authors found that
it performs poorly especially when grasping large objects.
As pointed out by Bicchi and Kumar and Prattichizzo
and Trinkle , grasp closure is often wrongly equated with
stability. Closure states the existence of equilibrium which is
a necessary but not sufﬁcient condition. Stability can only be
deﬁned when considering the grasp as a dynamical system
and in the context of its behavior when perturbed from
an equilibrium. Seen in this light, the results of the above
mentioned studies are not surprising. However, they suggest
that there is a large gap between reality and the models for
grasping that are currently available and tractable.
For this reason, several researchers proposed
to let the robot learn how to grasp by experience that is
gathered during grasp execution. Although, collecting examples is extremely time-consuming, the problem of transferring
the learned model to the real robot is non-existant. A crucial
question is how the object to be grasped is represented and
how the experience is generalized to novel objects.
Saxena et al. pushed machine learning approaches for
data-driven grasp synthesis even further. A simple logistic
regressor was trained on large amounts of synthetic labeled
training data to predict good grasping points in a monocular
image. The authors demonstrated their method in a household
scenario in which a robot emptied a dishwasher. None of
the classical principles based on analytic formulations were
used. This paper spawned a lot of research 
in which essentially one question is addressed: What are the
object features that are sufﬁciently discriminative to infer a
suitable grasp conﬁguration?
From 2009, there were further developments in the area of
3D sensing. Projected Texture Stereo was proposed by Konolige . This technology is built into the sensor head of
the PR2 , a robot that is available to comparatively many
TRANSACTIONS ON ROBOTICS
Grasp Hypotheses
Prior Object
Analytical
Data-Driven
Multi-Modal
Object-Grasp
Representation
Figure 1: We identiﬁed a number of aspects that inﬂuence how the ﬁnal set of grasp hypotheses is generated for an object. The most important one is the assumed prior object
knowledge as discussed in Section I-D. Numerous different object-grasp representations are proposed in the literature that are relying on features of different modalities such as
2D or 3D vision or tactile sensors. Either local object parts or the object as a whole are linked to speciﬁc grasp conﬁgurations. Grasp synthesis can either be analytic or data-driven.
The latter is further detailed in Fig. 2. Very few approaches explicitly address the task or hand kinematics of the robot.
robotics research labs and running on the OpenSource middleware ROS . In 2010, Microsoft released the Kinect , a
highly accurate depth sensing device based on the technology
developed by PrimeSense . Due to its low price and
simple usage, it became a ubiquitous device within the robotics
community. Although the importance of 3D data for grasping
has been previously recognized, many new approaches were
proposed that operate on real world 3D data. They are either
heuristics that map structures in this data to grasp conﬁgurations directly or they try to detect and recognize
objects and estimate their pose .
C. Analytic vs. Data-Driven Approaches
Contrary to analytic approaches, methods following the
data-driven paradigm place more weight on the object representation and the perceptual processing, e.g., feature extraction, similarity metrics, object recognition or classiﬁcation and
pose estimation. The resulting data is then used to retrieve
grasps from some knowledge base or sample and rank them by
comparison to existing grasp experience. The parameterization
of the grasp is less speciﬁc (e.g. an approach vector instead
of ﬁngertip positions) and therefore accommodates for uncertainties in perception and execution. This provides a natural
precursor to reactive grasping , which,
given a grasp hypothesis, considers the problem of robustly
acquiring it under uncertainty. Data-driven methods cannot
provide guarantees regarding the aforementioned criteria of
dexterity, equilibrium, stability and dynamic behaviour .
They can only be veriﬁed empirically. However, they form
the basis for studying grasp dynamics and further developing
analytic models that better resemble reality.
D. Classiﬁcation of Data-Driven Approaches
Sahbani et al. divide the data-driven methods based on
whether they employ object features or observation of humans
during grasping. We believe that this falls short of capturing
the diversity of these approaches especially in terms of the
ability to transfer grasp experience between similar objects
and the role of perception in this process. In this survey, we
propose to group data-driven grasp synthesis approaches based
on what they assume to know a priori about the query object:
• Known Objects: These approaches assume that the query
object has been encountered before and that grasps have
already been generated for it. Commonly, the robot has
access to a database containing geometric object models
that are associated with a number of good grasp. This
database is usually built ofﬂine and in the following will
be referred to as an experience database. Once the object
has been recognized, the goal is to estimate its pose and
retrieve a suitable grasp.
• Familiar Objects: Instead of exact identity, the approaches in this group assume that the query object is
similar to previously encountered ones. New objects can
be familiar on different levels. Low-level similarity can
TRANSACTIONS ON ROBOTICS
be deﬁned in terms of shape, color or texture. High-level
similarity can be deﬁned based on object category. These
approaches assume that new objects similar to old ones
can be grasped in a similar way. The challenge is to
ﬁnd an object representation and a similarity metric that
allows to transfer grasp experience.
• Unknown Objects: Approaches in this group do not
assume to have access to object models or any sort of
grasp experience. They focus on identifying structure or
features in sensory data for generating and ranking grasp
candidates. These are usually based on local or global
features of the object as perceived by the sensor.
We ﬁnd the above classiﬁcation suitable for surveying
the data-driven approaches since the assumed prior object
knowledge determines the necessary perceptual processing and
associated object representations for generating and ranking
grasp candidates. For known objects, the problems of recognition and pose estimation have to be addressed. The object is
usually represented by a complete geometric 3D object model.
For familiar objects, an object representation has to be found
that is suitable for comparing them to already encountered
object in terms of graspability. For unknown objects, heuristics
have to be developed for directly linking structure in the
sensory data to candidate grasps.
Only a minority of the approaches discussed in this survey
cannot be clearly classiﬁed to belong to one of these three
groups. Most of the included papers use sensor data from the
scene to perform data-driven grasp synthesis and are part of a
real robotic system that can execute grasps.
Finally, this classiﬁcation is well in line with the research
in the ﬁeld of neuroscience, speciﬁcally, with the theory of the
dorsal and ventral stream in human visual processing . The
dorsal pathway processes immediate action-relevant features
while the ventral pathway extracts context- and scene-relevant
information and is related to object recognition. The visual
processing in the ventral and dorsal pathways can be related
to the grouping of grasp synthesis for familiar/known and
unknown objects, respectively. The details of such links are
out of the scope of this paper. Extensive and detailed reviews
on the neuroscience of grasping are offered in .
E. Aspects Inﬂuencing the Generation of Grasp Hypotheses
The number of candidate grasps that can be applied to an
object is inﬁnite. To sample some of these candidates and
deﬁne a quality metric for selecting a good subset of grasp
hypotheses is the core subject of the approaches reviewed
in this survey. In addition to the prior object knowledge,
we identiﬁed a number of other factors that characterize
these metrics. Thereby, they inﬂuence which grasp hypotheses
are selected by a method. Fig. 1 shows a mind map that
structures these aspects. An important one is how the quality
of a candidate grasp depends on the object, i.e., the objectgrasp representation. Some approaches extract local object
attributes (e.g. curvature, contact area with the hand) around a
candidate grasp. Other approaches take global characteristics
(e.g. center of mass, bounding box) and their relation to a
grasp conﬁguration into account. Dependent on the sensor
Data-Driven
Grasp Synthesis
Heuristics
Demonstration
Figure 2: Data-driven Grasp Synthesis can either be based on heuristics or on learning
from data. The data can either be provided in the form of ofﬂine generated labeled
training data, human demonstration or through trial and error.
Object-Grasp
Object Features
Grasp Synthesis
Multi-Modal
Human Demo
Labeled Data
Trial & Error
Multi-Fingered
Deformable
Glover et al. 
Goldfeder et al. 
Miller et al. 
Przybylski et al. 
Roa et al. 
Detry et al. 
Detry et al. 
Huebner et al. 
Diankov 
Balasubramanian et al. 
Borst et al. 
Brook et al. 
Ciocarlie and Allen 
Romero et al. 
Papazov et al. 
Morales et al. 
Collet Romea et al. 
Kroemer et al. 
Ekvall and Kragic 
Tegin et al. 
Pastor et al. 
Stulp et al. 
Table I: Data-Driven Approaches for Grasping Known Objects
device, object features can be based on 2D or 3D visual data
as well as on other modalities. Furthermore, grasp synthesis
can be analytic or data-driven. We further categorized the latter
in Fig. 2: there are methods for learning either from human
demonstrations, labeled examples or trial and error. Other
methods rely on various heuristics to directly link structure
in sensory data to candidate grasps. There is relatively little
work on task-dependent grasping. Also, the applied robotic
hand is usually not in the focus of the discussed approaches.
We will therefore not examine these two aspects. However, we
will indicate whether an approach takes the task into account
and whether an approach is developed for a gripper or for the
more complex case of a multi-ﬁngered hand. Table I-III list
all the methods in this survey. The table columns follow the
structure proposed in Fig. 1 and 2.
II. GRASPING KNOWN OBJECTS
If the object to be grasped is known and there is already a
database of grasp hypotheses for it, the problem of ﬁnding a
feasible grasp reduces to estimating the object pose and then
ﬁltering the hypotheses by reachability. Table I summarizes all
the approaches discussed in this section.
A. Ofﬂine Generation of a Grasp Experience Database
First, we look at approaches for generating the experience
database. Figs. 3 and 5 summarize the typical functional ﬂowchart of these type of approaches. Each box represents a
processing step. Please note, that these ﬁgures are abstractions
TRANSACTIONS ON ROBOTICS
generation
Simulation
Grasp ranking
Object models
Object-grasp
Object model
candidates
Ranked grasp
hypotheses
segmentation
recognition
Pose estimation
Grasp selection
and reachability
hypothesis
Object model
Object pose
Ranked grasp
hypotheses
Figure 3: Typical functional ﬂow-chart for a system with ofﬂine generation of a grasp
database. In the ofﬂine phase, every object model is processed to generate grasp
candidates. Their quality is evaluated for ranking. Finally, the list of grasp hypotheses is
stored with the corresponding object model. In the online phase, the scene is segmented
to search and recognize object models. If the process succeeds, the associated grasp
hypotheses are retrieved and unreachable ones are discarded. Most of the following
approaches can be summarized with this ﬂowchart. Some of them only implement the
ofﬂine part. 
that summarize the implementations of a number of papers.
Most reviewed papers focus on a single module. This is also
true for similar ﬁgures appearing in Sections IV and III.
1) 3D Mesh Models and Contact-Level Grasping: Many
approaches in this category assume that a 3D mesh of the
object is available. The challenge is then to automatically
generate a set of good grasp hypotheses. This involves sampling the inﬁnite space of possible hand conﬁgurations and
ranking the resulting candidate grasps according to some
quality metric. The major part of the approaches discussed in
the following use force closure grasps and rank them according
to the previously discussed ϵ-metric. They differ mostly in the
way the grasp candidates are sampled. Fig. 3 shows a ﬂowchart of which speciﬁcally the upper part (Ofﬂine) visualizes
the data ﬂow for the following approaches.
Some of them approximate the object’s shape with a constellation of primitives such as spheres, cones, cylinders and boxes
as in Miller et al. , Hübner and Kragic and Przybylski
et al. or superquadrics (SQ) as in Goldfeder et al. .
These shape primitives are then used to limit the amount of
candidate grasps and thus prune the search tree for ﬁnding
the best grasp hypotheses. Examples for these approaches are
shown in Fig. 4a-4c and Fig. 4e. Borst et al. reduce
the number of candidate grasps by randomly generating a
number of them dependent on the object surface and ﬁlter them
with a simple heuristic. The authors show that this approach
works well if the goal is not to ﬁnd an optimal grasp but
Figure 4: Generation of grasp candidates through object shape approximation with primitives or through sampling. 4a) Primitive Shape Decomposition . 4b) Box Decomposition . 4c) SQ Decomposition . 4d) Randomly sampled grasp hypotheses. .
4e) Green: Centers of a union of spheres. Red: Centers at a slice through the model
 . 4f) Grasp candidate sampled based on surface normals and bounding box .
instead a fairly good grasp that works well for “ everyday
tasks”. Diankov proposes to sample grasp candidates
dependent on the objects bounding box in conjunction with
surface normals. Grasp parameters that are varied are the
distance between the palm of the hand and the grasp point
as well as the wrist orientation. The authors ﬁnd that usually
a relatively small amount of 30% from all grasp samples
is in force closure. Examples for these sampling approaches
are shown in Fig. 4d and 4f. Roa et al. present an
approach towards synthesizing power grasps that is not based
on evaluating the force-closure property. Slices through the
object model and perpendicular to the axes of the bounding
box are sampled. The ones that best resemble a circle are
chosen for synthesizing a grasp.
All these approaches are developed and evaluated in simulation. As claimed by e.g. Diankov , the biggest criticism
towards ranking grasps based on force closure and the ϵ-metric
is that relatively fragile grasps might be selected. A common
approach to ﬁlter these, is to add noise to the grasp parameters
and keep only those grasps in which a certain percentage of
the neighboring candidates also yield force closure. Weisz and
Allen followed a similar approach that focuses in particular on the ability of the ϵ-metric to predict grasp stability under
object pose uncertainty. For a set of object models, the authors
used GraspIt! to generate a set of grasp candidates in
force closure. For each object, pose uncertainty is simulated by
perturbing it in three degrees of freedom. Each grasp candidate
TRANSACTIONS ON ROBOTICS
Scene: Human
Demonstration
segmentation
Grasp recognition/Kinesthetic
Object database
recognition
Pose estimation
Object-grasp
hypothesis
Object model
hypotheses
Object pose
Ofﬂine learning
Figure 5: Typical functional ﬂow-chart of a system that learns from human demonstration.
The robot observes a human grasping a known object. Two perceptual processed are
followed in parallel. On the left, the object is recognized. On the right, the demonstrated
grasp conﬁguration is extracted or recognized. Finally, object models and grasps are
stored together. This process could replace or complement the ofﬂine phase described in
Fig. 3. The following approaches follow this approach: .
was then re-evaluated according to the probability of attaining
a force closure grasp. The authors found that their proposed
metric performs superior especially on large objects.
Balasubramanian et al. question classical grasp metrics
in principle. The authors systematically tested a number of
task-speciﬁc grasps in the real world that were stable according to classical grasp metrics. These grasps under-performed
signiﬁcantly when compared to grasps planned by humans
through kinesthetic teaching on the same objects and for
the same tasks. The authors found that humans optimize a
skewness metric, i.e., the divergence of alignment between
hand and principal object axes.
2) Learning from Humans: A different way to generate
grasp hypotheses is to observe how humans grasp an object.
This is usually done ofﬂine following the ﬂow-chart in Fig. 5.
This process produces an experience database that is exploited
online in a similar fashion as depicted in Fig. 3.
Ciocarlie and Allen exploit results from neuroscience
that showed that human hand control takes place in a space
of much lower dimension than the hand’s degrees of freedom.
This ﬁnding was applied to directly reduce the conﬁguration
space of a robotic hand to ﬁnd pre-grasp postures. From these
so called eigengrasps the system searches for stable grasps.
Detry et al. model the object as a constellation of
local multi-modal contour descriptors. Four elementary grasping actions are associated to speciﬁc constellations of these
features resulting in an abundance of grasp candidates. They
are modeled as a non-parametric density function in the space
of 6D gripper poses, referred to as a bootstrap density. Human
grasp examples are used to build an object speciﬁc empirical
grasp density from which grasp hypotheses can be sampled.
This is visualized in Fig. 8f and 8g.
Kroemer et al. represent the object with the same features as used by Detry et al. . How to grasp speciﬁc objects
is learned through a combination of a high-level reinforcement
learner and a low level reactive grasp controller. The learning
Object database
Recognition
Segmentation
Pose estimation
generation &
Object-grasp
evaluation
hypothesis
Object model
Object model
performace
hypotheses
Online learning
Figure 7: Typical functional ﬂow-chart of a system that learns through trial and error.
First, a known object in the scene is segmented and recognized. Past experiences with
that object are retrieved and a new grasp hypothesis is generated or selected among the
already tested ones. After execution of the selected grasp, the performance is evaluated
and the memory of past experiences with the object is updated.The following approaches
use trial-and-error learning: .
process is bootstrapped through imitation learning in which a
demonstrated reaching trajectory is converted into an initial
policy. Similar initialization of an object speciﬁc grasping
policy is used in Pastor et al. and Stulp et al. .
Romero et al. present a system for observing humans
visually while they interact with an object. A grasp type and
pose is recognized and mapped to different robotic hands
in a ﬁxed scheme. For validation of the approach in the
simulator, 3D object models are used. This approach has been
demonstrated on a humanoid robot by Do et al. . The
object is not explicitly modeled. Instead, it is assumed that
human and robot act on the same object in the same pose.
In the method presented by Ekvall and Kragic , a
human demonstrator wearing a magnetic tracking device is
observed while manipulating a speciﬁc object. The grasp type
is recognized and mapped through a ﬁxed schema to a set of
robotic hands. Given the grasp type and the hand, the best
approach vector is selected from an ofﬂine trained experience
database. Unlike Detry et al. and Romero et al. ,
the approach vector used by the demonstrator is not adopted.
Ekvall and Kragic assume that the object pose is known.
Experiments are conducted with a simulated pose error. No
physical experiments have been demonstrated. Examples for
the above mentioned ways to teach a robot grasping by
demonstration are shown in Fig. 6.
3) Learning through Trial and Error: Instead of adopting a
ﬁxed set of grasp candidates for a known object, the following
approaches try to reﬁne them by trial and error. In this case,
there is no separation between ofﬂine learning and online
exploitation as can be seen in Fig. 7. Kroemer et al. , Stulp
et al. apply reinforcement learning to improve an initial
human demonstration. Kroemer et al. uses a low-level
reactive controller to perform the grasp that informs the high
level controller with reward information. Stulp et al. 
increase the robustness of their non-reactive grasping strategy
by learning shape and goal parameters of the motion primitives
TRANSACTIONS ON ROBOTICS
Figure 6: Robot grasp learning from human demonstration. 6a) Kinesthetic Teaching . 6b) Human-to-robot mapping of grasps using a data glove . 6c) Human-to-robot
mapping of grasps using visual grasp recognition 
that are used to model a full grasping action. Through this
approach, the robot learns reaching trajectories and grasps
that are robust against object pose uncertainties. Detry et al.
 builds a an object-speciﬁc empirical grasp density from
successful grasping trials. This non-parametric density can
then be used to sample grasp hypotheses.
B. Online Object Pose Estimation
In the previous section, we reviewed different approaches
towards grasping known objects regarding their way to generate and rank candidate grasps. During online execution, an
object has to be recognized and its pose estimated before the
ofﬂine trained grasps can be executed. Furthermore, from the
set of hypotheses not all grasps might be feasible in the current
scene. They have to be ﬁltered by reachability. The lower part
of Fig. 3 visualizes the data ﬂow during grasp execution and
how the ofﬂine generated data is employed.
Several of the aforementioned grasp generation methods use the probabilistic approach towards object
representation and pose estimation proposed by Detry et al.
 as visualized in Fig. 8e. Grasps are either selected by
sampling from densities or a grasp policy reﬁned
from a human demonstration is applied . Morales et al.
 use the method proposed by Azad et al. to recognize
an object and estimate its pose from a monocular image
as shown in Fig. 8a. Given this information, an appropriate
grasp conﬁguration can be selected from a grasp experience
database that has been acquired ofﬂine. The whole system
is demonstrated on the robotic platform described in Asfour
et al. . Huebner et al. demonstrate grasping of known
objects on the same humanoid platform and use the same
method for object recognition and pose estimation. The ofﬂine
selection of grasp hypotheses is based on a decomposition
into boxes as described in Hübner and Kragic . Task
constraints are taken into account by reducing the set of box
faces that provide valid approach directions. These constraints
are hard-coded for each task. Ciocarlie et al. propose a
robust grasping pipeline in which known object models are
ﬁtted to point cloud clusters using standard ICP . The
search space of potential object poses is reduced by assuming
a dominant plane and rotationally-symmetric objects that are
always standing upright as e.g. shown in Fig. 8b. Papazov
et al. demonstrate their previous approach on 3D object
recognition and pose estimation in a grasping scenario.
Multiple objects in cluttered scenes can be robustly recognized
and their pose estimated. No assumption is made about the
geometry of the scene, shape of the objects or their pose.
The aforementioned methods assume a-priori known rigid
3D object model. Glover et al. consider known deformable objects. Probabilistic models of their 2D shape are
learned ofﬂine. The objects can then be detected in monocular images of cluttered scenes even when they are partially
occluded. The visible object part serve as a basis for planning
a grasp under consideration of the global object shape. An
example for a successful detection is shown in Fig. 8c.
Collet Romea et al. use a combination of 2D and 3D
features as an object model. Examples for objects from an
earlier version of the system are shown in Fig. 8d. The
authors estimate the object’s pose in a scene from a single
image. The accuracy of their approach is demonstrated through
a number of successful grasps.
III. GRASPING FAMILIAR OBJECTS
The idea of addressing the problem of grasping familiar
objects originates from the observation that many of the
objects in the environment can be grouped together into
categories with common characteristics. In the computer vision
community, objects within one category usually share similar
visual properties. These can be, e.g., a common texture 
or shape , the occurrence of speciﬁc local features or their speciﬁc spatial constellation . These
categories are usually referred to as basic level categories and
emerged from the area of cognitive psychology .
For grasping and manipulation of objects, a more natural
characteristic may be the functionality that they afford :
similar objects are grasped in a similar way or may be used
to fulﬁll the same task (pouring, rolling, etc). The difﬁculty
is to ﬁnd a representation that encodes these common affordances. Given the representation, a similarity metric has to be
found under which objects of the same functionality can be
considered as alike. The approaches discussed in this survey
are summarized in Table II. All of them employ learning
mechanisms and showed that they can generalize the grasp
experience on training data to new but familiar objects.
A. Discriminative Approaches
First, there are approaches that learn a discriminative function to distinguish between good and bad grasp conﬁgurations.
They mainly differ in what object features are used and thereby
in the space over which objects are considered similar. Furthermore, they parameterize grasp candidates differently. Many
of them only consider whether a speciﬁc part of the object
is graspable or not. Others also learn multiple contact points
TRANSACTIONS ON ROBOTICS
Figure 8: Object representations for grasping and corresponding methods for pose estimation. 8a) Object pose estimation of textured and untextured objects in monocular images
 . 8b) ICP-based object pose estimation from segmented point clouds . 8c) Deformable object detection and pose estimation in monocular images . 8d) Multi-view object
representation composed of 2D and 3D features . 8e) Probabilistic and hierarchical approach towards object pose estimation . 8f) Grasp Candidates linked to groups of local
contour descriptors. . 8g) Empirical grasp density built by trial and error. 
Object-Grasp
Object Features
Grasp Synthesis
Multi-Modal
Human Demo
Labeled Data
Trial & Error
Multi-Fingered
Deformable
Song et al. 
Li and Pollard 
El-Khoury and Sahbani 
Hübner and Kragic 
Kroemer et al. 
Detry et al. 
Detry et al. 
Herzog et al. 
Ramisa et al. 
Boularias et al. 
Montesano and Lopes 
Stark et al. 
Saxena et al. 
Saxena et al. 
Fischinger and Vincze 
Le et al. 
Bergström et al. 
Hillenbrand and Roa 
Bohg and Kragic 
Bohg et al. 
Curtis and Xiao 
Goldfeder and Allen 
Marton et al. 
Rao et al. 
Speth et al. 
Madry et al. 
Kamon et al. 
Montesano et al. 
Morales et al. 
Pelossof et al. 
Dang and Allen 
Table II: Data-Driven Approaches for Grasping Familiar Objects
or full grasp conﬁgurations. A ﬂow-chart for the approaches
discussed in the following is presented in Fig. 9.
1) Based on 3D Data: El-Khoury and Sahbani distinguish between graspable and non-graspable parts of an object.
A point cloud of an object is segmented into parts. Each part
is approximated by a superquadric (SQ). An artiﬁcial neural
network (ANN) is used to classify whether or not the part
is prehensile. The ANN is trained ofﬂine on human-labeled
SQs. If one of the object parts is classiﬁed as prehensile, an
n-ﬁngered force-closure grasp is synthesized on this object
part. Grasp experience is therefore only used to decide where
to apply a grasp, not how the grasp should be conﬁgured.
These steps are shown for two objects in Fig. 10.
Pelossof et al. approximate an object with a a single SQ. Given this, their goal is to ﬁnd a suitable grasp
conﬁguration for a Barrett hand consisting of the approach
vector, wrist orientation and ﬁnger spread. A Support Vector
extraction
features-grasp
Grasp label
segmentation
extraction
Learned model
features - grasp
Grasp selection
and ﬁltering
hypotheses
Scene context
Ofﬂine learning
Figure 9: Typical functional ﬂow-chart of a system that learns from labeled examples. In
the ofﬂine learning phase a database is available consisting of a set of objects labeled with
grasp conﬁgurations and their quality. Database entries are analyzed to extract relations
between speciﬁc features and the grasps. The result is a learned model that given some
features can predict grasp qualities. In the online phase, the scene is segmented and
features are extracted from the scene. Given this, the model outputs a ranked set of
promising grasp hypotheses. Unreachable grasps are ﬁltered out and the best is executed.
The following approaches use labeled training examples: 
Machine (SVM) is trained on data consisting of feature vectors
containing the SQ parameters and a grasp conﬁguration. They
are labeled with a scalar estimating the grasp quality. This
training data is shown in Fig. 11. When feeding the SVM
only with the shape parameters of the SQ, their algorithm
searches efﬁciently through the grasp conﬁguration space for
parameters that maximize the grasp quality.
TRANSACTIONS ON ROBOTICS
Figure 10: a) Object model. b) Part segmentation. c) SQ approximation. d) Graspable
part and contact points .
Figure 11: Top) Grasp candidates performed on SQ. Bottom) Grasp quality for each
candidate .
Both of the aforementioned approaches are evaluated in
simulation where the central assumption is that accurate and
detailed 3D object models are available: an assumption not
always valid. An SQ is an attractive 3D representation due
to its low number of parameters and high shape variability.
However, it remains unclear whether an SQ could equally well
approximate object shape when given real-world sensory data
that is noisy and incomplete.
Hübner and Kragic decompose a point cloud into
a constellation of boxes. The simple geometry of a box
reduces the number of potential grasps signiﬁcantly. A handdesigned mapping between simple box features (size, position
in constellation) and grasping task is proposed. To decide
which of the sides of the boxes provides a good grasp, an
ANN is trained ofﬂine on synthetic data. The projection of the
point cloud inside a box to its sides provides the input to the
ANN. The training data consists of a set of these projections
from different objects labeled with the grasp quality metrics.
Boularias et al. model an object as a Markov Random
Field (MRF) in which the nodes are points in a point cloud and
edges are spanned between the six nearest neighbors of a point.
The features of a node describe the local point distribution
around that node. A node in the MRF can carry either one of
two labels: a good or a bad grasp location. The goal of the
approach is to ﬁnd the maximum a-posteriori labeling of point
clouds for new objects. Very little training data is used which
is shown in Fig. 12b. A handle serves as a positive example.
The experiments show that this leads to a robust labeling of
3D object parts that are very similar to a handle.
Although both approaches also rely on 3D models
for learning, the authors show examples for real sensor data.
It remains unclear how well the classiﬁers would generalize
to a larger set of object categories and real sensor data.
Fischinger and Vincze propose a height-accumulated
Figure 12: Labeled training data. 12a) One example for each of the eight object classes
in training data in along with their grasp labels (in yellow). 12b) Positive (red) and
negative examples (blue) for grasping points .
feature that is similar to Haar basis functions as successfully
applied by e.g. Viola and Jones for face detection.
The values of the feature are computed based on the height
of objects above e.g. the table plane. Positive and negative
examples are used to train an SVM that distinguishes between
good and bad grasping points. The authors demonstrate their
approach for cleaning cluttered scenes. No object segmentation
is required for the approach.
2) Based on 2D Data: There are number of experiencebased approaches that avoid the complexity of 3D data and
mainly rely on 2D data to learn to discriminate between good
and bad grasp locations. Saxena et al. propose a system
that infers a point at where to grasp an object directly as a
function of its image. The authors apply logistic regression to
train a grasping point model on labeled synthetic images of
a number of different objects. The classiﬁcation is based on
a feature vector containing local appearance cues regarding
color, texture and edges of an image patch in several scales
and of its neighboring patches. Samples from the labeled
training data are shown in Fig. 12a. The system was used
successfully to pick up objects from a dishwasher after it has
been additionally trained for this scenario.
Instead of assuming the availability of a labeled data set,
Montesano and Lopes allow the robot to autonomously
explore which features encode graspability. Similar to ,
simple 2D ﬁlters are used that can be rapidly convolved with
an image. Given features from a region, the robot can compute
the posterior probability that a grasp applied to this location
will be successful. It is modeled as a Beta distribution and
estimated from the grasping trials executed by the robot and
their outcome. Furthermore, the variance of the posterior can
be used to guide exploration to regions that are predicted to
have a high success rate but are still uncertain.
Another example of a system involving 2D data and grasp
experience is presented by Stark et al. . Here, an object
is represented by a composition of prehensile parts. These
so called affordance cues are obtained by observing the
interaction of a person with a speciﬁc object. Grasp hypotheses
for new stimuli are inferred by matching features of that
object against a codebook of learned affordance cues that are
stored along with relative object position and scale. How to
grasp the detected parts is not solved since hand orientation
and ﬁnger conﬁguration are not inferred from the affordance
cues. Similar to Boularias et al. , especially locally very
discriminative structures like handles are well detected.
3) Integrating 2D and 3D Data: Although the above approaches have been demonstrated to work well in speciﬁc
manipulation scenarios, inferring a full grasp conﬁguration
TRANSACTIONS ON ROBOTICS
Figure 13: Three grasp candidates for a cup represented by two local patches and their
major gradient as well as their connecting line. 
Figure 14: Example shape contexts descriptor for the image of a pencil. 14a) Input
image. 14b) Canny edges. 14c Top) All vectors from one point to all other sample
points. Bottom) Sampled points of the contour with gradients. 14d) Histogram with four
angle and ﬁve log-radius bins comprising the vectors in 14c Bottom) .
from 2D data alone is a highly under-constrained problem.
Regions in the image may have very similar visual features but
afford completely different grasps. The following approaches
integrate multiple complementary modalities, 2D and 3D visual data and their local or global characteristics, to learn a
function that can take more parameters of a grasp into account.
Saxena et al. extend their previous work on inferring
2D grasping points by taking the 3d point distribution within
a sphere centered around a grasp candidate into account. This
enhances the prediction of a stable grasp and also allows for
the inference of grasp parameters like approach vector and
ﬁnger spread. In earlier work , only downward or outward
grasp with a ﬁxed pinch grasp conﬁguration were possible.
Rao et al. distinguish between graspable and nongraspable object hypotheses in a scene. Using a combination
of 2D and 3D features, an SVM is trained on labeled data
of segmented objects. Among those features are for example
the variance in depth and height as well as variance of the
three channels in the Lab color space. These are some kind
of meta features that are used instead of the values of e.g. the
color channels directly. Rao et al. achieve good classiﬁcation rates on object hypotheses formed by segmentation on
color and depth cues. Le et al. model grasp hypotheses
as consisting of two contact points. They apply a learning
approach to rank a sampled set of ﬁngertip positions according
to graspability. The feature vector consists of a combination
of 2D and 3D cues such as gradient angle or depth variation
along the line connecting the two grasping points. Example
grasp candidates are shown in Fig. 13.
Bohg and Kragic propose an approach that instead
of using local features, encodes global 2D object shape. It
is represented relative to a potential grasping point by shape
contexts as introduced by Belongie et al. . Fig. 14 shows
a potential grasping point and the associated feature.
Figure 15: Matching contact points between human hand and object .
Bergström et al. see the result of the 2D based grasp
selection as a way to search in a 3D object representation
for a full grasp conﬁguration. The authors extend their previous approach to work on a sparse edge-based object
representation. They show that integrating 3D and 2D based
methods for grasp hypotheses generation results in a sparser
set of grasps with a good quality.
Different from the above approaches, Ramisa et al. 
consider the problem of manipulating deformable objects,
speciﬁcally folding shirts. They aim at detecting the shirt collars that exhibit deformability but also have distinct features.
The authors show that a combination of local 2D and 3D
descriptors works well for this task. Results are presented in
terms of how reliable collars can be detected when only a
single shirt or several shirts are present in the scene.
B. Grasp Synthesis by Comparison
The aforementioned approaches study what kind of features
encode similarity of objects in terms of graspability and learn a
discriminative function in the associated space. The methods
we review next take an exemplar-based approach in which
grasp hypotheses for a speciﬁc object are synthesized by
ﬁnding the most similar object or object part in a database
to which good grasps are already associated.
1) Synthetic Exemplars: Li and Pollard treat the problem of ﬁnding a suitable grasp as a shape matching problem
between the human hand and the object. The approach starts
off with a database of human grasp examples. From this
database, a suitable grasp is retrieved when queried with a
new object. Shape features of this object are matched against
the shape of the inside of the available hand postures. An
example is shown in Fig. 15.
Curtis and Xiao build upon a knowledge base of 3D
object types. These are represented by Gaussian distributions
over very basic shape features, e.g., the aspect ratio of the
object’s bounding box, but also over physical features, e.g.
material and weight. Furthermore, they are annotated with a
set of representative pre-grasps. To infer a good grasp for a
new object, its features are used to look up the most similar
object type in the knowledge base. If a successful grasp has
been synthesized in this way and it is similar enough to the
object type, the mean and standard deviation of the object
features are updated. Otherwise a new object type is formed
in the knowledge base.
While these two aforementioned approaches use low-level
shape features to encode similarity between objects, Dang
and Allen present an approach towards semantic grasp
planning. In this case, semantic refers to both, the object
category and the task of a grasp, e.g. pour water, answer
a call or hold and drill. A semantic affordance map links
TRANSACTIONS ON ROBOTICS
object features to an approach vector and to semantic grasp
features (task label, joint angles and tactile sensor readings).
For planning a task-speciﬁc grasp on a novel object of the
same category, the object features are used to retrieve the
optimal approach direction and associated grasp features. The
approach vector serves as a seed for synthesizing a grasp with
the Eigengrasp planner . The grasp features are used as a
reference to which the synthesized grasp should be similar.
Hillenbrand and Roa frame the problem of transferring
functional grasps between objects of the same category as pose
alignment and shape warping. They assume that there is a
source object given on which a set of functional grasps is
deﬁned. Pose clustering is used to align another object of the
same category with it. Subsequently, ﬁngertip contact points
can be transferred from the source to the target object. The
experimental results are promising. However, they are limited
to the category of cups containing six instances.
All four approaches compute object
features that rely on the availability of 3D object meshes. The
question remains how these ideas could be transferred to the
case where only partial sensory data is available to compute
object features and similarity to already known objects. One
idea would be to estimate full object shape from partial
or multiple observations as proposed by the approaches in
Sec. IV-A and use the resulting potentially noisy and uncertain
meshes to transfer grasps. The above methods are also suitable
to create experience databases ofﬂine that require only little
labeling. In the case of category-based grasp transfer 
only one object per category would need to be associated with
grasp hypotheses and all the other objects would only need a
category label. No expensive grasp simulations for many grasp
candidates would need to be executed as for the approaches
in Section II-A1. Dang and Allen followed this idea and
demonstrated a few grasp trials on a real robot assuming that
a 3D model of the query object is in the experience database.
Also Goldfeder and Allen built their knowledge base
only from synthetic data on which grasps are generated using
the previously discussed Eigengrasp planner . Different
from the above approaches, observations made with real
sensors from new objects are used to look up the most similar
object and its pose in the knowledge base. Once this is found,
the associated grasp hypotheses can be executed on the real
object. Although experiments on a real platform are provided,
it is not entirely clear how many trials have been performed
on each object and how much object pose was varied. As
discussed earlier, the study conducted by Balasubramanian
et al. suggests that the employed grasp planner is not
the optimal choice for synthesizing grasps that also work well
in the real world.
Detry et al. aim at generalizing grasps to novel objects by identifying parts to which a grasp has already been
successfully applied. This look-up is rendered efﬁcient by
creating a lower-dimensional space in which object parts that
are similarly shaped relative to the hand reference frame are
close to each other. This space is shown in Fig. 16. The authors
show that similar grasp to object part conﬁgurations can be
clustered in this space and form prototypical grasp-inducing
parts. An extension of this approach is presented by Detry
Figure 16: Lower dimensional space in which similar pairs of grasps and object parts
are close to each other .
et al. where the authors demonstrate how this approach
can be used to synthesize grasps on novel objects by matching
these prototypical parts to real sensor data.
2) Sensor-based Exemplars:
The above mentioned approaches present promising ideas towards generalizing prior
grasp experience to new objects. However, they are using 3D
object models to construct the experience database. In this
section, we review methods that generate a knowledge base by
linking object representations from real sensor data to grasps
that were executed on a robotic platform. Fig. 18 visualizes
the ﬂow of data that these approaches follow.
Kamon et al. propose one of the ﬁrst approaches towards
generalizing grasp experience to novel objects. Their aim is
to learn a function f : Q →G that maps object- and graspcandidate-dependent quality parameters Q to a grade G of
the grasp. An object is represented by its 2D silhouette, its
center of mass and main axis. The grasp is represented by
two parameters f1 and f2 from which in combination with
the object features the ﬁngertip positions can be computed.
Learning is bootstrapped by the ofﬂine generation of a knowledge database containing grasp parameters along with their
grade. This knowledge database is then updated while the
robot gathers experience by grasping new objects. The system
is restricted to planar grasps and visual processing of top-down
views on objects. It is therefore questionable how robust this
approach is to more cluttered environments and strong pose
variations of the object.
Morales et al. use visual feedback to infer successful
grasp conﬁgurations for a three-ﬁngered hand. The authors
take the hand kinematics into account when selecting a number
of planar grasp hypotheses directly from 2D object contours.
To predict which of these grasps is the most stable one, a knearest neighbour (KNN) approach is applied in connection
with a grasp experience database. The experience database is
built during a trial-and-error phase executed in the real world.
Grasp hypotheses are ranked dependent on their outcome.
Fig. 17 shows a successful and unsuccessful grasp conﬁguration for one object. The approach is restricted to planar
objects. Speth et al. showed that their earlier 2D based
approach is also applicable when considering 3D objects.
TRANSACTIONS ON ROBOTICS
Figure 17: 17a) Successful grasp conﬁguration for this object. 17b) Unsuccessful grasp
conﬁguration for the same object .
segmentation
extraction
Heuristic grasp
generation
Learned model/
grasp-features
Reachability
evaluation
candidates
Hypotheses
Model update
Figure 18: Typical functional ﬂow-chart of a system that learns from trial and error.
No prior knowledge about objects is assumed. The scene is segmented to obtain object
clusters and relevant features are extracted. A heuristic module produces grasp candidates
from these features. These candidates are ranked using a previously learned model or
based on comparison to previous examples. The resulting grasp hypotheses are ﬁltered
and one of them is ﬁnally executed. The performance of the execution is evaluated and
the model or memory is updated with this new experience. The following approaches
can be summarized by this ﬂow chart: 
The camera is used to explore the object and retrieve crucial
information like height, 3D position and pose. However, all
this additional information is not applied in the inference and
ﬁnal selection of a suitable grasp conﬁguration.
The approaches presented by Herzog et al. and Kroemer et al. also maintain a database of grasp examples.
They combine learning by trial and error on real world
data with a part based representation of the object. There
is no restriction of object shape. Each of them bootstrap the
learning by providing the robot with a set of positive example
grasps. However, their part representation and matching is very
different. Herzog et al. store a set of local templates of the
parts of the object that have been in contact with the object
during the human demonstration. Given a segmented object
point cloud, its 3D convex hull is constructed. A template
is a height map that is aligned with one polygon of this
hull. Together with a grasp hypotheses, they serve as positive
examples. If a local part of an object is similar to a template
in the database, the associated grasp hypothesis is executed.
Fig. 19 shows example query templates and the matched
template from the database. In case of failure, the object part
is added as a negative example to the old template. In this
Figure 19: Example query and matching templates .
way, the similarity metric can weight in similarity to positive
examples as well as dissimilarity to negative examples. The
proposed approach is evaluated on a large set of different
objects and with different robots.
Kroemer et al. use a pouring task to demonstrate
the generalization capabilities of the proposed approach to
similar objects. An object part is represented as a set of
points weighted according to an isotropic 3D Gaussian with
a given standard deviation. Its mean is manually set to deﬁne
a part that is relevant to the speciﬁc action. When shown
a new object, the goal of the approach is to ﬁnd the subpart that is most likely to afford the demonstrated action.
This probability is computed by kernel logistic regression
whose result depends on the weighted similarity between the
considered sub-part and the example sub-parts in the database.
The weight vector is learned given the current set of examples.
This set can be extended with new parts after action execution.
Herzog et al. and Kroemer et al. both do not adapt
the similarity metric itself under which a new object part
is compared to previously encountered examples. Instead the
probability of success is estimated taken all the examples from
the continuously growing knowledge base into account.
C. Generative Models for Grasp Synthesis
Very little work has been done on learning generative
models of the whole grasp process. These kind of approaches
identify common structures from a number of examples instead of ﬁnding a decision boundary in some feature space or
directly comparing to previous examples under some similarity
metric. Montesano et al. provide one example in which
affordances are encoded in terms of an action that is executed
on an object and produces a speciﬁc effect. The problem of
learning a joint distribution over a set of variables is posed as
structure learning in a Bayesian network framework. Nodes in
this network are formed by object, action and effect features
that the robot can observe during execution. Given 300 trials,
the robot learns the structure of the Bayesian network. Its
validity is demonstrated in an imitation game where the robot
observes a human executing one of the known actions on an
object and is asked to reproduce the same observed effect
when given a new object. Effectively, the robot has to perform
inference in the learned network to determine the action with
the highest probability to succeed.
Song et al. approach the problem of inferring a full
grasp conﬁguration for an object given a speciﬁc task. As
in , the joint distribution over the set of variables inﬂuenc-
TRANSACTIONS ON ROBOTICS
Figure 20: Ranking of approach vectors for different objects given a speciﬁc task. The
brighter an area the higher the rank. The darker an area, the lower the rank .
ing this choice is modeled as a Bayesian network. Additional
variables like task, object category and task constraints are
introduced. The structure of this model is learned given a large
number of grasp examples generated in GraspIt! and annotated
with grasp quality metrics as well as suitability for a speciﬁc
task. The authors exploit non-linear dimensionality reduction
techniques to ﬁnd a discrete representation of continuous variables for efﬁcient and more accurate structure learning. The
effectiveness of the method is demonstrated on the synthetic
data for different inference tasks. The learned quality of grasps
on speciﬁc objects given a task is visualized in Fig. 20.
D. Category-based Grasp Synthesis
Most of the previously discussed approaches link low-level
information of the object to a grasp. Given that a novel object
is similar in shape or appearance to a previously encountered
one, then it is assumed that they can also be grasped in a
similar way. However, objects might be similar on a different
level. Objects in a household environment that share the same
functional category might have a vastly different shape or
appearance. However they still can be grasped in the same
way. In Section III-B1, we have already mentioned the work
by Dang and Allen , Hillenbrand and Roa in which
task-speciﬁc grasps are synthesized for objects of the same
category. The authors assume that the category is known apriori. In the following, we review methods that generalize
grasps to familiar objects by ﬁrst determining their category.
Marton et al. use different 3D sensors and a thermo
camera for performing object categorization. Features of the
segmented point cloud and the segmented image region are
extracted to train a Bayesian Logic Network for classifying
object hypotheses as either boxes, plates, bottles, glasses, mugs
or silverware. A modiﬁed approach is presented in . A
layered 3D object descriptor is used for categorization and
an approach based on the Scale-invariant feature transform
(SIFT) is applied for view based object recognition.
To increase robustness of the categorization, the examination
methods are run iteratively on the object hypotheses. A list of
potential matching objects are kept and reused for veriﬁcation
in the next iteration. Objects for which no matching model
can be found in the database are labeled as novel. Given that
an object has been recognized, associated grasp hypotheses
can be reused. These have been generated using the technique
presented in .
Song et al. treat object category as one variable in
the Bayesian network. Madry et al. demonstrate how
the category of an object can be robustly detected given
multi-modal visual descriptors of an object hypothesis. This
information is fed into the Bayesian Network together with the
desired task. A full hand conﬁguration can then be inferred
that obeys the task constraints. Bohg et al. demonstrate
this approach on the humanoid robot ARMAR III . For
robust object categorization the approach by Madry et al.
 is integrated with the 3D-based categorization system
by Wohlkinger and Vincze . The pose of the categorized
object is estimated with the approach presented by Aldoma
and Vincze . Given this, the inferred grasp conﬁguration
can be checked for reachability and executed by the robot.
Recently, we have seen an increasing amount of new
approaches towards pure 3D descriptors of objects for categorization. Although, the following methods look promising,
it has not been shown yet that they provide a suitable base
for generalizing grasps over an object category. Rusu et al.
 provide extensions of for either recognizing
or categorizing objects and estimating their pose relative to the
viewpoint. While in quantitative results on real data are
presented, uses simulated object point clouds only. Lai
et al. perform object category and instance recognition.
The authors learn an instance distance using the database
presented in . A combination of 3D and 2D features is
used. Gonzalez-Aguirre et al. present a shape-based
object categorization system. A point cloud of an object is
reconstructed by fusing partial views. Different descriptors
(capturing global and local object shape) in combination
with standard machine learning techniques are studied. Their
performance is evaluated on real data.
IV. GRASPING UNKNOWN OBJECTS
If a robot has to grasp a previously unseen object, we refer
to it as unknown. Approaches towards grasping known objects
are obviously not applicable since they rely on the assumption
that an object model is available. The approaches in this group
also do not assume to have access to other kinds of grasp
experiences. Instead, they propose and analyze heuristics that
directly link structure in the sensory data to candidate grasps.
There are various ways to deal with sparse, incomplete
and noisy data from real sensors such as stereo cameras: we
divided the approaches into methods that i) approximate the
full shape of an object, ii) methods that generate grasps based
on low-level features and a set of heuristics, and iii) methods
that rely mostly on the global shape of the partially observed
object hypothesis. The reviewed approaches are summarized
in Table III. A ﬂow chart that visualizes the data ﬂow in the
following approaches is shown in Fig. 21.
A. Approximating Unknown Object Shape
One approach towards generating grasp hypotheses for unknown objects is to approximate objects with shape primitives.
TRANSACTIONS ON ROBOTICS
Object-Grasp
Object Features
Grasp Synthesis
Multi-Modal
Human Demo
Labeled Data
Trial & Error
Multi-Fingered
Deformable
Kraft et al. 
Popovi´c et al. 
Bone et al. 
Richtsfeld and Vincze 
Maitin-Shepard et al. 
Hsiao et al. 
Brook et al. 
Bohg et al. 
Stückler et al. 
Klingbeil et al. 
Maldonado et al. 
Marton et al. 
Lippiello et al. 
Dunes et al. 
Kehoe et al. 
Morales et al. 
Table III: Data-Driven Approaches for Grasping Unknown Objects
Low level 2D/3D
extraction
segmentation
Shape ﬁtting/
approximation
Heuristic grasp
generation and
Heuristic grasp
generation
Reachability
simulation and
candidates
hypotheses
hypotheses
Scene model
Figure 21: Typical functional ﬂow-chart of a grasping system for unknown objects. The
scene is perceived and segmented to obtain object hypotheses and relevant perceptual
features. Then the system follows either the right or left pathway. On the left, low level
features are used to generate heuristically a set of grasp hypotheses. On the right, a mesh
model approximating the global object shape is generated from the perceived features.
Grasp candidates are then sampled and executed in a simulator. Classical analytic grasp
metric are used to rank the grasp candidates. Finally non reachable grasp hypotheses are
ﬁltered out, and the best ranked grasp hypothesis is executed. The following approaches
use the left pathway: . The following
approaches estimate a full object model: 
Dunes et al. approximate an object with a quadric whose
minor axis is used to infer the wrist orientation. The object
centroid serves as the approach target and the rough object
size helps to determine the hand pre-shape. The quadric is
estimated from multi-view measurements of the global object
shape in monocular images. Marton et al. show how
grasp selection can be performed exploiting symmetry by
ﬁtting a curve to a cross section of the point cloud of an object.
For grasp planning, the reconstructed object is imported to
a simulator. Grasp candidates are generated through randomization of grasp parameters on which then the force-closure
criteria is evaluated. Rao et al. sample grasp points from
the surface of a segmented object. The normal of the local
surface at this point serves as a search direction for a second
contact point. This is chosen to be at the intersection between
Figure 22: Estimated full object shape by assuming symmetry. 22a) Ground Truth Mesh.
22b) Original Point Cloud. 22c) Mirrored Cloud with Original Points in Blue and
Additional Points in Red.22d) Reconstructed Mesh .
Figure 23: Unknown object shape estimated by shape carving. 23a Left) Object Image.
Right) Point cloud. 23b Left ) Model from silhouettes. Right) Model merged with point
cloud data .
the extended normal and the opposite side of the object. By
assuming symmetry, this second contact point is assumed to
have a contact normal in the direction opposite to the normal
of the ﬁrst contact point. Bohg et al. propose a related
approach that reconstructs full object shape assuming planar
symmetry which subsumes all other kinds of symmetries. It
takes the complete point cloud into account and not only a
local patch. Two simple methods to generate grasp candidate
on the resulting completed object models are proposed and
evaluated. An example for an object whose full object shape
is approximated with this approach is shown in Fig. 22.
Opposed to the above mentioned techniques, Bone et al.
 make no prior assumption about the shape of the object.
They apply shape carving for the purpose of grasping with
a parallel-jaw gripper. After obtaining a model of the object,
they search for a pair of reasonably ﬂat and parallel surfaces
that are best suited for this kind of manipulator. An object
reconstructed with this method is shown in Fig. 23.
Lippiello et al. present a related approach for grasping
an unknown object with a multi-ﬁngered hand. The authors
ﬁrst record a number of views from around the object. Based
on the object bounding box in each view, a polyhedron is
deﬁned that overestimates the visual object hull and is then
approximated by a quadric. A pre-grasp shape is deﬁned
in which the ﬁngertip contacts on the quadric are aligned
with its two minor axes. This grasp is then reﬁned given the
local surface shape close to the contact point. This process is
alternating with the reﬁnement of the object shape through an
elastic surface model. The quality of the grasps is evaluated
by classic metrics. As previously discussed, it is not clear how
well these metrics predict the outcome of a grasp.
B. From Low-Level Features to Grasp Hypotheses
A common approach is to map low-level 2D or 3D visual
features to a predeﬁned set of grasp postures and then rank
them dependent on a set criteria. Kraft et al. use a stereo
camera to extract a representation of the scene. Instead of a
raw point cloud, they process it further to obtain a sparser
model consisting of local multi-modal contour descriptors.
Four elementary grasping actions are associated to speciﬁc
TRANSACTIONS ON ROBOTICS
Figure 25: PR2 gripper and associated grasp pattern .
constellations of these features. With the help of heuristics,
the large number of resulting grasp hypotheses is reduced.
Popovi´c et al. present an extension of this system that
uses local surfaces and their interrelations to propose and ﬁlter
two and three-ﬁngered grasp hypotheses. The feasibility of
the approach is evaluated in a mixed real-world and simulated
environment. The object representation and the evaluation in
simulation is visualized in Fig. 24a.
Hsiao et al. employ several heuristics for generating
grasp hypotheses dependent on the shape of the segmented
point cloud. These can be grasps from the top, from the
side or applied to high points of the objects. The generated
hypotheses are then ranked using a weighted list of features
such as for example number of points within the gripper or
distance between the ﬁngertip and the center of the segment.
Some examples for grasp hypotheses generated in this way
are shown in Fig. 24b.
The main idea presented by Klingbeil et al. is to search
for a pattern in the scene that is similar to the 2D cross section
of the robotic gripper interior. This is visualized in Fig. 25.
The idea is similar to the work by Li and Pollard as shown
in Fig. 15. However, in this work the authors do not rely on
the availability of a complete 3D object model. A depth image
serves as the input to the method and is sampled to ﬁnd a set of
grasp hypotheses. These are ranked according to an objective
function that takes pairs of these grasp hypotheses and their
local structure into account.
Maitin-Shepard et al. propose a method for grasping
and folding towels that can vary in size and are arranged in
unpredictable conﬁgurations. Different from the approaches
discussed above, the objects are deformable. The authors
propose a border detection methods that relies on depth discontinuities and then ﬁt corners to border points. These then serve
as grasping points. Examples for grasping a towel are shown
in Fig. 24c. Although this approach is applicable to a family
of deformable objects, it does not detect grasping points by
comparing to previously encountered grasping points. Instead
it directly links local structure to a grasp. For this reason, we
consider it as an approach towards grasping unknown objects.
C. From Global Shape to Grasp Hypothesis
Other approaches use the global shape of an object to infer
one good grasp hypothesis. Morales et al. extracted
the 2D silhouette of an unknown object from an image and
computed two and three-ﬁngered grasps taking into account
the kinematics constraints of the hand. Richtsfeld and Vincze
 use a segmented point cloud from a stereo camera. They
search for a suitable grasp with a simple gripper based on the
shift of the top plane of an object into its center of mass.
A set of heuristics is used for selecting promising ﬁngertip
Figure 26: Mapping global object shape to grasps. 26a) Simpliﬁed hand model and
grasp parameters to be optimized . 26b) Planar object shape uncertainty model
Left) Vertices and center of mass with Gaussian position uncertainty (σ = 1). Right)
100 samples of perturbed object models .
Figure 27: a) Object and point cloud. b,c,d) Object representation and grasp hypotheses.
e) Overlaid representations and list of consistent grasp hypotheses .
positions. Maldonado et al. model the object as a 3D
Gaussian. For choosing a grasp conﬁguration, it optimizes
a criterion in which the distance between palm and object
is minimized while the distance between ﬁngertips and the
object is maximized. The simpliﬁed model of the hand and
optimization variables are shown in Fig. 26a.
Stückler et al. generate grasp hypotheses based on
eigenvectors of the object’s footprints on the table. Footprints
refer to the 3D object point cloud projected onto the supporting
Kehoe et al. assume an overhead view of the object
and approximate its shape with an extruded polygon. The
goal is to synthesize a zero-slip push grasp with a parallel
jaw gripper given uncertainty about the precise object shape
and the position of its center of mass. For this purpose,
perturbations of the initial shape and position of the centroid
are sampled. For an example of this, see Fig. 26b. For each
of these samples, the same grasp candidate is evaluated. Its
quality depends on how often it resulted in force closure under
the assumed model of object shape uncertainty.
V. HYBRID APPROACHES
There are a few data-driven grasp synthesis methods that
cannot clearly be classiﬁed as using only one kind of prior
knowledge. One of these approaches has been proposed in
Brook et al. with an extension in . Different grasp
planners provide grasp hypotheses which are integrated to
reach a consensus on how to grasp a segmented point cloud.
The authors show results using the planner presented in 
for unknown objects in combination with grasp hypotheses
generated through ﬁtting known objects to point cloud clusters
as described in . Fig. 27 shows the grasp hypotheses
for a segmented point cloud based on the input from these
different planners. Another example for a hybrid approach is
TRANSACTIONS ON ROBOTICS
Figure 24: Generating and ranking grasp hypotheses from local object features. 24a) Generation of grasp candidates from local surface features and evaluation in simulation .
24b) Generated grasp hypotheses on point cloud clusters and execution results . 24c) Top) Grasping a towel from the table. Bottom) Re-grasping a towel for unfolding .
the work by Marton et al. . A set of very simple shape
primitives like boxes, cylinders and more general rotational
objects are considered. They are reconstructed from segmented
point clouds by analysis of their footprints. Parameters such
as circle radius and the side lengths of rectangles are varied;
curve parameters are estimated to reconstruct more complex
rotationally symmetric objects. Given these reconstructions, a
look-up is made in a database of already encountered objects
for re-using successful grasp hypotheses. In case no similar
object is found, new grasp hypotheses are generated using the
technique presented in . For object hypotheses that cannot
be represented by the simple shape primitives mentioned
above, a surface is reconstructed through triangulation. Grasp
hypotheses are generated using the planner presented in .
VI. DISCUSSION AND CONCLUSION
We have identiﬁed four major areas that form open problems
in the area of robotic grasping:
Object Segmentation: Many of the approaches that are
mentioned in this survey usually assume that the object to
be grasped is already segmented from the background. Since
segmentation is a very hard problem in itself, many methods
make the simplifying assumption that objects are standing on a
planar surface. Detecting this surface in a 3D point cloud and
performing Euclidean clustering results in a set of segmented
point clouds that serve as object hypotheses . Although
the dominant surface assumption is viable in certain scenarios
and to shortcut the problem of segmentation, we believe that
we need a more general approach to solve this.
First of all, some objects might usually occur in a speciﬁc
spatial context. This can be on a planar surface, but it might
also be on a shelf or in the fridge. Aydemir and Jensfelt
 propose to learn this context for each known object to
guide the search for them. One could also imagine that this
context could help segmenting foreground from background.
Furthermore, there are model-based object detection methods
 that can segment a scene as a by-product
of detection and without making strong assumptions about
the environment. In case of unknown objects, some methods
have been proposed that employ the interaction capabilities of
a robot, e.g. visual ﬁxation or pushing movements with the
robot hand, to segment the scene .
A general solution towards object segmentation might be a
combination of these two methods. The robot ﬁrst interacts
with objects to acquire a model. Once it has an object model,
it can be used for detecting and thereby segmenting it from
the background.
Learning to Grasp: Let us consider the goal of having a
robotic companion helping us in our household. In this scenario, we cannot expect that the programmer has foreseen all
the different situations that this robot will be confronted with.
Therefore, the ideal household robot should have the ability to
continuously learn about new objects and how to manipulate
them while it is operating in the environment. We will also not
be able to rely on having 3D models readily available of all
objects the robot could possibly encounter. This requires the
ability to learn a model that could generalize from previous
experience to new situations. Many open questions arise: How
is the experience regarding one object and grasp represented
in memory? How can success and failure be autonomously
quantiﬁed? How can a model be learned from this experience
that would generalize to new situations? Should it be a
discriminative, a generative or exemplar-based model? What
are the features that encode object affordances? Can these
be autonomously learned? In which space are we comparing
new objects to already encountered ones? Can we bootstrap
learning by using simulation or by human demonstration? The
methods that we have discussed in Section III about grasping
familiar objects approach these questions. However, we are
still far from a method that answers all of them in a satisfying
Autonomous Manipulation Planning:
Recently, more
complex scenarios than just grasping from a table top have
been approached by a number of research labs. How a robot
can autonomously sequence a set of actions to perform such
a task is still an open problem. Towards this end, Tenorth
et al. propose a cloud robotics infrastructure under which
robots can share their experience such as action recipes and
manipulation strategies. An inference engine is provided for
checking whether all requirements are fulﬁlled for performing
a full manipulation strategy. It would be interesting to study
how the uncertainty in perception and execution can be dealt
with in conjunction with such a symbolic reasoning engine.
When considering a complex action, grasp synthesis cannot
be considered as an isolated problem. On the contrary, higherlevel tasks inﬂuence what the best grasp in a speciﬁc scenario
might be, e.g. when grasping a speciﬁc tool. Task constraints
have not yet been considered extensively in the community.
TRANSACTIONS ON ROBOTICS
Current approaches, e.g. , achieve impressive results.
As an open question stands how to scale to life-long learning.
Robust Execution: It has been noticed by many researchers that inferring a grasp for a given object is necessary
but not sufﬁcient. Only if execution is robust to uncertainties
in sensing and actuation, a grasp can succeed with high
probability. There are a number of approaches that use constant
tactile or visual feedback during grasp execution to adapt to
unforeseen situations . Tactile
feedback can be from haptic or force-torque sensors. Visual
feedback can be the result from tracking the hand and object
simultaneously. Also in this area, there are a number of open
questions. How can tactile feedback be interpreted to choose
an appropriate corrective action independent of the object, the
task and environment? How can visual and tactile information
be fused in the controller?
A. Final Notes
In this survey, we reviewed work on data-driven grasp
synthesis and propose a categorization of the published work.
We focus on the type and level of prior knowledge used in
the proposed approaches and on the assumptions that are
commonly made about the objects being manipulated. We
identiﬁed recent trends in the ﬁeld and provided a discussion
about the remaining challenges.
An important issue is the current lack of general benchmarks
and performance metrics suitable for comparing the different
approaches. Although various object-grasp databases are already available e.g. the Columbia Grasp database , the
VisGraB data set or the playpen data set they are
not commonly used for comparison. We acknowledge that one
of the reasons is that grasping in itself is highly dependent
on the employed sensing and manipulation hardware. There
have also been robotic challenges organized such as the
DARPA Arm project or RoboCup@Home and a
framework for benchmarking has been proposed by Ulbrich
et al. . However, none of these successfully integrate all
the subproblems relevant for benchmarking different grasping
approaches.
Given that data-driven grasp synthesis is an active ﬁeld of
research and lots of work has been reported in the area, we set
up a web page that contains all the references in this survey
at www.robotic-grasping.com. They are structured according
to the proposed classiﬁcation and tagged with the mentioned
aspect. The web page will be constantly updated with the most
recent approaches.