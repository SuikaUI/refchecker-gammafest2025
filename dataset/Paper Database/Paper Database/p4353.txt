Heterogeneous Information Network Embedding
for Recommendation
Chuan Shi, Member, IEEE, Binbin Hu, Wayne Xin Zhao Member, IEEE
and Philip S. Yu, Fellow, IEEE
Abstract—Due to the ﬂexibility in modelling data heterogeneity, heterogeneous information network (HIN) has been adopted to
characterize complex and heterogeneous auxiliary data in recommender systems, called HIN based recommendation. It is challenging
to develop effective methods for HIN based recommendation in both extraction and exploitation of the information from HINs. Most
of HIN based recommendation methods rely on path based similarity, which cannot fully mine latent structure features of users and
items. In this paper, we propose a novel heterogeneous network embedding based approach for HIN based recommendation, called
HERec. To embed HINs, we design a meta-path based random walk strategy to generate meaningful node sequences for network
embedding. The learned node embeddings are ﬁrst transformed by a set of fusion functions, and subsequently integrated into an
extended matrix factorization (MF) model. The extended MF model together with fusion functions are jointly optimized for the rating
prediction task. Extensive experiments on three real-world datasets demonstrate the effectiveness of the HERec model. Moreover, we
show the capability of the HERec model for the cold-start problem, and reveal that the transformed embedding information from HINs
can improve the recommendation performance.
Index Terms—Heterogeneous information network, Network embedding, Matrix factorization, Recommender system.
INTRODUCTION
N recent years, recommender systems, which help users discover items of interest from a large resource collection, have
been playing an increasingly important role in various online services , . Traditional recommendation methods (e.g., matrix
factorization) mainly aim to learn an effective prediction function
for characterizing user-item interaction records (e.g., user-item rating matrix). With the rapid development of web services, various
kinds of auxiliary data (a.k.a., side information) become available
in recommender systems. Although auxiliary data is likely to
contain useful information for recommendation , it is difﬁcult
to model and utilize these heterogeneous and complex information
in recommender systems. Furthermore, it is more challenging to
develop a relatively general approach to model these varying data
in different systems or platforms.
As a promising direction, heterogeneous information network
(HIN), consisting of multiple types of nodes and links, has been
proposed as a powerful information modeling method – .
Due to its ﬂexility in modeling data heterogeneity, HIN has been
adopted in recommender systems to characterize rich auxiliary
data. In Fig. 1(a), we present an example for movie recommendation characterized by HINs. We can see that the HIN contains
multiple types of entities connected by different types of relations.
Under the HIN based representation, the recommendation problem
can be considered as a similarity search task over the HIN .
Such a recommendation setting is called as HIN based recommendation . HIN based recommendation has received much
attention in the literature – . The basic idea of most existing
HIN based recommendation methods is to leverage path based
semantic relatedness between users and items over HINs, e.g.,
meta-path based similarities, for recommendation.
Although HIN based methods have achieved performance
improvement to some extent, there are two major problems for
these methods using meta-path based similarities. First, meta-path
based similarities rely on explicit path reachability, and may not
be reliable to be used for recommendation when path connections
are sparse or noisy. It is likely that some links in HINs are
accidentally formed which do not convey meaningful semantics.
Second, meta-path based similarities mainly characterize semantic
relations deﬁned over HINs, and may not be directly applicable
to recommender systems. It is likely that the derived path based
similarities have no explicit impact on the recommendation performance in some cases. Existing methods mainly learn a linear
weighting mechanism to combine the path based similarities 
or latent factors , which cannot learn the complicated mapping mechanism of HIN information for recommendation. The
two problems essentially reﬂect two fundamental issues for HIN
based recommendation, namely effective information extraction
and exploitation based on HINs for recommendation.
For the ﬁrst issue, it is challenging to develop a way to
effectively extract and represent useful information for HINs
due to data heterogeneity. Unlike previous studies using metapath based similarities , , our idea is to learn effective
heterogeneous network representations for summarizing important
structural characteristics and properties of HINs. Following ,
 , we characterize nodes from HINs with low-dimensional
vectors, i.e., embeddings. Instead of relying on explicit path connection, we would like to encode useful information from HINs
with latent vectors. Compared with meta-path based similarity,
the learned embeddings are in a more compact form that is easy to
use and integrate. Also, the network embedding approach itself is
more resistant to sparse and noisy data. However, most existing
network embedding methods focus on homogeneous networks
only consisting of a single type of nodes and links, and cannot
directly deal with heterogeneous networks consisting of multiple
types of nodes and links. Hence, we propose a new heterogeneous network embedding method. Considering heterogeneous
characteristics and rich semantics reﬂected by meta-paths, the
proposed method ﬁrst uses a random walk strategy guided by
 
(a) An Example of HIN
(b1) Meta-path based
random walk
(c) Recomendation
(b) HIN Embedding
(b2) Transform and fuse
Fig. 1. The schematic illustration of the proposed HERec approach.
meta-paths to generate node sequences. For each meta-path, we
learn a unique embedding representation for a node by maximizing its co-occurrence probability with neighboring nodes in the
sequences sampled according to the given meta-path. We fuse the
multiple embeddings w.r.t. different meta-paths as the output of
HIN embedding.
After obtaining the embeddings from HINs, we study how to
integrate and utilize such information in recommender systems.
We don’t assume the learned embeddings are naturally applicable
in recommender systems. Instead, we propose and explore three
fusion functions to integrate multiple embeddings of a node into a
single representation for recommendation, including simple linear
fusion, personalized linear fusion and non-linear fusion. These fusion functions provide ﬂexible ways to transform HIN embeddings
into useful information for recommendation. Specially, we emphasize that personalization and non-linearity are two key points to
consider for information transformation in our setting. Finally, we
extend the classic matrix factorization framework by incorporating
the fused HIN embeddings. The prediction model and the fusion
function are jointly optimized for the rating prediction task.
By integrating the above two parts together, this work presents
a novel HIN embedding based recommendation approach, called
HERec for short. HERec ﬁrst extracts useful HIN based information using the proposed HIN embedding method, and then utilizes
the extracted information for recommendation using the extended
matrix factorization model. We present the overall illustration for
the proposed approach in Fig. 1. Extensive experiments on three
real-world datasets demonstrate the effectiveness of the proposed
approach. We also verify the ability of HERec to alleviate coldstart problem and examine the impact of meta-paths on performance. The key contributions of this paper can be summarized as
• We propose a heterogeneous network embedding method
guided by meta-paths to uncover the semantic and structural
information of heterogeneous information networks. Moreover,
we propose a general embedding fusion approach to integerate
different embeddings based on different meta-paths into a single
representation.
• We propose a novel heterogeneous information network
embedding for recommendation model, called HERec for short.
HERec can effectively integrate various kinds of embedding
information in HIN to enhance the recommendation performance.
In addition, we design a set of three ﬂexible fusion functions to
effectively transform HIN embeddings into useful information for
recommendation.
• Extensive experiments on three real-world datasets demonstrate the effectiveness of the proposed model. Moreover, we show
the capability of the proposed model for the cold-start prediction
problem, and reveal that the transformed embedding information
from HINs can improve the recommendation performance.
The remainder of this paper is organized as follows. Section 2
introduces the related works. Section 3 describes notations used
in the paper and presents some preliminary knowledge. Then, We
propose the heterogeneous network embedding method and the
HERec model in Section 4. Experiments and detailed analysis are
reported in Section 5. Finally, we conclude the paper in Section 6.
RELATED WORK
In this section, we will review the related studies in three aspects, namely recommender systems, heterogeneous information
networks and network embedding.
In the literature of recommender systems, early works mainly
adopt collaborative ﬁltering (CF) methods to utilize historical
interactions for recommendation . Particularly, the matrix factorization approach , has shown its effectiveness and
efﬁciency in many applications, which factorizes user-item rating
matrix into two low rank user-speciﬁc and item-speciﬁc matrices, and then utilizes the factorized matrices to make further
predictions . Since CF methods usually suffer from coldstart problem, many works , , attempt to leverage
additional information to improve recommendation performance.
For example, Ma et al. integrate social relations into matrix
factorization in recommendation. Ling et al. consider the information of both ratings and reviews and propose a uniﬁed model
to combine content based ﬁltering with collaborative ﬁltering for
rating prediction task. Ye et al. incorporate user preference,
social inﬂuence and geographical inﬂuence in the recommendation
and propose a uniﬁed POI recommendation framework. More
recently, Sedhain et al. explain drawbacks of three popular
cold-start models – and further propose a learning based
approach for the cold-start problem to leverage social data via
randomised SVD. And many works begin to utilize deep models
(e.g., convolutional neural network, auto encoder) to exploit text
information , image information and network structure
information for better recommendation. In addition, there are
also some typical frameworks focusing on incorporating auxiliary
information for recommendation. Chen et al. propose a
typical SVDFeature framework to efﬁciently solve the feature
based matrix factorization. And Rendle proposes factorization
(a) Douban Movie
(b) Douban Book
Compliment
Fig. 2. Network schemas of heterogeneous information networks for the used three datasets. In our task, users and items are our major focus,
denoted by large-sized circles, while the other attributes are denoted by small-sized circles.
machine, which is a generic approach to combine the generality
of feature engineering.
As a newly emerging direction, heterogeneous information
network can naturally model complex objects and their rich relations in recommender systems, in which objects are of different
types and links among objects represent different relations .
And several path based similarity measures , , are
proposed to evaluate the similarity of objects in heterogeneous
information network. Therefore, some researchers have began to
be aware of the importance of HIN based recommendation. Wang
et al. propose the OptRank method to alleviate the coldstart problem by utilizing heterogeneous information contained
in social tagging system. Furthermore, the concept of meta-path
is introduced into hybrid recommender systems . Yu et al. 
utilize meta-path based similarities as regularization terms in the
matrix factorization framework. Yu et al. take advantage of
different types of entity relationships in heterogeneous information
network and propose a personalized recommendation framework
for implicit feedback dataset. Luo et al. propose a collaborative ﬁltering based social recommendation method using
heterogeneous relations. More recently, Shi et al. propose
the concept of weighted heterogeneous information network and
design a meta-path based collaborative ﬁltering model to ﬂexibly
integrate heterogeneous information for personalized recommendation. In , , , the similarities of users and items are
both evaluated by path based similarity measures under different
semantic meta-paths and a matrix factorization based on dual
regularization framework is proposed for rating prediction. Most
of HIN based methods rely on the path based similarity, which
may not fully mine latent features of users and items on HINs for
recommendation.
On the other hand, network embedding has shown its potential
in structure feature extraction and has been successfully applied
in many data mining tasks , , such as classiﬁcation ,
clustering , and recommendation . Deepwalk 
combines random walk and skip-gram to learn network representations. Furthermore, Grover and Leskovec propose a
more ﬂexible network embedding framework based on a biased
random walk procedure. In addition, LINE and SDNE 
characterize the second-order link proximity, as well as neighbor
relations. Cao et al. propose the GraRep model to capture
higher-order graph proximity for network representations. Besides
leaning network embedding from only the topology, there are also
many works – leveraging node content information and
other available graph information for the robust representations.
Unfortunately, most of network embedding methods focus on
homogeneous networks, and thus they cannot directly be applied
for heterogeneous networks. Recently, several works – attempt to analyze heterogeneous networks via embedding methods.
Particularly, Chang et al. design a deep embedding model
to capture the complex interaction between the heterogeneous
data in the network. Xu et al. propose a EOE method to
encode the intra-network and inter-network edges for the coupled
heterogeneous network. Dong et al. deﬁne the neighbor of
nodes via meta-path and learn the heterogeneous embedding by
skip-gram with negative sampling. Although these methods can
learn network embeddings in various heterogeneous network, their
representations of nodes and relations may not be optimum for
recommendation.
To our knowledge, it is the ﬁrst attempt which adopts the
network embedding approach to extract useful information from
heterogeneous information network and leverage such information
for rating prediction. The proposed approach utilizes the ﬂexibility
of HIN for modeling complex heterogeneous context information,
and meanwhile borrows the capability of network embedding
for learning effective information representation. The ﬁnal rating prediction component further incorporates a transformation
mechanism implemented by three ﬂexible functions to utilize the
learned information from network embedding.
PRELIMINARY
A heterogeneous information network is a special kind of information network, which either contains multiple types of objects or
multiple types of links.
Deﬁnition 1. Heterogeneous information network . A HIN
is denoted as G = {V, E} consisting of a object set V and a link
set E. A HIN is also associated with an object type mapping
function φ : V →A and a link type mapping function ψ :
E →R. A and R denote the sets of predeﬁned object and link
types, where |A| + |R| > 2.
The complexity of heterogeneous information network drives
us to provide the meta level (e.g., schema-level) description for
understanding the object types and link types better in the network.
Hence, the concept of network schema is proposed to describe the
meta structure of a network.
Deﬁnition 2. Network schema , . The network schema is
denoted as S = (A, R). It is a meta template for an information
network G = {V, E} with the object type mapping φ : V →A
and the link type mapping ψ : E →R, which is a directed
graph deﬁned over object types A, with edges as relations
Example 1. As shown in Fig. 1(a), we have represented the setting
of movie recommender systems by HINs. We further present
its corresponding network schema in Fig. 2(a), consisting of
multiple types of objects, including User (U), Movie (M), Director (D). There exist different types of links between objects
to represent different relations. A user-user link indicates the
friendship between two users, while a user-movie link indicates the rating relation. Similarly, we present the schematic
network schemas for book and business recommender systems
in Fig. 2(b) and Fig. 2(c) respectively.
In HINs, two objects can be connected via different semantic
paths, which are called meta-paths.
Deﬁnition 3. Meta-path . A meta-path ρ is deﬁned on a
network schema S = (A, R) and is denoted as a path in
the form of A1
−→Al+1 (abbreviated
as A1A2 · · · Al+1), which describes a composite relation
R = R1 ◦R2 ◦· · · ◦Rl between object A1 and Al+1, where
◦denotes the composition operator on relations.
Example 2. Taking Fig. 2(a) as an example, two objects can
be connected via multiple meta-paths, e.g., “User - User”
(UU) and “User - Movie - User” (UMU). Different metapaths usually convey different semantics. For example, the UU
path indicates friendship between two users, while the UMU
path indicates the co-watch relation between two users, i.e.,
they have watched the same movies. As will be seen later,
the detailed meta-paths used in this work is summarized in
Recently, HIN has become a mainstream approach to model
various complex interaction systems . Specially, it has been
adopted in recommender systems for characterizing complex and
heterogenous recommendation settings.
Deﬁnition 4. HIN based recommendation. In a recommender
system, various kinds of information can be modeled by a HIN
G = {V, E}. On recommendation-oriented HINs, two kinds
of entities (i.e., users and items) together with the relations
between them (i.e., rating relation) are our focus. Let U ⊂V
and I ⊂V denote the sets of users and items respectively,
a triplet ⟨u, i, ru,i⟩denotes a record that a user u assigns a
rating of ru,i to an item i, and R = {⟨u, i, ru,i⟩} denotes the
set of rating records. We have U ⊂V, I ⊂V and R ⊂E.
Given the HIN G = {V, E}, the goal is to predict the rating
score ru,i′ of u ∈U to a non-rated item i′ ∈I.
Several efforts have been made for HIN based recommendation. Most of these works mainly leverage meta-path based similarities to enhance the recommendation performance , – .
Next, we will present a new heterogeneous network embedding
based approach to this task, which is able to effectively exploit
the information reﬂected in HINs. The notations we will use
throughout the article are summarized in Table 1.
Notations and explanations.
Explanation
heterogeneous information network
object set
network schema
object type set
link type set
predicted rating user u gives to item i
low-dimensional representation of node v
neighborhood of node u
a meta-path
meta-path set
ﬁnal representations of user u, item i
dimension of HIN embeddings
dimension of latent factors
latent factors of user u, item i
latent factors for pairing HIN embedding of user u, item i
parameters for integrating HIN embeddings
transformation matrix w.r.t the l-th mete-path
bias vector w.r.t the l-th mete-path
preference weight of user u over the l-th meta-path
Θ(U), Θ(I)
parameters of fusion functions for users, items
regularization parameter
learning rate
THE PROPOSED APPROACH
In this section, we present a Heterogeneous network Embedding
based approach for Recemendation, called HERec. For addressing
the two issues introduced in Section 1, the proposed HERec
approach consists of two major components. First, we propose
a new heterogeneous network embedding method to learn the
user/item embeddings from HINs. Then, we extend the classic
matrix factorization framework by incorporating the learned embeddings using a ﬂexible set of fusion functions. We present an
overall schematic illustration of the proposed approach in Fig. 1.
After the construction of the HINs (Fig. 1(a)), two major steps are
presented, namely HIN embedding (Fig. 1(b)) and recommendation (Fig. 1(c)). Next, we will present detailed illustration of the
proposed approach.
Heterogeneous Network Embedding
Inspired by the recent progress on network embedding ,
 , we adopt the representation learning method to extract and
represent useful information of HINs for recommendation. Given
a HIN G = {V, E}, our goal is to learn a low-dimensional representation ev ∈Rd (a.k.a., embedding) for each node v ∈V. The
learned embeddings are expected to highly summarize informative
characteristics, which are likely to be useful in recommender
systems represented on HINs. Compared with meta-path based
similarity , , it is much easier to use and integrate the
learned representations in subsequent procedures.
However, most of the existing network embedding methods
mainly focus on homogeneous networks, which are not able
to effectively model heterogeneous networks. For instance, the
pioneering study deepwalk uses random walk to generate
node sequences, which cannot discriminate nodes and edges with
different types. Hence, it requires a more principled way to
traverse the HINs and generate meaningful node sequences.
m1 d2 m2 d3 m3
u1 u2 u3 u4
User Movie
Fig. 3. An illustrative example of the proposed meta-path based random
walk. We ﬁrst perform random walks guided by some selected metapaths, and then ﬁlter the node sequences not with the user type or item
Meta-path based Random Walk
To generate meaningful node sequences, the key is to design an
effective walking strategy that is able to capture the complex
semantics reﬂected in HINs. In the literature of HINs, meta-path
is an important concept to characterize the semantic patterns for
HINs . Hence, we propose to use the meta-path based random
walk method to generate node sequences. Giving a heterogeneous
network G = {V, E} and a meta-path ρ : A1
−−→· · · At
At+1 · · ·
−→Al+1, the walk path is generated according to the
following distribution:
P(nt+1 = x|nt = v, ρ)
|NAt+1(v)|,
(v, x) ∈E and φ(x) = At+1;
otherwise,
where nt is the t-th node in the walk, v has the type of At, and
N(At+1)(v) is the ﬁrst-order neighbor set for node v with the type
of At+1. A walk will follow the pattern of a meta-path repetitively
until it reaches the pre-deﬁned length.
Example 3. We still take Fig. 1(a) as an example, which represents the heterogeneous information network of movie recommender systems. Given a meta-path UMU, we can generate
two sample walks (i.e., node sequences) by starting with the
user node of Tom: (1) TomUser →The TerminatorMovie →
MaryUser, and (2) TomUser →AvaterMovie →BobUser →
The TerminatorMovie →MaryUser. Similarly, given the metapath UMDMU, we can also generate another node sequence:
TomUser →The TerminatorMovie →CameronDirector →
AvaterMovie →MaryUser. It is intuitive to see that these
meta-paths can lead to meaningful node sequences corresponding to different semantic relations.
Type Constraint and Filtering
Since our goal is to improve the recommendation performance,
the main focus is to learn effective representations for users and
items, while objects with other types are of less interest in our
task. Hence, we only select meta-paths starting with user type
or item type. Once a node sequence has been generated using
the above method, it is likely to contain nodes with different
types. We further remove the nodes with a type different from
the starting type. In this way, the ﬁnal sequence will only consist
of nodes with the starting type. Applying type ﬁltering to node
sequences has two beneﬁts. First, although node sequences are
constructed using meta-paths with heterogeneous types, the ﬁnal
representations are learned using homogeneous neighborhood. We
embed the nodes with the same type in the same space, which
relaxes the challenging goal of representing all the heterogeneous
objects in a uniﬁed space. Second, given a ﬁxed-length window, a
node is able to utilize more homogeneous neighbors that are more
likely to be relevant than others with different types.
Example 4. As shown in Fig. 3, in order to learn effective
representations for users and items, we only consider the
meta-paths in which the starting type is user type or item
type. In this way, we can derive some meta-paths, such
as UMU, UMDMU and MUM. Take the meta-path of
UMU as an instance. We can generate a sampled sequence
“u1 →m1 →u2 →m2 →u3 →m2 →u4” according
to Eq. 1. Once a sequence has been constructed, we further
remove the nodes with a different type compared with the
starting node. In this way, we ﬁnally obtain a homogeneous
node sequence “u1 →u2 →u3 →u4”.
The connections between homogeneous nodes are essentially
constructed via the heterogeneous neighborhood nodes. After this
step, our next focus will be how to learn effective representations
for homogeneous sequences.
Optimization Objective
Given a meta-path, we can construct the neighborhood Nu for
node u based on co-occurrence in a ﬁxed-length window. Following node2vec , we can learn the representations of nodes to
optimize the following objective:
log Pr(Nu|f(u)),
where f : V →Rd is a function (aiming to learn) mapping each
node to d-dimensional feature space, and Nu ⊂V represents the
neighborhood of node u, w.r.t. a speciﬁc meta-path. We can learn
the embedding mapping function f(·) by applying stochastic gradient descent (SGD) to optimize this objective. A major difference
between previous methods and ours lies in the construction of
Nu. Our method selects homogeneous neighbors using meta-path
based random walks. The whole algorithm framework is shown in
Algorithm 1.
Embedding Fusion
Heterogeneous network embedding provides a general way to
extract useful information from HINs. For our model, given a node
v ∈V, we can obtain a set of representations {e(l)
l=1, where P
denotes the set of meta-paths, and e(l)
denotes the representation
of v w.r.t. the l-th meta-path. It requires a principled fusion way to
transform node embeddings into a more suitable form that is useful
to improve recommendation performance. Existing studies usually
adopt a linear weighting mechanism to combine the information
mined from HINs (e.g., meta-path based similarities), which may
not be capable of deriving effective information representations
for recommendation. Hence, we propose to use a general function
g(·), which aims to fuse the learned node embeddings for users
and items:
Algorithm 1 HIN embedding algorithm for a single meta-path.
Input: the heterogeneous information network G = {V, E}; the
given meta-path ρ; the target node type At; the dimension of
embedding d; the walk length wl; the neighborhood size ns;
the number of walks per node r.
Output: The embedding of target node type w.r.t the single metapath, denoted by e
1: Initialize e by standard normal distribution;
2: paths = [];
3: for each v ∈V and φ(v) == At do
for i = 1 to r do
path = [];
while wl > 0 do
walk to node x according to Eq. 1;
if φ(x) == At then
append node x into path;
wl ←wl −1;
Add path to paths;
15: end for
16: e = SGD(paths, d, ns);
17: return e.
where e(U)
are the ﬁnal representations for a user u
and an item i respectively, called HIN embeddings. Since users
and items are our focus, we only learn the embeddings for users
and items. At the current stage, we do not specify the form of
function g(·). Instead, we believe that a good fusion function
should be learned according to the speciﬁc task. Hence, we leave
the formulation and optimization of the fusion function in our
recommendation model.
Integrating Matrix Factorization with Fused HIN
Embedding for Recommendation
Previously, we have studied how to extract and represent useful information from HINs for recommendation. With HIN embedding,
we can obtain user embeddings {e(U)
}u∈U and item embeddings
}i∈I, which are further speciﬁed by a function g(·) that is
to learn. Now we study how to utilize the learned embeddings for
recommendation.
Rating Predictor
We build our rating predictor based on the classic matrix factorization (MF) model , which factorizes the user-item rating matrix
into user-speciﬁc and item-speciﬁc matrices. In MF, the rating of
a user u on an item i is simply deﬁned as follows:
where xu ∈RD and yi ∈RD denote the latent factors
corresponding to user u and item i. Since we have also obtained
the representations for user u and item i, we further incorporate
them into the rating predictor as below
u · yi + α · e(U)
+ β · γ(U)
where e(U)
are the fused embeddings, γ(U)
are user-speciﬁc and item-speciﬁc latent factors to pair with the
HIN embeddings e(U)
respectively, and α and β are the
tuning parameters to integrate the three terms. For Eq. 5, we need
to note two points. First, e(U)
are the output of function
g(·) in Eq. 3. We assume that the derived embeddings after
transformation by function g(·) are applicable in MF. Second, we
don’t directly pair e(U)
. Recall the proposed embedding
method indeed characterizes the relatedness between objects with
the same type. We incorporate new latent factors γ(U)
to relax the assumption that e(U)
have to be in the same
space, which increases the ﬂexility to the prediction model.
Setting the Fusion Function
Previously, we assume the function g(·) has been given in a
general form. Now, we study how to set the fusion function,
which transforms HIN embeddings into a form that is useful in
recommender systems. We only discuss the function for fusing
user embeddings, and it is similar to fuse item embeddings. We
propose to use three fusion functions to integrate embeddings:
Simple linear fusion. We assume each user has the same
preference for each meta-path, and therefore, we assign
each meta-path with a uniﬁed weight (i.e., average value)
for each user. Moreover, we linearly transform embeddings
to target space.
u + b(l)),
where P is the set of considered meta-paths, M(l) ∈
RD×d and b(l) ∈RD are the transformation matrix and
bias vector w.r.t. the l-th meta-path.
Personalized linear fusion. The simple linear fusion cannot
model users’ personalized preference over the meta-paths.
So we further assign each user with a weight vector on
meta-paths, representing user’s personalized preference
for each meta-path. It is more reasonable that each user
has his/her personal interest preference in many real applications.
u (M(l)e(l)
u + b(l)),
where w(l)
u is the preference weight of user u over the l-th
meta-path.
Personalized non-linear fusion. Linear fusion has limited
expressive power in modeling complex data relations.
Hence, we use non-linear function to enhance the fusion
u + b(l)
where σ(·) is a non-linear function, i.e., sigmoid function
in our work. Although we only use two non-linear transformations, it is ﬂexible to extend to multiple non-linear
layers, e.g., Multi-Layer Perceptrons.
Model Learning
We blend the fusion function into matrix factorization framework
for learning the parameters of the proposed model. The objective
can be formulated as follows:
⟨u,i,ru,i⟩∈R
ru,i)2 + λ
(∥xu∥2 + ∥yi∥2
∥2 + ∥γ(I)
∥2 + ∥Θ(U)∥2 + ∥Θ(I)∥2),
ru,i is the predicted rating using Eq. 5 by the proposed
model, λ is the regularization parameter, and Θ(U) and Θ(I) are
the parameters of the function g(·) for users and items respectively. We adopt SGD to efﬁciently optimize the ﬁnal objective.
The update of original latent factors {xu} and {yi} are the same
as that of standard MF in Eq. 4. The parameters of the proposed
model will be updated as follows:
u,l −η · (−α(ru,i −d
−η · (−β(ru,i −d
i,l −η · (−β(ru,i −d
−η · (−α(ru,i −d
where η is the learning rate, λΘ is the regularization for parameters Θ(U) and Θ(I), and λγ is the regularization for parameters
γ(U) and γ(I). In our work, we utilize the sigmod function
for non-linear transformation, and we can take advantage of the
properties of sigmod function for ease of derivative calculation. It
is worth noting that the symbol Θ denotes all the parameters in the
fusion function, and the calculation of
∂Θi,l will be different for
different parameters in Θ. Next, we present the detailed derivation
∂Θi,l for personalized non-linear fusion function
i σ(Zs)σ(Zf)(1 −σ(Zs))(1 −σ(Zf))e(l)
i σ(Zs)σ(Zf)(1 −σ(Zs))(1 −σ(Zf)),
σ(Zs)σ(Zf)(1 −σ(Zs)),
+ b(l). The derivations of
∂Θi,l can be calculated in
the above way for both users and items. We omit the derivations
for linear fusion functions, since it is relatively straightforward.
The whole algorithm framework is shown in Algorithm 2. In lines
1-6, we perform HIN embedding to obtain the representations of
users and items. And in lines 8-19, we adopt the SGD algorithm to
optimize the parameters in the fusion function and rating function.
Complexity Analysis
HERec contains two major parts: (1) HIN embedding. The complexity of deepwalk is O(d · |V |), where d is the embedding
dimension and |V | is the number of nodes in the network.
Therefore it takes O(d · |U|) and O(d · |I|) to learn users’ and
items’ embeddings according to a single meta-path, respectively.
And the total complexity of HIN embedding is O(|P|·d·(|U|+|I|))
Algorithm 2 The overall learning algorithm of HERec.
Input: the rating matrix R; the learning rate η; the adjustable
parameters α, β; the regularization parameter λ; the metapath sets for users and items, P(U) and P(I).
Output: the latent factors for users and items, x and y; the latent
factors to pair HIN embedding of users and items, γ(U) and
γ(I); the parameters of the fusion function for users and items,
Θ(U) and Θ(I)
1: for l = 1 to |P(U)| do
Obtain users’ embeddings {e(l)
u } based on meta-path P(U)
according to Algorithm 1;
3: end for
4: for l = 1 to |P(I)| do
Obtain items’ embeddings {e(l)
i } based on the meta-path
according to Algorithm 1;
6: end for
7: Initialize x, y, γ(U), γ(I), Θ(U), Θ(I) by standard normal
distribution;
8: while not convergence do
Randomly select a triple ⟨u, i, ru,i⟩∈R;
Update xu, yi by typical MF;
for l = 1 to |P(U)| do
Calculate ∂e(U)
by Eq. 14;
Update Θ(U)
u,l by Eq. 10;
Update γ(U)
by Eq. 11;
for l = 1 to |P(I)| do
Calculate ∂e(I)
by Eq. 14;
Update Θ(I)
i,l by Eq. 12;
Update γ(I)
by Eq. 13;
21: end while
22: return x, y, γ(U), γ(I), Θ(U), Θ(I).
since the number of selected meta-paths is |P|. It is worth noting
that HIN embedding can be easily trained in parallel and we
will implement it using a multi-thread mode in order to improve
the efﬁciency of model. (2) Matrix factorization. For each triplet
⟨u, i, ru,i⟩, updating xu, yi, γ(U)
takes O(D) time, where
D is the number of latent factors. And updating Θ(U)
O(|P| · D · d) time to learn the transformation matrices M for
all meta-paths. In the proposed approach, |P| is generally small,
and d and D are at most several hundreds, which makes the
proposed method efﬁcient in large datasets. Specially, SGD has
very good practice performance, and we have found that it has a
fast convergence rate on our datasets.
EXPERIMENTS
In this section, we will demonstrate the effectiveness of HERec
by performing experiments on three real datasets compared to the
state-of-the-art recommendation methods.
Evaluation Datasets
We adopt three widely used datasets from different domains, consisting of Douban Movie dataset 1 from movie domain, Douban
1 
Statistics of the three datasets.
Ave. degrees
Ave. degrees
Douban Movie
User-Movie
User-Group
Movie-Director
Movie-Actor
Movie-Type
Douban Book
Book-Author
Book-Publisher
User-Business
User-Compliment
Business-City
Business-Category
The selected meta-paths for three datasets in our work.
Meta-paths
Douban Movie
UMU, UMDMU, UMAMU, UMTMU
MUM, MAM, MDM, MTM
Douban Book
UBU, UBABU, UBPBU, UBYBU
BUB, BPB, BYB
UBU, UBCiBU, UBCaBU
BUB, BCiB, BCaB
Book dataset 2 from book domain, and Yelp dataset 3 from
business domain. Douban Movie dataset includes 13,367 users and
12,677 movies with 1,068,278 movie ratings ranging from 1 to 5.
Moreover, the dataset also includes social relations and attribute
information of users and movies. As for the Douban Book dataset,
it includes 13,024 users and 22,347 books with 792,026 ratings
ranging from 1 to 5. Yelp dataset records user ratings on local
businesses and contains social relations and attribute information
of businesses, which includes 16,239 users and 14,282 local
businesses with 198,397 ratings raging from 1 to 5. The detailed
descriptions of the three datasets are shown in Table 2, and the
network schemas of the three datasets are plotted in Fig. 2. Besides
the domain variation, these three datasets also have different rating
sparsity degrees: the Yelp dataset is very sparse, while the Douban
Movie dataset is much denser.
We use the widely used mean absolute error (MAE) and root mean
square error (RMSE) to measure the quality of recommendation
of different models. The metrics MAE and RMSE are deﬁned as
(i,j)∈Dtest
(i,j)∈Dtest
2 
3 
where ri,j is the actual rating that user i assigns to item j, d
the predicted rating from a model, and Dtest denotes the test set
of rating records. From the deﬁnition, we can see that a smaller
MAE or RMSE value indicates a better performance.
Methods to Compare
We consider the following methods to compare:
• PMF : It is the classic probabilistic matrix factorization
model by explicitly factorizing the rating matrix into two lowdimensional matrices.
• SoMF : It incorporates social network information into
the recommendation model. The social relations are characterized
by a social regularization term, and integrated into the basic matrix
factorization model.
• FMHIN: It is the context-aware factorization machine ,
which is able to utilize various kinds of auxiliary information. In
our experiments, we extract heterogeneous information as context
features and incorporate them into the factorization machine for
rating prediction. We implement the model with the code from the
authors 4.
• HeteMF : It is a MF based recommendation method,
which utilizes entity similarities calculated over HINs using metapath based algorithms.
• SemRec : It is a collaborative ﬁltering method on
weighted heterogeneous information network, which is constructed by connecting users and items with the same ratings. It
ﬂexibly integrates heterogeneous information for recommendation
by weighted meta-paths and a weight ensemble method. We
implement the model with the code from the authors 5.
• DSR : It is a MF based recommendation method with
dual similarity regularization, which imposes the constraint on
users and items with high and low similarities simultaneously.
•HERecdw: It is a variant of HERec, which adopts the homogeneous network embedding method deepwalk and ignores
the heterogeneity of nodes in HINs. We use the code of deepwalk
provided by the authors 6.
4 
5 
6 
Results of effectiveness experiments on three datasets. A smaller MAE or RMSE value indicates a better performance. For ease of reading the
results, we also report the improvement w.r.t. the PMF model for each other method. A larger improvement ratio indicates a better performance.
•HERecmp: It can be view as a variant of HERec, which
combines the heterogeneous network embedding of metapath2vec++ and still preserves the superiority of HINs. We
use the code of metapath2vec++ provided by the authors 7.
• HERec: It is the proposed recommendation model based on
heterogeneous information network embedding. In the effectiveness experiments, we utilize the personalized non-linear fusion
function, which is formulated as Eq. 8. And the performance of
different fusion function will be reported in the later section.
The selected baselines have a comprehensive coverage of
existing rating prediction methods. PMF and SoMF are classic
MF based rating prediction methods; FMHIN, HeteMF, SemRec
and DSR are HIN based recommendation methods using metapath based similarities, which represent state-of-the-art HIN based
methods. The proposed approach contains an HIN embedding
7 
component, which can be replaced by other network embedding methods. Hence, two variants HERecdw and HERecmp are
adopted as baselines.
Among these methods, HIN based methods need to specify the
used meta-paths. We present the used meta-paths in Table 3. Following , we only select short meta-paths of at most four steps,
since long meta-paths are likely to introduce noisy semantics. We
set parameters for HERec as follows: the embedding dimension
number d = 64 and the tuning coefﬁcients α = β = 1.0.
Following , the path length for random walk is set to 40.
For HERecdw and HERecmp, we set the embedding dimension
number d = 64 for fairness. Following , , we set the
number of latent factors for all the MF based methods to 10. Other
baseline parameters either adopt the original optimal setting or are
optimized by using a validation set of 10% training data.
Effectiveness Experiments
For each dataset, we split the entire rating records into a training
set and a test set. For Double Movie and Book datasets, we set
four training ratios as in {80%, 60%, 40%, 20%}; while for Yelp
dataset, following , we set four larger training ratios as in
{90%, 80%, 70%, 60%}, since it is too sparse. For each ratio, we
randomly generate ten evaluation sets. We average the results as
the ﬁnal performance. The results are shown in Table 4. The major
ﬁndings from the experimental results are summarized as follows:
(1) Among these baselines, HIN based methods (HeteMF,
SemRec, FMHIN and DSR) perform better than traditional MF
based methods (PMF and SoMF), which indicates the usefulness
of the heterogeneous information. It is worthwhile to note that
the FMHIN model works very well among the three HIN based
baselines. An intuitive explanation is that in our datasets, most
of the original features are the attribute information of users or
items, which are likely to contain useful evidence to improve the
recommendation performance.
(2) The proposed HERec method (corresponding to the last
column) is consistently better than the baselines, ranging from
PMF to DSR. Compared with other HIN based methods, HERec
adopts a more principled way to leverage HINs for improving
recommender systems, which provides better information extraction (a new HIN embedding model) and utilization (an extended
MF model). Moreover, the superiority of the proposed HERec
becomes more signiﬁcant with less training data. In particular, the
improvement ratio of HERec over the PMF is up to 40% with
20% training data on the Douban Book dataset, which indicates
a signiﬁcant performance boost. As mentioned previously, the
Yelp dataset is very sparse. In this case, even with 60% training
data, the HERec model improves over PMF by about 26%.
As a comparison, with the same training ratio (i.e., 60%), the
improvement ratios over PMF are about 29% in terms of RMSE
scores. These results indicate the effectiveness of the proposed
approach, especially in a sparse dataset.
(3) Considering the two HERec variants HERecdw and
HERecmp, it is easy to see HERecdw performs much worse
than HERecmp. The major difference lies in the network embedding component. HERecmp adopts the recently proposed HIN
embedding method metapath2vec , while HERecdw ignores
data heterogeneity and casts HINs as homogeneous networks
for learning. It indicates HIN embedding methods are important
to HIN based recommendation. The major difference between
the proposed embedding method and metapath2vec (adopted by
HERecmp) lies in that we try to transform heterogeneous network
information into homogeneous neighborhood, while metapath2vec
tries to map all types of entities into the same representation
space using heterogeneous sequences. Indeed, metapath2vec is
a general-purpose HIN embedding method, while the proposed
embedding method aims to improve the recommendation performance. Our focus is to learn the embeddings for users and items,
while objects of other types are only used as the bridge to construct
the homogeneous neighborhood. Based on the results (HERec
> HERecmp), we argue that it is more effective to perform
task-speciﬁc HIN embedding for improving the recommendation
performance.
Detailed Analysis of The Proposed Approach
In this part, we perform a series of detailed analysis for the
proposed approach.
Selection of Different Fusion Functions
HERec requires a principled fusion way to transform node embeddings into a more suitable form that is useful to enhance recommendation performance. Therefore, we will discuss the impact
of different fusion functions on the recommendation performance.
For convenience, we call the HERec variant with the simple linear
fusion function (Eq. 6) as HERecsl, the variant with personalized
linear fusion function (Eq. 7) as HERecpl, and the variant with
personalized non-linear fusion function (Eq. 8) as HERecpnl.
We present the performance comparison of the three variants of
HERec on the three datasets in Fig. 4.
As shown in Fig. 4, we can ﬁnd that overall performance
ranking is as follows: HERecpnl > HERecpl > HERecsl. Among
the three variants, the simple linear fusion function performs the
worst, as it ignores the personalization and non-linearity. Indeed,
users are likely to have varying preferences over meta-paths ,
which should be considered in meta-path based methods. The
personalization factor improves the performance signiﬁcantly. As
a comparison, the performance improvement of HERecpnl over
HERecpl is relatively small. A possible reason is that the incorporation of personalized combination parameters increases the capability of linear models. Nonetheless, HERecpnl still performs the
best by considering personalization and non-linear transformation.
In a complicated recommender setting, HIN embeddings may not
be directly applicable in recommender systems, where a non-linear
mapping function is preferred.
Since HERecpnl is the best variant of the proposed model, in
what follows, HERec will use the personalized non-linear fusion
function, i.e., HERecpnl by default.
Cold-start Prediction
HINs are particularly useful to improve cold-start prediction,
where there are fewer rating records but heterogeneous context
information is available. We consider studying the performance
w.r.t. different cold-start degrees, i.e., the rating sparsity. To test it,
we ﬁrst categorize “cold” users into three groups according to the
numbers of their rating records, i.e., (0, 5], (5, 15] and (15, 30]. It
is easy to see that the case for the ﬁrst group is the most difﬁcult,
since users from this group have fewest rating records. Here, we
only select the baselines which use HIN based information for
recommendation, including SoMF, HeteMF, SemRec, DSR and
FMHIN. We present the performance comparison of different
methods in Fig. 5. For convenience, we report the improvement
ratios w.r.t. PMF. Overall, all the comparison methods are better
than PMF (i.e., a positive y-axis value). The proposed method
performs the best among all the methods, and the improvement
over PMF becomes more signiﬁcant for users with fewer rating records. The results indicate that HIN based information is
effective to improve the recommendation performance, and the
proposed HERec method can effectively utilize HIN information
in a more principled way.
Impact of Different Meta-Paths
As shown in Table 3, the proposed approach uses a selected
set of meta-paths. To further analyze the impact of different
meta-paths, we gradually incorporate these meta-paths into the
proposed approach and check the performance change. In Fig.
6, we can observe that generally the performance improves (i.e.,
becoming smaller) with the incorporation of more meta-paths.
Both meta-paths starting with the user type and item type are
Training Ratio
Training Ratio
(a) Douban Movie
Training Ratio
Training Ratio
(b) Douban Book
Training Ratio
Training Ratio
Fig. 4. Performance comparison of different fusion functions on three datasets.
#Rating of Users
RMSE Improvment
#Rating of Users
MAE Improvement
(a) Douban Movie
#Rating of Users
RMSE Improvement
#Rating of Users
MAE Improvement
(b) Douban Book
#Rating of Users
RMSE Improvement
#Rating of Users
MAE Improvement
Fig. 5. Performance comparison of different methods for cold-start prediction on three datasets. y-axis denotes the improvement ratio over PMF.
(a) Douban Movie
(b) Douban Book
Fig. 6. Performance change of HERec when gradually incorporating meta-paths.
useful to improve the performance. However, it does not always
yield the improvement with more meta-paths, and the performance
slightly ﬂuctuates. The reason is that some meta-paths may contain
noisy or conﬂict information with existing ones. Another useful
observation is that the performance quickly achieves a relatively
good performance with the incorporation of only a few metapaths. This conﬁrms previous ﬁnding : a small number of
high-quality meta-paths are able to lead to large performance
improvement. Hence, as mentioned before, we can effectively
control the model complexity by selecting just a few meta-paths.
Parameter Tuning
For matrix factorization based methods, an important parameter
to tune is the number of latent factors. The proposed model also
involves such a parameter. We vary it from 5 to 40 with a step of
5, and examine how the performance changes w.r.t the number of
latent factors. We present the tuning results in Fig. 7. As we can
see, using 10 latent factors yields the best performance, indicating
that the number of latent factors should be set to a small number.
Next, we ﬁx the number of latent factors as ten, and tune two
other parameters α and β (Eq. 5), which are used to integrate different terms as weights. Now we examine how they inﬂuence the
model performance. For both parameters, we vary them in the set
of {0.1, 0.5, 1, 2}. As shown in Fig. 8, the optimal performance is
obtained near (1, 1), i.e., both α and β are around 1. The results
show that the HIN embeddings from both the user and item sides
are important to improve the prediction performance. Overall, the
change trend is smooth, indicating that the proposed model is not
very sensitive to the two parameters.
Finally, we study the performance change w.r.t. the number
of iterations. As shown in Fig. 9, we can see that the proposed
model has a fast convergence rate, and about 40 to 60 iterations
are required for dense datasets (i.e., Douban Movie and Book),
while about 20 iterations are required for sparse datasets (i.e.,
CONCLUSION
In this paper, we proposed a novel heterogeneous information
network embedding based approach (i.e., HERec) to effectively
utilizing auxiliary information in HINs for recommendation. We
designed a new random walk strategy based on meta-paths to
derive more meaningful node sequences for network embedding.
Since embeddings based on different meta-paths contain different
semantic, the learned embeddings were further integrated into
an extended matrix factorization model using a set of fusion
functions. Finally, the extended matrix factorization model together with fusion functions were jointly optimized for the rating
prediction task. HERec aimed to learn useful information representations from HINs guided by the speciﬁc recommendation
task, which distinguished the proposed approach from existing
HIN based recommendation methods. Extensive experiments on
three real datasets demonstrated the effectiveness of HERec. We
also veriﬁed the ability of HERec to alleviate cold-start problem
and examine the impact of meta-paths on performance.
As future work, we will investigate into how to apply deep
learning methods (e.g., convolutional neural networks, auto encoder) to better fuse the embeddings of multiple meta-paths. In
addition, we only use the meta-paths which have the same starting
and ending types to effectively extract network structure features
in this work. Therefore, it is interesting and natural to extend
the proposed model to learn the embeddings of any nodes with
arbitrary meta-paths. As a major issue of recommender systems,
we will also consider how to enhance the explainablity of the
recommendation method based on the semantics of meta-paths.