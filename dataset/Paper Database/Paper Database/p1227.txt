Multi-Item Auctions Defying Intuition?
CONSTANTINOS DASKALAKIS1
Massachusetts Institute of Technology
The best way to sell n items to a buyer who values each of them independently and uniformly
randomly in [c, c + 1] is to bundle them together, as long as c is large enough. Still, for any c, the
grand bundling mechanism is never optimal for large enough n, despite the sharp concentration
of the buyer’s total value for the items as n grows. Optimal multi-item mechanisms are rife with
unintuitive properties, making multi-item generalizations of Myerson’s celebrated mechanism a
daunting task. We survey recent work on the structure and computational complexity of revenueoptimal multi-item mechanisms, providing structural as well as algorithmic generalizations of
Myerson’s result to multi-item settings.
Categories and Subject Descriptors: F.0 [Theory of Computation]: General
General Terms: Algorithms, Economics, Theory
Additional Key Words and Phrases: Auctions, Multidimensional Mechanism Design
INTRODUCTION
Optimal mechanism design is a problem with important applications and deep
mathematical structure. In its basic formulation, studied in this survey, a seller
has n items to sell to m interested buyers. Each buyer knows his own values for
the items, but the seller and the other buyers only know a distribution from which
these values are assumed to be drawn. The goal is to design a sales procedure,
called a mechanism, that optimizes the expected revenue of the seller.
The basic version of the problem and its myriad extensions have familiar applications. Here are a few quick ones: When auction-houses sell items, this is the
problem that they face. This is also the problem that governments face when auctioning a valuable public resource such as wireless spectrum. Finally, the problem
arises every millisecond as auctions are used in sponsored search and the allocation
of banner advertisements.
When it comes to selling a single item, optimal mechanism design is really well
understood. Building on Myerson’s celebrated work [Myerson 1981], it has been
studied intensely for decades in both Economics and Computer Science. This research has revealed surprisingly elegant structure in the optimal mechanism, as well
as robustness to the details of the distributions, and has had a deep impact in the
broader ﬁeld of mechanism design.
While all this progress has been taking place on the single-item front, the multiitem version of the problem has remained poorly understood. Despite substantial
research eﬀort, it is not even known how to optimally sell two items to one buyer.
On the contrary, multi-item auctions appear to have very rich structure, often
1Supported by a Microsoft Research faculty fellowship, NSF Awards CCF-0953960 (CAREER)
and CCF-110149, and ONR grant N00014-12-1-0999.
Author’s address: 
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
C. Daskalakis
exhibiting unintuitive properties.
In this survey, we present recent progress on the structure and computation of
optimal multi-item auctions. Our survey will focus on the philosophy and intuition
behind the results, but we will also give substantial technical detail. Our intention
is not to present a complete account of results on multi-item mechanisms, but to
motivate what we view as a fresh perspective on the problem.
Structure. In Section 2, we take a brief tour of the wondrous land of single-item
problems, where we discuss the surprising simplicity of optimal mechanisms. Then,
in Section 3, we present multi-item examples showing various ways in which the
simplicity of optimal single-item mechanisms fails to generalize. A few of these
examples are particularly striking as they illustrate quite unintuitive properties of
optimal multi-item mechanisms.
The structure of these mechanisms appears so
rich that we go one step back, in Section 4, discussing approaches that may be
able to accommodate this richness. Then, in Section 5, we present a duality based
approach to the multi-item problem, showing how it can be used to characterize
single-bidder mechanisms. We also show how this framework can be used to demystify the examples of Section 3, which all pertain to a single bidder. In Section 6, we
turn to computation, presenting computationally eﬃcient algorithms for the multiitem multi-bidder problem. As a byproduct, these algorithmic results oﬀer a crisp
characterization of the structure of optimal multi-item multi-bidder mechanisms.
Finally, in Section 7, we wrap up with a short summary and future directions.
THE WONDROUS MYERSON-LAND
Consider the task of selling an item to a single buyer with the goal of maximizing
the seller’s revenue. The following is a well-known fact.
Fact 1 [Myerson 1981; Riley and Zeckhauser 1983]. The optimal way
to sell one item to a buyer whose value for the item is drawn from some known
distribution F is a take-it-or-leave-it oﬀer of the item at some price in arg max{x ·
(1 −F(x))}.
Example 1. The optimal way to sell one item to a buyer whose value for the
item is uniformly distributed in is to price the item at 0.5.
The expected
revenue is 0.25.
While it is perhaps intuitive that this should be true, it still surprising that, among
all possible communication protocols that the seller and buyer could engage in, the
optimal one would require minimal communication and involve no randomization
In this light, it is even more surprising that the optimal auction would maintain
its simplicity when multiple buyers are involved.
Fact 2 [Myerson 1981]. When one item is sold to m buyers whose values for
the item are i.i.d. from a known, regular distribution F,2 the optimal mechanism
is a second price auction with reservation price arg max{x · (1 −F(x))}.
2A distribution F with density f is called regular iﬀx −1−F (x)
is monotone increasing.
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
Multi-Item Auctions Defying Intuition?
There are several reasons why this fact is surprising, besides the simplicity of the
optimal mechanism:
(1) The mechanism is deterministic, namely the auctioneer does not need access
to a random generator to implement the allocation and pricing.
(2) The mechanism requires only one round of communication, namely the bidders
submit bids to the auctioneer who then decides the outcome without any further
exchanges with them, except to announce the outcome.
(3) The mechanism is dominant strategy truthful (DST), but it is optimal among
the larger class of Bayesian Incentive Compatible (BIC) mechanisms.3
In fact, these properties carry over to settings where bidder values are not necessarily i.i.d. and their distributions are not necessarily regular.
Fact 3 [Myerson 1981]. When one item is sold to m buyers whose values for
the item are independently drawn from known distributions, the optimal mechanism
is a virtual welfare maximizer, namely:
(1) Bidders are asked to report bids for the item: b1, . . . , bm.
transformed
h1(b1), . . . , hm(bm),
where each hi(·) depends on the corresponding bidder’s value distribution (but not on the other bidders’ distributions and not
(3) The item is allocated to the bidder with the highest ironed virtual bid, with some
lexicographic tie-breaking.
(4) The winner of the item is charged his threshold bid, namely the smallest bid he
could place and still win the item.
Facts 1-3 are both surprising and powerful, providing simple, yet sharp and versatile machinery for revenue optimization in single-item and, more broadly, singledimensional environments.5 Importantly, they have provided solid foundation for
a tremendous literature that has brought tools from approximation algorithms and
probability theory into mechanism design. Building on the shoulders of Myerson,
this literature strives to understand how to make the theory robust, further improving the simplicity of mechanisms and reducing their dependence on the details of
the bidders’ distributions, both at a quantiﬁable loss in revenue. See, e.g., [Hartline
2013; Chawla and Sivan 2014; Roughgarden 2015] for recent surveys of this work.
3A mechanism is called Dominant Strategy Truthful iﬀit is in the best interest of every bidder
to truthfully report their value to the mechanism, regardless of what the other bidders report.
Bayesian Incentive Compatible mechanisms are a broader class, but we postpone their deﬁnition,
as it is slightly technical and not important for our discussion right now. See Deﬁnition 6.
4The precise functional form of the hi’s is not important for this survey.
5In a single-dimensional environment, the seller can provide service to several buyers, subject
to constraints on which buyers can receive service simultaneously. Each buyer has a value for
receiving service, which is distributed according to some distribution known to the seller and the
other buyers. Single-dimensional environments clearly generalize single-item environments, where
only one buyer can be served the item.
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
C. Daskalakis
AUCTIONS DEFYING INTUITION
Despite remarkable progress on the single-item front over the past few decades,
revenue optimization in multi-item settings has remained poorly understood. We
do not even have a sharp characterization of optimal two-item mechanisms, even
when there is a single buyer. On the contrary, multi-item mechanisms exhibit such
rich structure that it is diﬃcult to imagine what a generalization of Myerson’s
results could look like. Or, better said, the generalizations that we can imagine can
be shot down via simple examples.
To illustrate the richness of multi-item mechanisms, let us consider some simple
multi-item settings and their corresponding optimal mechanisms. All our examples
will involve a seller with n items and a single additive buyer.
Such a buyer is
characterized by a private vector (v1, . . . , vn) of values for the items and derives
i∈S vi −p, whenever he pays p to get the items in set S ⊆[n]. If S and p
are random his utility is E[P
i∈S vi −p].
When it comes to multiple items, a natural question to ask is whether we can use
Myerson’s technology to design optimal mechanisms, and indeed what exactly it is
that we should be selling. The following simple example illustrates that we may
need to bundle items, even when there is a priori no interaction between them.
Example 2. Suppose n = 2 and the buyer’s values are i.i.d., uniform in {1, 2}.
Since the buyer is additive, and his values for the items are independent, getting
one of the two items will not aﬀect his marginal value for getting the other item as
well. Since there is no interaction between the item values, it is natural to expect
that the optimal mechanism should sell the two items separately. By Fact 1, this
would mean pricing each item at 1 and letting the buyer decide which of them to
buy. Simple calculations show that the expected revenue of this mechanism is 2.
Interestingly, there is a ﬂaw in this logic. While it is true that item-values do
not “interact with each other,” we may still want to capitalize on the fact that the
buyer’s average item-value is better concentrated than his value for a speciﬁc item.
Indeed, it is better to only oﬀer the bundle {1, 2} of both the items at price 3. Given
i vi ≥3] = 3/4, the expected revenue of the seller is now 9/4 > 2. It can
be shown that this is the optimal mechanism [Daskalakis et al. 2014].
Example 2 illustrates the following.
Fact 4. Optimal multi-item mechanisms may require bundling, even when there
is a single additive buyer with independent values for the items.
Our intuition for the eﬀectiveness of bundling in Example 2 appealed to the
concentration of the buyer’s surplus (i.e. total value for both items). There was
still a ﬂaw in our logic, however, and this time a less tangible one: Why is the
surplus the right benchmark to compare against? The following result, discussed in
more detail in Section 5.8, illustrates a setting where the structure of the optimal
mechanism is diﬀerent in two asymptotic regimes.
Theorem 1 [Daskalakis et al. 2015]. Consider selling n items to a buyer
whose values for the items are i.i.d. uniform in [c, c + 1]. The following are true:
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
Multi-Item Auctions Defying Intuition?
(1) For all n, there exists c0 such that, for all c > c0, the optimal mechanism only
oﬀers the bundle of all the items together at some price.
(2) For all c, there exists n0 such that, for all n > n0, the optimal mechanism does
not only oﬀer the bundle of all items together at some price.
Part 2 of the above theorem is especially counter-intuitive.
As n →∞, the
buyer’s average value for the items,
, becomes more and more concentrated
around its mean, c + 0.5. It is clear that the seller cannot hope to extract higher
revenue than the buyer’s total expected value, n(c + 0.5), and oﬀering the grand
bundle for n(c + 0.5 −ϵ), for the tiniest discount ϵ > 0, would make the buyer
accept to purchase it with probability arbitrarily close to 1 as n →∞. Still, for
no n does this intuition materialize, and it never becomes optimal to only sell the
grand bundle. . .
Randomization
Recall that optimal single-item mechanisms do not require randomization. Our
next example illustrates that this is not the case in multi-item settings.
Example 3. Suppose n = 2, and v1 is distributed uniformly in {1, 2} while
v2 is independently distributed uniformly in {1, 3}. In this example, an optimal
deterministic mechanism prices item 1 at 1 and item 2 at 3. Its expected revenue
Still, we can do better. We can oﬀer the buyer two options: The ﬁrst is to pay 4
and get both items. The second is to pay 2.5 to get a “lottery ticket” that allocates
item 1 with probability 1 and item 2 with probability 1/2. The expected revenue of
this mechanism is 2.625, which can be shown to be optimal [Daskalakis et al. 2014].
So randomization is necessary for revenue maximization. It turns out its eﬀect
on the revenue may actually be quite dramatic.
Fact 5. Optimal multi-item mechanisms may require randomization. The gap
between the revenue of the optimal randomized and the optimal deterministic mechanism can be arbitrary large, even when there are two items and a single buyer [Briest
et al. 2010; Hart and Nisan 2013].
Menu Size Complexity
In our previous examples, we described the optimal mechanism as a menu of options for the buyer to choose from. If the optimal mechanism were guaranteed to
be deterministic, describing it as a menu would require a bounded number of options, as there is a ﬁnite number of possible bundles that the mechanism may oﬀer.
Given Fact 5, however, it becomes unclear how to specify the optimal mechanism.
The following example illustrates that representing it as an explicit menu may be
infeasible.
Example 4 [Daskalakis et al. 2013]. Suppose n = 2, and v1 is distributed
according to the Beta distribution with parameters (3, 3) while v2 is independently
distributed according to the Beta distribution with parameters (3, 4).6
6The Beta distribution with parameters (α, β) is distributed in according to the density
function f(x) ∝xα−1(1 −x)β−1.
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
C. Daskalakis
optimal mechanism needs to oﬀer uncountably many lotteries.
The alarming feature of Example 4 is that it becomes unclear whether the allocation and price rule of the optimal mechanism can be eﬀectively described via a small
number of parameters, even if the buyer’s distribution can be.7 In Section 5.6.2,
we will show that the optimal mechanism for Example 4 can actually be described
via a small number of parameters. However, this may not be true in general.
Non-Monotonicity
It seems intuitive that a seller with more valuable items should expect a higher
revenue from selling them. One way to quantify this intuition is the following.
Consider two distributions F and G such that F ﬁrst-order stochastically dominates G, denoted F ⪰1 G. This means that, for all x ∈R, F(x) ≤G(x), i.e. F and
G can be coupled so that F always samples a value larger than the value sampled
by G. It easily follows from Fact 1 that a seller selling an item to some buyer whose
value for the item is distributed according to F makes higher revenue than if the
buyer’s value were distributed according to G.
Surprisingly this fails to hold in multi-item settings!
Fact 6 [Hart and Reny 2012]. There exist distributions F and G such that
F ⪰1 G but the optimal revenue from selling two items to a buyer whose values are
i.i.d. from F is smaller than if they were i.i.d. from G.
CROSSROADS
It is clear from our examples in the previous section that, in the close neighborhood
of Myerson’s setting, optimal mechanisms exhibit rich structure and may defy our
intuition. It is not even clear if they have a ﬁnite eﬀective representation. In view
of these complications, there are several directions we may want to pursue:
(1) Forget about trying to understand optimal mechanisms and pursue approximations directly. Even though optimal mechanisms are complex, there may still
be simple mechanisms that can be shown to guarantee some good fraction of
the optimal revenue.
(2) Forget about characterizing the structure of optimal mechanisms and study
instead whether they can be computed eﬃciently.
(3) Develop new machinery to characterize the structure of optimal mechanisms.
Despite their apparent complexity and fragility, there may still be a diﬀerent
lens through which they exhibit more structure.
It is a priori dubious whether the approximation approach can lead anywhere.
Without understanding the optimal mechanism, how can we possibly establish the
approximate optimality of some other mechanism? It is quite surprising then that
this approach has actually been quite fruitful:
7Of course, in a somewhat perverse way, the buyer’s distribution itself “indexes” the optimal
mechanism for that distribution. But this does not count as it is unclear if there is an eﬃcient
procedure that can implement the mechanism given this description. We will touch upon this
point a bit later, when we discuss the computation of optimal mechanisms in Section 6.
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
Multi-Item Auctions Defying Intuition?
—In multi-item settings with additive buyers, [Hart and Nisan 2012; Li and Yao
2013; Babaioﬀet al. 2014; Yao 2015; Rubinstein and Weinberg 2015] design
approximate mechanisms by carefully decomposing the support of the buyers’
distributions into regions and, due to lack of a better benchmark, using expected
welfare as an obvious upper bound to the optimal revenue, competing against
this stronger benchmark in some of the regions. Here is a very interesting and
clean result that they obtain for the setting of the previous section.
Theorem 2 [Babaioff et al. 2014]. When n items are sold to a buyer
whose values for the items are independent, a mechanism that either only prices
individual items or only prices the bundle of all the items obtains at least 1/6-th
of the optimal revenue.
—In multi-item settings with unit-demand buyers,8 [Chawla et al. 2007; Chawla
et al. 2010] upper bound the optimal revenue by the optimal revenue in a related
single-dimensional setting, and deﬁne sequential posted price mechanisms for the
multi-item setting competing against this stronger upper bound.
These approximation results provide simple ways through which a constant fraction of the optimal revenue can be attained, bypassing the diﬃculties coming from
our lack of understanding of optimal multi-item mechanisms. Moreover, they help
us understand the tradeoﬀs between simplicity, optimality and generality of mechanisms. For example, Theorem 2 tells us that, if we are willing to sacriﬁce generality
in the model and 5/6-ths of the revenue, a very simple mechanism will work for
us. Still such approximation results only apply to restricted settings, e.g. they
typically assume independence of the distributions across items, and it is unclear
how to extend them to broader settings: correlation among items, more complex
buyer valuations, and more complex allocation constraints.
Ultimately, it is our belief that a cohesive theory of optimal multi-item mechanisms cannot be obtained through disparate approximation results applying to
diﬀerent multi-item environments. And even where these approximation results
do apply they may still not provide ﬁne-tuned insight into the salient features of
the setting responsible for revenue. As a simple example, the non-monotonicity of
revenue (Fact 6) is not foreseeable from Theorem 2 alone. On the contrary, the
theorem hints towards the incorrect conclusion.
In this light, over the past several years we have pursued the challenge of characterizing optimal multi-item mechanisms from both an algorithmic and a structural
perspective. In the next two sections, we give a ﬂavor of our progress on these
fronts. In both sections, we discuss our philosophy as well as give an overview of
results and techniques. We note that our goal is not the coverage of all results in
the literature, but mostly the philosophy behind them. So we will focus on our
philosophy and a biased sample of primarily our own results.
8These are buyers who only want to purchase one item.
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
C. Daskalakis
THE STRUCTURE OF MULTI-ITEM MECHANISMS
Philosophy
In Sections 3.1–3.4 we gave several multi-item examples, making claims about their
optimal mechanisms.
Taking a step back, how did we go about proving these
claims? More broadly, how is the optimality of some object, such as a mechanism,
established?
Two principled approaches for doing this are the following.
ﬁrst entails formulating the problem at hand as a convex minimization/concave
maximization problem, and then showing that the object whose optimality we
want to establish satisﬁes ﬁrst-order conditions. The second is to develop a dual
formulation and identify a solution to the dual that matches the value attained by
the object whose optimality is to be established in the primal.
In single-dimensional environments, Facts 1-3 can be shown using the ﬁrst approach.
Through a chain of deductions, [Myerson 1981] expresses the expected
revenue of a mechanism as an expected (virtual) welfare quantity, which can be
optimized in a point-wise manner.
In multi-item environments, it is not clear how to generalize Myerson’s approach,
except under signiﬁcant restrictions on the value distributions; see [Rochet and Stole
2003; Manelli and Vincent 2007]. This motivates the second approach, which we
have pursued in the context of a single, additive buyer in [Daskalakis et al. 2013;
2015]. We give a ﬂavor of our approach with examples in the following sections.
In this section, we restrict our attention to a seller with n items and an additive buyer whose values for these items are jointly distributed according to some
distribution F.
For simplicity, we assume that F is supported on some box
i[xi, xi] ⊂Rn
+, and is continuously diﬀerentiable with bounded partial
derivatives. We call X the typeset of the buyer, and its elements the buyer’s possible types. If a buyer of type x is allocated a subset S of the items and pays price t
for it, his utility is P
i∈S xi −t. Our buyers are also risk-neutral, so if S and t are
random, then their utility is ES,t[P
i∈S xi −t].
The seller only knows F, but the buyer knows his realized type, and the seller’s
goal is to design a mechanism to optimize her expected revenue. By the revelation
principle the optimal mechanism can be described in the form of a menu whose
entries are lotteries. Each lottery speciﬁes a vector of probabilities p1, . . . , pn and
a price t. If purchased, it will allocate each item i independently with probability
pi. Given a menu of lotteries, the buyer will choose the lottery that optimizes his
utility, given his type. If all lotteries give him negative utility, then he will not
purchase any of them.
Convex Optimization Formulation
To develop our duality framework we start with expressing our mechanism design
problem as a convex optimization problem. Here we have a few options.
(1) Represent the mechanism as a menu of lotteries for the buyer to choose from.
There are a few reasons why we dislike this approach.
First, the menu of the
optimal mechanism may be uncountable in size, as Example 4 illustrates. So we
would have to represent it as a continuous set. Second, given some representation
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
Multi-Item Auctions Defying Intuition?
of the menu, it is cumbersome to express the expected revenue resulting from this
menu, as such an expression would have to incorporate the buyer’s optimization
over lotteries in the menu. Finally, each lottery in the menu is multi-parametric,
comprising n allocation probabilities as well as a price.
(2) Represent the mechanism as a menu, but also keep track of which lottery in
the menu each possible type of buyer will purchase. In this case, a mechanism can
be represented as a pair of functions: (i) the allocation function P : X → n
specifying the allocation probabilities of the lottery that each type will purchase,
if any; and (ii) the price function T : X →R specifying the price that each type
will pay for the purchased lottery, if any.
Now, the representation of the mechanism is simpler, and we can easily express
its expected revenue as follows:
T (x)dF(x).
Of course, we need to add some consistency constraints to make sure that our
modeling is faithful:
∀x, x′ ∈X : x · P(x) −T (x) ≥x · P(x′) −T (x′);
∀x ∈X : x · P(x) −T (x) ≥0.
Constraint (2) expresses that no type prefers a diﬀerent lottery to the one we
maintain for this type, while Constraint (3) expresses that each type will actually
buy this lottery.
Finding the pair of functions (P, T ) optimizing (1) subject to the constraints (2)
and (3) was the approach taken by [Myerson 1981] and is quite standard. In the
multi-item setting, however, this representation is still cumbersome to work with
as, besides having an n-variate input, the compound function (P, T ) also has an
(n + 1)-dimensional output.
(3) Given the complexity of the standard representation, we decide to optimize over
mechanisms indirectly. Rather than optimizing revenue in terms of the mechanism’s
allocation and price functions, we want to explore whether we can optimize revenue
in terms of the buyer’s utility from participating in the mechanism.
Indeed, facing some mechanism, a buyer of type x will decide to buy some lottery
(px, tx), thereby enjoying utility px ·x−tx from his decision.9 So, every mechanism
induces a function u : X →R, where u(x) expresses the utility of the buyer when
his realized type is x and he buys his favorite lottery in the mechanism, if any. Our
goal is to optimize over mechanisms indirectly by optimizing over u’s, which raises
two questions:
(1) Given a function u : X →R, can we recognize whether there is a mechanism
inducing this function u as the utility of the buyer?
(2) If u is induced by a mechanism, is there enough information in u to uniquely
specify the expected revenue of whatever mechanism induces u, and can we get
our hands on a mechanism that induces u?
9Let us assume that the lottery (⃗0, 0) is always in our menu to account for the possibility that the
buyer may derive negative utility from all lotteries in the menu and hence decide to buy none.
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
C. Daskalakis
A priori it is unclear whether u is informative enough about the mechanism(s)
that induce(s) it.
In fact, it appears that it is losing information about these
mechanisms. Nevertheless, the answer to each of the two questions above is actually
“yes,” due to the following theorem by Rochet.
Theorem 3 [Rochet 1987]. Function u : X →R is induced by a mechanism
iﬀu is 1-Lipschitz continuous with respect to the ℓ1-norm, non-decreasing, convex
and non-negative. Moreover, if these conditions are met then ∇u(x) exists almost
everywhere in X, and wherever it exists:
—∇u(x) are the allocation probabilities of the lottery purchased by type x, and
—∇u(x) · x −u(x) is the price of the lottery purchased by type x
in any mechanism inducing u.
The theorem follows by combining Constraints (2) and (3). For a concise derivation of the theorem, please refer to Lecture 21 of [Daskalakis 2015]. In order to
ground it to our experience, let us plot the utility induced by the optimal mechanism in Example 1. The utility is shown in Figure 1. We can verify that it satisﬁes
the conditions of the theorem, and its derivatives contain information about the
allocation function of the mechanism.
The utility induced by a take-it-or-leave it oﬀer of an item at 0.5.
With Theorem 3, we can formulate our mechanism design problem as follows:
(∇u(x) · x −u(x))dF(x)
|u(x) −u(y)| ≤|x −y|1, ∀x, y ∈X
u : non-decreasing
u : convex
u(x) ≥0, ∀x ∈X.
Note that our formulation aims at optimizing the expected price paid by the buyer,
which is given by ∇u(x) · x −u(x) when his type is x, subject to the constraints
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
Multi-Item Auctions Defying Intuition?
on the function u. Since ∇u(x) may only be undeﬁned at a measure zero subset of
X (given that F has no atoms), we can take “∇u(x)” to mean anything when it
is undeﬁned, and this will not aﬀect our revenue. For concreteness, from now on,
whenever we write ∇u(x), we will mean any subgradient of u at x (which will exist
as u is convex).
The advantage of our new formulation is that the variable u is a scalar function
of the buyer’s type. The downside is that the objective function is cumbersome and
the constraints, especially convexity, are diﬃcult to handle. We can eliminate the
ﬁrst issue with a little massaging of the objective, using the divergence theorem.
Our objective can equivalently be written as follows, where f denotes the density of
F and ˆη(x) denotes the outer unit normal vector at point x ∈∂X of the boundary
of X—see Lecture 21 of [Daskalakis 2015] for a concise derivation.
(∇u(x) · x −u(x))dF(x) ≡
u(x)f(x)(x · ˆη(x))dx −
u(x)(∇f(x) · x + (n + 1)f(x))dx.
Our massaged objective is linear in our variable u. Indeed, it can be viewed as
the “expectation” of u with respect to the signed measure µ with the following
density:10
f(x)(x · ˆη(x))1x∈∂X −(∇f(x) · x + (n + 1)f(x)).
Equipped with the above deﬁnition, we can express our mechanism design
problem as the following convex optimization problem.
|u(x) −u(y)| ≤|x −y|1, ∀x, y ∈X
u : non-decreasing
u : convex
u(x) ≥0, ∀x ∈X.
Balancing µ. For u(x) = 1, integral 4 becomes −1. Hence, so does integral 5,
and therefore
X dµ = −1. So µ(X) = −1. It is convenient to have µ balanced,
namely satisfy µ(X) = 0. So we add an atom of +1 at point x = (x1, . . . , xn) to
make this happen. Accordingly, from now on, µ is in fact the measure with the
following density:
1x=x + f(x)(x · ˆη(x))1x∈∂X −(∇f(x) · x + (n + 1)f(x)).
10To be formal here, we should not deﬁne µ through its density. It is more accurate to deﬁne µ
using Riesz’s representation theorem, as the unique Radon measure such that the bounded linear
functional (5) of bounded continuous functions u equals
X udµ. Accordingly, all measures in our
duality framework will be Radon measures. Having said that, we invite the reader to forget about
Radon measures and Riesz’s theorem for the remainder of this survey. Formally, whenever we talk
about measures we mean Radon measures, and µ is as deﬁned by Riesz’s representation theorem.
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
C. Daskalakis
Interpretation of Convex Formulation
Figure 2 shows µ for the single-item setting of Example 1, while Figure 3 shows
µ for the setting of Example 4. As measure µ is now two-dimensional we have
color-coded it. The dashed curve separates X+ \ {⃗0} from X−, where X+ and X−
are subsets of X where µ is positive and negative respectively. Notice the atom of
+1 measure at point ⃗0 in both ﬁgures.
Measure µ in Example 1.
Fig. 3. Measure µ in Example 4. The dashed
curve separates X+ \ {⃗0} from X−. In particular, X+ \ {⃗0} is an increasing (ie upperclosed) subset of X.
Formulation (P) is asking us to maximize
X udµ. So we would like to make
u as large as possible where µ is positive and make it as small as possible where
µ is negative. However, Constraints 6–9 impose interesting tradeoﬀs on how we
should implement this optimally, as u should be continuous, not too steep, and
convex-nondecreasing.
For instance, the optimal u against the measure of Figure 2 turns out to be the
one shown in Figure 1. How do we know this? It is not completely obvious, but we
know it should be true from Fact 1/Example 1.
In the multi-item setting, what we need is new machinery that will allow us to
identify optimal such tradeoﬀs. As we have already discussed, however, we know
of no direct way to ﬁnd these tradeoﬀs by studying formulation (P) directly. Our
approach is instead to develop a dual optimization problem that will hopefully
provide insight about the optimal solution to (P).
Duality: Building Intuition
It is a priori not clear whether (P) has a strong dual problem, i.e. a minimization
problem whose optimal value matches that of the optimal value of (P). The reason
is that it is an inﬁnite-dimensional program, and we are not aware of inﬁnitedimensional programming tools that can handle our constraints [Luenberger 1968;
Anderson and Nash 1987].
We will show that a strong dual actually does exist in Section 5.7.
that let us build some intuition though, grounding it to our experience in the
ﬁnite-dimensional world.
In this section, we will make an analogy to min-cost
perfect matching duality that will lead us to formulate a weak dual of (P),
upper-bounding but not necessarily matching the value of (P). But ﬁrst let us
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
Multi-Item Auctions Defying Intuition?
massage (P) to the following equivalent formulation:
u(x) −u(y) ≤|(x −y)+|1, ∀x, y ∈X
u : convex
where we denote by |(x −y)+|1 = P
i max(0, xi −yi). Notice that Constraint (11)
already implies that u must be non-decreasing as well as 1-Lipschitz with respect
to the ℓ1-norm. Combined with (13), it also implies non-negativity. So, if anything, our new constraints might have restricted the set of functions that we are
optimizing over.
But, it is also easy to see that Constraints (6) and (7) imply
Constraint (11). Moreover, Constraint (13) could have been added to the original
formulation without changing the optimal value, given that µ(X) = 0. So the two
formulations are actually equivalent.
Next, let us write µ as the diﬀerence µ+ −µ−of two non-negative measures µ+
and µ−, so that
for all measurable u.
Given that µ(X) = 0, it follows that µ+(X) = µ−(X).
Moreover, let X+ and X−be a partition of X so that µ+ is supported on X+
and µ−is supported on X−.
With this notation, let us consider the following
relaxation of (P):
u(x) −u(y) ≤|(x −y)+|1, ∀x ∈X+, y ∈X−
where we have dropped the convexity constraint, and only maintain Constraint 11
for x ∈X+ and y ∈X−. It is clear that any feasible solution to (P) is also a feasible
solution to (P ′) and, therefore, the optimum of (P ′) upper bounds the optimum
We are thus ready to employ our ﬁnite-dimensional intuition. Suppose temporarily that sets X+ and X−were ﬁnite, and measures µ+, µ−were uniform over X+
and X−respectively. In this case (P ′) becomes a problem of assigning potential
values to the nodes of the complete bipartite graph (X+, X−, X+ × X−) with the
goal of optimizing the total potential (gaining the potential of nodes in X+ and
losing the potential of nodes in X−) subject to the constraint that for every x ∈X+
and y ∈X−the diﬀerence in potential between x and y cannot exceed |(x−y)+|1. It
is well-known that the dual of this problem is a min-cost perfect matching problem
on the same graph, where the weights are as in Figure 4.
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
C. Daskalakis
Min-Cost Perfect Matching.
Going back to the inﬁnite-dimensional problem, a perfect matching should correspond to a coupling of the measures µ+ and µ−, deﬁned formally as follows.
Definition 1. A coupling between two non-negative measures µ1 and µ2 deﬁned
over some S ⊆X and satisfying µ1(S) = µ2(S) is a non-negative measure γ over
S × S such that, for all measurable subsets S′ ⊆S, it holds that:
dγ = µ1(S′)µ2(S)
S×S′ dγ = µ1(S)µ2(S′).
We denote by Γ(µ1, µ2) the set of all couplings between µ1 and µ2.
Given the above deﬁnition and our ﬁnite-dimensional intuition, it makes sense to
propose the following as a dual to (P ′):
|(x −y)+|1dγ(x, y)
γ ∈Γ(µ+, µ−)
It is indeed quite straightforward to establish that the optimum of (D′) upperbounds the optimum of (P ′).
Lemma 1 [Daskalakis et al. 2013]. (D′) is a weak dual of (P ′).
Proof (Lemma 1): For any feasible solution u of (P ′) and γ of (D′) we have the
following:
ud(µ+ −µ−) =
(u(x) −u(y))dγ(x, y)
|(x −y)+|dγ(x, y),
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
Multi-Item Auctions Defying Intuition?
where the second equality follows from the feasibility of γ in (D′) and the inequality
follows from the feasibility of u in (P ′). □
Applications of Weak Duality
So far, we have formulated revenue optimization as a convex optimization problem
(P), deﬁned a relaxation (P ′) of (P) and identiﬁed a weak dual (D′) of (P ′) and
therefore of (P). Namely, here is where we stand:
OPT(P) ≤OPT(P ′) ≤OPT(D′).
Given that (D′) is only a weak dual of (P), it is unclear how to use it to certify
optimality of mechanisms. Indeed, it could be that u is an optimal solution to (P),
but there is no solution γ of (D′) that matches it in value of the objective. So what
is the point of (D′)?
The mismatch between the values of (P) and (D′) motivates the development
of a strong dual of (P) in the next section. Nevertheless, our experience shows
that (D′) often gives a simple heuristic that can be used to certify optimality of
mechanisms. In the remainder of this section, we illustrate how (D′) can be applied
for this purpose.
Suppose that u is the utility function of some mechanism that we want to show is
optimal for some distribution F. So we want to show that u is an optimal solution
to (P), where µ is the signed measure derived from F according to (10). Even
though (D′) is only a weak dual of (P) we could still be optimistic, trying to ﬁnd a
feasible solution γ of (D′) that achieves the same objective value as that achieved
by u in (P).
What does γ need to satisfy for this to happen? Inspecting the proof of Lemma 1
(which also applies to feasible solutions of (P) and (D′)) we get the following
suﬃcient condition:
γ(x, y)-almost everywhere: u(x) −u(y) = |(x −y)+|.
This condition would force the only inequality in the proof to be tight. Given that
the gradient of u, wherever deﬁned, corresponds to allocation probabilities, the
following condition is also suﬃcient:
γ(x, y)-almost everywhere:
∇u exists on all points
of the segment (x, y)
xi > yi =⇒
all types on segment (x, y)
receive item i with probability 1
xi < yi =⇒
all types on segment (x, y)
receive item i with probability 0
Equipped with suﬃcient condition (16), we exhibit how it can be used to show
optimality of mechanisms. We start with a simple example in Section 5.6.1, pro-
11What this means is that the set of points (x, y) ∈X × X where the equality fails to hold has
measure 0 under γ.
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
C. Daskalakis
ceeding to a more complex example in Section 5.6.2. It will be instructive to think
of our couplings γ as routing inﬁnitesimal amounts of ﬂow between pairs of points
in X, and Condition (16) as restricting the directions of these ﬂows.
Certifying Optimality of Mechanisms Using Duality
Example 5. Suppose 2 items are sold to a buyer whose values for the items are
i.i.d., uniform .
Claim 1 [Manelli and Vincent 2006]. The optimal mechanism in Example 5 is to price each individual item at 2/3, and the bundle of both items at 4−
Proof (Claim 1): First, let us compute the measure µ induced by the uniform
distribution over X = 2 according to (10). The resulting measure comprises a
total of −3 surface measure distributed uniformly over 2, a total of +2 singledimensional measure distributed uniformly over the top and the right edge of 2,
and an atom of +1 at the origin.
In Figure 5, we partition 2 into four regions R0, R1, R2, R3 corresponding
to the subsets of types that will purchase each lottery in the menu, or no lottery
at all. (The tie-breaking at the boundaries between regions is unimportant as it
corresponds to a measure 0 set of types.) We also depict µ and write down the
utility function restricted to each region.
R1 : {1, 2}, 4−
R2 : {1}, 2
R3 : {2}, 2
u(x) = x1 + x2 −4−
u(x) = x1 −2
u(x) = x2 −2
+1 uniformly distributed
+1 uniformly distributed
−3 constant surface density
Fig. 5. Measure µ for two i.i.d. uniform items, and the partition of the typeset induced by
the mechanism that prices each individual item at 2/3 and the bundle of both items at 4−
We also depict the utility of the buyer depending on which region his type falls into.
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
Multi-Item Auctions Defying Intuition?
In particular, region R0 corresponds to the types that do not want to purchase
anything. In this region, there is −1 total surface measure uniformly distributed,
as well as an atom of +1 total measure at the origin. Region R1 corresponds to the
types that will purchase bundle {1, 2} at price 4−
. There is a total of −2+2
surface measure uniformly distributed here, as well as a total of + 2+2
singledimensional measure spread uniformly on the top and right edges of this region.
Finally, regions R2 and R3 correspond to types that will purchase items 1 and 2
respectively at price 2/3. Each of these have a total of −2−
surface measure
uniformly distributed, as well as a + 2−
single-dimensional measure uniformly
distributed on their right and, respectively, top edges.
Our goal is to ﬁnd a coupling γ between µ+ and µ−satisfying Condition (16).
Given that our suﬃcient condition is sensitive about the existence of ∇u, we should
consider couplings of µ+ and µ−in each region separately. This is conceivable as
µ is balanced in each region, namely µ+(Ri) = µ−(Ri), for all i = 0, 1, 2, 3. In fact,
our path is cut out for us given the functional form of u in each region and the form
of Condition (16). In particular, we are seeking a coupling between µ+ and µ−so
—In region R0 we are only allowed to transport measure in north-east directions,
as both items are allocated with probability 0.
—In region R1 we are only allowed to transport measure in south-west directions,
as both items are allocated with probability 1.
—In region R2 we are only allowed to transport measure in north-west directions,
as item 1 is allocated with probability 1 and item 2 is allocated with probability 0.
—In region R3 we are only allowed to transport measure in south-east directions, as
item 2 is allocated with probability 1 and item 1 is allocated with probability 0.
In fact, we will be more optimistic, restricting our transports to be westward and
southward in regions R2 and R3 respectively. All in all, we are seeking a coupling of
µ+ and µ−that pushes measure in the directions shown in Figure 6 in each region.
Now it is easy to verify that the way our regions and measure µ are set up,
it is possible to couple µ+ and µ−where all transports take place according to
the ﬁgure. So Condition (16) is satisﬁed, and the resulting coupling certiﬁes the
optimality of u. □
We refer the reader to [Giannakopoulos and Koutsoupias 2014] for an application
of the afore-described approach to n = 3, . . . , 6 i.i.d. uniform items. While
written in a slightly diﬀerent language, their proof establishes the existence of
solutions to (D′) matching the value achieved by the optimal mechanism in (P). It
still remains an interesting open problem to determine the optimal mechanism for
n > 6. We conjecture that using (D′) remains suﬃcient, but it becomes analytically
challenging to deﬁne the transports in high dimensions.
Reverse-Engineering
Mechanisms
Duality. In
Section 5.6.1, we started with a conjectured optimal mechanism. Given the mechanism, we partitioned the typeset into regions, depending on what lottery each
type will purchase. We then used Condition 16 to guide us with what directions we
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
C. Daskalakis
The directions of measure transport used in our coupling γ for Example 5.
should use to transport measure in our coupling, in each region separately, as determined by the gradient of the utility function induced by the conjectured optimal
mechanism.
In fact, we can reverse-engineer these steps when we do not have a conjecture
about the optimal mechanism. Let us go back to Example 4, where we had two independent Beta items with parameters (3, 3) and (3, 4). Also, recall Figure 3 where
we show the measure µ induced by the product of these distributions, according
How might the optimal mechanism for this example look like? It is reasonable
to try to ﬁnd a mechanism with the following properties:
—For suﬃciently small values of v1 and suﬃciently large values of v2 the mechanism
oﬀers item 2 with probability 1 and item 1 with probability strictly smaller than
1. Let us denote A the unknown subset of the typeset where this may happen.
—For suﬃciently small values of v2 and suﬃciently large values of v1 the mechanism
oﬀers item 1 with probability 1 and item 2 with probability strictly smaller than
1. Let us denote B the unknown subset of the typeset where this may happen.
Now let us revisit Condition (16).
If we were to use this condition to show
optimality of our yet-unknown mechanism, we would certainly be allowed to:
(1) transport measure southward in region A; and
(2) transport measure westward in region B.
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
Multi-Item Auctions Defying Intuition?
Reverse-engineering the optimal mechanism from µ.
We may also be able to push measure eastward in region A, if item 1 is allocated with
probability 0 in this region. Similarly, we may be able to push measure northward
in region B, if item 2 is allocated with probability 0 in this region. As we want to be
versatile, let us ignore these extra possibilities, insisting on southward transports
in region A and westward transports in region B.
With these restrictions on our transports let revisit measure µ, trying to close in
on subsets of X that regions A and B may occupy. In Figure 7, we have drawn a
monotone strictly concave curve Stop that traces, for each x1, the top-most point
(x1, x2) such that, restricted to the vertical segment between points (x1, x2) and
(x1, 1), µ+ ⪰1 µ−, where ⪰1 denotes ﬁrst-order stochastic dominance between
measures deﬁned as follows.
Definition 2. If µ1, µ2 are two non-negative measures deﬁned on some S ⊆X
such that µ1(S) = µ2(S), we say that µ1 ﬁrst-order stochastically dominates µ2,
denoted µ1 ⪰1 µ2, iﬀthere exists a coupling γ ∈Γ(µ1, µ2) between µ1 and µ2
such that, almost everywhere with respect to γ(x, y), x is coordinate-wise larger
than or equal to y. Equivalently, for all non-decreasing measurable functions u,
Given that X+ \ {⃗0} is an increasing set, point Stop(x1) must belong to X−, if it
exists, and it can be identiﬁed by ﬁnding the largest x2 such that the total measure
on the segment between points (x1, x2) and (x1, 1) under µ is 0. Notice that for
some x1’s there fails to be a segment with these properties, so Stop is undeﬁned for
those x1’s. Similarly, the monotone strictly concave curve Sright traces, for each x2,
the rightmost point (x1, x2) such that, restricted on the horizontal segment between
points (x1, x2) and (1, x2), µ+ ⪰1 µ−. Again, this curve is not deﬁned for all x2,
and it lies within X−.
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
C. Daskalakis
To accommodate Constraints (1) and (2) on our transports of measure in the
(still unidentiﬁed) regions A and B, it suﬃces to pick A to be any region deﬁned
by Stop, the left and top boundaries of 2 and a vertical segment vA = (vv′)
for some v ∈Stop and v′ on the top edge of 2, as in the ﬁgure. Similarly, we
can pick B to be any region deﬁned by Sright, the bottom and right boundaries
of 2 and a horizontal segment hB = (hh′), for some h ∈Sright and h′ on the
right edge of 2. For any region A as above, by the deﬁnition of Stop, we can
couple µ+ restricted in A with µ−restricted in A while respecting Constraint (1),
as we can do this separately for every “vertical slice” of A. Similarly for any B as
above, we can couple µ+ restricted in B with µ−restricted in B while respecting
Constraint (2).
The next question is how to pick segments vA and hB, and what to do with the
rest, X\A∪B, of the typeset. A natural approach is to assume that the remainder of
the typeset is partitioned into two regions, W and Z, of types that will purchase the
bundle {1, 2} of both items at some price p{1,2} and of types that will not purchase
anything. Clearly, the utility in W will be of the form u(x) = x1 +x2 −p{1,2} while
the utility in Z will be u(x) = 0. Hence, the boundary between these regions must
be a 45◦segment.
Given this, a natural way to ﬁnish would be to try to identify a point v ∈Stop
and h ∈Sright such that:
(i) The straight segment, (vh), between points v and h has a 45◦angle; more
precisely, we want that (h1 −v1, h2 −v2) ∝(1, −1).
(ii) The region, Z, under the curve S deﬁned by the initial part of Stop (between
points Stop(0) and v), the straight segment (vh), and the initial part of Sright
(between points h and Sright(0)) has total measure µ(Z) = 0 and is convex;
(iii) The region, W, enclosed by the straight segments vA, (v′⃗1), (⃗1h′), hB and
(vh), satisﬁes µ+|W ⪰1 µ−|W, where µ+|W and µ−|W denote respectively the
restrictions of measures µ+ and µ−in region W.
Note that, if we can identify points v and h satisfying Requirements (i)–(iii), we
are done. Indeed, let us deﬁne the function u : x 7→ℓ1(x, Z), mapping each type x
to its ℓ1 distance from set Z. Clearly:
—From (ii), Z is convex, hence u(x) is also convex. Given that Z is a decreasing
set, u is non-decreasing.
It is also clearly non-negative and 1-Lipschitz.
u is feasible for (P).
If we could also ﬁnd a coupling γ between µ+ and µ−
that satisﬁes Condition (16), this would establish that u is optimal for (P). We
proceed to do this next separately for µ+ and µ−restricted to each region.
—Region Z: u(x) = 0, for all x ∈Z, conforming to our intention that Z is the
set of types that do not purchase anything. Given that ∇u(x) = 0, for all x ∈Z,
Condition (16) implies that we are allowed to transport measure in north-east
directions in this region. Given that Z lies entirely within X−∪{⃗0}, µ+ only
resides at (0, 0). Moreover, µ(Z) = 0. Hence, it is possible to couple µ+ and µ−
in Z with only north-east transports.
—Region W: u(x) = x1 + x2 −p∗, for all x ∈W, where p∗is the intercept of
segment (vh) if it were extended to hit the x1 axis. This conforms to our intention
that the types in W purchase the grand bundle. Given that ∇u(x) = 1, for all
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
Multi-Item Auctions Defying Intuition?
x ∈W, Condition (16) implies that we can transport measure in south-west
directions in this region. Given that µ+|W ⪰1 µ−|W, as per Requirement (iii),
we can indeed couple µ+ and µ−in this region with only transports in south-west
directions, by Deﬁnition 2.
—Region A: Given that Z is convex (and therefore the lower boundary of region
A is less steep that 45◦as per the location of this boundary with respect to the
segment (vh)), for all x ∈A, u(x) is the vertical distance between x and Stop. So
∂x2 = 1, which conforms to our intention that item 2 should be allocated with
probability 1 in this region. Moreover, this means by Condition (16) that we are
allowed to transport measure southward in our coupling between µ+ and µ−in
this region. And, by the deﬁnition of Stop, restricted to this region µ+ and µ−
can be coupled with only southward transports.
—Region B: Similarly, given that Z is convex (and therefore the left boundary
of region B is steeper that 45◦), u(x) is the horizontal distance between x and
Sright for all x ∈B. Via similar arguments as those employed for region A, µ+
and µ−can be coupled in this region with only westward transports, respecting
Condition (16).
By the above discussion, if we can identify points v and h satisfying Requirements
(i)–(iii), this means that we have identiﬁed our optimal mechanism. It turns out
that, for our speciﬁc distributions, Requirements (i)—(iii) can be satisﬁed and we
can analytically compute the points v and h, as shown in Figure 7. So we have
managed to reverse-engineer the optimal mechanism for our setting by exploiting
Condition (16). The mechanism can be described indirectly by specifying Z. In
terms of Z, the utility function of the optimal mechanism is u : x 7→ℓ1(x, Z).
From u we can also ﬁnd the lotteries oﬀered by the optimal mechanism: The types
in W receive both items with probability 1.
Each type x ∈A receives item 2
with probability 1 and item 1 with probability that equals minus the slope of Stop
at point Stop(x1). Similarly, each type x ∈B receives item 1 with probability 1
and item 2 with probability that equals minus the inverse slope of Sright at point
Sright(x2).
Some remarks are in order before we conclude this section:
—First, as a byproduct of our derivation above we have proven our claim in Example 4 that the optimal mechanism oﬀers an uncountably large menu of lotteries.
Indeed, recall that Stop is strictly concave. Hence, the allocation probability of
item 1 diﬀers in every vertical strip within this region. Thus, a continuum of
lotteries are oﬀered to the types in A. The same is true for the types in B.
—On the other hand, as promised in Section 3.3, there does exist a succinct description of the optimal mechanism. All we need to maintain is an analytic description
of the boundary of region Z.
—We emphasize again that the approach followed in this section to reverse-engineer
the optimal mechanism is not guaranteed to succeed. Indeed, it is based on a
weak dual (D′) of our optimal mechanism design formulation (P). Based on this
weak dual, it identiﬁes a complementary slackness condition, (16), which ties
solutions to (P) and (D′) in a particular way. It then makes guesses about the
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
C. Daskalakis
optimal mechanism, and tries to follow through with these guesses using Condition (16). Despite the fact that it is not guaranteed to succeed, the approach is
quite successful in identifying optimal mechanisms. In [Tzamos 2015], Christos
Tzamos provides an applet where the heuristic approach of this section is applied
to reverse-engineer the optimal mechanism for user-speciﬁed Beta distributions.
—Given that the heuristic method proposed in this section may not succeed, it
remains important to develop a technique that is guaranteed to succeed. This is
what we do in the next section.
A Strong Duality Theorem
In previous sections, we identiﬁed a weak dual (D′) of our formulation, (P), of optimal mechanism design as a convex optimization problem. Based on the weak dual,
in Section 5.6.1, we gave an example where we were able to certify the optimality
of a mechanism. In Section 5.6.2, we also showed how we can use the weak dual
to reverse-engineer the optimal mechanism. Still, (D′) is a weak dual, so there are
settings where both certifying and reverse-engineering the optimal mechanism will
fail [Daskalakis et al. 2015].
We would thus like to obtain a strong dual of formulation (P), whose optimum
is guaranteed to match that of (P).
The advantage of a strong dual would be
that, for every mechanism design problem (n, F), the optimal mechanism u for
(P) would have a certiﬁcate of optimality in the form of a solution to the dual.
Thus, we would know what type of certiﬁcate to look for, and we would also be
able to reverse-engineer optimal mechanisms by exploiting the structure of those
certiﬁcates.
The challenge we encounter though is that a priori it is not clear if a tight dual to
(P) should exist. Indeed, (P) is an inﬁnite-dimensional optimization problem and
contains constraints on the variable u, such as convexity, which are non-standard. In
particular, we are not aware of a duality framework, based on inﬁnite-dimensional
linear programming, that can accommodate such constraints directly. We prove
our own extension of Monge-Kantorovich duality to accommodate the constraints
of (P), establishing the following.
Theorem 4 [Daskalakis et al. 2015]. Formulation (P) has a strong dual
formulation (D), taking the form of an optimal transport problem, as follows:
u satisﬁes (11),
(12) and (13)
|(x −y)+|1dγ : (D)
Moreover, both sup and inf are attainable.
We next explain the statement of Theorem 4, comparing (D) to the weak-dual
(D′) of Section 5.5. We then discuss the point of deriving a strong dual, before
turning to some important applications of our strong duality theorem.
Discussion of Theorem 4. First, to clarify the notation used in Theorem 4,
⪰cvx is the standard notion of convex dominance between measures, deﬁned as
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
Multi-Item Auctions Defying Intuition?
Definition 3. For two measures µ1 and µ2 over X we say that µ1 convexly
dominates µ2, denoted µ1 ⪰cvx µ2, iﬀ, for all measurable, non-decreasing and
convex functions u,
Compared to the ﬁrst-order stochastic dominance of Deﬁnition 2, convex dominance is a weaker requirement as it only requires that
X udµ2 for
convex, non-decreasing u’s, as opposed to all non-decreasing u’s.
As non-decreasing, convex functions model utility functions of risk-seeking individuals, when µ1, µ2 are probability measures and µ1 ⪰cvx µ2, this means that any
risk-seeking individual prefers a prize distributed according to µ1 to a prize distributed according to µ2. More generally, when µ1 ⪰cvx µ2, this essentially means
that µ1 can be obtained from µ2 through a sequence of operations allowed to:
—send (positive) measure to coordinate-wise larger points—this makes the integral
udµ1 larger than
udµ2 since u is non-decreasing; or
—spread (positive) measure so that the mean is preserved—this makes the integral
udµ1 larger than
udµ2 since u is convex.
Now that our understanding of convex dominance is grounded, let us compare our
strong dual (D) to the weak-dual (D′) of Section 5.5. The two problems are very
similar. They are both min-cost transportation problems, seeking a coupling γ(x, y)
between two non-negative measures under which the total cost under the same cost
function |(x −y)+|1 is minimized.
The diﬀerence between the two problems is
that (D′) seeks a coupling between µ+ and µ−, the positive and negative parts of
measure µ derived from F according to (10). (D) is also allowed to pre-process
µ without incurring any cost before seeking a coupling between the positive and
negative parts of the processed measure. In particular, (D) is allowed to choose any
measure µ′ ⪰cvx µ and couple the positive and negative parts of that measure µ′.
This way it may reduce the transportation cost, which Theorem 4 says is guaranteed
to match the optimum of (P).
The Point of Theorem 4. So, what is the point of obtaining a strong dual
of our mechanism design problem? We have already alluded to the beneﬁts of strong
duality above. By analogy, these should also be clear to anyone familiar with the
uses of strong linear programming duality in combinatorial optimization. Let us
expand a bit. In comparison to our weak dual (D′), our strong dual (D) is more
powerful as it allows us to certify the optimality of any mechanism. In particular,
for any mechanism design problem deﬁned by some n and F, we are guaranteed to
ﬁnd a measure µ′ ⪰cvx µ and a coupling γ between µ′
−whose transportation
cost equals the optimal revenue. In particular, we can identify conditions tying a
solution u to (P) with a solution (µ′, γ) to (D) that, whenever satisﬁed, establish
the joint optimality of both u and (µ′, γ). Additionally, using these conditions as
a guiding principle, we can reverse-engineer optimal mechanisms in settings where
we do not have a conjecture about what the optimal mechanism is, as we did in
Section 5.6.2 using weak duality. Except now this approach is guaranteed to work.
We refer the interested reader to [Daskalakis et al. 2015] for these conditions, as
well as examples where they are used to certify optimality of mechanisms. The
approach is similar to Sections 5.6.1 and 5.6.2, so we do not expand more here.
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
C. Daskalakis
We prefer to turn instead to exciting applications of the strong duality theorem to
obtain characterization results.
Characterizing Optimal Mechanisms
Using our strong duality theorem (Theorem 4) to certify optimality of mechanisms
may be cumbersome. A pertinent question is this: Can we somehow use the theorem behind the scenes to develop simple characterization results of mechanism
optimality? In this section, we obtain such a characterization: given a proposed
mechanism for some setting of n and F, we identify a collection of necessary and
suﬃcient conditions on µ for the mechanism to be optimal. In particular, these
conditions do not involve the dual problem at all.
They are just conditions on
the measure µ derived from n and F using (10). We proceed to give a ﬂavor of
our characterization, and some applications. We start with a characterization of
grand-bundling optimality, proceeding to general mechanisms afterwards.
Characterization of Grand-Bundling Optimality. Let us complement Definition 3 with the following deﬁnition.
Definition 4. For two measures µ1 and µ2 over X we say that µ1 secondorder stochastically dominates µ2, denoted µ1 ⪰2 µ2, iﬀfor all measurable, nondecreasing and concave functions u,
As concave and non-decreasing functions model utility functions of risk-averse individuals, if µ1, µ2 are probability measures and µ1 ⪰2 µ2, this means that any
risk-averse individual prefers a prize distributed according to µ1 to a prize distributed according to µ2. More generally, µ1 ⪰2 µ2 essentially means that µ1 can
be obtained from µ2 via a sequence of operations that shift positive measure to
coordinate-wise smaller points and do mean-preserving merges of positive measure.
With the above deﬁnition, we can use our duality theorem behind the scenes to
obtain the following characterization of grand-bundling optimality.
Theorem 5 [Daskalakis et al. 2015]. For all n and F, the mechanism that
only oﬀers the bundle of all items at some price p is optimal if and only if measure
µ deﬁned by (10) satisﬁes µ|W ⪰2 0 ⪰cvx µ|Z, where W is the subset of types that
can aﬀord the grand bundle at price p, Z the subset of types who cannot, and µ|W,
µ|Z are respectively the restrictions of µ in subsets W and Z.
Suﬃcient conditions for grand-bundling optimality have been an active line of
inquiry—see e.g. [Manelli and Vincent 2006; Pavlov 2011]. Theorem 5 provides a
single condition, in the form of two stochastic dominance relations, that is necessary
and suﬃcient.
As a corollary of this theorem, we can show Theorem 1 of Section 3.1, pertaining
to the counter-intuitive behavior of the optimal mechanism for n i.i.d., uniform
[c, c + 1] items:
—The ﬁrst part of this theorem is an extension of Pavlov’s result for n = 2 [Pavlov
2011]. Its proof is by a geometric construction showing that the suﬃcient condition will be met for all n’s as long as c is large enough.
—The second, and more counter-intuitive, part of the theorem is shown by arguing
that all prices p will fail to satisfy 0 ⪰cvx µ|Z. Essentially, what happens in this
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
Multi-Item Auctions Defying Intuition?
setting is that all the positive measure is surface measure on the facets xi = c+1,
and there is an atom of +1 at the origin ⃗c. All other facets and the interior of
the cube [c, c + 1]n have negative measure.
Given this, if n is large enough,
measure µ|Z exhibits a phase transition in terms of the price p: if p is large
enough that Z has a positive-measure intersection with facet x1 = c+1, function
u(x) = 1{x1=c+1} is an explicit witness that constraint 0 ⪰cvx µ|Z is violated,
udµ|Z > 0. On the other hand, if p is small enough that Z has measure 0
intersection with this facet, there turns out not to be enough negative mass in
region Z to balance the positive atom at ⃗c, as required for 0 ⪰cvx µ|Z to hold.
Characterization of General Mechanisms. Our characterization of grandbundling optimality from the previous section naturally extends to arbitrary mechanisms. Let us brieﬂy discuss this generalization, referring the reader to [Daskalakis
et al. 2015] for more details.
Consider a mechanism M for some setting n and F. M induces a partition of
the typeset X into subsets of types that will decide to purchase diﬀerent lotteries
in the menu oﬀered by M. Assuming that M oﬀers a ﬁnite number of lotteries,
this partition may look like Figure 8, where each cell c corresponds to a subset of
types that will purchase the same lottery (pc, tc), where pc is a vector of allocation
probabilities and tc a price.
A partition of the typeset induced by some ﬁnite menu of lotteries.
If the mechanism is a grand-bundling mechanism, then there are only two regions
and Theorem 5 deﬁnes a pair of stochastic dominance conditions that are necessary
and suﬃcient for its optimality. Naturally, our generalization to general mechanism
will require one condition per cell c of the partition. To describe them, let us deﬁne
vector ⃗vc in terms of pc as follows:
Moreover, for a vector ⃗v ∈{−1, 1, 0}n, let us deﬁne a stochastic dominance relation
with respect to ⃗v as follows:
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
C. Daskalakis
Definition 5. For a vector ⃗v ∈{−1, 1, 0}n and two measures µ1 and µ2 over X,
we say that µ1 convexly dominates µ2 with respect to ⃗v, denoted µ1 ⪰cvx(⃗v) µ2, iﬀ,
for all measurable and convex functions u that are non-decreasing in all coordinates
i such that vi = 1 and non-increasing in all coordinates i such that vi = −1:
Clearly, µ1 ⪰cvx(⃗1) µ2 ⇔µ1 ⪰cvx µ2 and it easily follows that µ1 ⪰cvx(−⃗1) µ2 ⇔
µ2 ⪰2 µ1. So Theorem 5 can be restated as specifying the following necessary and
suﬃcient conditions for grand-bundling optimality: 0 ⪰cvx(⃗1) µ|Z and 0 ⪰cvx(−⃗1)
µ|W, where Z and W are the subsets of types that purchase nothing and the grand
bundle respectively.
Our general characterization is the following:
Characterization of General Mechanisms
(M is optimal) ⇐⇒
for every cell c in the partition of X induced by M: 0 ⪰cvx(⃗vc) µ|c, where µ|c
is the restriction of µ, deﬁned in (10), to
The interested reader is referred to [Daskalakis et al. 2015] for more details.
Concluding Remarks
In Sections 5.1–5.8 we took up the challenge of understanding the structure of multiitem mechanisms, trying to demystify their counter-intuitive behavior identiﬁed in
Section 3.
Our contribution was a duality framework based on which we can certify the
optimality of mechanisms in every single-buyer setting. In particular, we showed
that the optimal mechanism design problem has a tight dual problem, taking the
form of an optimal transportation problem. Given a proposed mechanism, we can
test if it is optimal by identifying solutions to the dual achieving the same value, as
we did in Section 5.6.1, except that more generally we can also pre-process µ with
cost-free convex shuﬄing operations before ﬁnding our transports, as allowed by the
strong dual (D). Given our strong duality, dual certiﬁcates are guaranteed to exist.
Moreover, if we do not have a conjectured optimal mechanism for some setting of
interest, we can exploit the dual to reverse-engineer it, as we did in Section 5.6.2.
Finally, we developed “duality-theory oblivious” tools, characterizing the optimality
of mechanisms in terms of the buyer’s distribution. These tools use the power of
the duality framework behind the scenes, presenting clean necessary and suﬃcient
conditions for a mechanism to be optimal.
All in all, we believe that our framework provides a new perspective on multiitem mechanisms, presenting a tool whose applicability is universal, given our strong
duality. Our work opens interesting lines for future investigation, and we are particularly interested in:
(1) extending the duality framework to accommodate multiple buyers; and
(2) developing technical machinery to facilitate testing stochastic dominance relations.
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
Multi-Item Auctions Defying Intuition?
While we recognize that a lot remains to be done, we believe that the afore-described
framework represents the beginning of a principled approach towards a structural
understanding of multi-item multi-buyer mechanisms.
THE COMPUTATIONAL COMPLEXITY OF MULTI-ITEM MECHANISMS
Philosophy
The duality based framework of the previous section targeted closed-form characterizations of optimal mechanisms. A related goal is to study the computational
complexity of optimal mechanisms. In particular, we are interested in whether optimal mechanisms can be computed and implemented computationally eﬃciently.
There are several reasons why this question is important:
—First, if optimal mechanisms were computationally intractable, then why should
practitioners care about them, especially in settings with a large number of bidders or items?
Computational intractability would justify using approximate
mechanisms in practical applications.
—Moreover, as we have seen, getting closed-form descriptions of optimal mechanisms is a challenging task. Despite intense work in the literature, including that
of the previous section, we are still far from characterizing optimal multi-bidder
mechanisms. When closed-form descriptions are unknown, being able to compute
optimal mechanisms is an interesting middle ground.
—Additionally, computing optimal mechanisms would be a great tool for researchers who want to gain familiarity with the structure of these mechanisms
and/or test hypotheses about their structure or performance of approximate solutions.
—Finally, one might expect that studying optimal mechanism design from an algorithmic point of view may reveal structure that might be hard to observe using
non-algorithmic tools.
For all the above reasons, we ﬁnd it important to study the computational complexity of optimal mechanisms. Over the past few years, our and other groups have
made tremendous progress in the complexity of optimal mechanism design [Cai and
Daskalakis 2011; Cai et al. 2012a; Alaei et al. 2012; Cai et al. 2012b; Daskalakis
et al. 2012; Cai and Huang 2013; Cai et al. 2013a; 2013b; Alaei et al. 2013; Bhalgat
et al. 2013; Daskalakis et al. 2014; Chen et al. 2014; Daskalakis and Weinberg 2015;
Daskalakis et al. 2015]. See also [Hartline 2013; Chawla and Sivan 2014; Cai et al.
2015] for recent surveys, covering some of this work. We proceed to give a ﬂavor of
what is known, restricting our attention to multi-item multi-bidder settings with
additive bidders. As discussed below, all our results in this section extend to much
broader settings.
In this section, we restrict our attention to a seller with n items and m additive
bidders interested in those items. The type of each bidder is a vector ti of values
for the items, which are jointly distributed according to some distribution Fi. In
particular, tij will denote the value of bidder i for item j. We assume that the
distribution Fi is known to the seller and all the other bidders, but only bidder i
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
C. Daskalakis
knows his realized type. We also assume that bidder types are independent and use
⃗t to denote the types of all bidders, also called the type proﬁle. Finally, given a type
vector ⃗t and i, we denote, as is customary, by ⃗t−i the vector containing the types
of all bidders except the type of bidder i. Accordingly, we use (ti;⃗t−i) to denote ⃗t.
The goal of the seller is to design a mechanism that optimizes his expected
revenue, when the expectation is computed with respect to the types of the bidders,
the randomness in the mechanism, if any, and the randomness in the strategies of
the bidders, if any. The mechanism is allowed to be any protocol that interacts
with the bidders and has the bidders interact with each other in some fashion.
Whatever the protocol is, it is supposed to output an allocation x ∈{0, 1}mn of
items to bidders, where xij indicates whether item j is given to bidder i. As we
assume that there is exactly one copy of each item, any allocation ever output by
the mechanism must satisfy that
xij ≤1, for all items j.
We call F the subset of {0, 1}mn satisfying the above constraints. The mechanism
can also charge prices, as long as the bidders accept to pay those prices.
While it is hard to optimize over protocols, it follows from the revelation principle
that it suﬃces to optimize over a simpler class of mechanisms called “direct mechanisms.” These mechanisms are described by an allocation function X : ⃗t 7→∆(F),
mapping type proﬁles to distributions over feasible allocations, and a price function
P : ⃗t 7→∆(Rm) mapping type proﬁles to distributions over price vectors, and are
implemented as follows:
—The bidders are asked to report their types to the mechanism.
—If ⃗t are the reported types, the mechanism samples x ∼X(⃗t) and p ∼P(⃗t),
implements allocation x and charges prices according to p.
For convenience, we will use X(⃗t) to denote a random variable distributed according
to X(⃗t), and similarly P(⃗t) to denote a random variable distributed according to
While, in principle, the bidders need not be truthful about their types, due to
the revelation principle we can also assume without loss of generality that it will be
in their best interest to do so. We may also assume that it is not hurtful to them to
participate in the mechanism. In particular, we may assume that the mechanism
is Bayesian Incentive Compatible and satisﬁes Individual Rationality according to
the following deﬁnition.
Definition 6. We say that a direct mechanism (X, P) is Bayesian Incentive
Compatible (BIC) iﬀfor all bidders i and types ti and t′
i in the support of Fi:
E⃗t−i[ti · X(⃗t) −P(⃗t)] ≥E⃗t−i[ti · X(t′
i;⃗t−i) −P(t′
We say that a direct mechanism (X, P) satisﬁes Individual Rationality or is IR iﬀ
for all bidders i and types ti in the support of Fi:
E⃗t−i[ti · X(⃗t) −P(⃗t)] ≥0.
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
Multi-Item Auctions Defying Intuition?
(17) expresses that the expected utility of bidder i cannot be improved by misreporting his type, while (18) expresses that the expected utility of bidder i is
non-negative if he is truthful. Both expectations are with respect to the types of
the other bidders as well as the randomness in the allocation and price functions,
Under the assumption that bidders will report their types truthfully to a BIC,
IR mechanism, its revenue can be expressed as follows:
With all the context provided above, the seller is given distributions F1, . . . , Fm
over bidder types and seeks to compute a BIC, IR mechanism of optimal revenue.
Computationally Eﬃcient in What Exactly?
When it comes to studying multi-item mechanisms from a computational perspective what we need to answer ﬁrst is what the input is, and how its description
complexity is measured. There are several ways one can go about this, including
the following.
—One approach is to assume that the bidders’ distributions come from a parametric
family of distributions, and specify the parameters of each bidder’s distribution.
This approach would allow us to accommodate both discrete and continuous
distributions. In this case, the description complexity of the distributions is the
description complexity of all parameters required to describe them.
—Another approach is to assume that the distributions are discrete and provide
them explicitly, by listing the elements in their support and the probability that
each element is sampled. The explicit description is reasonable for distributions
with a small and discrete support. Here the description complexity of the distributions is the description complexity of all the elements in their support and
their associated probabilities.
—Finally, one can assume to have sample access to the distribution Fi of each
bidder. Here each distribution can be thought of as a subroutine that a seller can
call to get an independent sample from Fi. The description complexity of the
distributions is harder to deﬁne in this model. One way to do this is to assume
that the subroutines only output numbers of certain bit complexity, or truncate
all numbers output by these subroutines to some accuracy. We do not want to
dwell on this point too much though.
We will restrict our attention to the simplest model, assuming that all our distributions are explicit. The parametric and sample-access models are important to
study as well, but we are not aware of eﬃciently computable mechanisms that can
accommodate these models in reasonable generality without losing revenue. In fact,
we should not expect to get general, exactly optimal algorithms in these settings
given the following result:
Theorem 6 [Daskalakis et al. 2014]. Consider the algorithmic problem of
designing an optimal mechanism for selling n items to a single, additive buyer
whose values for the items are independently distributed, according to distributions
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
C. Daskalakis
that are supported on two rational numbers with rational probabilities. In particular,
the distribution of each item i is speciﬁed by a pair of rational numbers {ai, bi} and
a rational probability pi.
Unless ZPP ⊇P#P, any mechanism (of any type, direct or indirect) that can
be computed in expected polynomial time cannot be both optimal and executable in
expected polynomial time.
Notice that the mechanism design problem in the statement of Theorem 6 conforms to the parametric model for describing distributions. And the theorem provides a particularly simple setting where, unless we spent super-polynomial time,
we will not be able to compute an eﬃciently executable mechanism that is also
optimal. As the sample-access model is not easier than the parametric one, the
same result applies to this model as well. Finally, we will only remark here that
the assumption ZPP ⊇P#P is a standard complexity-theoretic assumption about
the relations of complexity classes P, ZPP and #P. The interested reader is referred
to standard complexity theory textbooks for more discussion.
While Theorem 6 is quite discouraging, especially given the simplicity of the
mechanism design problem that is shown intractable, it still does not preclude
eﬃciently computable mechanisms that are near-optimal. In particular, it is an
interesting open problem to determine whether there exist eﬃciently computable
mechanisms that achieve a (1 −ϵ)-fraction of the optimal revenue, for any desired
accuracy ϵ > 0, as long as one is willing to invest time polynomial in 1/ϵ and the
parameters of the distribution for their computation. This problem is open even in
the simple setting of Theorem 6.
Computing Optimal Mechanisms, and a Bonus
We turn to the explicit model of representing bidder distributions, and ask whether
optimal mechanisms can be computed eﬃciently. There is still a wrinkle we need
to overcome however. As we said a direct mechanism is a pair of functions X : ⃗t 7→
∆(F) and P : ⃗t 7→∆(Rm). So to describe these functions explicitly, we need to
specify a distribution over allocations and a distribution over price vectors for every
possible type proﬁle. This is problematic though as revealed by a little calculation.
Suppose that the support of every bidder’s type distribution has size k. Then to
specify each distribution we need to give k numbers and k −1 probabilities. So
to describe all these distributions only requires O(mk) numbers.
On the other
hand, there are km possible type proﬁles. So we cannot hope to compute X and
P explicitly. Besides, even the outputs of these functions are distributions over
high-dimensional spaces.
We thus need to be smart about how we represent mechanisms. We need to
represent them implicitly, whilst still being able to compute on the implicit representation. In the additive setting that we consider here, it turns out that the
so-called “reduced-form” is a good representation:
Definition 7. The reduced form (ˆx, ˆp) of a mechanism (X, P) is a collection
of single-variate functions ˆxi : Ti → n, i = 1, . . . , m, and ˆpi : Ti →R, i =
1, . . . , m, where Ti is the support of Fi, which are related to X and P as follows.
For all i and types ti ∈Ti:
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
Multi-Item Auctions Defying Intuition?
—ˆxij(ti) = E⃗t−i[Xij(ti;⃗t−i)]; in particular, the j-th coordinate of ˆxi(ti) is the probability that the mechanism allocates item j to bidder i, conditioning on his reported
type being ti and assuming that the other bidders report their types truthfully.
—ˆpi(ti) = E⃗t−i[Pi(ti;⃗t−i)]; in particular, ˆpi(ti) is the expected price charged to
bidder i, conditioning on his reported type being ti and assuming that the other
bidders report their types truthfully.
The reduced form is called “reduced” because it is losing information about the
mechanism. It can be viewed as projecting (X, P), which is a high-dimensional
object, to a lower-dimensional space. So maintaining mechanisms in their reduced
forms, creates two computational challenges:
(1) Given a reduced form (ˆx, ˆp), is it possible to verify computationally eﬃciently
whether it is feasible, that is whether there exists an actual mechanism (X, P)
whose reduced form agrees with (ˆx, ˆp)?
(2) Given a reduced form (ˆx, ˆp) that is feasible, is it possible to implement some
mechanism with this reduced form computationally eﬃciently?
Border and Che et al. have provided a collection of linear constraints that are
necessary and suﬃcient for reduced-form feasibility [Border 1991; 2007; Che et al.
2011]. See also [Hart and Reny 2014]. These constraints have a nice interpretation
as max-ﬂow/min-cut constraints in a related ﬂow network. However, they cannot
be used towards computationally eﬃcient algorithms for the above problems, as
they are exponentially many. We can improve these results as follows:
Theorem 7 [Cai et al. 2012a; Alaei et al. 2012]. The answers to both
questions above are “yes.”
Namely, given a reduced form (ˆx, ˆp), we can verify
in polynomial time whether it is feasible. Moreover, given a feasible reduced form
(ˆx, ˆp), we can compute in polynomial time a pair of polynomial-time algorithms for
sampling the allocation and price functions of a mechanism (X, P) whose reduced
form is (ˆx, ˆp).
Theorem 7 is very handy as it allows us to formulate polynomial-size linear
programs for ﬁnding optimal mechanisms. In particular, it is not hard to see the
following:
—The set of all possible reduced forms is convex, as they are projections of allocation and price functions, which themselves are a convex set as distributions over
deterministic allocation and price functions.
—Given Theorem 7, there exists a polynomial-time algorithm that determines feasibility of reduced forms. This gives a computationally eﬃcient separation oracle
for the set of feasible reduced forms.
—The expected revenue of a mechanism can be expressed as a linear function of
its reduced form.
—The BIC and IR constraints are also expressible as linear constraints in the
reduced form.
—Finally, Theorem 7 implies that, given the reduced form of a mechanism, we can
eﬃciently implement it.
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
C. Daskalakis
Using the Ellipsoid algorithm, the above observations culminate to the following
Theorem 8 [Cai et al. 2012a]. Consider a mechanism design setting with m
additive bidders and n items. Given an explicit description of the bidders’ type
distributions, we can compute and implement an optimal mechanism in polynomialtime.
Our new theorem provides an important counterpart to our structural results
from Section 5, encompassing multi-bidder settings as well.
In fact, the theorem can be generalized to much broader settings involving more complex allocation constraints [Cai et al. 2012b], budgets [Bhalgat et al. 2013; Daskalakis et al.
2015], non-additive bidders [Cai et al. 2013b], and even going beyond revenue and
welfare to other interesting objectives, such as maximizing fairness or minimizing
makespan [Daskalakis and Weinberg 2015]. Taken together our algorithmic results
provide a very crisp understanding of the complexity of Bayesian mechanism design.
In a recent article, we provide a concise overview of our work on this front, and
refer the interested reader to this overview [Cai et al. 2015], as well as the surveys
mentioned earlier [Hartline 2013; Chawla and Sivan 2014].
Let us conclude this section with a small treat. We promised earlier that the
algorithmic perspective might actually reveal structure in the optimal mechanism
that could be hard to see otherwise. While developing our algorithmic framework,
we encountered remarkable structure in the optimal mechanism that is worth sharing here. Recall, from Fact 3 that Myerson’s optimal single-item mechanism is a
virtual welfare maximizer. It turns out that this holds in arbitrary settings. Here
is the structure of the optimal mechanism for the setting of Theorem 8.
Theorem 9 [Cai et al. 2012b]. When n items are sold to m additive bidders,
the optimal mechanism is a virtual welfare maximizer, namely:
(1) The bidders are asked to report their types to the mechanism. Say that the
reported types are t1, . . . , tm.
(2) The reported types are transformed into virtual types, h1(t1), . . . , hm(tm), where
each hi : Ti →Rn maps an additive type ti to another additive type hi(ti).
(3) Each item is allocated to the bidder with the highest virtual value for this item,
with some lexicographic tie-breaking.
(4) Finally, prices are charged so that the mechanism is BIC.
So the optimal mechanism has the exact same form in multi-item settings as it
has in single-item settings! The diﬀerences between Theorem 9 and Fact 3 are the
following:
—In Myerson’s single-item setting, the virtual transformations hi are deterministic,
while in the multi-item setting they are actually randomized. Of course, we knew
this had to be the case as by Fact 5 randomization is necessary in multi-item
—As emphasized in Fact 3, in Myerson’s setting, each hi only depends on bidder
i’s distribution, but not on the other bidders’ distributions and not even on how
many other bidders show up. In the multi-item setting, each hi may depend on
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
Multi-Item Auctions Defying Intuition?
the distributions of all bidders, but importantly its argument is only bidder i’s
Despite these diﬀerences, it is remarkable that the same structure applies to
both single-item and multi-item settings. Again the above structure generalizes
well-beyond the additive setting—see [Cai et al. 2013b; 2015].
CONCLUSIONS
In the past few decades, we witnessed the tremendous impact of Myerson’s result [Myerson 1981] in mechanism design. Building on his result, we now understand
virtually every aspect of revenue optimization in single-item settings. Moreover, we
have seen numerous extensions, robustifying the result with respect to the details
of the bidders’ distributions, and expanding its applicability to a myriad of singledimensional settings, accommodating budgets, online arrivals and departures of
bidders, complex allocation constraints, non-linear designer objectives, and many
more. Algorithmic and approximation techniques have played an important role
in exploring these extensions, and indeed it has been thanks to the sharpness and
simplicity of Myerson’s result that this interplay between computation and mechanism design has been so fruitful.
See [Hartline 2013; Chawla and Sivan 2014;
Roughgarden 2015] for recent surveys of this literature.
Unfortunately, multi-item revenue optimization has not enjoyed the same fate
due to our lack of understanding of multi-item mechanisms. Indeed, optimal multiitem mechanisms exhibit such rich structure that it is not clear whether there
is a lens through which we can gain a crisp understanding of their properties. In
this survey, we provided two approaches, based on duality theory and optimization,
through which we obtained a fresh perspective on multi-item mechanism design. We
have used these approaches to characterize the structure of multi-item mechanisms
and showcased procedures, both analytical and algorithmic, via which the optimal
mechanism can be identiﬁed.
We believe that the results presented in this survey have begun to resemble
a cohesive theory of multi-item auctions, opening exciting directions for future
investigation. To identify just a few:
—It is important to extend the duality-based framework of Section 5 to accommodate multiple bidders.
—What is the sensitivity of the structural and algorithmic results on the details of
the bidder type distributions?
—In settings where the seller knows the bidder distributions, but the bidders do
not, what is the Bayesian-optimal dominant strategy truthful mechanism?
Ultimately, we feel that the foundations have been laid for exciting developments
in optimal multi-item mechanism design, expecting a lot more progress on this front
in the next years.
Acknowledgments
We thank Yang Cai, Shaddin Dughmi, Christos Tzamos and Matt Weinberg for
valuable comments on drafts of this survey. We thank Christos for all the ﬁgures.
ACM SIGecom Exchanges, Vol. 14, No. 1, June 2015, Pages 41–75
C. Daskalakis