IEEE TRANSACTIONS ON IMAGE PROCESSING, VOL. 7, NO. 3, MARCH 1998
Snakes, Shapes, and Gradient Vector Flow
Chenyang Xu, Student Member, IEEE, and Jerry L. Prince, Senior Member, IEEE
Abstract—Snakes, or active contours, are used extensively in
computer vision and image processing applications, particularly
to locate object boundaries. Problems associated with initialization and poor convergence to boundary concavities, however,
have limited their utility. This paper presents a new external force
for active contours, largely solving both problems. This external
force, which we call gradient vector ﬂow (GVF), is computed
as a diffusion of the gradient vectors of a gray-level or binary
edge map derived from the image. It differs fundamentally from
traditional snake external forces in that it cannot be written as the
negative gradient of a potential function, and the corresponding
snake is formulated directly from a force balance condition rather
than a variational formulation. Using several two-dimensional
(2-D) examples and one three-dimensional (3-D) example, we
show that GVF has a large capture range and is able to move
snakes into boundary concavities.
Index Terms—Active contour models, deformable surface models, edge detection, gradient vector ﬂow, image segmentation,
shape representation and recovery, snakes.
I. INTRODUCTION
NAKES , or active contours, are curves deﬁned within
an image domain that can move under the inﬂuence of
internal forces coming from within the curve itself and external
forces computed from the image data. The internal and external
forces are deﬁned so that the snake will conform to an object
boundary or other desired features within an image. Snakes
are widely used in many applications, including edge detection
 , shape modeling , , segmentation , , and motion
tracking , .
There are two general types of active contour models
in the literature today: parametric active contours and
geometric active contours – . In this paper, we focus on
parametric active contours, although we expect our results
to have applications in geometric active contours as well.
Parametric active contours synthesize parametric curves within
an image domain and allow them to move toward desired
features, usually edges. Typically, the curves are drawn toward
the edges by potential forces, which are deﬁned to be the
negative gradient of a potential function. Additional forces,
such as pressure forces , together with the potential forces
comprise the external forces. There are also internal forces
designed to hold the curve together (elasticity forces) and to
keep it from bending too much (bending forces).
Manuscript received November 1, 1996; revised March 17, 1997. This work
was supported by NSF Presidential Faculty Fellow Award MIP93-50336. The
associate editor coordinating the review of this manuscript and approving it
for publication was Dr. Guillermo Sapiro.
The authors are with the Image Analysis and Communications Laboratory,
Department of Electrical and Computer Engineering, The Johns Hopkins
University, Baltimore, MD 21218 USA (e-mail: ).
Publisher Item Identiﬁer S 1057-7149(98)01745-X.
There are two key difﬁculties with parametric active contour
algorithms. First, the initial contour must, in general, be
close to the true boundary or else it will likely converge
to the wrong result. Several methods have been proposed to
address this problem including multiresolution methods ,
pressure forces , and distance potentials . The basic
idea is to increase the capture range of the external force
ﬁelds and to guide the contour toward the desired boundary.
The second problem is that active contours have difﬁculties
progressing into boundary concavities , . There is no
satisfactory solution to this problem, although pressure forces
 , control points , domain-adaptivity , directional
attractions , and the use of solenoidal ﬁelds have
been proposed. However, most of the methods proposed to
address these problems solve only one problem while creating
new difﬁculties. For example, multiresolution methods have
addressed the issue of capture range, but specifying how
the snake should move across different resolutions remains
problematic. Another example is that of pressure forces, which
can push an active contour into boundary concavities, but
cannot be too strong or “weak” edges will be overwhelmed
 . Pressure forces must also be initialized to push out or
push in, a condition that mandates careful initialization.
In this paper, we present a new class of external forces
for active contour models that addresses both problems listed
above. These ﬁelds, which we call gradient vector ﬂow (GVF)
ﬁelds, are dense vector ﬁelds derived from images by minimizing a certain energy functional in a variational framework.
The minimization is achieved by solving a pair of decoupled
linear partial differential equations that diffuses the gradient
vectors of a gray-level or binary edge map computed from the
image. We call the active contour that uses the GVF ﬁeld as its
external force a GVF snake. The GVF snake is distinguished
from nearly all previous snake formulations in that its external
forces cannot be written as the negative gradient of a potential
function. Because of this, it cannot be formulated using
the standard energy minimization framework; instead, it is
speciﬁed directly from a force balance condition.
Particular advantages of the GVF snake over a traditional
snake are its insensitivity to initialization and its ability to
move into boundary concavities. As we show in this paper,
its initializations can be inside, outside, or across the object’s
boundary. Unlike pressure forces, the GVF snake does not
need prior knowledge about whether to shrink or expand
toward the boundary. The GVF snake also has a large capture
range, which means that, barring interference from other
objects, it can be initialized far away from the boundary. This
increased capture range is achieved through a diffusion process
that does not blur the edges themselves, so multiresolution
1057–7149/98$10.00 1998 IEEE
IEEE TRANSACTIONS ON IMAGE PROCESSING, VOL. 7, NO. 3, MARCH 1998
methods are not needed. The external force model that is
closest in spirit to GVF is the distance potential forces of
Cohen and Cohen . Like GVF, these forces originate from
an edge map of the image and can provide a large capture
range. We show, however, that unlike GVF, distance potential
forces cannot move a snake into boundary concavities. We
believe that this is a property of all conservative forces that
characterize nearly all snake external forces, and that exploring
nonconservative external forces, such as GVF, is an important
direction for future research in active contour models.
We note that part of the work reported in this paper has
appeared in the conference paper .
II. BACKGROUND
A. Parametric Snake Model
A traditional snake is a curve
, that moves through the spatial domain of an image to
minimize the energy functional
are weighting parameters that control the
snake’s tension and rigidity, respectively, and
denote the ﬁrst and second derivatives of
with respect to
. The external energy function
is derived from the image
so that it takes on its smaller values at the features of interest,
such as boundaries. Given a gray-level image
as a function of continuous position variables
external energies designed to lead an active contour toward
step edges are
is a two-dimensional Gaussian function with
standard deviation
is the gradient operator. If the
image is a line drawing (black on white), then appropriate
external energies include :
It is easy to see from these deﬁnitions that larger
’s will cause
the boundaries to become blurry. Such large
’s are often
necessary, however, in order to increase the capture range of
the active contour.
A snake that minimizes
must satisfy the Euler equation
This can be viewed as a force balance equation
internal force
discourages stretching and bending while
the external potential force
pulls the snake toward the
desired image edges.
To ﬁnd a solution to (6), the snake is made dynamic by
as function of time
as well as
Then, the partial derivative of
with respect to
is then set
equal to the left hand side of (6) as follows:
When the solution
stabilizes, the term
and we achieve a solution of (6). A numerical solution to
(8) can be found by discretizing the equation and solving the
discrete system iteratively (cf., ). We note that most snake
implementations use either a parameter which multiplies
in order to control the temporal step-size, or a parameter to
, which permits separate control of the external
force strength. In this paper, we normalize the external forces
so that the maximum magnitude is equal to one, and use a unit
temporal step-size for all the experiments.
B. Behavior of Traditional Snakes
An example of the behavior of a traditional snake is shown
in Fig. 1. Fig. 1(a) shows a 64
64-pixel line-drawing of a
U-shaped object (shown in gray) having a boundary concavity
at the top. It also shows a sequence of curves (in black)
depicting the iterative progression of a traditional snake (
) initialized outside the object but within the
capture range of the potential force ﬁeld. The potential force
pixel is shown in
Fig. 1(b). We note that the ﬁnal solution in Fig. 1(a) solves
the Euler equations of the snake formulation, but remains split
across the concave region.
The reason for the poor convergence of this snake is
revealed in Fig. 1(c), where a close-up of the external force
ﬁeld within the boundary concavity is shown. Although the
external forces correctly point toward the object boundary,
within the boundary concavity the forces point horizontally
in opposite directions. Therefore, the active contour is pulled
apart toward each of the “ﬁngers” of the U-shape, but not
made to progress downward into the concavity. There is no
that will correct this problem.
Another key problem with traditional snake formulations,
the problem of limited capture range, can be understood by
examining Fig. 1(b). In this ﬁgure, we see that the magnitude
of the external forces die out quite rapidly away from the
object boundary. Increasing
in (5) will increase this range,
but the boundary localization will become less accurate and
distinct, ultimately obliterating the concavity itself when
becomes too large.
Cohen and Cohen proposed an external force model
that signiﬁcantly increases the capture range of a traditional
snake. These external forces are the negative gradient of a
potential function that is computed using a Euclidean (or
chamfer) distance map. We refer to these forces as distance potential forces to distinguish them from the traditional potential
forces deﬁned in Section II-A. Fig. 2 shows the performance
of a snake using distance potential forces. Fig. 2(a) shows
both the U-shaped object (in gray) and a sequence of contours
(in black) depicting the progression of the snake from its
initialization far from the object to its ﬁnal conﬁguration. The
XU AND PRINCE: GRADIENT VECTOR FLOW
(a) Convergence of a snake using (b) traditional potential forces, and (c) shown close-up within the boundary concavity.
(a) Convergence of a snake using (b) distance potential forces, and (c) shown close-up within the boundary concavity.
distance potential forces shown in Fig. 2(b) have vectors with
large magnitudes far away from the object, explaining why the
capture range is large for this external force model.
As shown in Fig. 2(a), this snake also fails to converge to
the boundary concavity. This can be explained by inspecting
the magniﬁed portion of the distance potential forces shown in
Fig. 2(c). We see that, like traditional potential forces, these
forces also point horizontally in opposite directions, which
pulls the snake apart but not downward into the boundary
concavity. We note that Cohen and Cohen’s modiﬁcation to
the basic distance potential forces, which applies a nonlinear
transformation to the distance map , does not change the
direction of the forces, only their magnitudes. Therefore, the
problem of convergence to boundary concavities is not solved
by distance potential forces.
C. Generalized Force Balance Equations
The snake solutions shown in Figs. 1(a) and 2(a) both satisfy
the Euler equations (6) for their respective energy model.
Accordingly, the poor ﬁnal conﬁgurations can be attributed
to convergence to a local minimum of the objective function
(1). Several researchers have sought solutions to this problem
by formulating snakes directly from a force balance equation
in which the standard external force
is replaced by a more
general external force
as follows:
The choice of
can have a profound impact on both
the implementation and the behavior of a snake. Broadly
speaking, the external forces
can be divided into two
classes: static and dynamic. Static forces are those that are
computed from the image data, and do not change as the snake
progresses. Standard snake potential forces are static external
forces. Dynamic forces are those that change as the snake
Several types of dynamic external forces have been invented
to try to improve upon the standard snake potential forces. For
example, the forces used in multiresolution snakes and
the pressure forces used in balloons are dynamic external
forces. The use of multiresolution schemes and pressure forces,
however, adds complexity to a snake’s implementation and
unpredictability to its performance. For example, pressure
IEEE TRANSACTIONS ON IMAGE PROCESSING, VOL. 7, NO. 3, MARCH 1998
forces must be initialized to either push out or push in, and
may overwhelm weak boundaries if they act too strongly .
Conversely, they may not move into boundary concavities if
they are pushing in the wrong direction or act too weakly.
In this paper, we present a new type of static external force,
one that does not change with time or depend on the position
of the snake itself. The underlying mathematical premise for
this new force comes from the Helmholtz theorem (cf., ),
which states that the most general static vector ﬁeld can be
decomposed into two components: an irrotational (curl-free)
component and a solenoidal (divergence-free) component.1
An external potential force generated from the variational
formulation of a traditional snake must enter the force balance
equation (6) as a static irrotational ﬁeld, since it is the gradient
of a potential function. Therefore, a more general static ﬁeld
can be obtained by allowing the possibility that it
comprises both an irrotational component and a solenoidal
component. Our previous paper explored the idea of
constructing a separate solenoidal ﬁeld from an image, which
was then added to a standard irrotational ﬁeld. In the following
section, we pursue a more natural approach in which the
external force ﬁeld is designed to have the desired properties
of both a large capture range and the presence of forces that
point into boundary concavities. The resulting formulation
produces external force ﬁelds that can be expected to have
both irrotational and solenoidal components.
III. GRADIENT VECTOR FLOW SNAKE
Our overall approach is to use the force balance condition
(7) as a starting point for designing a snake. We deﬁne
below a new static external force ﬁeld
which we call the gradient vector ﬂow (GVF) ﬁeld. To obtain
the corresponding dynamic snake equation, we replace the
potential force
in (8) with
, yielding
We call the parametric curve solving the above dynamic equation a GVF snake. It is solved numerically by discretization
and iteration, in identical fashion to the traditional snake.
Although the ﬁnal conﬁguration of a GVF snake will
satisfy the force-balance equation (7), this equation does
not, in general, represent the Euler equations of the energy
minimization problem in (1). This is because
in general, be an irrotational ﬁeld. The loss of this optimality
property, however, is well-compensated by the signiﬁcantly
improved performance of the GVF snake.
A. Edge Map
We begin by deﬁning an edge map
derived from
having the property that it is larger near
the image edges.2 We can use any gray-level or binary edge
map deﬁned in the image processing literature (cf., ); for
1Irrotational ﬁelds are sometimes called conservative ﬁelds; they can be
represented as the gradient of a scalar potential function.
2Other features can be sought by redeﬁning f(x; y) to be larger at the
desired features.
example, we could use
, 2, 3, or 4. Three general properties of edge maps
are important in the present context. First, the gradient of an
has vectors pointing toward the edges, which
are normal to the edges at the edges. Second, these vectors
generally have large magnitudes only in the immediate vicinity
of the edges. Third, in homogeneous regions, where
is nearly constant,
is nearly zero.
Now consider how these properties affect the behavior
of a traditional snake when the gradient of an edge map
is used as an external force. Because of the ﬁrst property,
a snake initialized close to the edge will converge to a
stable conﬁguration near the edge. This is a highly desirable
property. Because of the second property, however, the capture
range will be very small, in general. Because of the third
property, homogeneous regions will have no external forces
whatsoever. These last two properties are undesirable. Our
approach is to keep the highly desirable property of the
gradients near the edges, but to extend the gradient map farther
away from the edges and into homogeneous regions using a
computational diffusion process. As an important beneﬁt, the
inherent competition of the diffusion process will also create
vectors that point into boundary concavities.
B. Gradient Vector Flow
We deﬁne the gradient vector ﬂow ﬁeld to be the vector
that minimizes the energy
functional
This variational formulation follows a standard principle,
that of making the result smooth when there is no data. In
particular, we see that when
is small, the energy is
dominated by sum of the squares of the partial derivatives
of the vector ﬁeld, yielding a slowly varying ﬁeld. On the
other hand, when
is large, the second term dominates the
integrand, and is minimized by setting
. This produces
the desired effect of keeping
nearly equal to the gradient of
the edge map when it is large, but forcing the ﬁeld to be
slowly-varying in homogeneous regions. The parameter
a regularization parameter governing the tradeoff between the
ﬁrst term and the second term in the integrand. This parameter
should be set according to the amount of noise present in the
image (more noise, increase
We note that the smoothing term—the ﬁrst term within
the integrand of (12)—is the same term used by Horn and
Schunck in their classical formulation of optical ﬂow . It
has recently been shown that this term corresponds to an equal
penalty on the divergence and curl of the vector ﬁeld .
Therefore, the vector ﬁeld resulting from this minimization
can be expected to be neither entirely irrotational nor entirely
solenoidal.
XU AND PRINCE: GRADIENT VECTOR FLOW
Using the calculus of variations , it can be shown that
the GVF ﬁeld can be found by solving the following Euler
is the Laplacian operator. These equations provide
further intuition behind the GVF formulation. We note that in
a homogeneous region [where
is constant], the second
term in each equation is zero because the gradient of
is zero. Therefore, within such a region,
determined by Laplace’s equation, and the resulting GVF ﬁeld
is interpolated from the region’s boundary, reﬂecting a kind of
competition among the boundary vectors. This explains why
GVF yields vectors that point into boundary concavities.
C. Numerical Implementation
Equations (13a) and (13b) can be solved by treating
as functions of time and solving
The steady-state solution of these linear parabolic equations
is the desired solution of the Euler equations (13a) and (13b).
Note that these equations are decoupled, and therefore can
be solved as separate scalar partial differential equations in
. The equations in (14) are known as generalized
diffusion equations, and are known to arise in such diverse
ﬁelds as heat conduction, reactor physics, and ﬂuid ﬂow .
Here, they have appeared from our description of desirable
properties of snake external force ﬁelds as represented in the
energy functional of (12).
For convenience, we rewrite (14) as follows:
Any digital image gradient operator (cf., ) can be used
to calculate
. In the examples shown in this paper,
we use simple central differences. The coefﬁcients
, can then be computed and ﬁxed for
the entire iterative process.
To set up the iterative solution, let the indices ,
correspond to
, respectively, and let the spacing
between pixels be
and the time step for each
iteration be
. Then the required partial derivatives can be
approximated as
Substituting these approximations into (15) gives our iterative
solution to GVF as follows:
Convergence of the above iterative process is guaranteed by
a standard result in the theory of numerical methods (cf., ).
Provided that ,
are bounded, (16) is stable whenever
the Courant–Friedrichs–Lewy step-size restriction
maintained. Since normally
are ﬁxed, using the
deﬁnition of
in (17), we ﬁnd that the following restriction
on the time-step
must be maintained in order to guarantee
convergence of GVF:
The intuition behind this condition is revealing. First, convergence can be made to be faster on coarser images—i.e., when
are larger. Second, when
is large and the GVF
is expected to be a smoother ﬁeld, the convergence rate will
be slower (since
must be kept small).
Our 2-D GVF computations were implemented using MAT-
LAB3 code. For an
256-pixel image on an SGI
Indigo-2, typical computation times are 8 s for the traditional
potential forces (written in C), 155 s for the distance potential
forces (Euclidean distance map, written in MATLAB), and
420 s for the GVF forces (written in MATLAB, using
iterations). The computation time of GVF can be substantially
reduced by using optimized code in C or FORTRAN. For
example, we have implemented 3-D GVF (see Section V-B)
in C, and computed GVF with 150 iterations on a 256
60-voxel image in 31 min. Accounting for the size
difference and extra dimension, we conclude that written in
C, GVF computation for a 2-D 256
256-pixel image would
take approximately 53 s. Algorithm optimization such as use
of the multigrid method should yield further improvements.
3Mathworks, Natick, MA
IEEE TRANSACTIONS ON IMAGE PROCESSING, VOL. 7, NO. 3, MARCH 1998
(a) Convergence of a snake using (b) GVF external forces, and (c) shown close-up within the boundary concavity.
Streamlines originating from an array of 32  32 particles in (a) a traditional potential force ﬁeld, (b) a distance potential force ﬁeld, and
(c) a GVF force ﬁeld.
IV. GVF FIELDS AND SNAKES: DEMONSTRATIONS
This section shows several examples of GVF ﬁeld computations on simple objects and demonstrates several key
properties of GVF snakes. We used
for all snakes and
for GVF. The snakes were dynamically reparameterized to maintain contour point separation to
within 0.5–1.5 pixels (cf., ). All edge maps used in GVF
computations were normalized to the range .
A. Convergence to Boundary Concavity
In our ﬁrst experiment, we computed the GVF ﬁeld for the
same U-shaped object used in Figs. 1 and 2. The results are
shown in Fig. 3. Comparing the GVF ﬁeld, shown in Fig. 3(b),
to the traditional potential force ﬁeld of Fig. 1(b), reveals
several key differences. First, like the distance potential force
ﬁeld [Fig. 2(b)], the GVF ﬁeld has a much larger capture range
than traditional potential forces. A second observation, which
can be seen in the close-up of Fig. 3(c), is that the GVF vectors
within the boundary concavity at the top of the U-shape have
a downward component. This stands in stark contrast to both
the traditional potential forces of Fig. 1(c) and the distance
potential forces of Fig. 2(c). Finally, it can be seen from
Fig. 3(b) that the GVF ﬁeld behaves in an analogous fashion
when viewed from the inside of the object. In particular, the
GVF vectors are pointing upward into the “ﬁngers” of the
U-shape, which represent concavities from this perspective.
Fig. 3(a) shows the initialization, progression, and ﬁnal
conﬁguration of a GVF snake. The initialization is the same
as that of Fig. 2(a), and the snake parameters are the same
as those in Figs. 1 and 2. Clearly, the GVF snake has a
broad capture range and superior convergence properties.
The ﬁnal snake conﬁguration closely approximates the true
boundary, arriving at a subpixel interpolation through bilinear
interpolation of the GVF force ﬁeld.
B. Streamlines
Streamlines are the paths over which free particles move
when placed in an external force ﬁeld. By looking at their
streamlines, we can examine the capture ranges and motion
inducing properties for various snake external forces. Fig. 4
shows the streamlines of points arranged on a 32
XU AND PRINCE: GRADIENT VECTOR FLOW
(a) Initial curve and snake results from (b) a balloon with an outward pressure, (c) a distance potential force snake, and (d) a GVF snake.
(a) Initial curve and snake results from (b) a traditional snake, (c) a distance potential force snake, and (d) a GVF snake.
for the traditional potential forces, distance potential forces,
and GVF forces used in the simulations of Figs. 1–3.
Several properties can be observed from these ﬁgures. First,
the capture ranges of the GVF force ﬁeld and the distance
potential force ﬁeld are clearly much larger than that of the
traditional potential force ﬁeld. In fact, both distance potential
forces and GVF forces will attract a snake that is initialized
on the image border. Second, it is clear that GVF is the only
force providing both a downward force within the boundary
concavity at the top of the U-shape and an upward force within
the “ﬁngers” of the U-shape. In contrast, both traditional snake
forces and distance potential forces provide only sideways
forces in these regions. Third, the distance potential forces
appear to have boundary points that act as regional points of
attraction. In contrast, the GVF forces attract points uniformly
toward the boundary.
C. Snake Initialization and Convergence
In this section, we present several examples that compare
different snake models with the GVF snake, showing various
effects related to initialization, boundary concavities, and
subjective contours. The object under study is the line drawing
drawn in gray in both Figs. 5 and 6. This ﬁgure may depict,
for example, the boundary of a room having two doors at the
top and bottom and two alcoves at the left and right. The open
doors at the top and bottom represent subjective contours that
we desire to connect using the snake (cf., ).
The snake results shown in Fig. 5(b)–5(d) all used the
initialization shown in Fig. 5(a). We ﬁrst note that for this
initialization, the traditional potential forces were too weak to
overpower the snake’s internal forces, and the snake shrank
to a point at the center of the ﬁgure (result not shown). To
try to ﬁx this problem, a balloon model with outward pressure
forces just strong enough to cause the snake to expand into the
boundary concavities was implemented; this result is shown in
Fig. 5(b). Clearly, the pressure forces also caused the balloon
to bulge outward through the openings at the top and bottom,
and therefore the subjective contours are not reconstructed
The snake result obtained using the distance potential force
model is shown in Fig. 5(c). Clearly, the capture range is now
adequate and the subjective boundaries at the top and bottom
are reconstructed well. But this snake fails to ﬁnd the boundary
concavities at the left and right, for the same reason that it
could not proceed into the top of the U-shaped object of the
previous sections. The GVF snake result, shown in Fig. 5(d), is
clearly the best result. It has reconstructed both the subjective
boundaries and the boundary concavities quite well. The slight
rounding of corners, which can also be seen in Figs. 5(b) and
5(c), is a fundamental characteristic of snakes caused by the
regularization coefﬁcients
The snake results shown in Fig. 6(b)–6(d) all used the
initialization shown in Fig. 6(a), which is deliberately placed
across the boundary. In this case, the balloon model cannot
be sensibly applied because it is not clear whether to apply
inward or outward pressure forces. Instead, the result of a
snake with traditional potential forces is shown in Fig. 6(b).
4The effect is only caused by
in this example since
IEEE TRANSACTIONS ON IMAGE PROCESSING, VOL. 7, NO. 3, MARCH 1998
(a) Noisy 64  64-pixel image of a U-shaped object; (b) edge map jr(G  I)j2 with  = 1:5; (c) GVF external force ﬁeld; and (d)
convergence of the GVF snake.
This snake stops at a very undesirable conﬁguration because
its only points of contact with the boundary are normal to
it and the remainder of the snake is outside the capture
range of the other parts of the boundary. The snake resulting
from distance potential forces is shown in Fig. 6(c). This
result shows that although the distance potential force snake
possesses an insensitivity to initialization, it is incapable of
progressing into boundary concavities. The GVF snake result,
shown in Fig. 6(d), is again the best result. The GVF snake
appears to have both an insensitivity to initialization and an
ability to progress into boundary concavities.
V. GRAY-LEVEL IMAGES AND HIGHER DIMENSIONS
In this section, we describe and demonstrate how GVF can
be used in gray-level imagery and in higher dimensions.
A. Gray-Level Images
The underlying formulation of GVF is valid for gray-level
images as well as binary images. To compute GVF for graylevel images, the edge-map function
must ﬁrst be
calculated. Two possibilities are
, where the latter is more
robust in the presence of noise. Other more complicated noiseremoval techniques such as median ﬁltering, morphological
ﬁltering, and anisotropic diffusion could also be used to
improve the underlying edge map. Given an edge-map function
and an approximation to its gradient, GVF is computed in the
usual way using (16).
Fig. 7(a) shows a gray-level image of the U-shaped object
corrupted by additive white Gaussian noise; the signal-tonoise ratio is 6 dB. Fig. 7(b) shows an edge-map computed
XU AND PRINCE: GRADIENT VECTOR FLOW
(a) 160  160-pixel magnetic resonance image of the left ventricle of a human heart; (b) edge map jr(G  I)j2 with  = 2:5; (c) GVF ﬁeld
(shown subsampled by a factor of two); and (d) convergence of the GVF snake.
pixels, and Fig. 7(c)
shows the computed GVF ﬁeld. It is evident that the stronger
edge-map gradients are retained while the weaker gradients
are smoothed out, exactly as would be predicted by the GVF
energy formulation of (12). Superposed on the original image,
Fig. 7(d) shows a sequence of GVF snakes (plotted in a shade
of gray) and the GVF snake result (plotted in white). The result
shows an excellent convergence to the boundary, despite the
initialization from far away, the image noise, and the boundary
concavity.
Another demonstration of GVF applied to gray-scale imagery is shown in Fig. 8. Fig. 8(a) shows a magnetic resonance
image (short-axis section) of the left ventrical of a human
heart, and Fig. 8(b) shows an edge-map computed using
. Fig. 8(c) shows the
computed GVF, and Fig. 8(d) shows a sequence of GVF
snakes (plotted in a shade of gray) and the GVF snake result
(plotted in white), both overlaid on the original image. Clearly,
many details on the endocardial border are captured by the
GVF snake result, including the papillary muscles (the bumps
that protrude into the cavity).
B. Higher Dimensions
GVF can be easily generalized to higher dimensions. Let
be an edge-map deﬁned in
is deﬁned as the vector ﬁeld
minimizes the energy functional
where the gradient operator
is applied to each component
separately. Using the calculus of variations, we ﬁnd that
IEEE TRANSACTIONS ON IMAGE PROCESSING, VOL. 7, NO. 3, MARCH 1998
(a) Isosurface of a 3-D object deﬁned on a 643 grid. (b) Positions of planes A and B on which the 3-D GVF vectors are depicted in (c) and (d),
respectively. (e) Initial conﬁguration of a deformable surface using GVF and its positions after (f) 10, (g) 40, and (h) 100 iterations.
the GVF ﬁeld must satisfy the Euler equation
is also applied to each component of the vector
separately.
A solution to these Euler equations can be found by introducing a time variable
and ﬁnding the steady-state solution
of the following linear parabolic partial differential equation
denotes the partial derivative of
with respect to
. Equation (21) comprises
decoupled scalar linear second
order parabolic partial differential equations in each element
. Therefore, in principle, it can be solved in parallel. In
analogous fashion to the 2-D case, ﬁnite differences can be
used to approximate the required derivatives and each scalar
equation can be solved iteratively.
A preliminary experiment using GVF in three dimensions
was carried out using the object shown in Fig. 9(a), which
was created on a 64
grid, and rendered using an isosurface
algorithm. The 3-D GVF ﬁeld was computed using a numerical
approximation to (21) and
. This GVF result on the
two planes shown in Fig. 9(b), is shown projected onto these
planes in Figs. 9(c) and (d). The same characteristics observed
in 2-D GVF ﬁeld are apparent here as well.
Next, a deformable surface (cf., ) using 3-D GVF was
initialized as the sphere shown in Fig. 9(e), which is neither
entirely inside nor entirely outside the object. Intermediate
results after 10 and 40 iterations of the deformable surface
algorithm are shown in Figs. 9(f) and 9(g). The ﬁnal result
after 100 iterations is shown in Fig. 9(h). The resulting surface
is smoother than the isosurface rendering because of the
internal forces in the deformable surface model.
VI. SUMMARY AND CONCLUSION
We have introduced a new external force model for active contours and deformable surfaces, which we called the
gradient vector ﬂow (GVF) ﬁeld. The ﬁeld is calculated as a
diffusion of the gradient vectors of a gray-level or binary edgemap. We have shown that it allows for ﬂexible initialization of
the snake or deformable surface and encourages convergence
to boundary concavities.
Further investigations into the nature and uses of GVF
are warranted. In particular, a complete characterization of
the capture range of the GVF ﬁeld would help in snake
initialization procedures. It would also help to more fully
understand the GVF parameter
, perhaps ﬁnding a way to
choose it optimally for a particular image, and to understand
the interplay between
and the snake parameters
Finally, the GVF framework might be useful in deﬁning new
connections between parametric and geometric snakes, and
might form the basis for a new geometric snake.
ACKNOWLEDGMENT
The authors would like to thank D. Pham, S. Gupta, and
Prof. J. Spruck for their discussions concerning this work,
and the reviewers for providing several key suggestions for
improving the paper.