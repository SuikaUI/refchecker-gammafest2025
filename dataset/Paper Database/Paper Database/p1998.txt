Comparison of Different Driving Style Analysis
Approaches based on Trip Segmentation
over GPS Information
Marco Brambilla
Politecnico di Milano, DEIB.
 
Paolo Mascetti
DataBiz Srl.
 
Andrea Mauri
Politecnico di Milano, DEIB.
 
Over one billion cars interact with each other on the road every day. Each driver has his own driving style, which could
impact safety, fuel economy and road congestion. Knowledge about the driving style of the driver could be used
to encourage “better” driving behaviour through immediate
feedback while driving, or by scaling auto insurance rates
based on the aggressiveness of the driving style.
In this work we report on our study of driving behaviour
proﬁling based on unsupervised data mining methods. The
main goal is to detect the diﬀerent driving behaviours, and
thus to cluster drivers with similar behaviour. This paves
the way to new business models related to the driving sector, such as Pay-How-You-Drive insurance policies and car
Driver behavioral characteristics are studied by collecting
information from GPS sensors on the cars and by applying three diﬀerent analysis approaches (DP-means, Hidden
Markov Models, and Behavioural Topic Extraction) to the
contextual scene detection problems on car trips, in order
to detect diﬀerent behaviour along each trip. Subsequently,
drivers are clustered in similar proﬁles based on that and the
results are compared with a human-deﬁned groundtruth on
drivers classiﬁcation. The proposed framework is tested on
a real dataset containing sampled car signals. While the different approaches show relevant diﬀerences in trip segment
classiﬁcation, the coherence of the ﬁnal driver clustering results is surprisingly high.
INTRODUCTION
According to the global status report on road safety conducted by the World Health Organisation (WHO) in 2013,
1.24 million traﬃc-related fatalities occur annually worldwide, currently the leading cause of death for people aged
between 15 and 29 years. In the majority of the cases acci-
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies
are not made or distributed for proﬁt or commercial advantage and that
copies bear this notice and the full citation on the ﬁrst page. To copy
otherwise, or republish, to post on servers or to redistribute to lists,
requires prior speciﬁc permission and/or a fee.
SAC’17, April 3-7, 2017, Marrakesh, Morocco
Copyright 2017 ACM 978-1-4503-4486-9/17/04. . . $15.00
 
dents are caused by risky driving behavior1. Driving is essentially a multi-factor cognitive task based on the underlying road layout, traﬃc, weather, and social context. Drivers
modeling is based on on-road behavior analysis and it allows users’ segmentation into categories based upon their
driving style . Exploiting this segmentation can bring a
great impact in road safety and on business models related
to driving, such as Pay-How-You-Drive insurance policies
and car rentals.
Current driver characterization methods are mainly based
on the process of identiﬁcation and recognition of patterns
deﬁned by prior research studies and adapted to a speciﬁc
context through supervised learning techniques .
However, this kind of analysis lacks in generalization, misses the
selection phase of the best set of features to consider, and
implies complex human labeling of multivariate time series
for the deﬁnition of classes or sets of rules for the automatic
identiﬁcation.
In this work we propose an approach aimed to the identiﬁcation of patterns characterizing driving behaviours independently from prior knowledge concerning the driving
In this way the relation between features (e.g.
cognitive, operational and contextual) can be fully investigated. Hence we propose three unsupervised approaches:
a clustering based segmentation, a sequences analysis segmentation, and a behavior characterization obtained with
a soft-clustering technique.
Through these techniques we
classify trip segments, and based on this we apply a second
clustering step on trips (and thus drivers). We compare the
diﬀerent techniques and we assess the correctness of drivers
clustering against a human-deﬁned ground truth.
The paper is structured as follows: Section 2 describes the
applied methods, Section 3 reports on our experiments and
discussion, Section 4 describes the related work and ﬁnally
Section 5 concludes.
CONTEXTUAL SCENE EXTRACTION
In this section we describe three diﬀerent unsupervised approaches, namely clustering methods, to extract observed recurrent patterns (named contextual scenes) in the behaviour
of diﬀerent drivers. This allows the extraction of a reduced
1 health
statistics/2016/whs2016 AnnexA RoadTraﬃc.pdf?ua=1&
representation of the original multivariate time series describing the trips of drivers.
DP-Means for Contextual Scenes Clustering
The ﬁrst method is the DP-Means algorithm, a Bayesian
non-parametric clustering approach . We apply this algorithm with the aim to group observation points into contextual scenes representing a behavioral pattern in driving
trips. This algorithm infers the number of groups considering data similarity based on euclidean distance measured
between processed points. In fact, a new cluster is formed
whenever a point is farther than λ away from every existing
cluster centroid. The parameter λ controls the trade-oﬀbetween traditional k-means objective function and the cluster
penalty term introduced by DP-means formulation. Higher
values of λ discourage the creation of more clusters.
Since this analysis is accomplished in an unsupervised setting, to determine the best number of cluster we rely on an
well known evaluation metrics, namely the Silhouette similarity coeﬃcient, which computes how tightly grouped are
the points in each cluster. Assuming to have k clusters, for
each datum i, let a(i) be the average dissimilarity of i with
all other data in the same cluster and let b(i) be the lowest dissimilarity of i to any other cluster, of which i is not
member. The silhouette index of i is deﬁned as:
b (i) −a (i)
max{a (i) , b (i)}
−1 ≤s(i) ≤1
If s (i) is near to 1, object i has been assigned to an appropriate cluster. Thus, the average s (i) consider the appropriateness of clustering of all data points.
This allows to
determine the optimal number of clusters k, by running the
clustering algorithm several times with diﬀerent parameter
values and choosing k which yields the highest silhouette.
Hidden Markov Model based Segmentation
The second method is Hidden Markov Model (HMM), applied to extract contextual scenes. The proposed model is
a statistical latent process model which assumes that the
observed driving behaviour is governed by sequence of hidden (unobserved) activities. HMMs introduce the concept
of sequence and relationship between consequent observations and hidden states. We employ this models to perform
unsupervised segmentation of gathered trip points in order
to learn behavioral patterns described by their latent structure.
In particular we used continuous emissions HMMs
where hidden states generative process is described by multivariate Gaussian distributions.
The overall process is composed mainly by three phases:
model initialization based on clustering results; model training aimed to estimate the model parameters; and sequence
HMMs unsupervised training process requires knowledge of
the hidden structure; more speciﬁcally, the number of the
latent variables and the initialization parameters need to be
speciﬁed. We perform model initialization based results obtained by DP-means algorithm. Starting from DP-clustering
results, Multivariate Gaussian Distribution parameters (means
and covariances) are estimated for every hidden state. Once
hidden state parameters and transition behavior are learnt,
we perform the tagging of each observed sequence to assign each observed sample to the correspondent generative
hidden state. In particular, the model parameters are estimated making use of Baum-Welch algorithm that uses a
Expectation Maximization (EM) algorithm to ﬁnd the maximum likelihood of the parameters of the HMM given a set
of feature vectors.
Once the HMM’s parameter are estimated by the learning
algorithm, our goal is to tag each observation point according to the corresponding generative hidden state. To achieve
sequence labeling we used the Viterbi algorithm .
Hierarchical Dirichlet Processes for
Behavioural Topics Extraction
So far we analyzed methods producing an hard clustering assignment for each observed data point and the ulterior clusters’ distribution has been used to characterize trip belonging to diﬀerent users. Now we apply a Hierarchical Dirichlet
Processes to model topical concepts belonging to a set of
documents.
Straub et al. in proved that HDPs are able to obtain
descriptive topics about road-states considering a small set
of car signals. Starting from this points we used the same
approach to compare driver models belonging to diﬀerent
drivers to allow a clustering based on their driving behaviour
and habits.
Most of the time, the number of topics for a corpus is unknown.
In that case, a non-parametric model is a good
choice since the number of parameters (such as the number
of topics) is not set a priori, but learned from data. This
model can adapt the number of topics based on the data.
The overall process is composed mainly by three phases: (1)
data discretization, (2) documents and corpus creation, and
ﬁnally (3) topic extraction phase.
Data Discretization
The ﬁrst step consists in discretizing the continuous features
into categorical ones. Our goal is to represent each observation point with a string of length D where D is the number of
features. Each symbol in the string represents a discretized
feature value. In this transformation the number of features
taken into account is fundamental because deﬁnes the length
of each word of ghe corpus and may aﬀect the model performance. Furthermore, it is essential to deﬁne the number of
categorical values associated to each signal.
Two methods can be used for feature discretization: (i) Clustering: in this technique each features is grouped using clustering algorithm; or (2) Binning: in this alternative each signal spanning range is divided in categorical bins: Each bin is
deﬁned by two threshold values: starting point and ending
point. The size of each bin may be of diﬀerent length based
on signal’s distribution (equal frequencies) or it may be constant (equal intervals) in order to easily recognize outliers.
In our case we opted for binning with equal intervals.
Corpus Creation
Once each observation signal has been quantized, we built a
text corpus on which to train our model. Quantized observations representation (which we will call words), are grouped
into documents based on their trip membership.
Topic Analysis
The topics are analyzed using a Hierarchical Dirichlet Process (HDP) which applies Sethuraman’ s stick breaking construction twice, as described in . This kind of construction, unlike the original ones derived by Teh et al.
allows the derivation of an eﬃcient and scalable stochastic
variational inference, as proposed by Wang et al. .
These approximation assumes that all the variables involved
in the process are independent and it truncates the stickbreaks to T on the corpus level and to K on the document
level. This fact does not aﬀect the results since truncation
level can be set high enough to allow the HDP to adapt to
the complexity of the data.
EXPERIMENT
In this section we describe how we performed the analysis
described in the previous sections on a real world dataset.
Dataset Description
In this work we used the XSens2 dataset, a collection of observations retrieved during an evaluation study of a driving
behavior collection system. Each observation represents an
observed driving trip and each sample represents a set of
signals’ observation.
Data Collection
The data have been preprocessed by the collection device
Xsens MTi-G-710, a 3D motion tracking device, which performs an initial ﬁltering process including speed estimation
based on GPS positioning. The used coordinate system used
is known as ENU and is the standard in inertial navigation
for aviation and geodetic applications.
Sampling Frequency and Down-Sampling
The retrieved signals have their own sampling frequency
that can vary from one device and sensor to another. For
instance, there is a diﬀerent sampling frequency between
GPS positioning (1Hz) and inertial measurements (100Hz).
To overcome this problem observations are grouped using a
temporal window size of 1 seconds, decision based on the
slower sampling frequency. In subsampling, for the inertial
features we consider the mean value, while for the GPS coordinates we consider the median (to avoid generating“fake”
mean GPS positions).
Features Selection
The features used in the experiments have been chosen relying on prior knowledge regarding their relevance in Driving
Behavior Modeling . Besides the ones already available, a few others have been computed, such as the diﬀerence
in orientation (yaw) with respect to the previous instant.
2 
xsensfairchild-data-available
Table 1: Silhouette Coeﬃcients depending on clustering parameters
Number of Clusters
(a) SC for λ = 10
(b) SC for λ = 12
Figure 1: Silhouette Coeﬃcient representation. The vertical
dashed red line represents average SC.
The selected features are: acceleration (on Y and X axes),
speed (on Y and X axes) and the diﬀerence in yaw.
DP-Means for Contextual Scenes Clustering
We run DP-means algorithm over the dataset to assign to
each observed trip point the corresponding Contextual Scene.
In the datasets data points belonging to each trip are ordered
according to the timestamp and trips are ordered by collection sequence. It is important to highlight this structural
ordering of clustering dataset because DP-means algorithm
results depend on the order in which data points are processed. A diﬀerent ordering of data points or driving trip
may produce diﬀerent clustering results.
We performed Silhouette Coeﬃcient (SC) Analysis to tune
the clustering parameters when applying DP-means. The
results are summarized in Table 1 and Figure 1. The optimal SC values correspond to values of λ equal to 10 or 12 (we
discard λ=13 because it yields only 2 clusters, with all trips
but one in the same cluster). We decided to use λ=12 since
the corresponding SC is very similar to the one for λ=10
and it generates less clusters. The centroids are represented
in Table 2: for instance Cluster 1 identiﬁes straight-line proceeding at low speed while Cluster 7 groups points of harsh
maneuvers with high lateral and longitudinal accelerations.
To support the visual exploration of clusters and centroids,
Figure 2 reports a graphical representation of the features
distribution within each cluster allowing one to understand
what kind of behavior or Contextual Scene can be associated
to each cluster, based on the values of the features and the
allocation of clustered points. The visualization makes use
of histograms where each graph represents the distribution
of a feature across the clusters.
Furthermore, each trip and consequently each driver can be
characterized by the distribution of the points belonging to
Table 2: DP-Means clustering centroids with λ = 12.
each cluster. The percentage of each cluster’s points within
each trip can be used as characterizing feature of individual
driving style. These information about cluster distribution
in each trip are summarized in Table 3.
Table 3: The percentage of points belonging to each cluster
have been computed considering every observed driving trip.
Similar trips present a similar clusters distribution.
Hidden Markov Models Based Segmentation
HMM is trained using the dataset and each trip’s observation have been tagged to assign the corresponding hidden
state. The result is similar to clustering process, where each
point is assigned to the nearest cluster, but HMM has intrinsic information about the probability of all the possible
state changes. This property of the system is expressed by
the transition matrix as described in Table 5 where it has
been computed considering an HMM model initialized with
seven hidden states.
High values of self transition represent behaviors that tend
to last in time for long period and instead lower values of
self-transition probability characterize behavioral patterns
that have short term.
Similarly to clusters’ centroids, in the extracted HMM we
evaluated mean and covariance of Multivariate Gaussian distributions belonging to latent states. In Table 4 are represented means vector of Multivariate Gaussian Distribution
belonging to each latent state. Furthermore we computed
the distribution of each hidden state within each observed
driving trip as described in Table 6. Similar trips present a
similar clusters distribution.
An example of clustering is shown in Figure 3, where the
colors represents the points belonging to diﬀerent clusters.
Table 4: HMM Gaussian emission means with k=7. In the
Table are represented Multivariate Gaussian features’ means
associated to the identiﬁed hidden state.
Table 5: Standard-HMM Transitions Matrix initialized with
Table 6: Hidden States assignments distribution in trips.
Hierarchical Dirichlet Processes for
Behavioural Topic Extraction
For topic extraction we used an already provided implementation of HDP model provided by Gensim library . Gensim is licensed under the OSI-approved GNU LGPL license.
We discretized the dataset using a binning method (Binning
Figure 2: Features distribution on the identiﬁed clusters: each graph represents a feature used for clustering and each color
represents a cluster. One can appreciate how elements of each cluster are spread across each feature values.
Table 7: Thresholds values deﬁned in binning process.
−2.55 < v ≤−0.14
−0.14 < v ≤2.27
2.27 < v ≤4.67
−6.02 < v ≤−3.57
−3.57 < v ≤−1.12
−1.12 < v ≤1.33
6.75 < v ≤13.50
13.50 < v ≤20.25
20.25 < v ≤26.70
6.10 < v ≤12.20
12.20 < v ≤18.30
18.30 < v ≤24.40
−206.10 < v ≤−66.97
−66.97 < v ≤72.17
72.17 < v ≤211.30
Cluster Labels
Segmentation Assignments for Trip 1
Geo-referenced representation of segmentation
based on HMM for an example trip.
intervals are described in Table 7). Our goal is to obtain a
soft clustering based on which similar trips can be identiﬁed
analyzing topics distribution over each trip document.
For building the model we set T, top level truncation value,
to 50; and K, second level truncation value, to 15.
In particular we retrieved two kinds of information: terms
relevance in each identiﬁed topic (shown in Table 9), and
the topic distribution over each document (see Table 8).
Validation and Discussion
So far our objective was to extract recurrent driving patterns
from the trips in order to detect diﬀerent behaviors along
them. In this section we aim to categorize the whole trip
using the information retrieved with the previous methods.
Comparison of the Methods
First, we compared the results of the diﬀerent segmentation
methods to understand how stable is the coherence of the
obtained clusters across method. In order to do so we run k-
Means clustering algorithm on the trips data obtained by the
three methods. Each trip is characterized by its distribution
of points among the identiﬁed clusters or topics. Using the
Elbow method we set k equal to 6 for all the three methods.
Table 9: Terms relevance in top 7 extracted topics.
Terms Distribution
Table 8: Topic relevance for observed driving trips.
Topic Distribution
( Topic 0, 0.0782), ( Topic 1, 0.3130), ( Topic 3, 0.6087)
( Topic 0, 0.8662), ( Topic 1, 0.1335)
( Topic 0, 0.9751), ( Topic 1, 0.0246)
( Topic 1, 0.9989)
( Topic 0, 0.7893), ( Topic 1, 0.2104)
( Topic 0, 0.8888), ( Topic 1, 0.1109)
( Topic 1, 0.9920)
( Topic 1, 0.9992)
( Topic 0, 0.6667), ( Topic 1, 0.3330)
( Topic 0, 0.6366), ( Topic 1, 0.3631)
( Topic 0, 0.9242), ( Topic 1, 0.0755)
( Topic 0, 0.6056), ( Topic 1, 0.3941)
( Topic 0, 0.7981), 
( Topic 1, 0.9992)
( Topic 0, 0.3015), ( Topic 3, 0.0621), ( Topic 6, 0.6358)
( Topic 0, 0.6458), ( Topic 1, 0.3539)
( Topic 0, 0.9455), ( Topic 1, 0.0543)
( Topic 0, 0.7748), ( Topic 1, 0.2249)
( Topic 0, 0.9848), ( Topic 1, 0.0149)
( Topic 1, 0.9992)
( Topic 0, 0.8960), ( Topic 1, 0.1038)
( Topic 0, 0.9142), ( Topic 1, 0.0856)
( Topic 1, 0.9988)
( Topic 0, 0.9013), ( Topic 1, 0.0985)
( Topic 0, 0.8620), ( Topic 1, 0.1377)
( Topic 0, 0.7431), ( Topic 1, 0.2568)
( Topic 0, 0.8139), ( Topic 1, 0.1859)
Thus we obtain trips clustered in 6 groups for each method
(notice however that the 6 clusters may be diﬀerent in the
three methods).
At this point, we want to test the hypothesis that the trip
clusters generated by the diﬀerent methods are consistent.
To check that, we need to identify the optimal mappings between clusters of the diﬀerent methods. At this purpose, we
build a set of confusion matrices for each pair of methods,
where each cell contains the number of common elements between a cluster in a method and a cluster in the other. Since
we don’t know the optimal correspondence between clusters,
we actually generate a combinatorial set of matrices, covering all the possible mappings (basically by changing the rows
order according to all the possible combinations). We select
the optimal mapping by considering the matrix with highest
sum of elements on its main diagonal. This corresponds to
the best conﬁguration for the mapping and its value represent the number of elements that keeps the same grouping
across the methods.
Considering DP-means and Hidden Markov Model, 74% of
trips are grouped in the same way. If we consider the comparison between the aforementioned methods with the Topic
Extraction method, the trips clustered in the same way is
respectively only 44% and 48%, which probably account for
the fact that, while DP-means and HMM are both clustering methods, Topics Extraction is a soft-clustering based on
a totally diﬀerent approach.
Ground-truth based validation
In order to validate our results, we asked a set of experts
(knowledgeable about driving styles and driving paths recorded) to identify possible groups of trips in the dataset (i.e.,
considering factors such as signal distribution and driving
routes). We were interested to see whether our method yield
a classiﬁcation coherent to the ones provided by the experts.
The experts were able to highlight three clusters (shown in
ﬁrst two columns of Table 10). This accounts for a smaller
set of clusters with respect to our analysis, but users weren’t
able to reach the level of details of six diﬀerent categories of
The comparison with our clustering solutions therefore implied mapping our clusters the the human-generated ones
and verifying their coherency. Table 10 reports the humangenerated groundtruth in terms of clusters (ﬁrst column:
clusters A, B, C) and corresponding trips (second column).
Then, the subsequent columns show, for every method, the
best allocation of automatically calculated clusters (and corresponding trips), together with the number of wrongly assigned trips. For instance, experts assigned trips t1, t15 and
t26 to Cluster B. For DP-means, the best correspondence is
cluster C4, that contained only t1 and t15. Correspondingly,
t26 results as one trip wrongly assigned.
The last row of the table shows the precision of each methods, computed as the ratio between the number of trips
placed in the correct cluster and the total number of trips.
Notice that we achieve the 96% of precision with all our approaches, thus demonstrate that the grouping deﬁned by the
proposed methods is coherent with the classiﬁcation deﬁned
by the experts. The obtained results show the eﬀectiveness
of the proposed framework in proﬁling observed trips based
on gathered information of vehicle status and driving behavior.
RELATED WORK
Driving behavior has been studied from diﬀerent perspec-
Table 10: Comparison between the clusters identiﬁed by human and the results of our methods
Human-identiﬁed
Groundtruth
(trips in clusters)
t2,t3,t5,t6,t9,t10,t11
t12,t13,t16,t17,t18,
t19,t21,t24,t25,t27
t2,t3,t5,t6,t9,t10,
t11,t12,t13,t16,t17,
t18,t19,t21,t24,t25,t27
t2,t3,t5,t6,t9,t10,
t11,t12,t13,t16,t17,
t18,t19,t21,t24,t25,t27
t2,t3,t5,t6,t9,t10,
t11,t12,t13,t16,t17,
t18,t19,t21,t24,t25,t27
t4,t7,t8,t14,t20,t23
t4,t7,t8,t14,t20,t23
t4,t7,t8,t14,t20,t23
t4,t7,t8,t14,t20,t23
t1,t15,t26
tives to reach diﬀerent purposes such as: identiﬁcation of
driving behavior model , analysis of behavior variables
impact in driving process, identiﬁcation of driving maneuvers and driver’s status, user classiﬁcation based on driving
behavior attitude and prediction of driver intentions.
Of particular importance are the studies regarding the identiﬁcation of the driver’s status. For instance works such as
 and , use multiple sensors to provide intelligent information on the driver’s physiological signals, which can
include eye activity measures, the inclination of the driver’s
face, heart rate monitoring, skin electric potential, and electroencephalographic (EEG) activities. In is proposed a
novel and non-intrusive driver behaviour detection system
using a context-aware system combined with in-vehicle sensors collecting information regarding to vehicle’s speed, acceleration, the direction of driver’s eyes, the position in lane
and the level of alcohol in the driver’s blood.
Another application of driver behavior modeling concern the
motor insurance sector, that is interested in calculating their
premiums based on statistical data through the evaluation
of factors that are believed to impact expected cost of future
claims. For instance proposes to use of driver behaviour
patterns and driving style classiﬁcation to improve assessment of driver risk and insured risk using a smartphone as
sensing platform.
Driver behavior modeling was also used to detect aggressive driving, a particular type of driving style, has long been
studied due to its strong correlation with accidents and traf-
ﬁc safety hazards: by one estimate, it was inﬂuential in causing the majority of accidents in the United States from 2003
to 2007 . In has been proposed a theoretical framework in which acceleration behavior can be analyzed in order
to detect aggressive behavior. The limits of these accelerations are related to the edges of the friction circle (also
called ellipse of adherence), which depend on tire characteristics and road surface condition.
State of the art approaches in the attempt to model the
driver behavior characteristics mainly employ models that
are inspired by advanced neural network (NN), Hidden Markov
Models (HMM), fuzzy control theory, Gaussian Mixture Models (GMM) and others models as stated by Meiring et. al. in
 . Particular attention is paid to time series analysis used
to mines behavioural data in order to achieve goals as driver
proﬁling or maneuvers detection. Promising algorithms apply techniques belonging to a diﬀerent scope, belonging to
text processing and speech diarization with interesting and
useful results. Takano et al. in propose a hierarchical
model with one HMM characterizing the short-term driving
behaviors in the lower layer, and the other HMM characterizing the long term driving behaviors which are represented
in the HMM space.This structure makes the vehicles intelligent by storing the knowledge of driving behaviors as the
symbols of driving intention through observing the driving
behavior given by expert drivers. Baum-Welch algorithm (a
maximum likelihood estimation method) which trains parameters of HMMs is applied to optimize three HMMs driving straight, normal steering, and emergency steering .
In Sathyanarayana et al. proposed a Driver Behavior
Analysis and Route Recognition by Hidden Markov Models in two diﬀerent approaches. The ﬁrst (bottom-to-top)
approach takes isolated maneuver recognition with model
concatenation to construct a generic route, whereas the second (top-to-bottom) approach models the entire route as a
phrase and reﬁnes the HMM to discover maneuvers. Only
left turn (LT), right turn (RT) and lane change maneuvers
are considered.
In the authors present a new stochastic driver-behavior
model based on Gaussian mixture model (GMM) framework. The proposed driver-behavior modeling is employed
to anticipate car-following behavior in terms of pedal control operations in response to the observable driving signals,
such as the own vehicle velocity and the following distance
to the leading vehicle.
CONCLUSIONS
In this work the main goal was to propose a solution for
driver behaviour modeling and driver proﬁling based on unsupervised methods. The main idea is to identify recurrent
behaviours shared between drivers and characterize each
driver according to the distribution of these behavioural patterns.
In order to achieve this goal we proposed three methods,
which diﬀer in terms of assumptions and implementation.
However, they have in common the concept of identiﬁcation
of an underlying hidden structures: in clustering based segmentation this structure is identiﬁed in clusters grouping,
using HMM is described by latent states and at last applying Hierarchical Dirichlet Processes behavioral topics have
been extracted.
We applied these methods on a real world dataset and we
compared the results between each other and with a ground
truth built by experts from the car insurance industry. We
found out that, even though the methods present relevant
diﬀerences in clustering trips segment, they show high consistency in classifying whole trips.
For future activities, considering the encountered challenges
and the critical tasks faced during this work, we propose to
extend this analysis to a much larger collection of driving
trips belonging to diﬀerent drivers and diﬀerent areas. In
fact the experimental dataset used in our work represents
just a small sample of a possible large scale data gathering
and analysis process. The increase in dataset size can produce better results especially on the topic extraction process
which requires a large collection of documents.
From a technical point of view we plan to relax our assumption of independence between observations in HMMs that
can be too much restrictive. Regarding DP-means segmentation techniques and its dependence on data ordering we
plan to investigate some reordering techniques to improve
identiﬁcation performance. The discretization phase in topic
extraction process can be enhanced considering a variable
number of bins for each of the considered features. For more
precise evaluation, we plan to make use of camera recordings
that can be useful in human labeling of Contextual Scenes.