University of Massachusetts Amherst
From the SelectedWorks of Erik G Learned-Miller
Data driven image models through continuous
joint alignment
Erik G Learned-Miller, University of Massachusetts - Amherst
Available at: 
Data Driven Image Models through
Continuous Joint Alignment
Erik G. Learned-Miller
Abstract—This paper presents a family of techniques that we call congealing for modeling image classes from data. The idea is to
start with a set of images and make them appear as similar as possible by removing variability along the known axes of variation. This
technique can be used to eliminate “nuisance” variables such as affine deformations from handwritten digits or unwanted bias fields
from magnetic resonance images. In addition to separating and modeling the latent images—i.e., the images without the nuisance
variables—we can model the nuisance variables themselves, leading to factorized generative image models. When nuisance variable
distributions are shared between classes, one can share the knowledge learned in one task with another task, leading to efficient
learning. We demonstrate this process by building a handwritten digit classifier from just a single example of each class. In addition to
applications in handwritten character recognition, we describe in detail the application of bias removal from magnetic resonance
images. Unlike previous methods, we use a separate, nonparametric model for the intensity values at each pixel. This allows us to
leverage the data from the MR images of different patients to remove bias from each other. Only very weak assumptions are made
about the distributions of intensity values in the images. In addition to the digit and MR applications, we discuss a number of other uses
of congealing and describe experiments about the robustness and consistency of the method.
Index Terms—Alignment, artifact removal, bias removal, congealing, clustering, correspondence, density estimation, entropy,
maximum likelihood, medical imaging, magnetic resonance imaging, nonparametric statistics, registration, unsupervised learning.
INTRODUCTION
HE adoption of classical statistical modeling techniques
has revolutionized computer vision in the last two
decades. The well-developed tools from probability and
statistics are essential for dealing with the uncertainty
encountered in real-world vision problems and provide
solid principles on which to build robust and adaptive
systems. These tools, however, were not generally developed for problems like those encountered in computer
vision. Vision problems have peculiarities not well handled
by classical methods, including measurements with
millions of components (images), strong nonlinear dependencies, and problems due to lack of alignment, causing
image values to have different meanings in different
images. In the last few years, a variety of modeling
techniques that address the specific challenges of computer
vision have been proposed. In this paper, we introduce
another such technique, which we call congealing, for model
building in computer vision.
Congealing is a nonparametric technique for factoring, or
separating, a set of images into sets of approximately
independent “ingredients” or causes. It can be applied to
problems in which there is shape variability within and
between classes (e.g., binary digit recognition), when variability occurs mostly in brightness or color or when any other
form of structured but continuous variation of a parameter
occurs. While we focus mostly on using pixel values directly
as features, the techniques are easily extended to arbitrary
features of an image.
With respect to other hidden variable models like
transformed mixtures of Gaussians (TMG, discussed in detail
below) , this paper makes the following contributions:
First,wemodelposeandotherhiddenvariablescontinuously
rather than as a discrete set. This allows our models to
ultimately be more precise, but it also provides an optimization challenge. This leads to the second difference, which is
that we optimize our models by iteratively maximizing the
joint likelihood of a set of “latent” images, using a joint
gradient descent procedure,1 by finding the transformations
that make them most similar. A final difference is that we
model the residual images nonparametrically rather than as a
set of Gaussians or other parametric distributions. This has
important algorithmic and modeling consequences which we
shall discuss. We illustrate these ideas on two problems in
detail: handwritten digit recognition and bias removal in
MR images. The organization of the paper is as follows:
In Section 2, we introduce congealing and illustrate its
use on the problem of handwritten digit recognition. Our
goal is not to break the record for accuracy in handwritten
digit recognition using large numbers of training examples.
Rather, it is to separate approximately independent factors
of an image set, latent images, and transformations from
each other. We then show how such generic factors as
distributions over transformations, when learned from one
set of characters (letters), can be used to build fairly good
models of characters from other classes (digits) using only a
single example of each new character class. That is, we
demonstrate the transferral of learning in one problem to
learning in another problem. We describe a handwritten
IEEE TRANSACTIONS ON PATTERN ANALYSIS AND MACHINE INTELLIGENCE,
FEBRUARY 2006
. The author is with the Department of Computer Science, University of
Massachusetts, Amherst, 140 Governor’s Drive, Amherst, MA 01003.
E-mail: .
Manuscript received 30 Nov. 2004; revised 27 May 2005; accepted 7 June
2005; published online 13 Dec. 2005.
Recommended for acceptance by A. Rangarajan.
For information on obtaining reprints of this article, please send e-mail to:
 , and reference IEEECS Log Number TPAMI-0640-1104.
1. “Joint gradient descent” means a group of gradient descents, one for
each image, occurring simultaneously.
0162-8828/06/$20.00 ! 2006 IEEE
Published by the IEEE Computer Society
digit recognizer with near 90 percent accuracy based on
only a single example of each digit.
Our binary digit example illustrates congealing on
binary images using the set of nonreflecting affine transforms as the “corrupting” hidden variable. Congealing,
however, is not restricted to binary-valued images, to affine
transformations, or even to images themselves. In Section 3,
we show that congealing naturally extends to nonspatial
transformations, such as brightness distortions in magnetic
resonance (MR) medical images. We report in detail on
recent work using congealing to eliminate intensity bias
fields in MR images.
In Section 4, we briefly review other approaches that use
hidden variable models similar to our latent image-transform
model. Then, in Section 5, we discuss some additional
properties of congealing, including results of experiments
on alignment to local minima and robustness to noise. Section
6 concludes with a mention of other data types to which we
have applied congealing and to directions for future work.
CONGEALING: CONTINUOUS JOINT ALIGNMENT
Congealing is an algorithm for taking a set of images (or, in
general, a set of arrays of arbitrary dimension) and
transforming them according to a continuous set of
allowable transformations to make them more similar,
according to some measure of similarity . Thus, there
are three ingredients in any application of congealing:
a set of arrays of measurements,
a continuous set of allowable transformations, and
a measure of the joint similarity of the arrays within
Foreaseofexplication,weintroducethecongealingalgorithm
using binary images as our set of array measurements, the set
of positive-determinant affine transformations as the set of
allowable transformations, and a sum-of-entropies criterion
as the measure of joint similarity of images within the set.
However, each of the three choices above can be replaced by a
varietyofpossiblechoices,leadingtoawiderangeofpotential
applications of congealing fitting a variety of modeling
assumptions.WeexploresomeofthesevariationsinSection3.
The upper half of Fig. 1 shows two sets of handwritten
digits from Special Database 19 created at the National
Institute of Standards and Technology (NIST). The images
are presented in the size, position, and orientation originally
written into forms filled out by volunteers. They vary
significantly in size, position, orientation, and degree of slant,
and other characteristics. In the bottom half of the figure, each
set of digits has been congealed to make the set as similar as
possible. That is, each character has been transformed using
an affine transformation (specific to that character) to make it
as similar as possible to the other characters. For the zeros, it is
clear that the variability in position, size, and other shape
parameters has been dramatically reduced. While not as
obvious,thesameeffectcanbeseenforthetwosonthebottom
right. Congealing data sets in this way has a variety of
applications,asweshallseebelow.Wenowdiscussthedetails
of the method for this particular problem.
Transform Parameterization
As noted above, congealing is defined with respect to a set
of transformations. These may be spatial transformations,
brightness transformations, color transformations, or other
operations on images or arrays that change some feature of
interest. We introduce congealing in the context of spatial
transformations since these are perhaps the simplest
conceptually and most intuitive. There are many choices
for sets of spatial transformations as well, but, to begin, we
congeal using affine transformations.
We parameterize this set of transforms T by composing a
transform from the following component transforms:
x-translation, y-translation, rotation, x-scale, y-scale, x-shear,
and y-shear. (We let the x-scale and y-scale parameters
represent the logarithm of the actual scale change, which
allows us to treat them as additive parameters.) Thus, given a
parameter vector v ¼ ðtx; ty; !; sx; sy; hx; hyÞ, a transformation matrix U is formed by multiplying the constituent
matrices in a fixed order (needed to ensure a unique mapping
between parameter vectors and the resulting matrices since
matrix multiplication is noncommutative):
U ¼ Fðtx; ty; !; sx; sy; hx; hyÞ
Note that this is an overcomplete parameterization since
there are seven parameters and only six degrees of freedom
in the set of transforms.2 The current goal is to investigate
how to make a set of images more similar to each other by
independently transforming each one of them in an affine
manner. We now describe our similarity objective function.
LEARNED-MILLER: DATA DRIVEN IMAGE MODELS THROUGH CONTINUOUS JOINT ALIGNMENT
Fig. 1. (Upper left) Samples of zeros from the NIST database. (Upper
right) Samples of twos from the NIST database. (Lower left) The zeros
after congealing. (Lower right) The twos after congealing.
2. Because we are using a coordinate descent algorithm, extra parameters
can allow the algorithm to move “more directly” toward an optimum. For
example, while a rotation is not strictly necessary as it can be written as two
shearing operations followed by a scaling operation, a single step of the
extra rotation parameter will move more directly toward a solution if a pure
rotation is what is needed .
Entropy Estimation and Pixel Stacks
Consider a set of N observed binary images of a particular
class, each image having P pixels. Let the value of the
ith pixel in the jth image be denoted xj
i. Let the image
created by transforming the jth image by transform Uj be
denoted Ij0. We assume for the moment that this new image
is still binary, which can be achieved, for example, by
thresholding it after it is transformed. Let the ith pixel in
this transformed image be denoted xj
0. Consider the set of
N pixels at a particular image location after each image has
undergone some transformation: fx1
0; . . . ; xN
0g. We call
this set of N pixels across the images a pixel stack. We denote
the ith pixel stack of the original image set xi and the
ith pixel stack of a transformed image set x0
i. A pixel stack is
illustrated in Fig. 2
This pixel stack can be viewed as a sample from a
random variable or pixel process at a particular location in the
image. We can estimate the entropy, or disorder, of this pixel
process by calculating the entropy of the empirical distribution of values in the pixel stack. This is also referred to
as the empirical entropy (see [4, p. 195]) of the set of values in
the pixel stack:3
^HðxiÞ ¼ $ N0
where N0 and N1 are the number of occurrences of 0 (black)
and 1 (white) in the binary-valued pixel stack.4 The
empirical entropy of the pixel stack shown in Fig. 2 is
iÞ ¼ 1 bit since there are equal numbers of black and
white pixels in the stack. We also refer to pixel stack
entropies as pixelwise entropies.
Congealing as Joint Alignment
The main goal of congealing is to “align,” or reduce the
variability, in a set of images or other arrays. To achieve
this, the idea is to minimize the quantity
the sum of the pixel-stack entropies, by transforming a set
of images of a class. Each image is assigned its own vector vj
of parameters and the criterion (2) is minimized with
respect to all components of all of these vectors.
The intuition behind thisminimization is as follows: Ifa set
of images were aligned as well as possible, we would expect
most of the pixel stacks to have low entropy. That is, our
notion of alignment can be expressed by the idea that the
variability, or entropy, within a pixel stack is low. Thus, the
idea of congealing is to drive a set of images, simultaneously,
toward this state of low pixel-stack entropies. At convergence, assuming no problems with local minima, we expect
the images to be as “aligned” as possible.
Fig. 3 shows the means of sets of twos and zeros before and
after congealing. Fig. 3a and Fig. 3c show the mean “0” and
mean “2” image at the beginning of the algorithm. The
relative abundance of intermediate gray values indicates that
many pixel stacks have high entropy since a middle gray
value represents a pixel stack composed of half white and half
black pixels, with maximum possible entropy. Fig. 3b and
Fig. 3d show the pixel stack mean images at the end of the
algorithm. Here, we can see that the pixels have distributions
that are skewed much more heavily to pure black or pure
white and, hence, are of lower entropy. Notice that there is
greater entropy represented in the final mean “2” image than
in the “0” image due to the fact that zeros can be better aligned
through affine transforms than twos can.
One appealing property of congealing is that it defines a
notion of central tendency of the data. Often, alignment
algorithms proceed by choosing a particular example of a
character and then aligning each character to that example.
In this case, the aligned characters will be biased toward the
original chosen character. Congealing avoids this phenomenon by aligning all characters to each other. Another
approach is to align images to a “mean” image. While this
can work well in some cases, it does not work well when
pixel distributions are bimodal and the mean is not
representative of the exemplars in the distribution. Again,
congealing avoids this problem by maintaining the true
values of the pixels in each image.
Coherent Transform “Drift” and Parameter
There is a detail that must be addressed, however, to make
this idea work in practice. In some cases in which
congealing is applied, there may exist a set of transformations, one for each image, which reduces the pixel stack
entropies, but, nevertheless, does not align the images as
desired. If we restrict the set of transformations to rigid
transformations, then there is no such degenerate set of
transformations. However, for a set of nonrigid transforms,
like the affine transforms, shrinking all of the images until
the white digits in the center essentially disappear will
reduce all of the pixel stack entropies to zero. That is, we are
essentially eliminating the information in the images. Since
all of the transforms have a shared component (shrinkage),
we call this transform “drift.”5
IEEE TRANSACTIONS ON PATTERN ANALYSIS AND MACHINE INTELLIGENCE,
FEBRUARY 2006
3. In this formula, 0 log2 0 is interpreted to have value 0.
4. A pixel whose value is between 0 and 1 is interpreted as a mixture of
underlying 0 and 1 “subpixels.” To extend (1) to handle these pixels, we
merely increment each count by the fraction of background and foreground
in the mixture. For example, for a 50 percent gray value pixel, we would
increment both N0 and N1 by 0:5.
5. When congealing using brightness or color transforms, a similar
problem arises in which images tend to be darkened until they are black,
resulting in low entropy image stacks. This can be avoided using the same
techniques discussed in this section, i.e., by forcing the transformation
parameters to stay balanced around zero.
Fig. 2. A pixel stack is a collection of pixels drawn from the same location in
eachofa setof N images.Here,the ith pixelfromeachofsiximagesforms
a pixel stack. Since half of the pixels are black and half are white, this
corresponds to a Bernoulli random variable with parameter p ¼ 0:5. The
entropy of such a random variable is $ð0:5 log2 0:5 þ 0:5 log2 0:5Þ ¼ 1 bit.
This degenerate case can be avoided in two related ways.
One way is to add a term to our alignment criterion in (2)
that penalizes large transformations away from the initial
position. This can be done by adding a term to the criterion
equal to the sum of the squared magnitudes of the
transform parameter vectors vj:
We shall refer to this quantity as the penalized pixelwise
Using the penalized pixelwise entropies prevents the
images from “collapsing” to size zero, but an algorithm based
only on this function will still typically, on average, shrink the
images somewhat since an average shrinking of the images
tends to reduce pixel stack entropies simply by increasing the
number of pixel stacks that are completely black. Thus, the
penalty in (3) does not completely solve the drift problem.
A second technique for mitigating this shrinkage
problem is to constrain each parameter (x-translation,
y-log-scale, etc.) to have zero mean across the image set. That
is, if some images are translated to the left, then other
images should be translated to the right; if some images are
shrunk, then others should be magnified; etc. This can be
thought of as enforcing the property that the “mean
transformation” should be the identity transformation.6
To incorporate this idea into the congealing algorithm for
affine transformations, we “center” the parameter values
periodically during the alignment process. That is, we
subtract each parameter’s mean value from the value of that
parameter for each image, pinning the mean of each
parameter to zero. This forces the average x-position change,
the average shear, the average (log) scale, and the average
rotation to be zero across the image sets.
The congealing algorithm for binary images using affine
transformations, the penalized entropy (3), and parameter
centering are detailed in Algorithm 1, which is shown in
Fig. 4. Before moving on to applications of congealing, we
consider a probabilistic interpretation of the algorithm.
Congealing and Factored Models
In this section, we discuss a slightly different interpretation of
congealing, as the reversal of a certain generative process for
images. In particular, we show how this interpretation leads
to independent factor models for images, which in turn leads
to a variety of applications. We have presented congealing as
a means for removing certain modes of variability, like affine
variation, from sets of image data. Rather than simply
removing this variability, however, we can develop a model
of the variability which can be used to improve simple
probabilistic image models.
We start with the observation that most any handwritten
digit, when modified by a small affine distortion, would
still be interpreted as the same digit. This is true irrespective
of the original “style” of the digit, i.e., whether it is a seven
with or without a cross-bar, whether it is a two with or
without a loop at the base. In other words, the variability of
the position, size, orientation, and slant of a character tends
to be independent of the particular style of the character.
We can take advantage of this approximate independence of style and “pose” by building a generative model in
which these components are assumed to be independent for
each given class of characters. Such a generative model is
illustrated in Fig. 5.
This model shows the images generated by a process that
composes some random “latent image” of a digit, which
one can think of as a particular style of that character, with a
random transformation. For the following discussion, we let
I be an observed image, L be a latent image, and T be a
transform. According to the model, the probability of a
particular latent image-transform pair ðL; TÞ for a specific
class is given as pðL; TÞ ¼ pðLÞpðTÞ since L and T are
assumed to be independent conditioned on the class.
Given an observed image I, however, there are many
choices for a latent image-transform pair that explain it. In
fact, for any transform T &, one could argue that the latent
image-transform pair was ðT &$1ðIÞ; T &Þ, i.e., the inverse of
T & applied to the observed image coupled with T &.
If we define probability distributions over the latent
images and transforms, however, we can ask what is the
most likely pair ðL; TÞ that explains a particular image I.
Congealing can be seen as a way of simultaneously
determining these pairs across an entire image set.
In particular, if we use an independent pixel model to
evaluate the probability of an image and a uniform
distribution over all transformations, then we can see that
congealing finds the maximum likelihood latent images
through the following derivation. Let I; L; T be sets of
images, latent images, and transforms. Also, let T N
represent the N-fold product space of sets of transforms.
Then, the most likely set of transforms is given by
LEARNED-MILLER: DATA DRIVEN IMAGE MODELS THROUGH CONTINUOUS JOINT ALIGNMENT
6. Since the affine transformations do not form a vector space (because
the addition of two affine transforms is not an affine transform), it is not
immediately clear whether a concept such as the mean transformation is
well-defined. There are a variety of ways of defining a mean on a space that
is not a vector space, such as the Karcher mean.
Fig. 3. Mean images during the congealing process. (a) The initial mean image for the set of zeros. The blurriness is due to the misalignment of the
images. (b) The final mean image for the set of zeros. The coherence of the aligned images is indicated by the increased sharpness of the image.
(c) The initial mean image for the set of twos. (d) The final mean image for the set of twos.
T2T N pðTjIÞ ¼
ðaÞ arg max
T2T N pðIjTÞpðTÞ
ðbÞ arg max
T2T N pðIjTÞ
ðcÞ arg max
T2T N pðLðI; TÞÞ
ðdÞ arg min
i Þ; U2ðx2
i Þ; . . . ; UNðxN
where Ui is again the inverse of the transform T i. (a) follows
from Bayes rule, (b) from the uniform prior on transformations, (c) because the latent image is a deterministic function
of the observed image if the transform is given, and (d) is
just a sample approximation of the entropy. The final
expression is equivalent to (2).
Hence, the logarithm of the joint probability of a set of
images as defined above is approximately equal to a positive
constant times the negative of the sum of the pixelwise
entropies. Hence, minimizing the summed pixelwise empirical entropies is approximately equivalent to maximizing the
(latent) image probabilities under this model. It is interesting
to note that the sum of pixel entropies is an upper bound on the
entropy of the true image distribution, so minimizing this
sum is minimizing an upper bound on the entropy of the
images. This is equivalent to maximizing a lower bound on
the true likelihood of the images.
Congealing works very well for aligning images even
though the model it is based on, independent pixels and
uniformly likely transformations, is very crude. One reason
that the algorithm works well despite the poorness of the
model is related to the concavity of entropy as a function of
probability distributions. If a set of latent images are drawn
i.i.d. from any distribution, then perturbing these images with
any independent random permuting transformations, i.e.,
those transformations that only rearrange pixels, will always
increase the pixel-stack entropies. This is because the
distributions of the pixels in the transformed images will be
convex combinations of the original pixel distributions and
IEEE TRANSACTIONS ON PATTERN ANALYSIS AND MACHINE INTELLIGENCE,
FEBRUARY 2006
Fig. 4. Algorithm 1: Image congealing with affine transforms.
the concavity of entropy guarantees that the resulting
“mixed” pixels will have higher entropy. Thus, despite the
poorness of the independent pixel model for representing
images of digits, the essential property needed for congealing—that removing transform variability will reduce entropy—holds.
Despite the utility of the independent pixel model for
“decoupling” the latent images and transforms, it will prove
useful to employ more sophisticated models for the latent
images and transforms once they have been separated. In the
next section, we discuss how a classifier can be built in the
congealing framework, using better models for the latent
images and transforms once they have been separated.
A Product Density Classifier
Assume that we wish to build a classifier for handwritten
digits, given a set of training examples for each class. To
perform classification, we wish to estimate the model with
the maximum posterior probability given a new observed
image I. Assuming a uniform prior over the classes cj, we
have, using Bayes’ rule:
PðcjjIÞ ¼ arg max
We introduce the transformation variable T and integrate
pðIjcjÞ ¼ arg max
p LðI; TÞjcj
Here, dT is the invariant measure for affine transformations,
which “measures” each transformation in the infinite set T
equally. (See for details.) Equation (8) follows since the
latent image L corresponding to the image I is a
deterministic function of I, given the transform T.
We now make the key simplifying assumption that, with
high probability,
T2T p Tjcj
This is an approximation to the full Bayesian treatment of
the problem and assumes that the joint distribution
pðT; LjcjÞ peaks sharply around the maximum. This allows
us to avoid the integral on the left of (9) and search a full
space of possible transforms, rather than a discrete set as
some authors have done .
To use (9) in a classifier, we must do two things. First, we
must build models for the latent image and transform
distributions for each class. To do this, we will use the latent
images and associated transforms that come from congealing the set of training examples for each class. Second, we
must find the maximum likelihood latent image-transform
pair for a test image, conditioned on each class.
If we congeal a set of training images for a class, such as
those in Fig. 1a or Fig. 1b, we get a set of latent images for
the class, such as those in Fig. 1c or Fig. 1d. In our
experiments, we defined a class conditional probability on
latent images to be
pðLjcjÞ ¼ 1
Z exp $ D2
where D is the minimum symmetric Hausdorff distance 
betweentheargumentimageLandthelatentimagesetforthe
class cj and Z is a normalization constant which is unknown,
butisassumedtobeapproximatelythesameforeachclassand
is, hence, ignored. Intuitively, the class conditional probability for a latent image is higher if it is closer (in the
Hausdorff sense) to some latent image of the training set.
Note that congealing produces not only a sample of latent
images, but also, implicitly, a sample of transformations. The
transformations used in the congealing process to align
images can be thought of as the inverses of the transforms
that produce the observed images from the latent images
in the generative model. Thus, by taking the matrix
inverses of the transforms used in congealing to align
images, we get a sample of transforms of the generative
process. From this set of transforms—we shall refer to
them as Tjs—we can estimate a probability density over
transforms using a Parzen windows style estimate
fðU; T1; T2; . . . ; TNÞ ¼ 1
The estimate uses a somewhat unusual kernel :
CðhÞ exp $ 1
2h k logðU$1TÞk2
where h is a kernel bandwidth parameter, C is a normalization constant that depends upon the bandwidth, log is a
matrix logarithm, and k ( kF is the Frobenius norm, the square
root of the sum of the products of the matrix components by
their complex conjugates. One appealing property of this
kernel is that it takes on its maximum value when U is equal to
T since U$1T is the identity matrix, which has the minimum
matrix log. The kernel is also symmetric in the arguments and
invariant when both arguments are transformed by the same
affine transformation .
LEARNED-MILLER: DATA DRIVEN IMAGE MODELS THROUGH CONTINUOUS JOINT ALIGNMENT
Fig. 5. A directed graphical model representing a general generative
image model. The latent image and transform are both dependent on
class and they are conditionally independent given the class.
Armed witha densityfor latent imagesandtransforms, we
now only need to find the latent image and transform of a test
image, assuming it comes from a particular class, to evaluate
the likelihood of a class. Given a test image of unknown class,
we wish to separate it into a latent image and transform.
However, this separation will depend upon the class that we
assume the image is in. In other words, we will have a
separate factorization of a test image into latent image and
transform for each class. Fig. 6 shows the latent image
estimates for the image of an eight for each different class.
One way to obtain these latent image-transform estimates for a test image is to insert it into the training set for
each class. Thus, to get the best latent image-transform for
an image assuming it is a zero, insert it into the training set
of zeros and congeal the zeros. While this process has a
certain elegance about it, it is extremely time-consuming as
we must run the congealing algorithm on the entire training
set for each class for every test character. Fortunately, there
is a much more efficient way to “congeal” a test character.
The idea for factoring a test image efficiently is as
follows: During the original congealing of the training set
for a class, save out the data sets at each stage of the
congealing. Then, when congealing a test image, the only
image that needs to be updated at each step is the test
image. Additional efficiencies in aligning a test example are
described in detail here .
Given a procedure for splitting a test image into latent
image-transform pairs for each class and latent image and
transform densities for each class, it is easy to make a
classifier for handwritten digits. Such a classifier has
reasonably good performance (about 98 percent correct)
when trained on 1,000 images of each class. However, the
purpose of congealing was not to do digit classification in
the presence of abundant training data, but rather to
separate observed images into approximately independent
factors. We now discuss how this automatic factorization of
images can be used to make a digit classifier from just a
single example of each class.
A One Example Classifier
While handwritten digit classifiers based on large training
sets are getting very close to human performance, if we
examine the performance of classifiers using a small amount
of data, in the limit, one example per class, there still seems to
be a large gap between the capabilities of machines and
humans. Consider the symbol for the new European
currency, the “Euro,” shown in Fig. 7. After seeing a single
example of such a character, humans can recognize the
character in a wide variety of contexts, styles, and positions.
Clearly, this is due at least in part to generalization based
on previously learned classes. That is, our knowledge about
handwriting in general allows us to bring prior knowledge to
the formation of our model for a new character based on a
singleexample.Along-standingquestion incomputervision,
and in AI in general, is what form this prior knowledge takes.
The original idea behind congealing was to try to extract
generic forms of variation from one class or set of classes and
to use that knowledge of variation in developing models for
other classes from a small number of examples.
To test this idea, we congealed 10 sets of 100 handwritten
letters from the NIST database. This results in 10 sets of latent
images and 10 sets of transforms, leading to 10 separate
distributions over transformations. We compared each of
these letter transform distributions to another distribution,
which was a Gaussian over the coordinates of affine
transformations with mean at the identity. We found that
each of the letter transform distributions was closer to the
other letter transform distributions (in the estimated Kullback-Leibler divergence) than to the Gaussian transform
distribution. This suggests (although it is certainly not a
rigorous proof) that the letter transform distributions are
quitesimilartoeachother .Thissuggeststhatthevariability
described by transformation densities, at least for handwritten characters, is generic and can be shared across classes.
Subsequently, we combined transform densities learned
from letters with a single hand-chosen example of each
handwritten digit (acting as a crude latent image model for
thatdigit)toproduceamodelforeachdigitclass.This process
is illustrated in Fig. 8. We then ran a handwritten digit
IEEE TRANSACTIONS ON PATTERN ANALYSIS AND MACHINE INTELLIGENCE,
FEBRUARY 2006
Fig. 6. A set of latent image estimates for an observed “8” image. The eight is aligned with each model in turn. Notice that alignment to the “1” model
produces a latent image that is a plausible “1.” Rejecting this model will depend upon penalizing the highly unlikely transformation that would be
paired with such a latent image to produce the observed image.
Fig. 7. The new symbol for the standard European currency. After
seeing a single example, people typically have no difficulty recognizing
the symbol in a wide variety of styles and variations.
Fig. 8. Diagram of our method for sharing models of affine variability. A
support set (shown as a set of “A”s) is given to the learner. From this
support set, a general model of affine variability is derived. Combining
the model of affine variability with a single example of a handwritten
digit, a digit model is constructed.
classification task using the single-example models of the
digits. The classification accuracy, using the transform
densities described in , was 89.3 percent. This is a huge
improvement over the best alternative method (a nearest
neighbor method using the Hausdorff distance) tried which
gave an accuracy of only 48.2 percent. Methods that require
training to set parameters (neural networks, SVMs, etc.) did
substantially worse, severely overfitting to the single training
example. Even when the single digit example was chosen
randomly, the average performance of our classifier was still
74.7 percent, compared to only 32.6 percent for the nearest
neighbor Hausdorff. Additional details of this work can be
found in .
In summary, the main contribution of congealing to the
area of handwriting recognition is not record breaking
performance on large data sets, but rather the idea that, by
modeling independent and generic modes of variability
(like affine deformation), new learning tasks can be made
more efficient based on previous learning tasks. Next, we
use congealing to solve a completely different problem,
removing bias from magnetic resonance images.
CONGEALING WITH BRIGHTNESS
TRANSFORMATIONS
In the last section, we introduced congealing by discussing
in detail the joint alignment of a set of binary digit images
via affine transformations. As mentioned in Section 1,
however, congealing can be applied to a wide range of data
types using a variety of transformations.
Bias Correction in MR Images
Our second example of congealing is applied to magnetic
resonance images, which are scalar-valued images of
human anatomy. The transformations used in this application will be brightness transformations—none of the pixels
will be moved spatially—chosen again to minimize the
entropies of the pixel stacks in the image set.
The problem of bias fields in magnetic resonance (MR)
images is an important problem in medical imaging. This
problem is illustrated in Fig. 9. When a patient is imaged in
the MR scanner, the goal is to obtain an image which is a
function solely of the underlying tissue (left of Fig. 9).
However, typically, the desired anatomical image is
corrupted by a multiplicative bias field (second image of
Fig. 9) that is caused by engineering issues such as
imperfections in the radio frequency coils used to record
the MR signal. The result is a corrupted image (third image
of Fig. 9). (See for background information.) The goal of
MR bias correction is to estimate the uncorrupted image
from the corrupted image.
A variety of statistical methods have been proposed to
address this problem. Wells et al. developed a statistical
model using a discrete set of tissues, with the brightness
distribution for each tissue type (in a bias-free image)
represented by a one-dimensional Gaussian distribution.
An expectation-maximization (EM) procedure was then used
to simultaneously estimate the bias field, the tissue type, and
the residual noise. While this method works well in many
cases, it has several drawbacks: 1) Models must be developed
a priori for each type of acquisition (for each different setting
of the MR scanner), for each new area of the body, and for
different patient populations (like infants and adults). 2)
Models must be developed from “bias-free” images, which
may be difficult or impossible to obtain. 3) The model
assumes a fixed number of tissues, which may be inaccurate.
For example, during development of the human brain, there
is continuous variability between gray matter and white
matter. In addition, a discrete tissue model does not handle
so-called partial volume effects in which a pixel represents a
combination of several tissue types. This occurs frequently
since many pixels occur at tissue boundaries.
Nonparametric approaches have also been suggested, as,
for example, by Viola . In that work, a nonparametric
model of the tissue was developed from a single image. Using
the observation that the entropy of the pixel brightness
distribution for a single image is likely to increase when a bias
field is added, Viola’s method postulates a bias-correction
field by minimizing the entropy of the resulting pixel
brightness distribution. This approach addresses several of
the problems of fixed-tissue parametric models, but has its
own drawbacks: 1) The statistical model may be weak since it
is based on data from only a single image. 2) There is no
mechanism for distinguishing between certain low-frequency image components and a bias field. That is, the
method may mistake signal for noise when removal of the
true signal reduces the entropy of the brightness distribution.
We shall show that this is a problem in real medical images.
Congealing can overcome or improve upon problems
associated with both of these methods and their many
variations (see, e.g., for recent techniques). It models
tissue brightness nonparametrically, but uses data from
multiple images to provide improved distribution estimates
and alleviate the need for bias-free images for making a
LEARNED-MILLER: DATA DRIVEN IMAGE MODELS THROUGH CONTINUOUS JOINT ALIGNMENT
Fig 9. On the left is an idealized mid-axial MR image of the human brain with little or no bias field. The second image is a simulated low-frequency
bias field. It has been exaggerated for ease of viewing. The third image is the result of pixelwise multiplication of the image by the bias field. The goal
of MR bias correction is to recover the low-bias image on the left from the biased image on the right. On the right is the sine/cosine basis, used to
construct band-limited bias fields (see text).
model. It conditions on spatial location, taking advantage of a
rich information source ignored in other methods. Experimental results demonstrate the effectiveness of our method.
The Image Model and Problem Formulation
We assume we are given a set ðI1; . . . ; INÞ of observed
images, as shown on the left side of Fig. 10. Each of these
images is assumed to be the product of some bias-free
image Lj and a smooth bias field Bj 2 B.7 We shall refer to
the bias free images as latent images, as before with the
affine congealing. The set of all latent images shall be
denoted L and the set of unkown bias fields B. Then, each
Ijðx; yÞ ¼ Ljðx; yÞ & Bjðx; yÞ, where ðx; yÞ gives the pixel
coordinates of each point, with N pixels per image.
Consider again Fig. 10. A pixel-stack through each image
set is shown as the set of pixels corresponding to a
particular location in each image (not necessarily the same
tissue type). Our method again relies on the principle that
the pixel-stack values will have lower entropy when the
bias fields have been removed. Fig. 11 shows the simulated
effect, on the distribution of values in a pixel-stack, of
adding different bias fields to each image.
The latent image generation model assumes that each
pixel is drawn independently from a fixed distribution,
px;yð(Þ, which gives the probability of each gray value at the
the location ðx; yÞ in the image. It is also assumes that the
bias fields for each image are chosen independently from
some fixed distribution over bias fields. Unlike most models
for this problem, which rely on statistical regularities within
an image, we take a completely orthogonal approach by
assuming that pixel values are independent given their
image locations, but that pixel-stacks, in general, have low
entropy when bias fields are removed.
We formulate the problem as a maximum a posteriori
(MAP) problem, searching for the most probable bias fields
given the set of observed images. Letting BN represent the
N-fold product space of smooth bias fields, we wish to find
B2BN pðBjIÞ ¼
ðaÞ arg max
B2BN pðIjBÞpðBÞ
ðbÞ arg max
B2BN pðIjBÞ
ðcÞ arg max
B2BN pðLðI; BÞÞ
px;yðLjðx; yÞÞ
log px;yðLjðx; yÞÞ
ðdÞ arg min
ðeÞ arg min
^HVasicekðL1ðx; yÞ; . . . ; LNðx; yÞÞ
B1ðx; yÞ ; . . . ; INðx; yÞ
Here, H is the Shannon entropy ($Eðlog pðxÞÞ) and ^
is a sample-based entropy estimator. This estimator allows
the rapid estimation of entropy from a sample of a random
variable, without first estimating the distribution itself from
the data, as is often done.8 (a), (b), and (c) are equivalent to
the steps taken in derivation (4). The approximation (d)
replaces the empirical mean of the log probability at each
pixel with the negative entropy of the underlying distribution at that pixel. This entropy is in turn estimated, (e),
using the entropy estimator of Vasicek directly from the
samples in the pixel-stack.
Equation (11) is once again the basic optimization of
congealing, as in (2), although this time we are calculating
the entropy of a continuous distribution of gray values,
rather than the entropy of a distribution with only two
values. To do congealing with this criterion, we simply need
to parameterize the smooth bias fields and to optimize the
criterion with respect to these parameters.
IEEE TRANSACTIONS ON PATTERN ANALYSIS AND MACHINE INTELLIGENCE,
FEBRUARY 2006
Fig. 10. On the left are a set of mid-coronal brain images from eight different infants, showing clear signs of bias fields. A pixel-stack, a collection of
pixels at the same point in each image, is represented by the small square near the top of each image. Although there are probably no more than two
or three tissue types represented by the pixel-stack, the brightness distribution through the pixel-stack has high empirical entropy due to the
presence of different bias fields in each image. On the right are a set of images that have been corrected using our bias field removal algorithm.
While the images are still far from identical, the pixel-stack entropies have been reduced by mapping similar tissues to similar values in an
“unsupervised” fashion, i.e., without knowing or estimating the tissue types.
7. We assume that the images have been brought into approximate
correspondence using spatial congealing (spatial congealing is relatively
robust to bias fields) or any other method of alignment, such as .
8. The entropy estimator used is similar to Vasicek’s estimator , given
(up to minor details) by
^HVasicekðZ1; . . . ; ZNÞ ¼
m ðZðiþmÞ $ ZðiÞÞ
where Zis represent the values in a pixel-stack, ZðiÞs represent those same
values in rank order, N is the number of values in the pixel-stack, and m is a
function of N (like N0:5) such that m=N goes to 0 as m and N go to infinity.
These entropy estimators are discussed at length elsewhere .
The Algorithm
Using these ideas, it is straightforward to construct algorithms for joint bias field removal. As mentioned above, we
chose to optimize (11) over the set of band-limited bias fields.
To do this, we parameterize the set of bias fields using the
sine/cosine basis images "k shown on the right of Fig. 9:
Bjðx; yÞ ¼
k"kðx; yÞ:
We optimize (11) by simultaneously updating the bias
field estimates (taking a step along the numerical gradient)
for each image to reduce the overall entropy. That is, at time
step t, the coefficients #j
ks for each bias field are updated
using the latent image estimates and entropy estimates from
time step t $ 1. After all #s have been updated, a new set of
latent images and pixel-stack entropies is calculated and
another gradient step is taken.
Though it is possible to do a full gradient descent to
convergence by optimizing one image at a time, the
optimization landscape tends to have more local minima
for the last few images in the process. The appeal of our
joint gradient descent method, on the other hand, is that the
ensemble of images provides a natural smoothing of the
optimization landscape in the joint process. Algorithm 2,
shown in Fig. 12, summarizes the process.
Upon convergence, it is assumed that the entropy has been
reduced as much as possible by changing the bias fields
unless one or more of the gradient descents is stuck in a local
minimum. Empirically, the likelihood of sticking in local
minima is dramatically reduced by increasing the number of
images N in the optimization. In our experiments described
below, with only 21 real infant brains, the algorithm appears
to have found a global minimum of all bias fields, at least to
the extent that this can be discerned visually.
Note that, for a set of identical images, the pixel-stack
entropies are not increased by multiplying each image by the
same bias field (since all images will still be the same). More
generally, when images are approximately equivalent, their
pixel-stack entropies are not significantly affected by a
“common” bias field, i.e., one that occurs in all of the images.9
This means that the algorithm cannot, in general, eliminate all
bias fields from a set of images, but can only set all of the bias
fields to be equivalent. We refer to any constant bias field
remainingin all of the imagesafter convergence as theresidual
bias field.
Fortunately, there is an effect that tends to minimize the
impact of the residual bias field in many test cases. In
particular, the residual bias field tends to consist of
components for each #j that approximate the mean of that
component across images. For example, if half of the
observed images have a positive value for a particular
component’s coefficient and half have a negative coefficient
for that component, the residual bias field will tend to have
a coefficient near zero for that component. Hence, the
algorithm naturally eliminates bias field effects that are
nonsystematic, i.e., that are not shared across images.
If the same type of bias field component occurs in a
majority of the images, then the algorithm will not remove it
as the component is indistinguishable, under our model,
from the underlying anatomy. In such a case, one could
resort to within-image methods to further reduce the
entropy. However, there is a risk that such methods will
remove components that actually represent smooth gradations in the anatomy. This can be seen in the bottom third of
Fig. 13 and will be discussed in more detail below.
Experiments
To test our bias removal algorithm, we ran two sets of
experiments, the first on synthetic images for validation and
the second on real brain images. We obtained synthetic
brain images from the BrainWeb project such as the one
shown on the left of Fig. 9. These images can be considered
“idealized” MR images in the sense that the brightness
values for each tissue are constant (up to a small amount of
manually added isotropic noise). That is, they contain no
bias fields. The initial goal was to ensure that our algorithm
could remove synthetically added bias fields in which the
bias field coefficients were known. Using N copies of a
single “latent” image, we added known but different bias
fields to each one. For as few as five images, we could
reliably recover the known bias field coefficients, up to a
fixed offset for each image, to within 1 percent of the power
of the original bias coefficients.
More interesting are the results on real images, in which
the latent images come from different patients. We obtained
21 preregistered10 infant brain images (top of Fig. 13) from
Brigham and Women’s Hospital in Boston, Massachusetts.
Large bias fields can be seen in many of the images.
Probably the most striking is a “ramp-like” bias field in the
sixth image of the second row. (The top of the brain is too
bright, while the bottom is too dark.) Because the brain’s
white matter is not fully developed in these infant scans, it
is difficult to categorize tissues into a fixed number of
classes as is typically done for adult brain images; hence,
these images are not amenable to methods based on specific
tissue models developed for adults (e.g., ).
The middle third of Fig. 13 shows the results of our
algorithm on the infant brain images. (These results must be
LEARNED-MILLER: DATA DRIVEN IMAGE MODELS THROUGH CONTINUOUS JOINT ALIGNMENT
Fig. 11. On the left is a simulated distribution from a pixel-stack taken
through a particular set of bias-free mid-axial MR images. The two sharp
peaks in the brightness distribution represent two tissues which are
commonly found at that particular pixel location. On the right is the
result of adding an independent bias field to each image. In particular,
the spread, or entropy, of the pixel distribution increases. In this work,
we seek to remove bias fields by seeking to reduce the entropy of the
pixel-stack distribution to its original state.
9. Actually, multiplying each image by a bias field of small magnitude
can artificially reduce the entropy of a pixel-stack, but this is only the result
of the brightness values shrinking toward zero. Such artificial reductions in
entropy can be avoided by normalizing a distribution to unit variance
between iterations of computing its entropy, as is done in this work.
10. It is interesting to note that registration is not strictly necessary for
this algorithm to work. The proposed MAP method works under very
broad conditions, the main condition being that the bias fields do not span
the same vector space as parts of the actual medical images. It is true,
however, that, as the latent images become less registered or differ in other
ways, a much larger number of images is needed to get good estimates of
the pixel-stack distributions.
viewed in color on a good monitor to fully appreciate the
results.) While a trained technician can see small imperfections in these images, the results are remarkably good. All
major bias artifacts have been removed.
It is interesting to compare these results to a method that
reduces the entropy of each image individually, without
using constraints between images. Using the results of our
algorithm as a starting point, we continued to reduce the
entropy of the pixels within each image (using a method akin
to Viola’s ), rather than across images. These results are
shown in the bottom third of Fig. 13.11 Carefully comparing
the central brain regions in the middle section of the figure
and the bottom section of the figure, one can see that the
butterfly shaped region in the middle of the brain, which
represents developing white matter, has been suppressed in
the lower images. This is most likely because the entropy of
the pixels within a particular image can be reduced by
increasing the bias field “correction” in the central part of
the image. In other words, the algorithm strives to make the
image more uniform by removing the bright part in the
middle of the image. However, our algorithm, which
compares pixels across images, does not suppress these real
structures since they occur across images. Hence, coupling
across images can produce superior results.
We have now seen congealing in two very different
scenarios. This second scenario differs from the first in two
significant ways. First, the transformations considered to
“align” images are brightness transformations rather than
spatial transformations. Second, the images are scalarvalued instead of binary-valued, requiring a different
entropy estimator than used for the binary digits.
One more difference between the algorithms is worth
mentioning. The binary digit algorithm used a coordinate
descent method in the optimization where the optimization
criterion was explicitly evaluated for small perturbations of
the parameters in both the positive and negative directions.
The reason for this is that the optimization function is not a
very smooth function of the parameters since a small change
in the scale or rotation of an image can produce a discontinuous jump in the sum of entropies function. The reason for
this is that the binary digit images have sharp edges and, so, a
small transformation can cause a discrete jump in the value of
a pixel at a particular location. The brightness-based congealing of the MR images, however, produces a much
smoother optimization landscape and, so, somewhat faster
gradient descent methods can be used in the optimization.
Other than these somewhat minor differences, the basic
algorithms are almost identical, however.
This work uses information unused in other methods, i.e.,
information across images. This suggests an iterative scheme
in which both types of information, both within and across
images, are used. Local models could be based on weighted
neighborhoods of pixels, pixel cylinders, rather than single
pixel-stacks, in sparse data scenarios. For “easy” bias
correction problems, such an approach may be overkill, but,
for difficult problems in bias correction, where the bias field is
difficult to separate from the underlying tissue, as discussed
in , such an approach could produce critical extra leverage.
ADDITIONAL RELATED WORK
Although we have generalized the scope of congealing, it
was originally proposed as a way of dealing with spatial
variability in images. There have been numerous other
efforts to address shape variability in images using a latent
image-transform type of approach.
Much work in handwritten character recognition has
explicitly addressed the issue of shape deformations and
modeling. Revow et al. developed a model for
characters by hand-specifying and then adapting a set of
“control points,” defining the probability of an observed
character as a function of the deviation of the character from
these predefined control points. The authors discounted the
affine component of such deviations, achieving an affine
IEEE TRANSACTIONS ON PATTERN ANALYSIS AND MACHINE INTELLIGENCE,
FEBRUARY 2006
11. This particular result is not visible on a grayscale printout of the
paper and needs to be viewed in color on a high-fidelity monitor.
Fig. 12. Algorithm 2: Congealing with brightness transformations.
invariant character recognition model. In active appearance
models , the authors describe a system which models
observed images as a combination of “shape” variations
and “appearance” variations. These terms correspond to the
transform and latent image components of the model we
use. While these models have a number of interesting
potential applications in face recognition, tracking, and
other vision tasks, the models are built upon manually
identified correspondences. We shall focus our attention on
models that can be learned automatically.
Jones and Poggio have presented models for images that
consist of separate “texture” and “shape” components .
LEARNED-MILLER: DATA DRIVEN IMAGE MODELS THROUGH CONTINUOUS JOINT ALIGNMENT
Fig. 13. NOTE: This image must be viewed in color (preferably on a bright display) for full effect. (Images can be viewed online at http://
www.cs.umass.edu/elm/congealing.) Top. Original infant brain images. Middle. The same images after bias removal with our algorithm. Note that
developing white matter (butterfly-like structures in middle brain) is well-preserved. Bottom. Bias removal using a single image based algorithm.
Notice that white matter structures are repressed.
These parts correspond to the latent image and transform
components used in this paper. The shape components in
these models are linear models. That is, deformation vector
fields are combined linearly to produce variations in the
shape of latent images. Separating an observed image into
its shape and texture parts is termed vectorization by the
authors. These models were initially developed for images
of faces by manually identifying correspondences among all
of the prototype faces. The “flows” that put these faces in
correspondence then provide the model of deformation
with which one can do synthesis and analysis.
In , the authors introduce a technique for “bootstrapping” these correspondences by iteratively estimating
more and more refined models of texture and shape with
the aid of an optical flow algorithm. The joint nature of this
optimization makes it quite similar to congealing. There are
several important differences as well. Unlike in congealing,
the deformation model is unconstrained. That is, virtually
any flow field can arise from the algorithm. This makes the
procedure both more flexible and more difficult to get
working correctly. Another difference is that the authors do
not explicitly define an optimization criterion other than the
subjective one of good visual alignment. Nevertheless, the
algorithm is ultimately very similar to one which minimizes
the entropies of the final latent images, like congealing.
The work of Frey and Jojic , has the greatest
similarity to congealing. In these papers and in more recent
work, the authors use the generative latent image-transform
model of image production. They produce models of latent
images by simultaneously maximizing the posterior likelihood of a set of latent images under a fixed set of
transformations.
The authors use the EM algorithm to maximize the
likelihood of the latent images simultaneously under a set
of models. One key difference with our own work is that the
authors entertain a finite set of transformations rather than a
continuous set. This allows the authors to perform a full
Bayesian analysis at each step, calculating the likelihood of an
observed image under a particular model by integrating over
all possible latent images and transforms. Hence, they do not
need to resort to using the “peakiness assumption” of (9).
However, with a fixed set of transforms, the number of
modes of spatial deformations that can be modeled is limited.
The complexity of their algorithm is linear in the number of
possible transformations, whereas congealing is linear in the
number of parameters. This means congealing can be used with
much larger sets of transforms and with unbounded
resolutionwithineachparameter.Thismeansthatcongealing
can achieve potentially more accurate alignments.
Another key difference between our work and the work of
Frey and Jojic is that we model pixel distributions nonparametrically. This allows us to define accurate models of latent
image pixels even when they may be bimodal or even more
complicated.Forexample,indoingalignmentorbiasremoval
in MR images, pixel distributions are likely to have many
modes, even after alignment, due to the different tissues that
may appear at the same location in different brains.
OTHER PROPERTIES OF CONGEALING
Congealinghasanumberofappealingproperties.Wediscuss
below the issues of convergence to an optimum of the
alignment function and robustness to noise in the images.
One problem with iterative methods such as congealing
is that an image may fail to achieve the global minimum of
the objective function.12 This can be caused by the so-called
“zero-gradient” problem or the existence of local minima in
the objective function. An example of the zero-gradient
problem is shown in Fig. 14. Note that the gray “X” and the
white “X” do not overlap at all, despite the fact that their
centroids are aligned. Thus, a differential change in the
relative rotation of the two characters will not improve
alignment according to the minimum entropy cost function.
The figure illustrates a local minimum problem as well. It
arises when one leg of an “X” overlaps a leg of the other
“X,” while the other legs do not overlap. In such a scenario,
any perturbation of the rotation parameter would only
increase the entropy. This scenario thus represents a local
minimum of the entropy function.
The congealing process has a serendipitous advantage in
that it often circumvents these two types of optimization
problems. Because the alignment process is done over an
ensemble of images which has a data-dependent smoothing
effect, these two issues arise infrequently. This can be
understood by reexamining the average observed images of
Fig. 3, which show the relatively smooth “landscape” for
hill-climbing in the congealing setting.
We note that, for aligning a pair of images, a strategy of
blurring one of the images is commonly used , . For
binary images, this can be thought of as a type of implicit
congealing over horizontal and vertical translations since
convolving an image with a circular Gaussian distribution is
equivalent to averaging a set of equivalent latent images that
have been shifted horizontally and vertically according to a
Gaussian distribution. Congealing improves upon this
method by using the true distribution over transforms as a
IEEE TRANSACTIONS ON PATTERN ANALYSIS AND MACHINE INTELLIGENCE,
FEBRUARY 2006
Fig. 14. An example of two images that will not congeal to the global
minimum of the fitness function. This problem can usually be alleviated
in practice by congealing a large number of samples simultaneously.
12. Methods which optimize over a discrete set of transforms (e.g., ,
 ) of course are guaranteed to reach a minimum over their set of defined
transformations, but the best transform may not be close to the true global
optimum. A combined approach optimization approach can be used in
which a gradient descent is continued from the best discrete transform.
“convolution kernel.” In addition, a blurring technique used
onscalar-valued,color-valued,orfeature-valuedimagesmay
not achieve the desired effect since the average of two values
may not be a good representation of a bimodal distribution.
Thus, for anything other than binary images, it is not clear
how to interpret a blurring operation. A limitation of
congealing, however, is that enough images must be present
to form a good approximation of the distribution.
To study the problems of local minima and zero gradients,
the following experiments were performed: Training sets of
four different sizes were congealed for each digit. The
number of characters which failed to converge to the best
alignment was evaluated. This judgment was made subjectively, based upon whether a human observer (the author)
could find a better alignment of the character. The results are
reported in Table 1. When a small numberof examples is used
in congealing, the lack of sufficient smoothing causes a
greater number of local minima problems, as shown in the
first two rows of the table.
Another phenomenon may occur when the observed
data points are spread widely apart. In this case, congealing
may produce multiple convergence centers rather than a
single center. The following experiment was done to
examine this issue more systematically: Starting with a
single image of a “4” from the NIST database, we generated
a sequence of 100 images rotated at uniform intervals from
2. For ! < 68 degrees, the images congealed to a
unique position, but, when ! > 68 degrees, two “centers”
emerged. This is due to a local minimum in the congealing
process, as illustrated in Fig. 15. Although this lack of
convergence to a single global “center” is not ideal, it does
not preclude us from using the resulting density model,
which has relatively low entropy. That is, even in the
presence of multiple convergent “centers,” we are performing an important dimensionality reduction in the data by
congealing. The key property is that a test character will be
congealed to a predictable location for comparison with the
model, without losing information about the character. Such
multiple convergence centers were seen in the actual
training data in the case of the class of eights. An example
of each latent image is shown in Fig. 15c and Fig. 15d. A
number of other experiments were conducted to compare
the congealing algorithm to other preprocessing algorithms
for aligning digits. For the sake of brevity, we refer the
reader to and do not replicate it here. The same reference
contains a discussion of the robustness of congealing to
noise, as well.
ADDITIONAL APPLICATIONS
In Section 2, we defined congealing as a general procedure
for jointly aligning arrays of data with respect to a set of
continuous transformations. This broad definition encompasses a wide range of data types and applications. It is
straightforward to apply the ideas of congealing to time
sequence data, like electroencephalograms (EEGs), to
eliminate location and scale parameters. In this case,
transformations could be linear or nonlinear remappings
of the time coordinate. Another example of time-sequence
data is data taken from a pen-tablet as an ordered sequence
of coordinate pairs. One problem with modeling characters
such as these is that different writers may draw characters
that appear very similar, but at different speeds. If data is
stored and indexed with a time coordinate, then the
similarity of characters may be obscured. Congealing can
be used to “realign” the time coordinates by minimizing the
entropies of sample locations, across characters, by “warping” time according to either a linear or nonlinear
transformation.
As we have seen already, congealing can be used to align
two-dimensional images and to remove brightness variations from two-dimensional images. Both of these techniques can be applied to full three-dimensional volumes,
although the computational challenges become greater. In
 , we report on the alignment of three-dimensional binary
brain volumes using congealing. The same techniques can
be applied to gray-valued 3D medical volumes.
There are three primary directions for our work in
extending these techniques. One of these is to apply
congealing to color images. To do this, we must consider
the entropy of pixel stacks in which each pixel is a threedimensional random variable, rather than simply a onedimensional variable. We have recently implemented fast
algorithms for estimating the entropy of three-dimensional
distributions from samples, so this is now within reach.
Second, we wish to extend congealing to feature spaces.
In particular, we aim to apply these ideas to images of edgestrengths and other filter outputs. Part of the problem in the
LEARNED-MILLER: DATA DRIVEN IMAGE MODELS THROUGH CONTINUOUS JOINT ALIGNMENT
Fig. 15. (a) and (b) Two distinct centers of convergence for a set of
rotated “4” images. The algorithm aligned the horizontal part of some
fours with the vertical part of others and got stuck in this local minimum.
However, since any test character which happens to be a four should
rotate to one of these two positions, this can still make a good model for
classification. (c) and (d) Two centers for different “8” images.
Percentages of Images that Do Not Reach Global Minimum
of the Probability Function
past with making this work is that slight misalignments in
edge images would cause the congealing to get stuck. In
other words, edges are so thin and their overlap from image
to image is so small that congealing didn’t work well. This
can be addressed by our third major line of investigation.
The third idea we hope to investigate was mentioned in
the context of the MR bias removal problem. In order to
form better estimates of pixel stack distributions when few
images are available, estimates could be built from the
neighborhood surrounding a pixel, i.e., by using pixel cylinders
rather than pixel stacks. Integration over neighborhoods
provides a gradient for the alignment algorithm without
destroying information, as would be done by blurring
images. We believe these augmentations of our ideas will
increase the applicability of congealing algorithms. Our
current goal is to apply these ideas to alignment and
structure learning in face images.
ACKNOWLEDGMENTS
T. Inder and S. Warfield provided brain images for this
work (US National Institutes of Health grant P41 RR13218).