Cyber Physical Attacks with Control Objectives
Yuan Chen, Soummya Kar, and Jos´e M. F. Moura
This paper studies attackers with control objectives against cyber-physical systems (CPS). The
system is equipped with its own controller and attack detector, and the goal of the attacker is to move
the system to a target state while altering the system’s actuator input and sensor output to avoid detection.
We formulate a cost function that reﬂects the attacker’s goals, and, using dynamic programming, we
show that the optimal attack strategy reduces to a linear feedback of the attacker’s state estimate. By
changing the parameters of the cost function, we show how an attacker can design optimal attacks to
balance the control objective and the detection avoidance objective. Finally, we provide a numerical
illustration based on a remotely-controlled helicopter under attack.
I. INTRODUCTION
The study of cyber-physical security has primarily focused on the analysis of attacker capabilities and the development of resilient algorithms for attack detection, state estimation, and
control. Cyber-physical systems (CPS), systems of intercommunicating sensing, computation,
and actuation components coupled with an underlying physical process, have been the targets
of sophisticated cyber attacks that result in catastrophic physical damage. StuxNet and
the Maroochy Shire Council Sewage Control Incident are two examples of attacks against
industrial systems, and the authors of and demonstrate similar security vulnerabilities for
Yuan Chen {(412)-268-7103}, Soummya Kar {(412)-268-8962}, and Jos´e M.F. Moura {(412)-268-6341, fax: (412)-268-
3890} are with the Department of Electrical and Computer Engineering, Carnegie Mellon University, Pittsburgh, PA 15217
{yuanche1, soummyak, moura}@andrew.cmu.edu
This material is based on research sponsored by DARPA under agreement number DARPA FA8750-12-2-0291. The U.S.
Government is authorized to reproduce and distribute reprints for Governmental purposes notwithstanding any copyright notation
The views and conclusions contained herein are those of the authors and should not be interpreted as necessarily representing
the ofﬁcial policies or endorsements, either expressed or implied, of DARPA or the U.S. Government.
July 21, 2016
 
commercial automobiles. While the existing literature has analyzed the capability of attackers to
bypass security protocols, there is little work on how an attacker should attack a CPS in order
to accomplish speciﬁc goals.
In this paper, we study attackers who have speciﬁc control objectives and wish to evade security
protocols employed by the CPS. We consider attackers that perform integrity attacks , ,
in which the attacker alters the input on some of the actuators and the output on some of the
sensors, in order to move the system to a target state while avoiding the system’s attack detector.
The CPS is affected by sensor and process noise, so, for state estimation and control, the system
is equipped with a Kalman ﬁlter and an LQG controller. One popular method of attack detection
is the χ2 fault detector: the detector examines the energy of the Kalman ﬁlter innovations process
and reports an attack if the energy exceeds a threshold . Our work in this paper is to design an
attack sequence that balances the energy of the attacker’s control objective error and the impact
of the attack on the CPS’ attack detection statistic.
We formulate a ﬁnite horizon cost function that captures the attacker’s objectives. The cost
function is the sum of two quadratic terms: one term penalizes the deviation of the system from
the target state and the other term penalizes the energy of the detection statistic. The attacker
chooses the relative weighting between the control error component and the detection statistic
component of the cost function in order to match his or her own motives. Our cost function for
modeling the attacker’s objectives differs from the standard Linear Quadratic Gaussian (LQG)
cost function. In the standard LQG problem, the cost function directly penalizes the magnitude
of the input at each time step . In contrast, our cost function does not directly penalize the
magnitude of the attack at each time step and, instead, only accounts for the effect of the attack
on the detection statistic.
This paper addresses two main problems. First, we solve for the optimal attack sequence via
dynamic programming. Second, we derive expressions for the control error cost and the detection
statistic energy cost of an attack sequence as a function of the weighting parameter between
the two components of the cost function. The novelty of our contribution is that we precisely
state how an attacker should design an attack in order to move the system to a target state
while attempting to avoid detection, a problem that is not addressed by existing literature. A
preliminary version of our work appears in , where we studied how to attack a CPS that did
not have its own controller. Additionally, in this paper, we explicitly show how an attacker can
July 21, 2016
choose the relative weighting between components of the cost function to affect the performance
of the optimal attack, and we provide detailed proofs that were omitted in .
Existing literature has examined the ability of an attacker to avoid detection. Reference 
shows that attacks that only manipulate sensor values are undetectable if they are consistent with
the system’s sensor placement pattern and if the attack detector does not exploit system dynamics
information. When the system is noiseless, references , , and relate the ability of an
attacker to avoid detection to certain geometric control-theoretic properties of the CPS. In our
previous work , we provide a necessary and sufﬁcient condition on the extended observability
subspaces of the CPS under which an attacker can perfectly hide the effect of his or her attack
from the sensor output. Prior work has also analyzed the ability of the attacker to simultaneously
cause damage and avoid detection. The authors of analyze an attacker who can manipulate
all sensors and actuators but does not know the entire system model. References and 
characterize the error in state estimation that a false data injection attacker can cause while
evading a residue detector similar to the χ2 detector. The authors of consider attackers who
can attack both the actuators and the sensors of the CPS and characterize the set of reachable
states for a detection-evading attacker.
Unlike previous work, which extensively analyzes the attacker’s ability to avoid detection and
cause damage, the purpose of this paper is to address how an attacker should go about designing
an attack to achieve these objectives. We pose an optimal control formulation of the attack
design problem – the attacker’s objectives deﬁne a linear quadratic cost function that penalizes
deviation from the target state and the energy of the detection statistic. In contrast to the standard
LQG problem, our cost function does not directly penalize the attack, so, ﬁrst, we determine
the effect of an attack sequence on the detection statistic. Then, through dynamic programming,
we calculate the cost-minimizing attack and show that the optimal attack strategy is a linear
feedback of the attacker’s state estimate. We compute, separately, the control error cost and the
detection statistic cost of the optimal attack strategy as a function of the weighting between the
two components of the cost function. That is we analyze the trade-offs in the control performance
and detection avoidance performance of the optimal attack. The primary consequence of these
contributions is that an attacker can select a cost function that best reﬂects his or her speciﬁc
goals of control and detection avoidance and design an attack to optimally accomplish those
July 21, 2016
The rest of this paper is organized as follows. In Section II, we provide the model of the CPS
and attacker, review the χ2 detector, deﬁne the cost function associated with the attacker’s goals,
and formally state the problems we address. Section III details the effect of an attack sequence
on the system’s attack detector. In Section IV, we solve for the optimal attack sequence using
dynamic programming. In Section V we derive expressions for the control error cost and the
detection statistic cost of an optimal attack as a function of the weighting parameter. We give
a numerical example of a remotely-controlled helicopter under attack in Section VI, and we
conclude in Section VII.
II. BACKGROUND
A. Notation
Let R denote the reals and Rn denote the space of n-dimensional real (column) vectors. The
multivariate Gaussian distribution with mean µ and covariance Σ is denoted as N (µ, Σ). Let In
be the n by n identity matrix. For a matrix M, R(M) denotes the range space of M, N (M)
denotes the null space of M, and M † denotes the Moore-Penrose pseudoinverse. For a symmetric
matrix S = ST, S ⪰0 denotes that S is positive semideﬁnite, and S ≻0 denotes that S is
positive deﬁnite.
B. System Model
The CPS follows a discrete time state space model:
xt+1 = Axt + But + Γet + wt,
yt = Cxt + Ψet + vt,
where xt ∈Rn is the system state, ut ∈Rm is the system input, et ∈Rs is the attack, wt ∈Rn
is the process noise, yt ∈Rp is the sensor output, and vt ∈Rp is the sensor noise. For nonlinear
CPS, (1) represents its linearized dynamics about a nominal operating point. The process noise
wt has independent identical distribution (i.i.d.) N (0, Σw) with Σw ≻0, the sensor noise vt
has (i.i.d.) distribution N (0, Σv) with Σv ≻0, and wt is independent of vt. The system begins
running at t = −∞from a random initial state x−∞that has distribution N (x−∞, Σx) with
Σx ≻0. The initial state x−∞is independent of wt and vt. The pair (A, C) is observable, and
July 21, 2016
the pair (A, B) is controllable. We provide details on Γ and Ψ, which model the attacker, in
Section II-C.
Assumption 1. The system knows the matrices A, B, and C, the statistics of x−∞, wt, vt, and
the input ut (for all time t). The system does not know the matrices Γ and Ψ and does not know
the attack et.
The system’s objective is to regulate its internal state, xt, to the origin (i.e., xt ≡0). Because
the system cannot directly observe xt, it constructs an estimate of the state using the observations
yt through a Kalman ﬁlter. Then, the system uses its state estimate to calculate its regulating
control ut. The system designs its Kalman ﬁlter and controller assuming nominal operating
conditions (i.e., et = 0 for all t). When et = 0 for all t, the Kalman ﬁlter recursively calculates,
bxt|t, the minimum mean squared error estimate (MMSE) of the state, xt, given all sensor
measurements up to time t. The Kalman ﬁlter has converged to a ﬁxed Kalman gain since
the system starts running at t = −∞:
K = PCT(CPCT + Σv)−1,
P = APAT + Σw −APCT(CPCT + Σv)−1CPAT,
bxt = bxt|t−1 + K
 yt −Cbxt|t−1
bxt+1|t = Abxt + But.
The system has a feedback controller
ut = Lbxt,
such that A + BL is stable. Under nominal operating conditions, one such controller is the
inﬁnite horizon LQG controller that computes ut to minimize the cost function
JCPS = lim
′ ≻0, and the pair (A, Q
′) is observable. For the CPS, the term xT
penalizes the deviation of the state from the origin (i.e., the regulation error), and the term
′ut represents the cost of using the control ut. The inﬁnite horizon LQG controller aims to
minimize the average sum of these two cost terms. The controller that minimizes (7) has the
July 21, 2016
structure of (6), where
and S satisﬁes
S = ATSA + Q
The CPS represented by (1) equipped with a Kalman Filter (equations (2)-(5)) and (stable)
feedback controller is a standard model of a CPS , , .
Although its Kalman ﬁlter and feedback controller are designed assuming nominal operating
conditions, the system is equipped with a χ2 failure detector for detecting operating conditions
that are not nominal (i.e., et ̸= 0) , , . The χ2 detector examines the innovations
sequence of the Kalman ﬁlter, νt, deﬁned as
νt = yt −Cbxt|t−1,
where bxt|t−1, given by equation (5), is, under the condition that et = 0 for all t, the MMSE
prediction of xt using sensor measurements up to yt−1. When there is no attack, it is well
known that the innovations are i.i.d. with N (0, Σν), where
Σν = CPCT + Σv,
and νt is orthogonal to bxt|t−1. The χ2 detector computes the statistic
and reports that an attack has occurred if gt exceeds a threshold τ. The threshold τ is chosen `a
priori based on the desired false alarm and missed detection probabilities .
C. Attacker Model
We provide assumptions and details on the attacker model.
Assumption 2. The attack begins at time t = 0. That is, et ≡0 for all t < 0.
Assumption 2 is made without loss of generality since we can arbitrarily set the indexing of
time steps. The attacker can attack the system (i.e., et ̸= 0) over a ﬁxed time window from t = 0
to t = N. The attacker knows the value of N.
July 21, 2016
Assumption 3. The attacker causally knows yt for all times t. For time t = 0 to t = N, the
attacker also causally knows eyt, where
eyt = Cxt + vt.
Assumption 3 states that, at time t, the attacker has access to the system sensor measurements
for all times up to t. The attacker also knows the sensor measurement at time t before it is
modiﬁed by his or her attack at time t. The attacker may use its knowledge of eyt to design his
or her attack, et.
Assumption 4. The attacker knows the matrices A, B, C and L and the statistics of x−∞, wt,
vt. The attacker knows the matrices Γ and Ψ.
The attacker knows the system model and the system’s feedback matrix L. The attacker also
knows which sensors and actuators he or she can attack and remembers the history of previous
Assumption 5. The matrix
is injective.
We make assumption 5 without loss of generality. If the matrix
is not injective, then
we can remove redundant columns from it to form an injective matrix without changing the
capabilities of the attacker.
Using knowledge of the system model, sensor measurements yt, and the attacks et, the attacker
performs Kalman ﬁltering to calculate bxt, the MMSE estimate of the system state given all the
measurements up to time t. The attacker’s Kalman ﬁlter is separate from the system’s Kalman
ﬁlter, but from time t = −∞to t = −1, the two Kalman ﬁlters produce the same estimate since
et = 0 in that time interval. Given his or her knowledge, the attacker also calculates the state
estimate produced by the system’s Kalman ﬁlter. Since, by assumption 4, the attacker knows the
feedback matrix L, having knowledge of the system’s state estimate means that he or she knows
the input ut. Our assumptions state that the attacker knows the system model, sensor outputs,
and system LQG control inputs exactly. From the perspective of the system, this represents a
worst-case (i.e., most powerful) attacker. The case in which the attacker is not as powerful is the subject of future work.
The objective of the attacker is to move the system to a target state x∗while evading the χ2
detector over a ﬁnite time window from t = 0 to t = N. The attacker chooses an attack sequence
e0, . . . , eN to accomplish his or her goals, and the attack at time t, et, can only depend on the
attacker’s available information at time t. Let It denote the attacker’s information set at time
t. From the assumptions about the attacker’s knowledge, we see that It follows the classical
information pattern1 :
I0 = {˜y0} ,
It+1 = {It, ˜yt+1, et} .
In the time window from t = 0 to t = N, if an attack occurs, i.e., if et ̸= 0 for some t, the
attacker’s Kalman ﬁlter produces a different estimate than the system’s Kalman ﬁlter. This is
because, at time t, the attacker knows e0, . . . , et and ey0, . . . , eyt while the system only knows
y0, . . . , yt. The attacker’s Kalman ﬁlter becomes
bxt+1|t = Abxt + But + Γet,
bxt = bxt|t−1 + K
 eyt −Cbxt|t−1
The term bxt+1|t (equation (15)) is the MMSE estimate of xt+1 given information set It and
attack et, and the term bxt (equation (16)) is the MMSE estimate of xt given information set It.
bxt+1|t = E [xt+1|{It, et}] ,
bxt = E [xt|It] .
The attack sequence e0, . . . , eN changes the state estimate and the intermediate quantities
calculated by the system’s Kalman ﬁlter (e.g., the innovation νt). Let the superscript e denote the
variables associated with the system’s Kalman ﬁlter under attack, and let the superscript 0 denote
the variables in the situation that there is no attack (i.e., et = 0 for t = 0 to t = N). For example,
t is the innovation at time t when there is no attack up to time t (e0 = e1 = · · · = et = 0).
1The information set It is the information of the attacker that is in addition to the knowledge he or she has about the system
model. For example, even though it is not explicitly stated in the information pattern It, at time t = 0, the attacker knows
bxt|t−1 because of his or her Kalman ﬁlter.
July 21, 2016
When the system is under attack, the system’s Kalman ﬁlter, controller, and χ2 detector only
have access to the variables affected by the attack, i.e., the variables with superscript e. The χ2
detector calculates the statistic ge
t and compares ge
t against a threshold to determine
whether or not an attack has occurred.
To capture the attacker’s objectives, deﬁne the following quadratic cost function:
(xt −x∗)T Qt (xt −x∗) + νe
where Qt and Rt are positive deﬁnite symmetric matrices. The cost function J represents the
objectives of the attacker – the term (xt −x∗)T Qt (xt −x∗) penalizes deviation from the target
state x∗and the term νe
t penalizes having a large value in the detection statistic. The goal
of the attacker is to design an attack sequence e0, . . . , eN that minimizes J. Unlike standard
LQG cost functions (e.g., (8)), which directly penalize the use of control, the cost function (19)
does not directly penalize the attack et. Instead, J only penalizes the attack indirectly through
the detection statistic component νe
t . Thus, part of designing an optimal attack sequence
is to determine how an attack sequence affects the CPS’ Kalman ﬁlter, LQG controller, and χ2
The attacker chooses Qt and Rt to match his or her own objectives. Instead of directly studying
the effect of Qt and Rt on the attack performance, we consider the modiﬁed cost function
α (xt −x∗)T Qt (xt −x∗) + νe
where the attacker chooses α > 0 as a weighting parameter. An attacker who is more concerned
with achieving a low control error chooses a high value of α, and an attacker who is more
concerned with achieving a low detection statistic cost chooses a low value of α. Deﬁne the
detection statistic cost, Jd, and the normalized control error cost, Jc, as
(xt −x∗)T Qt (xt −x∗)
We are interested in how the attacker’s choice of α affects Jd and Jc.
July 21, 2016
D. Problem Statement
Consider the system (1). First, we determine the optimal cost
e0,...,eN J,
and ﬁnd a sequence of attacks e0, . . . , eN that achieves J∗. Second, we consider the modiﬁed
cost function Jα and derive expressions for the detection statistic cost, Jd, and the control error
cost, Jc, associated with the sequence of attacks e0, . . . , eN that minimizes Jα.
III. ATTACK EFFECT
Before ﬁnding an attack sequence that minimizes J, we determine how an attack sequence
affects the cyber-physical system. Speciﬁcally, we calculate the effect of an attack sequence on
the system’s Kalman ﬁlter, its LQG controller, and the χ2 attack detector. Let ϵt be the bias in
the innovation, νe
t , induced by the attack sequence e0, . . . , et, and let ωt+1 be the bias in the
system’s state estimate, bxe
t, induced by the attack sequence e0, . . . , et. That is, by deﬁnition, we
When the system is under attack, the system’s input is
From algebraic manipulation on the output of system (1) and equation (26), the sensor measurement at time t under attack is
t + γt + βt,
where γt = Pt−1
j=0 CAt−1−jBLωj+1, and βt = Ψet + Pt−1
j=0 CAt−1−jΓej. The term βt describes
how the attack sequence e0, . . . , et directly inﬂuences the sensor measurement. The term γt
describes how the attack sequence e0, . . . , et indirectly inﬂuences the sensor measurement through
the system’s controller input – the attack induces a bias in the system’s state estimate, and the
feedback control causes this bias to appear in the sensor measurement.
July 21, 2016
By inspection, we can treat γt and βt as the outputs of state-space dynamical systems. Deﬁning
the virtual state variable πt ∈Rn, we see that γt is the output to the dynamical system
πt+1 = Aπt + ABLωt,
γt = Cπt + CBLωt,
with π0 = 0. Deﬁning the virtual state variable ρt ∈Rn, we see that βt is the output to the
dynamical system
ρt+1 = Aρt + Γet,
βt = Cρt + Ψet,
with ρ0 = 0. Substituting equations (6),
(27) into equations (4) and (5), we have,
after algebraic manipulation,
t + (In −KC)(A + BL)ωt + K (βt + γt) .
Combining equation (25) and (30), we see that ωt is the output to the dynamical system
ωt+1= (In−KC)(A + BL)ωt + K (γt + βt) ,
An attack sequence e0, . . . , et does not affect the system’s Kalman ﬁlter estimate bx−1, which
means that ω0 = 0.
Combining equations (10), (25), (27), and the deﬁnition of ϵt, we have
ϵt = −C(A + BL)ωt + γt + βt.
Equation (32) along with P1, P2, and P3 describe how the attack sequence e0, . . . , et affects
the innovation νe
t and the χ2 attack detector. Figure 1 shows the block diagram of the system
relating the attack et to the innovation bias ϵt. The innovation bias ϵt is the output of a dynamical
system that takes et as the input and consists of the interconnection between P1, P2, and P3.
Deﬁne the virtual state variable θt =
. Then, the state-space representation
Aθt + bBet,
ϵt = bCθt + bDet,
July 21, 2016
(In −KC)A + BL
with θ0 = 0 describes the relationship between et and ϵt. That is the system in equation (33)
describes how an attack sequence e0, . . . , et affects the χ2 detector. In addition, since the attacker
knows the state at time t = 0, θ0 = 0, and the attack et for all t, he or she can determine the
value of θt for all t. In particular, the attacker knows the estimate bias ωt. Thus, system (33) also
describes how an attack sequence e0, . . . , et affects the system’s Kalman ﬁlter and the system’s
LQG controller.
−C(A + BL)
Fig. 1: The interconnection of P1, P2, and P3 describes the effect of an attack on the χ2 detection statistic.
IV. OPTIMAL ATTACK STRATEGY
In this section, we prove a sufﬁcient condition on the matrices Qt and Rt for the existence
of a minimum to the cost function J and the uniqueness of the minimizing attack sequence in
the time interval t = 0, . . . , t = N −1 (the attack eN may not be unique), and we ﬁnd a costminimizing attack sequence e0, . . . , eN. Unless otherwise noted, let variables appearing without
a superscript denote quantities from the attacker’s Kalman ﬁlter, and let variables appearing with
superscript e or 0 denote quantities from the system’s Kalman ﬁlter. The term bxt refers to the
attacker’s MMSE state estimate, deﬁned in equation (18) as bxt = E [xt|It], which is computed by
July 21, 2016
the attacker’s Kalman ﬁlter following equation (15) and (16). The term νt denotes the attacker’s
innovation at time t,
νt = eyt −Cbxt|t−1,
where, following (17), bxt|t−1 = E [xt|{It−1, et−1}].
A. Optimal Solution
We ﬁnd an attack sequence e0, . . . , eN that minimizes the cost function J. Deﬁne
Further deﬁne
(In −KC)A + BL
Theorem 1 (Optimal Attack Strategy). An attack sequence e0, . . . , eN that minimizes J is
†  DTFN (CξN + MνN)
 DTFtD + BTQt+1B
−1   DTFtC + BTQt+1A
ξt + DTFtMνt
for t = 0, . . . , N −1. The matrix Qt is given recursively backward in time by
Qt =CTFtC + ATQt+1A −
 DTFtC + BTQt+1A
T  DTFtD + BTQt+1B
 DTFtC + BTQt+1A
July 21, 2016
with terminal condition
QN = CTFNC −CTFND
Corollary 1. If Qt and Rt are positive deﬁnite for all t = 0, . . . , N, then the optimal cost J∗
exists, and, for t = 0, . . . , N −1, the optimal attack et is unique.
The optimal attack eN may not be unique, and equation (40) provides one possible attack that
achieves the minimum J∗. Theorem 1 states that the optimal attack strategy is a linear feedback
of bxt, θt, νt, x∗, and bx0
t. Formally, we show that the variables bxt, θt, νt, and bx0
t can be perfectly
obtained from It.
Lemma 1. Given It, the attacker can perfectly obtain the values of bxt, θt, νt, and bx0
The proof of Lemma 1 is in Appendix A.
B. Optimal Solution: Existence
Before proving Theorem 1, we provide intermediate results required to prove the sufﬁcient
condition for the existence of the optimal attack for all t = 0, . . . , N and the uniqueness of the
optimal attack for t = 0, . . . , N −1. Proofs of the intermediate results are found in the appendix.
Lemma 2. The matrix Qt is positive semideﬁnite for all t = N, N −1, . . . , 0. Moreover, for
t = N −1, . . . , 0, the matrix Qt follows the backward recursive relationship
t FtXt + YT
 DTFtD + BTQt+1B
−1  DTFtC + BTQt+1A
 DTFtD + BTQt+1B
−1  DTFtC + BTQt+1A
Lemma 3. The matrix DTFtD + BTQt+1B is positive deﬁnite for all t = N −1, . . . , 0.
Lemma 4. For all ξN ∈R6n and for all νN ∈Rp, DTFN (CξN + MνN) ∈R
July 21, 2016
C. Proof of Theorem 1
We ﬁrst manipulate the cost function J. Let nt be the error of estimating xt from all It
(i.e., xt = bxt + nt). The estimate bxt and error nt are conditionally Gaussian and conditionally
orthogonal given It. From properties of conditional Gaussian processes and the Kalman Filter ,
we know that the nt are i.i.d. N
bP = P −PCTΣ−1
Substituting xt = bxt + nt into the cost function J, we have
(bxt −x∗)T Qt (bxt −x∗) + νe
The attacker’s Kalman ﬁlter error does not depend on the input et, so we ﬁnd the optimal attack
sequence by solving
e0,...,eN J,
From the attacker’s Kalman ﬁlter equations, the dynamics of bxt follow
bxt+1 =Abxt + BL
t + Ωθt + KΨet
+ Γet + Kνt+1,
where we used that bxe
t + ωt+1 and ωt+1 = Ωθt + KΨet. The dynamics of θt are given by
equation (33). To proceed, we require the following intermediate result:
Lemma 5. The attacker’s innovation νt, deﬁned in (35), satisﬁes νt = ν0
t , where ν0
system’s innovation at time t in the case that there had been no attack (i.e., in the case that
e0, . . . , et = 0).
The proof of Lemma 5 is provided in Appendix E. Then, the dynamics of ξt are
ξt+1 = Aξt + Bet + Kνt+1.
Using Lemma 5 and equation (33), we have
ζt = Cξt + Det + Mνt.
July 21, 2016
Substituting for ξt, ζt, and ζ∗, we rewrite J as J = E
We now prove Theorem 1.
Proof (Theorem 1): We resort to dynamic programming. Deﬁne J
t to be the optimal return
function at time t for information It. We begin with t = N:
Substituting equation (52) for ζN and setting the ﬁrst derivative (with respect to eN) of the right
hand side of (53) equal to 0, we have that the optimal eN satisﬁes
eN = DTFN (CξN + MνN) .
The matrix DTFND is positive semideﬁnite since FN is positive deﬁnite. A sufﬁcient condition
for the existence of an optimal eN is DTFN (CξN + MνN) ∈R
 , which was
shown in Lemma 4. Then, an optimal eN is
†  DTFN (CξN + MνN)
Substituting equation (55) into (53), we ﬁnd, after algebraic manipulation,
NQNξN + 2ξT
NRNνN + νN
TSNνN + ΠN,
QN = CTFNC −CTFND
RN = CTFNM −CTFND
SN = RN −RNΨ
and ΠN = 0.
Following dynamic programming, we proceed to t = N −1:
N−1FN−1ζN−1
ξN−1 = AξN−1 + BeN−1.
July 21, 2016
After substitution of equation (51) and the Kalman ﬁlter equations into (56) and performing
algebraic manipulation, we have
N−1QNξN−1 + ΠN + trace
 KTQNK + 2KTRN + SN
Thus, we have
JN−1 = ΠN−1 + inf
N−1QNξN−1 + ζT
N−1FN−1ζN−1
ΠN−1 = trace
 KTQNK + 2KTRN + SN
Then, the optimal eN−1 is given by
 DTFN−1D + BTQNB
−1   DTFN−1C + BTQNA
ξN−1 + DTFN−1MνN−1
Note that a sufﬁcient condition for the existence of a minimizing eN−1 is the positive deﬁniteness
 DTFN−1D + BTQNB
 , which was shown in Lemma 3.
We substitute equation (64) into (62) and perform algebraic manipulations so that J
expressed in the form
N−1QN−1ξN−1 + 2ξT
N−1RN−1νN−1 + νN−1
TSN−1νN−1 + ΠN−1.
We ﬁnd the recurrence relations for the matrices in the above equation by grouping together the
appropriate terms of J
N−1. The matrix QN−1 follows the recursion
QN−1 = CTFN−1C + ATQNA−
 DTFN−1C + BTQNA
T (DTFN−1D + BTQNB)−1  DTFN−1C + BTQNA
The matrix RN−1 follows
RN−1 = CTFN−1M −
 DTFN−1C + BTQNA
T  DTFN−1D + BTQNB
−1 DTFN−1M. (67)
The matrix SN−1 follows
SN−1 = RN−1 −RN−1Ψ
 DTFN−1D + BTQNB
−1 ΨTRN−1.
July 21, 2016
In each following iteration for t = N −2, . . . , 0, the optimal attack et has the same form as
equation (64) where we replace N −1 with t. The matrices involved in the return function J
follow equations (63) and (66)–(68) where we replace N −1 with t.
The proof of Theorem 1 states that, at each step t of dynamic programming, if the matrices
Qt and Rt are positive deﬁnite, then there exists an optimal et. Since there exists an optimal et
for all steps t = 0, . . . , N, the matrices Qt and Rt being positive deﬁnite is a sufﬁcient condition
for the existence of an optimal attack sequence e0, . . . , eN and an optimal cost J∗. We calculate
the optimal cost J∗as 
We express the optimal cost in terms of the (unconditional) statistics of bx0|−1, the attacker’s
estimate of x0 at time −1, i.e., right before beginning the attack. The quantity bx0|−1 is (unconditionally) distributed as N (x0, Σ0). Since A + BL is stable by deﬁnition, from the system and
controller equations ((1) and (6)) and the Kalman ﬁlter equations ((2) – (5)), we have
t→∞(A + BL)tx−∞= 0,
and Σ0 is the unique solution to the equation
Σ0 = (A + BL)
 Σ0 + KΣνKT
(A + BL)T.
ξ0 = Σξ0 + ξ∗ξ∗T,
where Σξ0 =
, and ξ∗T =
the cost J∗is
 KTQtK + 2KTRt + St
V. WEIGHTED COST FUNCTION PERFORMANCE
This section studies the effect of the relative weighting between the control error component
and detection statistic energy component of the cost function on the performance of the optimal
attack. Consider the modiﬁed function given by (20). For any α > 0, Theorem 1 gives the
sequence of attacks e0, . . . , eN that minmizes Jα, which has the general form
eα,t = Lα,tξt + Oα,tνt.
July 21, 2016
We study how the attacker’s choice of α affects the values of Jd and Jc, and we analyze the
asymptotic behavior of Jd and Jc as alpha approaches 0 and ∞, respectively.
A. α-Weighted Performance
We derive expressions for the detection statistic cost and the normalized control error cost
when the attack has the form of equation (74) (i.e., when the attack is the optimal attack for the
α-weighted cost function, Jα). Let Jα,d and Jα,c be the values of Jd and Jc when the attack is
Theorem 2 (α-Weighted Performance). Let e0, . . . , eN be the sequence of attacks that minimizes
Jα given by equation (74). Then, the detection statistic cost, Jα,d, and the normalized control
error cost, Jα,c, are given as
Jα,d = trace
KT eQα,tK + 2KT eRα,t + eSα,t
Jα,c = trace
 KTQα,tK + 2KTRα,t + Sα,t
The matrices eQα,t and Qα,t are given by the recursive relations
eQα,t = (A + BLα,t)T eQα,t+1 (A + BLα,t) +
eC + ΨLα,t
eC + ΨLα,t
Qα,t = (A + BLα,t)T Qα,t+1 (A + BLα,t) + HTQtH,
with terminal conditions eQα,N+1 = Qα,N+1 = 0. The matrices eRα,t, eSα,t, Rα,t, and eSα,t are
eRα,t = (A + BLα,t)T eQα,t+1BOα,t +
eC + ΨLα,t
Rt (Ip + ΨOα,t) ,
α,tBT eQα,t+1BOα,t + (Ip + ΨOα,t)T Rt (Ip + ΨOα,t) ,
Rα,t = (A + BLα,t)T Qα,t+1BOα,t,
α,tBTQα,t+1BOα,t.
Proof (Theorem 2): We derive equation (76), the expression for Jα,c. The derivation of the
expression for Jα,d follows similarly. Substituting xt = bxt + nt, as in the proof of Theorem 1,
July 21, 2016
We evaluate Jα,c = E
recursively backward in time. Deﬁne Jα,c,t to be the
cost-to-go function for Jα,c when the attack is eα,t and the attacker’s information is It.
We begin at time t = N, for which we have
Jα,c,N = E
NHTQNHξN|IN
Note that, at time t = N, the attack eN does not affect the cost-to-go function, since ξN does
not depend on eN. Rearranging Jα,c,N, we have
Jα,c,N =ξT
NQα,NξN + 2ξT
NRα,NνN + νT
NSα,NνN + ΠN,
where Qα,N = HTQNH, Rα,N = 0 (Rα,N ∈R6n×p), Sα,N = 0 (Sα,N ∈Rp×p), and ΠN = 0.
Proceeding to t = N −1, we have, following (74), that the attack is
eα,N−1 = Lα,N−1ξN−1 + Oα,N−1νN−1.
The cost-to-go function at t = N −1 is
Jα,c,N−1 = E
N−1HTQN−1HξN−1 + Jα,c,N
Substituting ξα,N−1 = AξN−1 + Beα,N−1 into (87) and evaluating the conditional expectation,
Jα,c,N−1 = ξT
N−1HTQN−1HξN−1 + ΠN−1 + ξ
N−1Qα,NξN−1,
ΠN−1 =ΠN + trace
 KTQα,NK + 2KTRα,N + Sα,N
After further substituting for eα,N−1 into (88) and performing algebraic manipulations, we have
Jα,c,N−1 = ΠN−1 + ξT
N−1Qα,N−1ξN−1 + 2ξT
N−1Rα,N−1νN−1 + νT
N−1Sα,N−1νN−1,
July 21, 2016
Qα,N−1 = (A + BLα,N−1)T Qα,N (A + BLα,N−1) + HTQN−1H,
Rα,N−1 = (A + BLα,N−1)T Qα,NBOα,N−1,
Sα,N−1 =OT
α,N−1BTQα,NBOα,N−1.
To complete the proof, we iterate through all t = N −2, . . . , 0 and compute Jα,c,t. We ﬁnd
the same relations as described by equations (89), (91)-(93), with t replacing N −1. The control
error cost is given as
Computing the expectation in the above expression and expressing the results in terms of the
statistics of bx0|−1 (similar to the procedure for calculating the optimal cost in Section IV-C), we
derive equation (76).
Theorem 2 provides explicit expressions for the normalized control error cost and detection
statistic cost incurred by an attack sequence2. Using Theorem 2, the attacker can compute Jα,d
and Jα,c, the attacker can determine how the parameter α, the relative weighting between the
control error component and the detection statistic component of the cost function, affects the
performance of the attack. In Section VI, we provide a numerical example in which we calculate
Jα,d and Jα,c as a function of α.
B. Asymptotic Weighting Performance
The previous subsection derives expressions for Jα,d and Jα,c for arbitrary values of α > 0. In
this section, we consider the detection statistic cost and control error cost incurred by the attack
sequence minimizing Jα as α approaches 0 and as α approaches ∞. Let
J0,d = lim
α→0+ Jα,d ,
J∞,d = lim
and let J0,c and J∞,c be deﬁned similarly. In order to compute J0,d, J∞,d, J0,c, and J∞,c, we
need to compute e0,t and e∞,t. The attack (sequence) e0,t is the attack sequence e0, . . . , eN that
minimizes Jd, and the attack (sequence) e∞,t is the attack sequence e0, . . . , eN that minimizes
2Equations (75) and (76) are valid for all attack sequences of the form eα,t = Lα,tξt + Oα,tνt (i.e., the matrices Lα,t and
Oα,t do not have to come from the optimal attack expressions in Theorem 1).
July 21, 2016
Jc. From a practical perspective, an attacker who chooses a weighting parameter α vanishing to
0 is one who wishes to minimize the sum of the detection statistic (i.e., an attacker who only
wishes to avoid detection), and an attacker who chooses a weighting parameter α approaching
∞is an attacker who wishes to minimize the sum of the control error (i.e., an attacker who
only wishes to achieve the control objective and does not care about avoiding detection).
Solving for the attack sequence that minimizes Jd is equivalent to solving for the attack
sequence that minimizes J (equation (19)) with Qt = 0. In this case, we cannot use Theorem 1
directly to solve for the optimal attack sequence since Theorem 1 presupposes that Qt, Rt ≻
0. The same restriction applies to ﬁnding the attack sequence that minimizes Jc. Instead, we
separately solve for the optimizing attack sequence when the weighting parameter α is equal
to either 0 or ∞. In equations (73), (75), and (76), the term Σ∗
ξ0 captures the dependence of
the optimal cost, detection cost, and normalized control cost, respectively, on the target state x∗.
Intuitively, a target that is farther away results in a higher optimal cost. That is, if, there are two
separate target states x∗
2, and, x∗
1 for some c > 1, then the cost associated with
target state x∗
2 is at least the cost associated with the target state x∗
Theorem 3 (Asymptotically Weighted Optimal Attacks). For α = 0 and α = ∞, the optimal
attack strategy has the form
eα,t = Lα,tξt + Oα,tνt.
For α = 0, and for t = 0, . . . , N, the matrices L0,t and O0,t follow
 ΨTRtΨ + BTVt+1B
ΨTRt eC + BTVt+1A
 ΨTRtΨ + BTVt+1B
where Vt follows the recursion
Vt = eCTRt eC + ATVt+1A −
ΨTRt eC + BTVt+1A
T  ΨTRtΨ + BTVt+1B
ΨTRt eC + BTVt+1A
with VN+1 = 0.
For α = ∞, and for t = 0, . . . , N, the matrices L∞,t and O0,t follow
† BTWt+1A,
July 21, 2016
where Wt follows the recursion
Wt =HTQtH + ATWt+1A −ATWt+1B
† BTWt+1A,
with WN+1 = 0.
The main difference between Theorem 1 and Theorem 3 is that, when the weighting parameter
α is either 0 or ∞, the optimal attack sequence over the time interval t = 0, . . . , t = N −1
may not be unique. Before we prove Theorem 3, we require the following intermediate result,
the proof of which is found in the appendix.
Lemma 6. For all ξt ∈R6n, BTWt+1Aξt ∈R
We now provide the proof for Theorem 3 for the case of α = ∞; the proof for the case of α = 0
follows similarly.
Proof (Theorem 3): We consider the case of α = ∞and ﬁnd the sequence of attacks that
e0,...,eN E
(xt −x∗)T Qt (xt −x∗)
Substituting xt = bxt + nt into equation (102), we have that an attack sequence that minimizes
the cost function (102) is an attack sequence that minimizes J∞,c = E
resort to dynamic programming to ﬁnd the minimizing attack sequence.
∞,c,t to be the optimal return function at time t for information It. At time t = N
NWNξN + ˘ΠN,
where WN = HTQNH, and ˘ΠN = 0. Note that, at time t = N, the attack eN does not affect
the optimal return function, so we let eN = 0.
Proceeding to t = N −1, we have
∞,c,N−1 = inf
N−1HTQN−1HξN−1 + J
= ˘ΠN−1 + ξT
N−1HTQN−1HξN−1+
eN−1 (AξN−1 + BeN−1)T WN (AξN−1 + BeN−1) ,
July 21, 2016
where ˘ΠN−1 = ˘ΠN + trace
. From equation (106), we have that e∞,N−1 is given
e∞,N−1 = −
† BTWNAξN−1.
A sufﬁcient condition for the existence of an optimal e∞,N−1 is BTWNAξN−1 ∈R
which is satisﬁed according to Lemma 6. The optimal return function is
∞,c,N−1 = ξT
N−1WN−1ξN−1 + ˘ΠN−1,
WN−1 =HTQN−1H + ATWNA −ATWNB
To complete the proof, we iterate through all t = N −2, . . . , 0 and compute e∞,t. We ﬁnd the
same relations as described by equations (107)-(109), with t replacing N −1. This completes
the proof for the case of α = ∞, and the case of α = 0 follows similarly.
Theorem 3 provides expressions for the optimal attack sequence when the weighting parameter
α is either 0 or ∞. For both of these choices of α, the optimal attack has the form given in
equation (74). Thus, combining the results of Theorem 3 with the results of Theorem 2, we ﬁnd
expressions for J0,d, J∞,d, J0,c, and J∞,c. The quantities J0,d and J∞,c are lower bounds on Jd
and Jc respectively. The quantity J∞,d is the detection cost associated with an attack strategy that
only seeks to minimize the control error cost. The quantity J0,c is the control error cost associated
with an attack strategy that only seeks to minimize the detection cost. In Section VI, we provide
a numerical example in which we calculate these quantities and compare these quantities against
Jα,d and Jα,c for arbitrary values of α.
VI. NUMERICAL EXAMPLE
We demonstrate the attack strategy using a numerical example of a remotely controlled
helicopter under attack. Reference provides a state space model of the helicopter’s dynamics
linearized about an equilibrium point. The dynamics are described in 10 state variables: forward
velocity (x(1)), vertical velocity (x(2)), pitch rate (x(3)), pitch (x(4)), longitudinal ﬂapping (x(5)),
lateral velocity (x(6)), roll rate (x(7)), yaw rate (x(8)), roll angle (x(9)), and lateral ﬂapping (x(10)).
The helicopter has four actuator inputs: the collective (u(1)), the longitudinal cyclic (u(2)), the tail
rotor pedal (u(3)), and the lateral cyclic (u(4)). Due to space constraints, we do not provide the
July 21, 2016
numerical values of the A and B matrices of the model here and instead refer the reader to .
In our numerical example, the system has a sensor measuring each of the 10 state variables,
so C = I10. We use the following statistical properties in the numerical simulation: xt0 = 0,
Σx = 5I10, Σv = 10−3I10 and Σw = 10−4 diag(6, .1, 2, 2, .1, 6, 2, 2, 2, .1), where diag(a1, . . . , aq)
is a q by q matrix with diagonal elements a1, . . . , aq.
The attacker can attack the tail rotor input (u(3)) and the lateral cyclic input (u(4)) and can
change the values of the sensors measuring vertical velocity, lateral velocity, roll rate and lateral
ﬂapping. The attacker’s target state is
We consider an attacker that only wishes to manipulate the vertical velocity (x(2)) and lateral
velocity (x(6)), so, the attacker’s Qt matrix is given as
Qt = diag( .1,
For the matrix Rt, we have Rt = Σ−1
ν , which can be calculated from the statistical properties of
the system using the Kalman ﬁlter equations.
The system starts running at t = −200, and the attack occurs over the time period t = 0 to
t = 200. The effect of the attack on the vertical and lateral velocities of the helicopter is shown
in Figure 2, and the effect of the attack on the detection statistic gt is shown in Figure 3. As
Fig. 2: Effect of the attack et on the system states. The black dotted line denotes the target state x∗. Top: state x(2)
(vertical velocity) versus time. Bottom: state x(6) (lateral velocity) versus time.
July 21, 2016
Fig. 3: Effect of the attack et on the detection statistic gt.
Figure 2 shows, from time t = −200 to t = −1, the system’s LQG controller maintains the
equilibrium point for the helicopter. Then, from time t = 0 to t = −1, the attacker successfully
uses the strategy given by Theorem 1 (with α = 1) to move the system to the desired target
state. The attack is effective at accomplishing the control objective even though the system’s
LQG controller attempts to bring the helicopter back to the equilibrium point. Figure 3 shows
that the optimal attack does not cause a noticeable increase in the detection statistic.
By choosing the relative weighting between the control error component and the detection
statistic energy component of the cost function, the attacker changes the performance of the
optimal attack. We consider the remotely controlled helicopter under attack when the attacker
places weighting parameter α > 0 on the control error component of the cost function. First,
using Theorem 1, we compute the optimal attack sequence for values of α ranging from 10−6
to 106. Then, using Theorem 2, we compute the detection statistic cost Jd and the normalized
control error cost Jc for the optimal attack sequence associated with each value of α. From
Theorem 3, we compute the values of J0,d, J∞,d, J0,c, and J∞,c for the helicopter under attack.
Figure 4 shows that, as the attacker increases the weighting on the control error component, the
optimal attack has lower control error cost but higher detection cost. As α approaches 0, the two
cost components Jα,d and Jα,c approach the bounds J0,d and J0,c calculated using Theorem 2 and
Theorem 3. Similarly, as α approaches ∞, the two cost components Jα,d and Jα,c approach J∞,d
and J∞,c. From a practical perspective, Theorem 2 tells an attacker how the weighting parameter
α affects the detection statistic and the control error. This allows the attacker to choose a value
of α that best suits his or her goals.
July 21, 2016
Fig. 4: Effect of weighting parameter α on Jd (left) and Jc (right).
VII. CONCLUSION
In this paper we have studied an attack strategy against a cyber-physical system in which
an attacker wishes to move the system to a target state while avoiding the system’s χ2 attack
detector. We have formulated a quadratic cost function that captures the attacker’s objectives;
the cost function is the sum of components penalizing the distance from the target state and
the energy of the system’s detection statistic, respectively. Using dynamic programming, we
have found an optimal sequence of attacks, which is a linear feedback of the attacker’s state
estimate, that minimizes this cost function. Moreover, we have derived expressions for the
control error component and the detection statistic component of the cost as a function of a
cost weighting parameter chosen by the attacker. Finally, we have provided a numerical example
that demonstrates the attack strategy and have shown a trade-off between control performance
and detection avoidance. Future work includes determining optimal attack strategies for a less
powerful attacker, e.g., an attacker who does not exactly know the system model or an attacker
who does not exactly know the sensor output.
APPENDIX A
PROOF OF LEMMA 1
Proof: By deﬁnition, (equation (18)), we have bxt = E [xt|It], so bxt can be perfectly obtained
from It. Similarly, from equation (35), we have νt = eyt −CE [xt−1|{It−1, et−1}], which means
July 21, 2016
that νt can be perfectly obtained from {It−1, et−1, eyt} = It.
From the dynamical system in equation (33), we know that
At−1−j bBej,
where θ0 = 0. From equation (14) we have
{e0, e1, . . . , et−1} ⊂It,
so the information set It exactly determines θt.
Since one can run a Kalman ﬁlter, one can also run a Kalman ﬁlter while ignoring the input
et (i.e., perform Kalman ﬁltering treating all inputs as et = 0). This process computes bxe
estimate produced by the system’s Kalman ﬁlter. From the Kalman ﬁltering equations, we know
t = (A + BL) bxe
t −C(A + BL)bxe
Substituting equations (25) and (33) into the left hand side of (111) and performing algebraic
manipulation, we have
t = (A + BL)bxe
t−1 −Ωθt +
 eyt −C(A + BL)bxe
t−1 is exactly determined given ey0, . . . , eyt−1 and e0, . . . , et−1, which are contained in It.
In addition, we have eyt ∈It. By equation (112), the information set It exactly determines bx0
APPENDIX B
PROOF OF LEMMA 2
Proof: We resort to induction.
Base Case: We show that QN ⪰0. By algebraic manipulation on equation (43), we have
By deﬁnition, FN ≻0, which means that, by equation (113), QN ⪰0.
Induction Step: In the induction step, we assume that Qt+1 ⪰0 and show that Qt ⪰0. The
t FtXt + YT
follows from algebraic manipulation of (42). By deﬁnition, Ft ≻0, and, by the induction
hypothesis, Qt+1 ⪰0. Thus, by equation (114), Qt ⪰0.
July 21, 2016
APPENDIX C
PROOF OF LEMMA 3
Proof: We resort to induction.
Base Case: In the base case, we show that DTFN−1D + BTQNB is positive deﬁnite. We ﬁrst
show that there exists TN ⪰0 such that
QN = HTQNH + TN.
From the structure of C and Ft, we have, for all t = 0, . . . , N,
CTFtC = HTQtH + eCTRt eC.
Substituting (116) into (43) and performing algebraic manipulations, we have
QN = HTQNH + e
XN = eC −Ψ
† ΨTRN eC.
Since RN ≻0, TN = e
Proceeding, we note that
which means that, for all t = 0, . . . , N,
BTHTQtHB = (Γ + BLKΨ)T Qt (Γ + BLKΨ) .
Then, substituting for (115), (119), and the deﬁnitions of B, D, and FN−1, we have
DTFN−1D + BTQNB = eBTFN−1 eB + BTTNB,
where eB =
(Γ + BLKΨ)T
. We now show that eB has full column rank. By contradiction, suppose it does not have full column rank. Then ∃µ ̸= 0 such that
July 21, 2016
Equation (121) implies that, for some µ ̸= 0,
µ = 0, which contradicts Assumption 5.
Since eB has full column rank, FN−1 ≻0 (by deﬁnition), and TN ⪰0, equation (119) shows that
DTFN−1D + BTQNB ≻0.
Induction Step: In the induction step, we assume that DTFtD + BTQt+1B ≻0 and show that
DTFt−1D + BTQtB ≻0. We ﬁrst show that there exists Tt ≻0 such that
Qt = HTQtH + Tt.
From equation (114), we have Qt = X T
t Qt+1Yt. Substituting equation (116) into (114)
and performing algebraic manipulations, we have
Qt = HTQtH + e
Xt = eC −Ψ
 DTFtD + BTQt+1B
ΨTRt eC + BTQt+1A
By Lemma 2, Qt+1 ⪰0 for t = N −1, . . . , 0, and, by deﬁnition, Rt ≻0. Thus, Tt = e
t Qt+1Yt ⪰0. Then, substituting for (119), (122), and the deﬁnitions of B, D, and Ft−1, we
DTFt−1D + BTQtB = eBTFt−1 eB + BTTtB,
which shows that DTFt−1D + BTQtB ≻0.
APPENDIX D
PROOF OF LEMMA 4
Proof: We show that N
⊆N (FND). Note that DTFND = ΨTRNΨ, and
N (FND) = N (RNΨ). Let µ ∈N
, and, by contradiction, suppose µ /∈N (RNΨ).
Then RNΨµ ̸= 0, which means that Ψµ ̸= 0. Since RN ≻0 and Ψµ ̸= 0, we have
µTΨTRNΨµ ̸= 0,
which means that
ΨTRNΨµ ̸= 0.
This is a contradiction since µ ∈N
. Thus, we have N
July 21, 2016
For any matrix M, N (M) = R⊥ M T
, where R⊥denotes the orthogonal range space
of a matrix. Thus, we have R⊥ DTFND
, which means that R
. By construction, DTFN (CξN + MνN) belongs to R
, so it must also
belong to R
APPENDIX E
PROOF OF LEMMA 5
From equation (16), we have that the attacker’s innovation is
νt = eyt −C
 Abxt−1 + BL
By deﬁnition, the system’s innovation when there is no attack is
t−1 + BLbx0
We compute eyt using the system in equation (1):
CAt−1−j (Γej + ωj+1) .
From the Kalman Filtering equations for both the system and attacker, we have
t−1 = At−1bx0
At−2−j  BLbx0
bxt−1 = At−1bx0 +
+ Kνj+1 + Γej
At time t = 0, the attack e0 does not affect the internal state of the system x0, and the attacker
Kalman ﬁlter uses ey0 to compute bx0. Since ey0 is not affected by the attack e0 (i.e., ey0 = y0
have bx0 = bx0
0. Following equations (129) and (130), we have
bxt−1 =bx0
Γej + BLωj+1 + K
Substituting equations (128) and (131) into equation (126), we have, after algebraic manipulation,
July 21, 2016
At time t = 0, both the attacker’s and system’s Kalman ﬁlter have the same prediction bx0|−1
because et = 0 for t < 0. Since ey0 = y0
0, we have ν0 = ey0 −Cbx0|−1 = ν0
0. Changing the index
of summation in equation (132) and using the fact that ν0 = ν0
0, we have
We now resort to induction to show that νt = ν0
t . In the base case, we have already shown
that ν0 = ν0
0. In the induction step, we assume that νj = ν0
j for j = 0, . . . , t −1. Then, by
equation (133), we have νt = ν0
APPENDIX F
PROOF OF LEMMA 6
We ﬁrst show that Wt ⪰0 for t = 0, . . . , N + 1. We resort to induction.
Base Case: In the base case, we have WN+1 = 0 ⪰0.
Induction Step: In the induction step, we assume that Wt+1 ⪰0 and show that Wt ⪰0.
By (101), we have
Wt = HTQtH + ATWt+1A −ATWt+1B
† BTWt+1A,
† BTWt+1A
† BTWt+1A
Since Qt ≻0 by deﬁnition and Wt+1 ⪰0 by the induction hypothesis, we have Wt ⪰0.
We now prove Lemma 6 by showing that N
⊆N (Wt+1B). Let
Then, we have
µTBTWt+1Bµ = 0,
The matrix W
t+1 exists since Wt+1 ⪰0. From the non-negativity property of norms, equation (137) gives
t+1Bµ = 0,
July 21, 2016
which means Wt+1Bµ = 0 and µ ∈N (Wt+1B).
For any matrix M, N (M) = R
, where R⊥denotes the orthogonal space of a
matrix. Thus, we have R⊥ BTWt+1B
⊆R⊥ BTWt+1
, which means that R
. By construction, for any ξt ∈R6n, BTWt+1Aξt ∈R
, so we have
BTWt+1Aξt ∈R