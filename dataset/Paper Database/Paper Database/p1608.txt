Give to AgEcon Search
The World’s Largest Open Access Agricultural & Applied Economics Digital Library
This document is discoverable and free to researchers across the
globe due to the work of AgEcon Search.
Help ensure our sustainability.
AgEcon Search
 
 
Papers downloaded from AgEcon Search may be used for non-commercial purposes and personal study only.
No other use, including posting to another Internet site, is permitted without permission from the copyright
owner (not AgEcon Search), or as allowed under the provisions of Fair Use, U.S. Copyright Act, Title 17 U.S.C.
No endorsement of AgEcon Search or its fundraising activities by the author(s) of the following work or their
employer(s) is intended or implied.
The Stata Journal 
4, Number 3, pp. 290–311
Implementing matching estimators for average
treatment eﬀects in Stata
Alberto Abadie1
Harvard University
David Drukker
Jane Leber Herr
UC Berkeley
Guido W. Imbens2
UC Berkeley
This paper presents an implementation of matching estimators for
average treatment eﬀects in Stata. The nnmatch command allows you to estimate
the average eﬀect for all units or only for the treated or control units; to choose
the number of matches; to specify the distance metric; to select a bias adjustment;
and to use heteroskedastic-robust variance estimators.
Keywords: st0072, nnmatch, average treatment eﬀects, matching, exogeneity, unconfoundedness, ignorability
Introduction
This paper provides a brief introduction to matching estimators for average treatment
eﬀects and describes the new Stata command nnmatch which implements these estimators. The command implements nearest-neighbor matching estimators for average
treatment eﬀects for either the overall sample or a subsample of treated or control
units. While simple matching estimators have been widely used in the program evaluation literature, nnmatch implements the speciﬁc matching estimators developed in
Abadie and Imbens , including their bias-corrected matching estimator. Following Abadie and Imbens , nnmatch allows individual observations to be used as
a match more than once. Compared with matching without replacement, this method
generally lowers the bias but increases the variance.
While nnmatch provides many options for ﬁne-tuning the estimators, a key feature
of the program is that it requires few decisions by the researcher. The default settings
are generally suﬃcient for many applications. Although theoretically matching on multidimensional covariates can lead to substantial bias, the matching approach combined
with the bias adjustment implemented in nnmatch often leads to estimators with little
remaining bias.
This paper draws heavily on the more theoretical discussion about matching in
Abadie and Imbens and the survey by Imbens . See also Cochran and
Rubin , Rosenbaum and Rubin , Rubin and Thomas , Rosenbaum
 , Heckman, Ichimura, and Todd , and Wooldridge for more background.
1Abadie gratefully acknowledges ﬁnancial support through NSF grant SES-0350645.
Electronic
correspondence: alberto .
2Imbens gratefully acknowledges ﬁnancial support through NSF grant SES-0136789.
Electronic
correspondence: .
c⃝2004 StataCorp LP
A. Abadie, D. Drukker, J. L. Herr, and G. W. Imbens
We are interested in estimating the average eﬀect of a binary treatment on a continuous
or discrete scalar outcome. For individual i, i = 1, . . . , N, with all units exchangeable,
let {Yi(0), Yi(1)} denote the two potential outcomes: Yi(1) is the outcome of individual
i when exposed to the treatment, and Yi(0) is the outcome of individual i when not
exposed to the treatment. For instance, the treatment could be participation in a jobtraining program, and the outcome could be income or wages.
If both Yi(0) and Yi(1) were observable, the eﬀect of the treatment on unit i would
be directly observable as Yi(1) −Yi(0). We could then use this information for the full
sample N to either estimate the population average treatment eﬀect (PATE)
Y (1) −Y (0)
or calculate the sample average treatment eﬀect (SATE)
τ sample = 1
Yi(1) −Yi(0)
Whether the average treatment eﬀect in the population (PATE) or the sample (SATE)
is of interest depends on the research question. Inference on the PATE is made with
respect to another sample drawn from the same population; inference on the SATE is
made conditional on the sample at hand. (Although this does not aﬀect the choice of
estimator, for this reason, the standard error of the estimated PATE is generally larger
than the standard error of the estimated SATE.) See Imbens for a discussion of
the diﬀerence between these two estimands.
An example may help to illustrate the meaning of the two estimands. While the
SATE is useful for judging how a job-training program has aﬀected a particular group of
participants, the PATE can be used to evaluate whether another group of participants
drawn from the same population is likely to beneﬁt from the program. We can also
deﬁne the population and sample average treatment eﬀect for the subpopulation of the
treated, PATT and SATT,
τ pop,t = E
Y (1) −Y (0)|W = 1
and τ sample,t = 1
Yi(1) −Yi(0)
and the population and sample average treatment eﬀect for the controls, PATC and
τ pop,c = E
Y (1) −Y (0)|W = 0
and τ sample,c = 1
Yi(1) −Yi(0)
where Wi, for Wi ∈{0, 1} indicates the treatment received, and N1 = 
i(1 −Wi) are the number of treated and control units, respectively.
Abadie and Imbens and Imbens for more details.
Matching estimators for average treatment eﬀects
When we estimate average treatment eﬀects, only one of the two outcomes is observed. Let the observed outcome be denoted by Yi:
Yi = Yi(Wi) =
To estimate the average treatment eﬀect, we will estimate the unobserved potential outcome for each observation in the sample. Consider estimating the untreated outcome,
Yi(0), for person i with covariates Xi, who was exposed to the treatment. If the decision to take the treatment is “purely random” for individuals with similar values of the
pretreatment variables or covariates, we could use the average outcome of some similar
individuals who were not treated to estimate the untreated outcome. This is the basic
idea behind matching estimators. For each i, matching estimators impute the missing outcome by ﬁnding other individuals in the data whose covariates are similar but
who were exposed to the other treatment. The process of matching similar individuals
who chose the opposite treatment causes these estimators to be known as “matching
estimators”.
To ensure that the matching estimators identify and consistently estimate the treatment eﬀect of interest, we assume that assignment to treatment is independent of
the outcomes, conditional on the covariates, and that the probability of assignment
is bounded away from zero and one.
For all x in the support of X,
(i) W is independent of (Y (0), Y (1)) conditional on X = x;
(ii) c < Pr(W = 1|X = x) < 1 −c, for some c > 0.
Part (i) is a rigorous deﬁnition of the restriction that the choice of participation be
“purely random” for similar individuals. This assumption is also known as unconfoundedness, or “selection on observables”.
Part (ii) is an identiﬁcation assumption. If all the individuals with a given covariate
pattern chose the treatment, there would be no observations on similar individuals who
chose not to accept the treatment against which to compare them.
For details on these regularity conditions, see Abadie and Imbens .
In their seminal article, Rosenbaum and Rubin deﬁne the treatment to be
“strongly ignorable” when both parts of assumption 2 are true. They also provide an
explanation for these two conditions, showing how “strong ignorability” allows you to
analyze a nonrandomized experiment as if it had come from a randomized experiment.
These conditions are strong and, in many cases, may not be satisﬁed. In various studies, however, researchers have found it useful to consider estimators based on these or
similar conditions. Imbens argues that most studies will want to proceed under
assumption 2 at some stage of the analysis.
A. Abadie, D. Drukker, J. L. Herr, and G. W. Imbens
Estimators
For each observation i, the unit-level treatment eﬀect is τi = Yi(1) −Yi(0); however,
as discussed above, only one of the potential outcomes Yi(0) or Yi(1) is observed, and
the other is unobserved or missing. The matching estimators we consider impute the
missing potential outcome by using average outcomes for individuals with “similar”
values for the covariates.
Considering the set of observed covariates for an individual i, Xi, let ∥x∥V
(x′V x)1/2 be the vector norm with positive deﬁnite matrix V . We deﬁne ∥z −x∥V
as the distance between the vectors x and z, where z represents the covariate values for
a potential match for observation i. Let dM(i) be the distance from the covariates for
unit i, Xi, to the Mth nearest match with the opposite treatment. Allowing for the
possibility of ties, at this distance fewer than M units are closer to unit i than dM(i)
and at least M units are as close as dM(i). Formally, dM(i) > 0 is the real number
satisfying
∥Xl−Xi∥V < dM(i)
∥Xl−Xi∥V ≤dM(i)
where 1{·} is the indicator function, which is equal to one if the expression in brackets
is true and zero otherwise.
Let JM(i) denote the set of indices for the matches for unit i that are at least as
close as the Mth match:
l = 1, . . . , N
Wl = 1 −Wi, ∥Xl −Xi∥V ≤dM(i)
If there are no ties, the number of elements in JM(i) is M but may be larger. Let the
number of elements of JM(i) be denoted by #JM(i). Finally, let KM(i) denote the
number of times i is used as a match for all observations l of the opposite treatment
group, each time weighted by the total number of matches for observation l. Let K′
represent a comparable measure in which the square of the number of matches is used
as the weight.
1{i ∈JM(l)}
1{i ∈JM(l)}
Note that 
i KM(i) = N, 
i:Wi=1 KM(i) = N0, and 
i:Wi=0 KM(i) = N1.
Matching estimators for average treatment eﬀects
The simple matching estimator
The ﬁrst estimator that we consider, the simple matching estimator, uses the following
approach to estimate the pair of potential outcomes:
Namely, given that only one potential outcome is observed for each observation i, the
observed outcome Yi = Yi(0) or Yi(1) represents one potential outcome. The unobserved
outcome is estimated by averaging the observed outcomes for the observations l of the
opposite treatment group that are chosen as matches for i.
Using these estimates of the potential outcomes, the simple matching estimator is
Yi(1) −Yi(0)
(2Wi −1) {1 + KM(i)} Yi
This estimator can be modiﬁed easily to estimate the average treatment eﬀect for the
Yi −Yi(0)
{Wi −(1 −Wi)KM(i)} Yi
or the average treatment eﬀect for the controls
Yi(1) −Yi
{WiKM(i) −(1 −Wi)} Yi
Some useful examples
In this section, we use a small artiﬁcial dataset to illustrate the concepts discussed above.
The variables for the seven observations are presented in table 1. In this table, we also
present the set of matches for each unit for the case in which M = 1 (a single match)
and, given these matches, the predicted values for the potential outcomes. Note that,
although we search for the single closest match, for some units there is a tie. Consider
the second unit, a control observation with Xi = 4. Treated units 4 and 6, both with
Xi = 3, are equally close, so the predicted outcome, given treatment, is equal to the
average of the outcomes for units 4 and 6, namely, (9 + 6)/2 = 7.5.
A. Abadie, D. Drukker, J. L. Herr, and G. W. Imbens
Table 1: A matching estimator with seven observations, m = 1
Since this dataset is small enough, we can calculate by hand that the SATE for this
data is .14285714. Now let’s compute the estimates using the nnmatch command. While
the complete syntax for nnmatch is given in section 5.1, the basic syntax of nnmatch is
nnmatch depvar treatvar varlist
, tc({ att | atc }) m(#)
tc({ att | atc }) speciﬁes the estimand.
By default, nnmatch estimates the average
treatment eﬀect, ATE. Specifying tc(att) causes nnmatch to estimate the average
treatment eﬀect for the treated, ATT. Specifying tc(atc) causes nnmatch to estimate
the average eﬀect for the controls, ATC.
m(#) speciﬁes the number of matches.
See section 5.1 for a more detailed discussion of the syntax and options available.
In the output below, we estimate the SATE for the artiﬁcial dataset.
. use artificial
. nnmatch y w x
Matching estimator:
Average Treatment Effect
Number of obs
Number of matches
[95% Conf. Interval]
Matching variables:
Note that nnmatch conﬁrms our hand calculation.
Matching estimators for average treatment eﬀects
Now let’s consider an example with real data. We use a subset of the experimental dataset used by Lalonde . The particular subset is the one constructed by
Dehejia and Wahba and described there in more detail.
In this example, we are interested in the possible eﬀect of participation in a jobtraining program on individuals’ earnings in 1978. In the data, participation in the jobtraining program is recorded in the variable t, and the 1978 earnings of the individuals in
the sample are recorded in the variable re78 . The observable covariates
that we use to match similar individuals are given in table 2.
Variable description
Variable name
years of education
indicator for African-American
indicator for Hispanic
indicator for married
indicator for more than grade school but
less than high-school education
earnings in 1974 
earnings in 1975 
indicator for unemployed in 1974
indicator for unemployed in 1975
In the output below, we estimate the SATE using this data:
. use ldw_exper
. nnmatch re78 t age educ black hisp married re74 re75 u74 u75, m(4)
Matching estimator:
Average Treatment Effect
Weighting matrix: inverse variance
Number of obs
Number of matches
[95% Conf. Interval]
Matching variables:
age educ black hisp married re74 re75 u74 u75
When more than one covariate is speciﬁed, the matching depends on the weighting
matrix used to deﬁne a vector norm.
The output reﬂects our choice of the inverse
variance weighting matrix, which accounts for diﬀerences in the scale of the covariates.
Since 1978 earnings are recorded in thousands this output implies that, for the
individuals in our sample, the average eﬀect of participating in the job-training program
is an increase in an individual’s 1978 earnings of $1,903.
A. Abadie, D. Drukker, J. L. Herr, and G. W. Imbens
As noted above, the population and sample average treatment eﬀects are useful for
answering diﬀerent questions.
For instance, the SATE is useful for judging whether
this particular job-training program was successful. In contrast, if we were considering
launching another job-training program in which we would obtain a second sample from
the same population, the PATE would be more useful. For the speciﬁcation at hand,
we conclude that the sample average is signiﬁcantly diﬀerent from zero at the 1% level.
Since the standard error of the SATE is in large samples less than or equal to the standard
error of the PATE, the PATE might not be signiﬁcantly diﬀerent from zero at either the
5% or the 1% level. In the output below, we estimate the PATE:
. nnmatch re78 t age educ black hisp married re74 re75 u74 u75, m(4) pop
Matching estimator: Population Average Treatment Effect
Weighting matrix: inverse variance
Number of obs
Number of matches
[95% Conf. Interval]
Matching variables:
age educ black hisp married re74 re75 u74 u75
As expected, the point estimate is exactly the same as for the SATE. We also see that
the standard error of the PATE is slightly smaller than that of the SATE, so we can
still reject the null hypothesis of no eﬀect; however, our conclusion is diﬀerent. Instead
of concluding that the job-training program had a signiﬁcant eﬀect on this group of
participants, we now conclude that the job-training program is likely to have an eﬀect
on another group of individuals drawn from the same population.
We also need to point out that the eﬀect size, as well as the statistical signiﬁcance,
is important in interpreting the results in most treatment-eﬀect studies. For instance,
if our earnings data were in terms of dollars instead of thousands of dollars, our results
would indicate a statistically signiﬁcant but economically unimportant impact of the
job-training program.
As discussed in Imbens and Heckman, Ichimura, and Todd , the eﬀect
of the treatment on the subpopulation of treated units is frequently more important
than the eﬀect on the population as a whole, when evaluating the importance of a narrowly targeted labor-market program. For instance, when evaluating the importance of
a program aimed at increasing the postgraduation earnings of youth from bad neighborhoods, the potential impact of the program on youth from good neighborhoods is
not relevant.
In the output below, we therefore use nnmatch to estimate the SATT using our extract
from the Lalonde data:
Matching estimators for average treatment eﬀects
. nnmatch re78 t age educ black hisp married re74 re75 u74 u75, tc(att) m(4)
Matching estimator:
Average Treatment Effect for the Treated
Weighting matrix: inverse variance
Number of obs
Number of matches
[95% Conf. Interval]
Matching variables:
age educ black hisp married re74 re75 u74 u75
The output indicates that the eﬀect of the job-training program on the participants in
this sample is statistically diﬀerent from zero but, perhaps surprisingly, is not much
larger than the SATE.
In most of the examples given in this paper, we use four matches because it oﬀers
the beneﬁt of not relying on too little information without incorporating observations
that are not suﬃciently similar. Like all smoothing parameters, the ﬁnal inference can
depend on the choice of the number of matches. For instance, in the output below, we
show that relying on a single match makes the SATT statistically insigniﬁcant:
. nnmatch re78 t age educ black hisp married re74 re75 u74 u75, tc(att)
Matching estimator:
Average Treatment Effect for the Treated
Weighting matrix: inverse variance
Number of obs
Number of matches
[95% Conf. Interval]
Matching variables:
age educ black hisp married re74 re75 u74 u75
Note, however, that the lack of statistical signiﬁcance is due largely to the change in
the point estimate, rather than to the change in the standard error. It is not entirely
clear which estimate is more reliable in this case.
The bias-corrected matching estimator
The simple matching estimator will be biased in ﬁnite samples when the matching is not
exact. Abadie and Imbens show that, with k continuous covariates, the estimator
will have a term corresponding to the matching discrepancies (the diﬀerence in covariates
between matched units and their matches) that will be of the order Op(N −1/k). In
practice, we may therefore attempt to remove some of this bias term that remains after
The bias-corrected matching estimator (nnmatch using the biasadj() option) adjusts the diﬀerence within the matches for the diﬀerences in their covariate values.
The adjustment is based on an estimate of the two regression functions, µw(x) =
E{Y (w)|X = x} for w = 0 or 1.
Following Rubin and Abadie and Imbens
A. Abadie, D. Drukker, J. L. Herr, and G. W. Imbens
 , we approximate these regression functions by linear functions and estimate
them using least squares on the matched observations.
First suppose that we are estimating the average treatment eﬀect. In this case, we
estimate the regression functions using only the data in the matched sample
µw(x) = βw0 + β′
for w = 0, 1, where
(βw0, βw1) = argmin{βw0,βw1}
KM(i) (Yi −βw0 −β′
If we are interested in estimating the SATT or PATT, we need only estimate the regression
function for the controls, µ0(x). Similarly, for the SATC and PATC we need only estimate
We weight the observations in these regressions by KM(i), the number of times
the unit is used as a match, because the weighted empirical distribution is closer to
the distribution of covariates in which we are ultimately interested.
For this same
reason, we use the matched sample only in this step; using the full sample would include
observations suﬃciently dissimilar from our sample of interest. For example, when we
are estimating the SATT, control units that are not used as matches have potentially
very diﬀerent covariate values than the treated units we are trying to match. Hence
using these controls to predict outcomes for the treated units leads to results that can
be very sensitive to the exact speciﬁcation applied.
Given the estimated regression functions, for the bias-corrected matching estimator
we predict the missing potential outcomes as
{Yl + µ0(Xi) −µ0(Xl)}
{Yl + µ1(Xi) −µ1(Xl)}
with the corresponding estimator for the ATE
˜Yi(1) −˜Yi(0)
Matching estimators for average treatment eﬀects
The bias-adjusted matching estimators for the ATT and ATC are
Yi −˜Yi(0)
and τ bcm,c
˜Yi(1) −Yi
Now let’s return to our extract from the Lalonde data. In this example, we estimate
the ATT with bias adjustment:
. nnmatch re78 t age educ black hisp married re74 re75 u74 u75, tc(att)
> m(4) bias(bias)
Matching estimator:
Average Treatment Effect for the Treated
Weighting matrix: inverse variance
Number of obs
Number of matches
[95% Conf. Interval]
Matching variables:
age educ black hisp married re74 re75 u74 u75
Bias-adj variables:
age educ black hisp married re74 re75 u74 u75
The above output indicates that using bias adjustment decreases the size of the estimated SATE slightly, thus reducing the signiﬁcance level. We can conclude that the
treatment had an eﬀect on its participants that is signiﬁcant at the 5% but not at the
Variance estimation
In this section, we describe the variance estimators implemented in nnmatch. Note that
the bias adjustment does not aﬀect the form of the estimator for the variance, although
it may aﬀect the numerical value. In contrast, the form of the estimator of the variance
diﬀers between the sample and population average treatment eﬀects (or the average
eﬀect for the treated or controls). In addition, nnmatch oﬀers an option for a robust
estimator that allows for heteroskedasticity. Bootstrapping methods for estimating the
variance of matching estimators do not necessarily give correct results. For details on
the theoretical justiﬁcation for the various variance estimators, see Abadie and Imbens
The estimator for the variance of the sample average treatment eﬀect (SATE) is
V sample =
A. Abadie, D. Drukker, J. L. Herr, and G. W. Imbens
(Below we discuss estimating the conditional error variance, σ2
Similarly, the
estimator for the variance of the estimator for SATT is
V sample,t =
{Wi −(1 −Wi)KM(i)}2 σ2
and for the SATC
V sample,c =
{WiKM(i) −(1 −Wi)}2 σ2
As an estimator for the variance of the matching estimator for the population average
treatment eﬀect, we use
Yi(1) −Yi(0) −τ
M(i) + 2KM(i) −K′
In large samples, this will be at least as large as the estimator for the variance of the
matching estimator for the SATE. Asymptotically, V pop exceeds V sample by 
µ0(Xi)}2/N 2. However, in small samples, V pop need not be larger than V sample. In
practice, we may therefore want to take the maximum of V pop and V sample as the
estimator for the variance of the estimator for the PATE.
As an estimator for the variance of the matching estimator for the PATT, we use
V pop,t =
Yi(1) −Yi(0) −τ t2
(Continued on next page)
Matching estimators for average treatment eﬀects
Finally, as an estimator for the variance of the matching estimator for the population
average treatment eﬀect for the controls, we use
V pop,c =
Yi(1) −Yi(0) −τ t2
Estimating these variances requires estimating the conditional outcome variance σ2
The matching program allows to assume that this variance, σ2
w(x), is constant for both
treatment groups and all values of the covariates or that it is not.
Assuming a constant treatment eﬀect and homoskedasticity
Here we discuss estimating the variance under two assumptions: ﬁrst, that the treatment
eﬀect, Yi(1)−Yi(0), is constant; and second, that the conditional variance of Yi(w) given
Xi does not vary with either the covariates x or the treatment w (homoskedasticity).
Under these two assumptions, for the constant average treatment eﬀect, we estimate
the outcome variance σ2 as
Wi(Yi −Yl −τ) + (1 −Wi)(Yl −Yi −τ)
We then substitute σ2 for σ2
Wi(Xi) into the relevant variance formula, (4) or (7). For
the ATT, we estimate σ2 as
(Yi −Yl −τ)2
and substitute this for σ2
Wi(Xi) into (5) or (8). Finally, for the ATC, we estimate σ2 as
(Yl −Yi −τ)2
and substitute this for σ2
Wi(Xi) into (6) or (9).
A. Abadie, D. Drukker, J. L. Herr, and G. W. Imbens
Variance estimation allowing for heteroskedasticity
w(x) instead varies by w and x, we must estimate it for all sample points. nnmatch
does this using a second matching procedure, matching treated units to treated units
and control units to controls. Deﬁne d′
M(i) as the distance to the Mth closest unit with
the same treatment indicator. More formally, let
l:Wl=Wi,l̸=i
∥Xl −Xi∥V < d′
l:Wl=Wi,l̸=i
∥Xl −Xi∥V ≤d′
M(i) denotes the set of indices for the ﬁrst M matches for unit i
j = 1, . . . , N
Wj = Wi, j ̸= i, ∥Xj −Xi∥V ≤d′
where the number of elements of J ′
M(i) is denoted by #J ′
M(i). We estimate the conditional variance as the sample variance in this set, augmented with the outcome for unit
i itself, J ′
M(i)∪(i) =
is the average outcome in this set. The overall variance is estimated by plugging this
unit-level variance estimate into the relevant variance expressions (4) through (9).
Now we return to our Lalonde–Dehejia–Wahba data extract.
In the output below, we re-estimate the SATT, but this time we estimate the standard error allowing
for heteroskedasticity. We specify four matches in estimating the conditional variance
functions (robusth(4)) for the same reason that we allow four matches in estimating
the conditional mean functions: given our data, four matches seem to include suﬃcient
information without matching unlike individuals.
(Continued on next page)
Matching estimators for average treatment eﬀects
. nnmatch re78 t age educ black hisp married re74 re75 u74 u75, tc(att)
> m(4) robusth(4)
Matching estimator:
Average Treatment Effect for the Treated
Weighting matrix: inverse variance
Number of obs
Number of matches
Number of matches,
robust std. err. (h) =
[95% Conf. Interval]
Matching variables:
age educ black hisp married re74 re75 u74 u75
The output indicates that our estimated SATT remains signiﬁcant at the 1% level,
even when the standard error is estimated under these weaker conditions. Thus in this
sample, the job-training program appears to have had a signiﬁcant impact on the 1978
earnings of its participants.
The nnmatch command
Here we discuss the formal syntax of the nnmatch command.
Syntax of nnmatch
The complete syntax of nnmatch is as follows:
nnmatch depvar treatvar varlist
, tc({ ate | att | atc }) m(#) metric(maha|matname) exact(varlistex)
biasadj(bias | varlistadj) robusth(#) population level(#) keep(ﬁlename)
pweights are allowed. See [U] 14.1.6 weight for more information about weights. See section 5.2 for information about how nnmatch handles weights.
Description
nnmatch estimates the average treatment eﬀect for the treated, the controls, or the
sample as a whole and their standard errors. depvar is the outcome variable. treatvar
is a binary variable treatment indicator. varlist speciﬁes the covariates to be used in
the matching.
A. Abadie, D. Drukker, J. L. Herr, and G. W. Imbens
tc({ ate | att | atc }) speciﬁes the estimand. By default, nnmatch estimates the average
treatment eﬀect, ATE. Specifying tc(att) causes nnmatch to estimate the average
treatment eﬀect for the treated, ATT. Specifying tc(atc) causes nnmatch to estimate
the average eﬀect for the controls, ATC.
m(#) speciﬁes the number of matches to be made per observation. If two observations
are equally close to that being matched, both will be used. Thus, the number of
matches per observation will be greater than or equal to the number speciﬁed in
The default number of matches is 1, a single match. If we are estimating the average
treatment eﬀect, any integer less than or equal to the minimum of the number of
treated and controls in the sample can be chosen, M ≤min(N0, N1). If tc(att) is
speciﬁed, the limit is the number of controls in the sample, M ≤N0. If tc(atc) is
speciﬁed, the limit is the number of treated in the sample, M ≤N1.
Typically, we should choose a small number. In simulations in Abadie and Imbens
 , using four matches performed well in terms of mean-squared error.
metric(maha | matname) speciﬁes the metric for measuring the distance between two
vectors of covariates. Letting ∥x∥V = (x′V x)1/2 be the vector norm with positive
deﬁnite matrix V , we deﬁne ∥z −x∥V to be the distance between the vectors x
and z. There are three choices for V . First, by default V is the diagonal matrix
constructed of the inverses of the variances of each element of Xi (the elements
of varlist).
Second, specifying metric(maha) causes nnmatch to use to use the
Mahalanobis metric, in which V = S−1, where S is the sample covariance matrix of
the covariates Xi. Third, specifying metric(matname) causes nnmatch to use the
user-deﬁned matrix matname. This third option allows you to choose any positive
deﬁnite matrix.
exact(varlistex) allows you to specify exact matching (or as exact as possible) on one or
more variables. As constructed, the exact-matching variables need not overlap with
the elements of varlist. In practice, however, the exact() option adds these variables
to the original k × k varlist matrix and multiplies the corresponding elements in the
weight matrix by 1,000 relative to the weights placed on the elements of varlist.
(Regardless of the metric() option chosen for the varlist variables, the exact-match
variables are normalized via the default option—the inverse sample variance of the
exact-matching variables.)
Because for each matched observation there may not
exist a member of the opposite treatment group with equal value, matching may
not be exact across the full dataset. The output therefore lists the percentage of
matches (across the paired sample of observations, greater than or equal to N × M
in number) that match exactly.
Matching estimators for average treatment eﬀects
biasadj(bias | varlistadj) speciﬁes that the bias-corrected matching estimator be used.
By default, nnmatch uses the simple matching estimator.
The ﬁrst alternative,
biasadj(bias), uses the bias-corrected matching estimator, using the same set of
matching covariates, varlist, entered linearly in the regression function. However,
you might wish to use only a subset of the covariates for this bias adjustment, or
even an alternate set, so the second alternative, biasadj(varlistadj), is to use the
bias-corrected matching estimator with a set of covariates distinct from the set used
in matching.
robusth(#) speciﬁes that nnmatch estimate heteroskedasticity-consistent standard errors using # matches in the second matching stage (across observations of the same
treatment level). The number of matches used in estimating the standard error,
#, need not be the same as the number of matches used in estimating the treatment eﬀect itself. By default, nnmatch uses the homoskedastic/constant variance
estimator.
population speciﬁes whether the estimand is a sample or population average treatment
eﬀect. This aﬀects only the choice of estimator for the variance. By default, nnmatch
estimates a sample average treatment eﬀect—SATE, SATT, or SATC—using one of the
variance estimators from (4) through (6). Specifying population causes nnmatch to
estimate the variance for the population average treatment eﬀect—PATE, PATT, or
PATC—using one of the estimators from (7) through (9), as appropriate.
level(#) speciﬁes the conﬁdence level, as a percentage, for conﬁdence intervals. The
default is level(95) or as set by set level.
keep(ﬁlename) saves the temporary matching dataset in the ﬁle ﬁlename.dta.
the estimation process, nnmatch creates a temporary dataset holding, for each observation i being matched, a new observation containing the values of i’s outcome
variable, the matching variable(s), and the outcome and matching variable(s) for
its M closest matches. The new dataset will hold at least N × M observations.
If biasadj(varlistadj) or exact(varlistex) are selected, the temporary dataset will
also hold these values for each observation i and its match(es). The variables in this
dataset are discussed in greater detail in section (6).
replace replaces the dataset speciﬁed in keep(ﬁlename) if it already exists.
How nnmatch handles weights
nnmatch allows probability weights. Under this assumption, an observation represents a
part of the population proportional to its weight. For example, if all observations have
weight 1 other than observation i, which has weight 2, the weighted nnmatch estimates
are identical to those that would be obtained by using the unweighted estimator on
a sample in which observation i is duplicated once. The standard errors are updated
to account for the weighting. The weights are allowed to be noninteger but must be
nonnegative.
A. Abadie, D. Drukker, J. L. Herr, and G. W. Imbens
Formally, with the weight for individual i equal to ωi, the estimator is calculated as
follows. The deﬁnition of the distance dM(i) to the Mth closest match is modiﬁed to
ensure that the sum of the weights of the matches adds up to M. Thus, dω
M(i) satisﬁes
∥Xl −Xi∥V < dω
∥Xl −Xi∥V ≤dω
The deﬁnition of the set JM(i) is unchanged. The KM(i) and K′
M(i) are changed from
(1) and (2) to
ωl1{i ∈JM(l)}
j∈JM(l) ωj
ωl1{i ∈JM(l)}
j∈JM(l) ωj
The simple matching estimator is now deﬁned as
Yi(1) −Yi(0)
with a similar modiﬁcation for the ATT and ATC. The bias correction is as described
above, except that in (3) the weighted version Kω
M(i) is used.
Matching estimators for average treatment eﬀects
The variance formulas change from (4) through (9) to
V sample =
V sample,t =
{Wiωi −(1 −Wi)Kω
M(i)}2 σ2
V sample,c =
i(1 −Wi)ωi)2
M(i) −(1 −Wi)ωi}2 σ2
Yi(1) −Yi(0) −τ
M(i)}2 + 2Kω
V pop,t =
Yi(1) −Yi(0) −τ c2
M(i)}2 −Kω′
V pop,c =
i(1 −Wi)ωi)2
Yi(1) −Yi(0) −τ c2
M(i)}2 −Kω′
As always, we must pay attention to the interpretation of these weighted estimators.
In the population variance estimators, the weights correct any bias introduced by the
sampling design so that inference is made with respect to the underlying population
of interest. The weighted sample variances can thus be interpreted as providing inference about another sample of identical individuals drawn from the population that
corresponds to the weights.
Wi(Xi), we modify the earlier estimators. In the homoskedastic case, the errorvariance estimator is changed from (10) to
l∈JM (i) ωl
Wi(Yi −Yl −τ) + (1 −Wi)(Yl −Yi −τ)
with similar modiﬁcations for the ATT and ATC cases.
A. Abadie, D. Drukker, J. L. Herr, and G. W. Imbens
In the heteroskedastic case, the conditional variance σ2
w(x) is estimated using matching with some modiﬁcation for the weights. First, dω′
M(x) is deﬁned as
l:Wl=Wi,l̸=i
∥Xl −Xi∥V < dω′
l:Wl=Wi,l̸=i
∥Xl −Xi∥V ≤dω′
with the set J ′
M(i) containing the indices for the matches for unit i:
j = 1, . . . , N
Wj = Wi, j ̸= i, ∥Xj −Xi∥V ≤dω′
We estimate the conditional variance, σ2
Wi(Xi), as the sample variance in this set,
augmented with the outcome for unit i itself, U = J ′
M(i) ∪{i}, taking into account the
is the average outcome in this set. The overall variance is estimated by plugging this
unit-level variance estimate into the relevant variance expression (4′) through (9′).
The matching dataset
If keep(ﬁlename) is selected, each observation of ﬁlename.dta will hold the following
variables:
(Continued on next page)
Matching estimators for average treatment eﬀects
The treatment group indicator for the observation being matched.
The observed outcome variable for observation i.
The values of the covariates, varlist, for observation i.
The identiﬁcation code for the observation being matched. (When the
command nnmatch is given, the program creates a temporary variable,
id = 1, 2, . . . , N, based on the original sort order.)
The identiﬁcation code for j, the match for observation i.
The estimated distance between observation i and its match j, based on
the values of the varlist and the selected weight matrix.
The number of times observation i is used as a match for any observation
l of the opposite treatment level, each time weighted by the total
number of matches for the given observation l. For example, if
observation i is one of three matches for observation l, it receives a
value of 1/3 for that match. k m is the sum across all observations l of
this value. Thus the sum of k m across all observations will equal N
(or N0 or N1, if the ATC or ATT, respectively, are estimated). Note that
this value refers to i’s use as a match, not to its matches j, so the value
of k m is equal across all observations in the temporary dataset that
pertain to the matching of observation i.
Weight for observation i, if weights are selected.
Weight of observation j, the match for observation i, if weights are
The estimated value of the dependent variable if observation i were in the
control group. If observation i is a control observation, y 0 = y(i). If i
is a treated observation, y 0 = y(j).
Estimated value of the dependent variable if i were in the treated group.
Values of varlist for i’s control observation. Namely, if i is a control
observation, x 0m = xi for each element x of varlist. If i is a
treated observation, x 0m = xj.
Values of varlist for i’s treatment observation.
Values of the bias-adjustment variables, if biasadj() is selected, for i’s
control observation, where b represents each element of the
bias-adjustment variables.
Bias-adjustment variables for i’s treatment observation.
Values of the exact-matching variables, if exact() is selected, for i’s
control observation, where e represents each element of the
exact-matching variables.
Exact-matching variables for i’s treatment observation.