ORIGINAL PAPER
The development of granular rule-based systems: a study
in structural model compression
Sharifah Sakinah Syed Ahmad1
• Witold Pedrycz2
Received: 20 April 2016 / Accepted: 1 June 2016 / Published online: 23 June 2016
 Springer International Publishing Switzerland 2016
Abstract In this study, we develop a comprehensive
design process of granular fuzzy rule-based systems. These
constructs arise as a result of a structural compression of
fuzzy rule-based systems in which a subset of originally
existing rules is retained. Because of the reduced subset of
the originally existing rules, the remaining rules are made
more abstract (general) by expressing their conditions in
the form of granular fuzzy sets (such as interval-valued
fuzzy sets, rough fuzzy sets, probabilistic fuzzy sets, etc.),
hence the name of granular fuzzy rule-based systems
emerging during the compression of the rule bases. The
design of these systems dwells upon an important mechanism of allocation of information granularity using which
the granular fuzzy rules are formed. The underlying optimization consists of two phases: structural (being of
combinatorial character in which a subset of rules is
selected) and parametric (when the conditions of the
selected rules are made granular through an optimal allocation of information granularity). We implement the
cooperative particle swarm optimization to solve optimization problem. A number of experimental studies are
reported; those include fuzzy rule-based systems.
Keywords Rule-based systems  Structural compression 
Optimal allocation of information granularity  Particle
swarm optimization  Granular fuzzy sets
1 Introduction
There have been a large number of studies and applications
on fuzzy rule-based systems. The rules are viewed as
descriptors of individual, local pieces of knowledge,
especially when forming a global mapping from the space
of conditions to the space of conclusions. When dealing
with a large number of rules, emerges an interesting and
practically viable question about a reduction of the number
of rules, so that a small subset of the most representative
rules can be formed . The practical relevance stems from the
two facts. First, the smaller number of rules enhances their
readability meaning that the transparency of the reduced
model becomes enhanced. Second, computing overhead is
reduced. Starting from the set of rules ‘‘if x is Aj, then y is
Bj’’ j = 1, 2, …, N, the reduction of the model leads to the
subset of rules ‘‘if x is Ai, then y is Bi’’ i = 1, 2, …, I where
I  N. Surprisingly, the reduced rules do not reﬂect a fact
they are the subset of the original far larger collection of
rules. Intuitively, we might have anticipated that the
reduced rule set reﬂects the reduction aspect by having a
level of abstraction of the fuzzy sets standing in the condition parts of the rules being elevated. In other words, the
reduced set of rules comprises the conditional statements of
the form ‘‘if x is G(Ai), then y is Bi’’. The increased level of
abstraction (generality) is realized by forming a granular
augmentation of the original fuzzy set Aj by generalizing it
to the granular fuzzy set G(Aj) viz. an interval fuzzy sets,
fuzzy set of type-2, shadowed fuzzy sets, probabilistic
(fuzzy) sets, and other generalizations. In a nutshell, the
term granular fuzzy set stands for the generalization of the
& Sharifah Sakinah Syed Ahmad
 
Faculty of Information and Communication Technology,
Universiti Teknikal Malaysia Melaka, 76100 Melaka,
Department of Electrical and Computer Engineering,
University of Alberta, Edmonton T6G 2G7, Canada
Granul. Comput. 2:1–12
DOI 10.1007/s41066-016-0022-5
membership, say Aj(x) at point ‘‘x’’ is generalized to the
granular value (interval, fuzzy set in , probability
density function, etc.). This granular nature of the proposed
construct is directly associated with the reduced number of
rules to compensate for the reduction of the rule base, the
rules have to be made more abstract.
Assuming that the reduced set of rules has been formed
via the collection of rules ‘‘if x is G(Aj), then y is Bj’’ has
been decided upon, the fundamental question arises as to
the formation of the granular fuzzy sets. The underlying
design principle is that of an optimal allocation of information granularity. The values of the membership grades
are non-numeric, for example, intervals or membership
functions. Given a certain predetermined level of information granularity a, we allocate it among the elements of
the original fuzzy set (by making it granular), so that a
balance of information granularity is met and a certain
optimization criterion is maximized. The optimization
criterion used to guide the process of granularity allocation
expresses an extent to which the results of inference process realized with the use of all the rules are ‘‘covered’’ by
the results formed by the reduced rule-based system.
The development of the granular rule-based system
comprises two important and intertwined phases, namely, a
selection of a subset of the rules and a formation of the
rule-based
combinatorial
character of the ﬁrst phase and a nonlinear nature of the
overall process of granularity allocation, in the study, we
consider a particle swarm optimization environment (PSO)
as well as its generalized cooperative version.
The study is organized as follows. In Sect. 2, we discuss
the underlying concept. In the sequel, we discuss the
designing process of the granular rules. A suite of protocols
of allocation of information granularity is presented. In
Sect. 4, we describe the PSO environment using which the
granular fuzzy rule-based system is constructed. In Sect. 4,
experimental studies are given. Finally, conclusions and
some prospects of further research are presented in Sect. 5.
Regarding the notation, capital letters (A, B, Ai, etc.) are
used to denote fuzzy sets deﬁned in the discrete universes
of discourse. The notation G(A) is reserved to describe the
granular fuzzy set. Furthermore, we assume that the fuzzy
sets Ai standing in the conditions of the rules have inﬁnite
2 From fuzzy rule-based models to granular fuzzy
rule-based models: the concept
The essence of fuzzy rule-based systems is inherently associated with the inference schemes of approximate reasoning
if x is Ai then y is Bi; i ¼ 1; 2; . . .; N
where B is a fuzzy set of conclusion to be determined.
A and Ai are deﬁned in a ﬁnite input space X, dim(X) = n,
while Bi and B are expressed in the output space Y with
dimensionality, dim(Y) = m. The set of indexes of the
rules is denoted by N; in this case, it is simply a set of
N natural numbers indexing the rules, N = {1, 2, …, N}.
There is a wealth of realizations of the inference
schemes with a large number of optimization mechanisms,
see . In a nutshell, though the inference scheme is realized by determining the activation levels of the individual
rules (their condition parts) implied by some A. This is
typically done by computing a possibility measure of A and
Ai, poss(A, Ai). Denoting the possibility value by ki, the
conclusion B is taken as a union of Bi weighted by the
activation levels (possibility values), namely
i¼1; 2; ...;NðkiðxÞ ^ BiðyÞÞ
where ^ stands for the minimum operation. There are
numerous variations of this inference scheme; nevertheless,
the essence of the underlying reasoning process remains
the same. Let us also stress that the result of inference is a
fuzzy set.
Now, let us envision that instead of the entire collection
of rules, we consider a subset of I rules in anticipation that
this smaller collection can be deemed sufﬁcient as being
formed by a collection of the most representative rules out
of N rules. Of course, the term representativeness has to be
clariﬁed and quantiﬁed as well as made operational. What
is also quite intuitive is a fact that the rules forming the
subset need to be made more abstract to compensate for the
fact that they need to capture the entire set. Operationally,
by making them more abstract (general) means that we
form the condition parts of the selected rules more general.
This, in effect, implies that instead of Ai occurring in the
selected rule, we consider a certain granular abstraction of
Aj, say G(Aj), where G(.) stands for the granular version of
Aj. All in all, this generalization gives rise to the granular
fuzzy rules
then y is Bj
j = 1, 2, …, I. Now, I is a collection of ‘‘I’’ indexes coming
from N identifying the subset of rules, that is I = {j1,j2,…,
jI}. The ensuing inference scheme comes in the form
If x is GðAjÞ then y is Bj
y is GðBÞy is GðBÞ
Granul. Comput. 2:1–12
It is worth noting that the granular format of the condition of the rule entails a granular format of the conclusion, so we obtain the granular counterpart G(B) instead of
the fuzzy set B.
The granular version of Aj and G(Ai) can be articulated
in different ways . In a
nutshell, the granularity of Aj results in non-numeric
membership values. A granulation of membership function
G(Ai) is a way of representing the unit interval of membership values as a ﬁnite and small collection of information granulation . These information
granules come with well-deﬁned semantics, for example,
Low, Medium, High, and Very High membership. A
vocabulary comprising a ﬁnite number of information
granules coming as a result of granulation G(Ai) is used as
granulation representation of the original numeric membership grade. Several main alternatives are outlined in
In the ensuing study, for the clarity of the presentation of
the underlying concept and the overall methodology, our
focus is on interval (set-based) granulation. Thus, we
consider the interval-valued fuzzy sets, G(Aj) (see also
Table 1). In this case in the general inference scheme (1),
the activation of G(Aj) results in an interval of activation
values ½k
j . As a result, the conclusion becomes an
interval fuzzy set ½B
j  with the bounds computed as
j ðyÞ ¼ ½ max
j¼1; 2; ...;Iðk
j ^ BjðyÞÞ;
j¼1; 2; ...Iðkþ
j ^ BjðyÞ
The development of the granular rule-based system
entails two tightly connected design phases:
selection of the subset of rules I out of the entire
collection of rules.
generalization of the condition parts of the rules [fuzzy
sets Aj are made granular G(Aj)].
These two steps are intertwined and have to be discussed together. The ﬁrst one is evidently of structural
(combinatorial) character. The second one is about
making the original fuzzy sets of condition granular.
Figure 1 illustrates granular fuzzy rules in general. In
the ﬁgure, we can visualize the process of the rule
reduction by selecting subset of rules and the process of
rule generalization by the constructing of the granular
3 Designing granular rule-based system
The important issue in designing the granular rule-based
system is how to construct the interval-valued membership
function . The
available information granularity (the level of granularity)
is the most important asset and has to be carefully distributed among all the point in the membership function, so
that the granular rules can covers (include) the unselected
rules. In what follows, we propose several protocols of
allocation of information granularity and discuss the indices, whose optimization is realized through this allocation.
The granular rules are formed by generalizing, via
forming granular fuzzy sets in the condition parts of the
rules. The process of forming G(Ai) out of Ai is realized
through the allocation of information granularity. It is
realized in several different ways. We discuss the performance of each of the protocol in the context of rules if x is
Ai, then y is Bi. Recall that the dimensionality of the input
space is ‘‘n’’, while the output space has ‘‘m’’ elements.
Several protocols of allocation of information granularity
are outlined:
Table 1 Selected formal models of granular versions of fuzzy set A—membership grade A(x) for ﬁxed element of the universe of discourse
Interval granulation
G(A(x)) = [a1(x), a2(x)]
Fuzzy set-based granulation
G(A(x)) = FA(x)(u), u 2 ½0; 1 where F is a fuzzy set deﬁned in the unit interval
Probability-based
granulation
G(A(x)) = pA(x)(u), u 2 ½0; 1 where p is a probability density function deﬁned in the unit interval,
0 pAðxÞðuÞdu ¼ 1
if Ak then Bk
if G(Ai) then Bi
Generalization
Fig. 1 Reduction of rule base by selection and a granular extension
(generalization) of the representative subset of rules. The granular
constructs are shown as shadowed disks
Granul. Comput. 2:1–12
Protocol 1 (P1): a uniform allocation of information
granularity for all membership degrees for the selected
rules. The membership grades are replaced by an interval
of the length a. More speciﬁcally, if a is the value of the
membership grade, a 2 ½0; 1, then the corresponding
interval of membership values is expressed as [a - a/2,
a ? a/2]. We require that an overall balance of information granularity regarded as a modeling asset is satisﬁed,
meaning that the sum of granularities is na. No optimization procedure is required.
Protocol 2 (P2): a uniform allocation of information
granularity with asymmetric position of interval. It is
similar to P1, however, it exhibits more ﬂexibility, as we
allow an asymmetric allocation of information granules
(intervals) meaning that the membership values are now
transformed to the interval [a - ca, a ? (1 - c)a], where
c 2 ½0; 1. The optimization concerns an adjustment of the
value of asymmetricity (c). If c = 1/2, the ﬁrst protocol is a
special case of this one.
Protocol 3 (P3): it comes as an augmentation of P2. We
admit asymmetric allocation of information granularity to
individual membership grades. The membership grades ai,
i = 1, 2, …, n are generalized and assuming the form of
the interval [ai - cia, ai ? (1 - ci)a], where ci 2 ½0; 1. In
total, we have a vector of coefﬁcients [c1, c2, …, cn].
Protocol 4 (P4): a non-uniform allocation of information
granularity with symmetrically distributed intervals of
information granules.
Here, the protocol involves individual intervals distributed symmetrically around ai. They are formed as
aiai=2; ai þ ai=2
The balance of information granularity is retained
meaning that
i¼1 ai ¼ n  a
Protocol 5 (P5): a non-uniform allocation of information
granularity with asymmetrically distributed intervals of
information granules. Here, the protocol generalizes P3 in
the sense that the constructed intervals are distributed
asymmetrically. Thus, ai is replaced by the interval
i ; ai þ aþ
with the balance of information granularity expressed as
i ¼ n  a:
In summary, the search space explored by each of the
protocols can be described as follows.
Parameters
Dimensionality of the search
No optimization
Optimization of c, c 2 , (1)
a, ci i = 1, 2 ,…, n
Optimization of c1, c2, …, cn, (n)
ai i = 1, 2 , …, n
Optimization of a1, a 2,… an, (n)
i i ¼ 1; 2; . . .; n
Optimization of a
2 ; . . .; a
2 ; . . .; aþ
Figure 2 shows the different between the original fuzzy
rule-based system and the granular fuzzy rules-based system. The membership function for the original fuzzy rulebased system is depicted in Fig. 2a. Then, the granular
fuzzy rules are achieved by shifting the points on the
Gaussian function to the left and to the right based on the
level of granularity, as shown in Fig. 2b.
When dealing with two-input (or multivariable) rulebased systems, the same protocols of allocation of information granularity apply, however, the condition on the
retention of information granularity involves the sum
(n1 ?n2)a, where n1 and n2 are the dimensionality of the
corresponding input spaces say ‘‘if x is Ai and Z is Ci, then
y is Bi’’. Here, Ai is deﬁned over a discrete space dimensionality n1, and Ci is expressed over a space of dimensionality n2.
To complete optimization required by the protocols, we
use the particle swarm optimization (PSO) techniques to
search for the best subset of fuzzy rules and simultaneously
realize the optimal allocation of information granulation,
Fig. 2 a Example of an original fuzzy rule-based, Ai(x), and
b granular fuzzy rules [Gi (x)-, Gi(x)?]
Granul. Comput. 2:1–12
so that the maximum the performance index (coverage) is
4 Particle swarm optimization as a design
environment
The optimization of granular fuzzy rules is completed in the
setting of a certain information allocation protocol . For protocol P1 and protocol P2, we need to solve
a single optimization task, namely, we have to select a subset
of rules, I = {j1, j2, …, jI}. Whereas, for protocols P3, P4, and
P5, we involve an additional optimization by completing an
optimal allocation of information granularity. These two
optimization tasks can be handled by the corresponding
nested optimization process. In other words, for a selected
subset of the rules generated by the optimization process
involved at the upper level, we next carry out the optimal
allocation of information granularity. In this study, we
implement the generic particle swarm optimization for
granularity allocation for protocol P1 and P2. For the protocols P3, P4, and P5, we engage cooperative particle swarm
optimization in which cases both phases of the optimization
task are realized simultaneously.
4.1 Particle swarm optimization and its variants
Particle swarm optimization (PSO) was inspired by a collective behavior of birds or ﬁsh.
PSO is a population-based method, where each individual,
referred to as a particle, represent a candidate solution for
an optimization problem. Each particle proceeds through
the search space at a given velocity v that is dynamically
modiﬁed according to the own experience of the particle
and results in its local best (lb) performance. The particle is
also affected by others particles experience, called global
best (gb) . The
underlying expression for the update of the velocity in
successive generations reads as follows:
vi;jðt þ 1Þ ¼ wvi; jðtÞ þ c1r1;iðtÞ½lbi;jðtÞ  xi;jðtÞ
þ c2r2;iðtÞ½gbjðtÞ  xi; jðtÞ
Þ ¼ xi tð Þ þ vi t þ 1
where i = 1, 2, …, s (s the number of particles) and j = 1,
2, …, N ? n (the search space is equal to the sum of the
dimensions of the overall number of fuzzy rules and the
dimensionality of the input space). The inertia weight
(w) is conﬁned to the range ; its values can decrease
over time. The cognitive factor c1 and social factor c2
determine the relative impact coming from the particle’s
own experience and the local best and global best. r1 and r2
are random numbers drawn from a uniform distribution
deﬁned over the unit interval that bring some component of
randomness to the search process.
To deal with the large search spaces present in protocols
P3, P4, and P5, we employed another version of PSO, cooperative particle swarm optimization (CPSO). The motivation
behind the use of CPSO, as advocated in , is to deal effectively with the high
dimensionality of the search space, which becomes a serious
concern when a large number of rules with its large dimensionality are involved. This curse of dimensionality is a
signiﬁcant impediment negatively impacting the effectiveness of the standard PSO. The essence of the cooperative
version of PSO is essentially a parallel search for optimal
subset of rules and its optimal allocation of information
granulation values. The cooperative strategy is achieved by
dividing the candidate solution vector into components,
called sub-swarm, where each sub-swarm represents a small
portion of the overall optimization processes. By doing this,
we implement the concept of divide and conquer to solve the
optimization problem, so that the process will become more
efﬁcient and fast.
The cooperative search realized between sub-swarms is
achieved by sharing the information of the global best
position (PGB) across all sub-swarm. Here, the algorithm
has the advantage of taking two steps forward, because the
candidate solution comes from the best position for all subswarm except only for the current sub-swarm being evaluated. Therefore, the algorithm will not spend too much
time optimizing the rules or allocating granularity that have
little effect on the overall solution. The rate at which each
swarm converges to the solution is signiﬁcantly faster than
the rate of convergence reported for the generic version of
4.2 Fitness function
Let us assume that the set of rules I have been already
formed (we discuss this development in the successive
sections). The quality of these rules can be evaluated as
follows. We consider the remaining N–I rules not present in
the collection of rules being retained. We treat successive
Ajs present there as the inputs to the inference process (4).
The result becomes an information granule, G(Bj). Intuitively, the quality of the granular rule-based system
depends how well the information granule G(Bj) ‘‘covers’’
the original Bj considering that the granular rules form only
a subset of the original rule base. The fundamental with
this regard is the notion of coverage of the information
granule and its quantiﬁcation. We introduce the following
coverage index (measure)
j incl½BjðyÞ; GðBjðyÞÞ
Granul. Comput. 2:1–12
where incl [Bj(y), G(Bj(y))] is a measure of inclusion of
Bj(y) in the granular counterpart produced by the inference
scheme (4). The ﬁrst summation standing in this formula is
done over all elements of the ﬁnite output space over which
Bj and G(Bj) are deﬁned, whereas the second sum is carried
out for all rules left out from the process of the generation
of granular rules (whose number is N–I) and m is the
dimension of the output space. The inclusion measure can
be fully speciﬁed depending upon the assumed formalism
used in the construction of granular rules. In the simplest
case, where dealing with interval-valued membership
functions, the double sum in the nominator of (12) is a
count specifying how many times the membership grade
Bj(y) is contained in the interval.
Ideally, the coverage value is equal to 1, which becomes
indicative of a complete inclusion of the conclusion (fuzzy
set) of the original rule in the granular result of reasoning
completed for the reduced rule base. In more realistic
scenario, the ratio attains values lower than 1.
In addition, we introduce another objective function of a
global character, called the area under the curve, AUC. As
discussed above, the value of r depends upon the predetermined level of granularity a, underlined here by the
notation r(a). The monotonicity property is apparent: r(a)
becomes a non-decreasing function of the level of granularity. To quantify an overall quality of the granular fuzzy
rules, we integrate the corresponding values of r(a), which
results in a single index independent from the assumed
level of granularity:
4.3 Particles representation
The ﬁrst optimization phase is to select the optimal subset of
rules. The problem is combinatorial in its nature. PSO is used
here to form a subset of integers, which are the indexes of the
rules to be used in the generation of the granular rules. As
noted, I is represented as a set of indexes {j1, j2,…, jI}. The
particle is then formed as a string of ‘‘N’’ real numbers
positioned in . The search space is the hypercube N. The particle is decoded as follows. The entries of the
string are ranked. The result becomes a list of integers
viewed as the indexes of the rules. The ﬁrst I entries out of the
N-position string are selected to form the subset of rules.
Figure 3 illustrates the representation of the particle.
Selected rules {3, 17, 2, and 24}
Ranking (ascending order)
Fig. 3 From particle in the N search space to a subset of rules
Table 2 Collection of eight rules‘‘if x is Ak, then y is Bk’’
[0.1 0.9 0.5 0.2 0.1 0.0]
[0.0 0.3 0.5 0.8 1.0]
[0.7 1.0 0.6 0.3 0.2 0.0]
[1.0 0.7 0.3 0.2 0.0]
[0.9 0.9 1.0 0.2 0.0 0.0]
[0.1 0.9 0.9 0.4 0.2]
[0.0 0.3 0.5 0.9 1.0 0.0]
[0.0 0.4 0.9 1.0 0.5]
[1.0 0.9 0.5 0.2 0.1 0.0]
[0.0 0.3 0.5 0.8 1.0]
[0.6 0.3 0.2 1.0 0.5 0.7]
[0.5 0.9 1.0 0.5 0.2]
[0.2 0.3 1.0 0.2 0.5 0.7]
[0.0 0.3 0.5 0.8 1.0]
[0.0 1.0 0.5 0.3 0.0 0.0]
[0.3 1.0 0.2 0.0 0.0]
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9
Fig. 4 Coverage produced by the ﬁve protocols, a two arbitrarily
selected rules, and b optimized two rules
Granul. Comput. 2:1–12
The second phase is to determine the optimal values of
information
granulation.
optimization
depends upon the protocol being used. In protocol P3, PSO
is used to ﬁnd for best asymmetricity value, ci where i = 1,
2, …, n and ci 2 ½0; 1. The particle is represented by a
vector of numbers in . Its length is equal to the
dimensionality of the ﬁnite universe of discourse over
which the condition fuzzy sets are deﬁned, namely, ‘‘n’’.
The PSO used in the implementation of protocol P4 similar
to that used in the case of protocol P3. The difference is the
representation of each element is the allocation of the
information granulation, ai, where i = 1, 2, …, n. Each
element in the particle is represented by a real number that
follows the constraint given by (8). Finally, in protocol P5,
the representation is almost the same as in protocol P4.
However, the length is two times higher as used in the
previous protocol.
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9
Fig. 5 Coverage produced by the ﬁve protocols, a I = 1 and b I = 7
Fig. 6 Allocation of information granularity for a = 0.1
0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9
Fig. 7 Coverage versus different numbers of rules when using P2
Fig. 8 Coverage versus a obtained for different protocols
Number of Rules
Fig. 9 AUC as a function of the number of rules
Granul. Comput. 2:1–12
5 Experimental studies
In this section, we present a series of numeric experiments to
illustrate the proposed method by showing its development,
and quantifyingthe resulting performance. The experimental
studies are concerned with the fuzzy rule-based systems
applications. In all the experiment, we use the tenfold crossvalidation method. We start the experiment by constructing
the granular membership function by running the protocols
of information granularity allocation, as presented in Sect. 3.
The setup of the PSO is as follows: the number of generations
is 200, and the size of particle is 100. The inertia weight, ‘‘w’’
changes linearly from 1 to 0 over the course of optimization.
The values of the cognitive factor c1 and social factor c2 were
set to 2.8 and 1.3, respectively .
The performance of the granular rule-based system at
the global level is based on the area under curve (AUC) for
the coverage plot. The AUC is used to calculate the area of
a region in the xy plane bounded by the graph of an
objective function called the coverage, the x-axis is the e,
and the vertical lines e = 0 and e = 1. As mentioned in the
coverage value is in the interval , therefore, the areas
being all above the x-axis. The performance of the granular
rule-based system is quantiﬁed by the values of AUC.
Thus, we can investigate the performance of four methods
at the global instead of local.
5.1 Synthetic fuzzy rule-based system
We consider the collection of eight rules (Table 2) ‘‘if x is
Ak, then y is Bk’’ with fuzzy sets in the condition and
conclusion part deﬁned in the ﬁnite universes of discourse.
To illustrate the performance of the method, we start
with a reduced set of two rules, I = {7, 8}. These two rules
were selected in an arbitrary fashion. The results are
reported in Fig. 4a. There is a signiﬁcant improvement
when using protocol P5 when compared the obtained
results to the results produced by the remaining protocols.
This is not surprising, as this protocol offers a signiﬁcant
level of ﬂexibility when allocating information granularity.
The improvement is particularly visible for low values of a.
Figure 4b shows the result using the optimal subset of
two rules. Again, there is a visible improvement in comparison with the results presented in Fig. 4a.
R1: If x is A1 then y is B1
R2: If x is A2 then y is B2
R3: If x is A3 then y is B3
R4: If x is A4 then y is B4
R5: If x is A5 then y is B5
R6: If x is A6 then y is B6
R7: If x is A7 then y is B7
R8: If x is A8 then y is B8
If x is A1 then y is B1
If x is G(A2) then y is B2
If x is A3 then y is B3
If x is G(A4) then y is B4
If x is G(A5) then y is B5
If x is G(A6) then y is B6
If x is A7 then y is B7
If x is G(A8) then y is B8
Fig. 10 Selected subsets of rules (in boldface) obtained for different
numbers of selected rules (for protocol P3)
Table 3 Rules for mortgage loan assessment
If (Asset is Low) and (Income is Low), then (Application is Low)
If (Asset is Low) and (Income is Medium), then (Application is
If (Asset is Low) and (Income is High), then (Application is
If (Asset is Low) and (Income is Very High), then (Application is
If (Asset is Medium) and (Income is Low), then (Application is
If (Asset is Medium) and (Income is Medium), then (Application
is Medium)
If (Asset is Medium) and (Income is High), then (Application is
If (Asset is Medium) and (Income is Very High), then
(Application is High)
If (Asset is High) and (Income is Low), then (Application is
If (Asset is High) and (Income is Medium), then (Application is
If (Asset is High) and (Income is High), then (Application is High)
If (Asset is High) and (Income is Very High), then 2:1–12
Figure 5 illustrates the coverage values when using the
PSO-optimized subsets of rules with I = 1 and 7. The quality
of results (ranging from the weakest coverage to the highest
one) brings a ranking of the protocols ordered as P1, P2, P3,
P4, and P5 with P1 producing the lowest coverage.
Inthesequel,Fig. 6showsadistributionoftheallocationof
granularityrealizedwiththeuseoftheprotocolP5;apparently,
the distribution becomes non-uniform over the input space.
Figure 7 illustrates the values of coverage when using
different numbers of rules. The coverage values are higher
when increasing the number of selected rules. As illustrated
in Fig. 8, protocols of higher ﬂexibility produce better
coverage results.
The overall performance expressed in terms of the AUC
values is visualized in Fig. 9. Again, the superiority of the
most ﬂexible protocols is visible. The reduced list of rules
is presented in Fig. 10.
5.2 Mortgage applications assessment rule-based
Assessment of a mortgage application normally based on
evaluating the market value and location of the house, the
applicant’s asset and income, and repayment plan. A collection of rules is shown in Table 3.
The results expressed in terms of the coverage treated as
a function of the number of retained rules are summarized
in Figs. 11 and 12. The main trends are apparent. Furthermore, the quantiﬁcation of the improvements resulting
from the increase of the number of rules involved is visible;
a substantial jump is present when using more than four
Table 4 Rules for the aircraft landing control problem
If (Height is L) and (Velocity is DL), then (Control force is Z)
If (Height is L) and (Velocity is DS), then (Control force is DS)
If (Height is L) and (Velocity is Z), then (Control force is DL)
If (Height is L) and (Velocity is US), then (Control force is DL)
If (Height is L) and (Velocity is UL), then (Control force is DL)
If (Height is M) and (Velocity is DL), then (Control force is US)
If (Height is M) and (Velocity is DS), then (Control force is Z)
If (Height is M) and (Velocity is Z), then (Control force is DS)
If (Height is M) and (Velocity is US), then (Control force is DL)
If (Height is M) and (Velocity is UL), then (Control force is DL)
If (Height is S) and (Velocity is DL), then (Control force is UL)
If (Height is S) and (Velocity is DS), then (Control force is US)
If (Height is S) and (Velocity is Z), then (Control force is Z)
If (Height is S) and (Velocity is US), then (Control force is DS)
If (Height is S) and (Velocity is UL), then (Control force is DL)
If (Height is NZ) and (Velocity is DL), then (Control force is
If (Height is NZ) and (Velocity is DS), then (Control force is
If (Height is NZ) and (Velocity is Z), then (Control force is Z)
If (Height is NZ) and (Velocity is US), then (Control force is DS)
If (Height is NZ) and (Velocity is UL), then (Control force is
Fig. 13 Plot of coverage j(a) regarded as a function of using P4
Number of rules
Fig. 14 Area under curve AUC
Granul. Comput. 2:1–12
5.3 Aircraft landing control problem
The aircraft landing control problem is dealing with the
two important parameters called the velocity and the
height. The main objective is to control the landing
approach of an aircraft by desired downward velocity that
is proportional to the square of the height. For example, at
higher altitudes, a large downward velocity is desired, and
as the altitude (height) diminishes, the desired downward
velocity gets smaller and smaller. Finally, as the height
becomes vanishingly small, the downward velocity also
goes to zero. Therefore, the aircraft will descend form
Table 5 Rules for the service center
If (Mean_Delay is VS) and (# of server is S) and
(Utilization_Factor is L), then (# of spare is VS)
If (Mean_Delay is S) and (# of server is S) and
(Utilization_Factor is L), then (# of spare is VS)
If (Mean_Delay is M) and (# of server is S) and
(Utilization_Factor is L), then (# of spare is VS)
If (Mean_Delay is VS) and (# of server is M) and
(Utilization_Factor is L) then (# of spare is VS)
If (Mean_Delay is S) and (# of server is M) and
(Utilization_Factor is L), then (# of spare is VS)
If (Mean_Delay is M) and (# of server is M) and
(Utilization_Factor is L), then (# of spare is VS)
If (Mean_Delay is VS) and (# of server is L) and
(Utilization_Factor is L), then (# of spare is S)
If (Mean_Delay is S) and (# of server is L) and
(Utilization_Factor is L), then (# of spare is S)
If (Mean_Delay is M) and (# of server is L) and
(Utilization_Factor is L), then (# of spare is VS)
If (Mean_Delay is VS) and (# of server is S) and
(Utilization_Factor is M), then (# of spare is S)
If (Mean_Delay is S) and (# of server is S) and
(Utilization_Factor is M), then (# of spare is S)
If (Mean_Delay is M) and (# of server is S) and
(Utilization_Factor is M), then (# of spare is VS)
If (Mean_Delay is VS) and (# of server is M) and
(Utilization_Factor is M), then (# of spare is RS)
If (Mean_Delay is S) and (# of server is M) and
(Utilization_Factor is M), then (# of spare is S)
If (Mean_Delay is M) and (# of server is M) and
(Utilization_Factor is M), then (# of spare is VS)
If (Mean_Delay is VS) and (# of server is L) and
(Utilization_Factor is M), then (# of spare is M)
If (Mean_Delay is S) and (# of server is L) and
(Utilization_Factor is M), then (# of spare is RS)
If (Mean_Delay is M) and (# of server is L) and
(Utilization_Factor is M), then (# of spare is S)
If (Mean_Delay is VS) and (# of server is S) and
(Utilization_Factor is H), then (# of spare is VL)
If (Mean_Delay is S) and (# of server is S) and
(Utilization_Factor is H), then (# of spare is L)
If (Mean_Delay is M) and (# of server is S) and
(Utilization_Factor is H), then (# of spare is M)
If (Mean_Delay is VS) and (# of server is M) and
(Utilization_Factor is H), then (# of spare is M)
If (Mean_Delay is S) and (# of server is M) and
(Utilization_Factor is H), then (# of spare is M)
If (Mean_Delay is M) and (# of server is M) and
(Utilization_Factor is H), then (# of spare is S)
If (Mean_Delay is VS) and (# of server is L) and
(Utilization_Factor is H), then (# of spare is RL)
If (Mean_Delay is S) and (# of server is L) and
(Utilization_Factor is H), then (# of spare is M)
If (Mean_Delay is M) and (# of server is L) and
(Utilization_Factor is H), then (# of spare is RS)
Fig. 15 Plot of coverage j(a) regarded as a function of a: a P1 and
Number of rules
Fig. 16 Area under curve versus the number of rules
Granul. Comput. 2:1–12
altitude promptly, so that the touch down process is very
gently to avoid damage. The pertinent rules are shown in
The main results are summarized in Figs. 13 and 14.
5.4 Service center operation data
The rules having three inputs and a single output describing
the functioning of the center are presented in Table 5. The
overall number of the rules is 27.
The summary of the results is presented in Figs. 15 and
A concise summary of the results obtained for the series of
experiments is presented in Fig. 17. Here, we visualize the
coverage as a function of a fraction of rules retained (ratio).
While the monotonicity character of this relationship is
visible, these plots show how the changes are distributed.
6 Conclusions
The general issue of structural compression of rule-based
systems was presented as inherently associated with the
emergence of granular constructs. Information granularity
is reﬂective of the increased level of abstraction of the
reduced set of rules. Information granularity is sought as an
essential asset, whose prudent allocation is behind the
design of optimally reduced rule-based systems. The
experimental part of the study shows essential linkages
among the quality of the granular fuzzy rules and the
number of retained rules and the admitted level of information granularity.
It has to be noted that the granular fuzzy sets form a
general concept; however, in this study, we focused on
their interval realization. The entire development was
presented in this way for clarity purposes 2:1–12
to concentrate on the concept). Nevertheless, considerations of other realizations of the granular constructs follow
modiﬁcations.
Acknowledgments This
Universiti
Teknikal Malaysia Melaka and Ministry of Education Malaysia under
Grant No. FRGS/2013/FTMK/ICT02/02/1/F00161.