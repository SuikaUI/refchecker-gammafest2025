Self-Supervised GANs via Auxiliary Rotation Loss
Ting Chen∗
University of California, Los Angeles
 
Xiaohua Zhai
Google Brain
 
Marvin Ritter
Google Brain
 
Mario Lucic
Google Brain
 
Neil Houlsby
Google Brain
 
Conditional GANs are at the forefront of natural image
synthesis. The main drawback of such models is the necessity for labeled data. In this work we exploit two popular
unsupervised learning techniques, adversarial training and
self-supervision, and take a step towards bridging the gap
between conditional and unconditional GANs. In particular,
we allow the networks to collaborate on the task of representation learning, while being adversarial with respect to
the classic GAN game. The role of self-supervision is to
encourage the discriminator to learn meaningful feature representations which are not forgotten during training. We test
empirically both the quality of the learned image representations, and the quality of the synthesized images. Under
the same conditions, the self-supervised GAN attains a similar performance to state-of-the-art conditional counterparts.
Finally, we show that this approach to fully unsupervised
learning can be scaled to attain an FID of 23.4 on unconditional IMAGENET generation.1
1. Introduction
Generative Adversarial Networks (GANs) are a class of
unsupervised generative models . GANs involve training a generator and discriminator model in an adversarial
game, such that the generator learns to produce samples from
a desired data distribution. Training GANs is challenging
because it involves searching for a Nash equilibrium of a nonconvex game in a high-dimensional parameter space. In practice, GANs are typically trained using alternating stochastic
gradient descent which is often unstable and lacks theoretical
guarantees . Consequently, training may exhibit instability, divergence, cyclic behavior, or mode collapse . As a
result, many techniques to stabilize GAN training have been
∗Work done at Google.
1Code at 
proposed . A major contributor to training instability is the fact that the generator and discriminator
learn in a non-stationary environment. In particular, the discriminator is a classiﬁer for which the distribution of one
class (the fake samples) shifts as the generator changes during training. In non-stationary online environments, neural
networks forget previous tasks . If the discriminator forgets previous classiﬁcation boundaries, training may
become unstable or cyclic. This issue is usually addressed
either by reusing old samples or by applying continual learning techniques . These issues become
more prominent in the context of complex data sets. A key
technique in these settings is conditioning 
whereby both the generator and discriminator have access to
labeled data. Arguably, augmenting the discriminator with
supervised information encourages it to learn more stable
representations which opposes catastrophic forgetting. Furthermore, learning the conditional model for each class is
easier than learning the joint distribution. The main drawback in this setting is the necessity for labeled data. Even
when labeled data is available, it is usually sparse and covers
only a limited amount of high level abstractions.
Motivated by the aforementioned challenges, our goal is
to show that one can recover the beneﬁts of conditioning,
without requiring labeled data. To ensure that the representations learned by the discriminator are more stable and useful,
we add an auxiliary, self-supervised loss to the discriminator.
This leads to more stable training because the dependence
of the discriminator’s representations on the quality of the
generator’s output is reduced. We introduce a novel model –
the self-supervised GAN – in which the generator and discriminator collaborate on the task of representation learning,
and compete on the generative task.
Our contributions
We present an unsupervised generative model that combines adversarial training with selfsupervised learning. Our model recovers the beneﬁts of
conditional GANs, but requires no labeled data. In particu-
 
Fake image
Real image
Real / Fake
Rotation degree
Figure 1: Discriminator with rotation-based self-supervision. The discriminator, D, performs two tasks: true vs. fake binary
classiﬁcation, and rotation degree classiﬁcation. Both the fake and real images are rotated by 0, 90, 180, and 270 degrees. The
colored arrows indicate that only the upright images are considered for true vs. fake classiﬁcation loss task. For the rotation
loss, all images are classiﬁed by the discriminator according to their rotation degree.
lar, under the same training conditions, the self-supervised
GAN closes the gap in natural image synthesis between unconditional and conditional models. Within this setting the
quality of discriminator’s representations is greatly increased
which might be of separate interest in the context of transfer
learning. A large-scale implementation of the model leads to
promising results on unconditional IMAGENET generation,
a task considered daunting by the community. We believe
that this work is an important step in the direction of high
quality, fully unsupervised, natural image synthesis.
2. A Key Issue: Discriminator Forgetting
The original value function for GAN training is :
V (G, D) =Ex∼Pdata(x)[log PD(S = 1 | x)]
+ Ex∼PG(x)[log(1 −PD(S = 0 | x))]
where Pdata is the true data distribution, and PG is the
distribution induced by transforming a simple distribution
z ∼P(z) using the deterministic mapping given by the generator, x = G(z), and PD is the discriminator’s Bernoulli
distribution over the labels (true or fake). In the original
minimax setting the generator maximizes Equation 1 with
respect to it’s parameters, while the discriminator minimizes
it. Training is typically performed via alternating stochastic
gradient descent. Therefore, at iteration t during training,
the discriminator classiﬁes samples as coming from Pdata
G . As the parameters of G change, the distribution
G changes, which implies a non-stationary online learning problem for the discriminator.
This challenge has received a great deal of attention and
explicit temporal dependencies have been proposed to improve training in this setting . Furthermore,
in online learning of non-convex functions, neural networks
have been shown to forget previous tasks . In
the context of GANs, learning varying levels of detail, structure, and texture, can be considered different tasks. For
example, if the generator ﬁrst learns the global structure,
the discriminator will naturally try to build a representation
which allows it to efﬁciently penalize the generator based
only on the differences in global structure, or the lack of local structure. As such, one source of instability in training is
that the discriminator is not incentivised to maintain a useful
data representation as long as the current representation is
useful to discriminate between the classes.
Further evidence can be gathered by considering the generator and discriminator at convergence. Indeed, Goodfellow et al. show that the optimal discriminator estimates
the likelihood ratio between the generated and real data
distributions. Therefore, given a perfect generator, where
PG = Pdata, the optimal discriminator simply outputs 0.5,
which is a constant and doesn’t depend on the input. Hence,
this discriminator would have no requirement to retain meaningful representations. Furthermore, if regularization is applied, the discriminator might ignore all but the minor features which distinguish real and fake data.
We demonstrate the impact of discriminator forgetting in
two settings. (1) A simple scenario shown in Figure 3(a),
and, (2) during the training of a GAN shown in Figure 2. In
the ﬁrst case a classiﬁer is trained sequentially on 1-vs.-all
GAN training iterations
Performance of a linear classiﬁcation model,
trained on IMAGENET on representations extracted from
the ﬁnal layer of the discriminator. Uncond-GAN denotes
an unconditional GAN. SS-GAN denotes the same model
when self-supervision is added. For the Uncond-GAN, the
representation gathers information about the class of the
image and the accuracy increases. However, after 500k
iterations, the representations lose information about the
classes and performance decreases. SS-GAN alleviates this
problem. More details are presented in Section 4.
classiﬁcation tasks on each of the ten classes in CIFAR10. It
is trained for 1k iterations on each task before switching to
the next. At 10k iterations the training cycle repeats from the
ﬁrst task. Figure 3(a) shows substantial forgetting, despite
the tasks being similar. Each time the task switches, the
classiﬁer accuracy drops substantially. After 10k iterations,
the cycle of tasks repeats, and the accuracy is the same as
the ﬁrst cycle. No useful information is carried across tasks.
This demonstrates that the model does not retain generalizable representations in this non-stationary environment.
In the second setting shown in Figure 2 we observe a similar effect during GAN training. Every 100k iterations, the
discriminator representations are evaluated on IMAGENET
classiﬁcation; the full protocol is described in Section 4.4.
During training, classiﬁcation of the unconditional GAN
increases, then decreases, indicating that information about
the classes is acquired and later forgotten. This forgetting
correlates with training instability. Adding self-supervision,
as detailed in the following section, prevents this forgetting
of the classes in the discriminator representations.
3. The Self-Supervised GAN
Motivated by the main challenge of discriminator forgetting, we aim to imbue the discriminator with a mechanism
which allows learning useful representations, independently
of the quality of the current generator. To this end, we exploit
recent advancements in self-supervised approaches for representation learning. The main idea behind self-supervision is
Iterations
(a) Regular training.
Classifier accuracy
Iterations
(b) With self-supervision.
Figure 3: Image classiﬁcation accuracy when the underlying class distribution shifts every 1k iterations. The vertical
dashed line indicates the end of an entire cycle through the
tasks, and return to the original classiﬁcation task at t = 0.
Left: vanilla classiﬁer. Right: classiﬁer with an additional
self-supervised loss. This example demonstrates that a classiﬁer may fail to learn generalizable representations in a
non-stationary environment, but self-supervision helps mitigate this problem.
to train a model on a pretext task like predicting rotation angle or relative location of an image patch, and then extracting
representations from the resulting networks . We
propose to add a self-supervised task to our discriminator.
particular,
state-of-the-art
selfsupervision method based on image rotation . In this
method, the images are rotated, and the angle of rotation becomes the artiﬁcial label (cf. Figure 1). The self-supervised
task is then to predict the angle of rotation of an image.
The effects of this additional loss on the image classiﬁcation task is evident in Figure 3(b): When coupled with the
self-supervised loss, the network learns representations that
transfer across tasks and the performance continually improves. On the second cycle through the tasks, from 10k
iterations onward, performance is improved. Intuitively, this
loss encourages the classiﬁer to learn useful image representations to detect the rotation angles, which transfers to the
image classiﬁcation task.
We augment the discriminator with a rotation-based loss
which results in the following loss functions:
LG = −V (G, D) −αEx∼PGEr∼R [log QD(R = r | xr)] ,
LD = V (G, D) −βEx∼PdataEr∼R [log QD(R = r | xr)] ,
where V (G, D) is the value function from Equation 1, r ∈R
is a rotation selected from a set of possible rotations. In this
work we use R = {0
◦} as in Gidaris et al.
 . Image x rotated by r degrees is denoted as xr, and
Q(R | xr) is the discriminator’s predictive distribution over
the angles of rotation of the sample.
Collaborative Adversarial Training
In our model, the
generator and discriminator are adversarial with respect to
the true vs. fake prediction loss, V (G, D), however, they are
collaborative with respect to the rotation task. First, consider
the value function of the generator which biases the generation towards images, that when rotated, the discriminator
can detect their rotation angle. Note that the generator is
not conditional but only generates “upright” images which
are subsequently rotated and fed to the discriminator. On
the other hand, the discriminator is trained to detect rotation angles based only on the true data. In other words, the
parameters of the discriminator get updated only based on
the rotation loss on the true data. This prevents the undesirable collaborative solution whereby the generator generates
images whose subsequent rotation is easy to detect. As a
result, the generator is encouraged to generate images that
are rotation-detectable because they share features with real
images that are used for rotation classiﬁcation.
In practice, we use a single discriminator network with
two heads to compute PD and QD. Figure 1 depicts the
training pipeline. We rotate the real and generated images in
four major rotations. The goal of the discriminator on nonrotated images is to predict whether the input is true or fake.
On rotated real images, its goal is to detect the rotation angle.
The goal of the generator is to generate images matching
the observed data, whose representation in the feature space
of the discriminator allows detecting rotations. With α > 0
convergence to the true data distribution PG = Pdata is
not guaranteed. However, annealing α towards zero during
training will restore the guarantees.
4. Experiments
We demonstrate empirically that (1) self-supervision improves the representation quality with respect to baseline
GAN models, and that (2) it leads to improved unconditional
generation for complex datasets, matching the performance
of conditional GANs, under equal training conditions.
4.1. Experimental Settings
We focus primarily on IMAGENET, the largest
and most diverse image dataset commonly used to evaluate
GANs. Until now, most GANs trained on IMAGENET are
conditional. IMAGENET contains 1.3M training images and
50k test images. We resize the images to 128 × 128 × 3
as done in Miyato and Koyama and Zhang et al. .
We provide additional comparison on three smaller datasets,
namely CIFAR10, CELEBA-HQ, LSUN-BEDROOM, for which
unconditional GANs can be successfully trained. The LSUN-
BEDROOM dataset contains 3M images. We partition
these randomly into a test set containing approximately 30k
images and a train set containing the rest.
contains 30k images . We use the 128 × 128 × 3 version
Uncond-GAN
SS-GAN (sBN)
Uncond-GAN
SS-GAN (sBN)
LSUN-BEDROOM
Uncond-GAN
SS-GAN (sBN)
Uncond-GAN
SS-GAN (sBN)
Table 1: Best FID attained across three random seeds. In this
setting the proposed approach recovers most of the beneﬁts
of conditioning.
obtained by running the code provided by the authors.2 We
use 3k examples as the test set and the remaining examples as
the training set. CIFAR10 contains 70k images (32×32×3),
partitioned into 60k training instances and 10k test instances.
We compare the self-supervised GAN (SS-GAN)
to two well-performing baseline models, namely (1) the
unconditional GAN with spectral normalization proposed
in Miyato et al. , denoted Uncond-GAN, and (2) the conditional GAN using the label-conditioning strategy and the Projection Conditional GAN (Cond-GAN) . We chose the
latter as it was shown to outperform the AC-GAN , and is
adopted by the best performing conditional GANs .
We use ResNet architectures for the generator and discriminator as in Miyato et al. . For the conditional generator in Cond-GAN, we apply label-conditional batch normalization. In contrast, SS-GAN does not use conditional
batch normalization. However, to have a similar effect on
the generator, we consider a variant of SS-GAN where we
apply the self-modulated batch normalization which does
not require labels and denote it SS-GAN (sBN). We note
that labels are available only for CIFAR10 and IMAGENET,
so Cond-GAN is only applied on those data sets.
We use a batch size of 64 and to implement the rotationloss we rotate 16 images in the batch in all four considered
directions. We do not add any new images into the batch to
compute the rotation loss. For the true vs. fake task we use
the hinge loss from Miyato et al. . We set β = 1 or the
the self-supervised loss. For α we performed a small sweep
2 
growing_of_gans.
UNCOND-GAN
UNCOND-GAN
GRADIENT PENALTY
121.05 ± 31.44
25.8 ± 0.71
183.36 ± 77.21
80.67 ± 0.43
28.11 ± 0.66
26.98 ± 0.54
85.13 ± 2.88
83.08 ± 0.38
78.54 ± 6.23
25.89 ± 0.33
104.73 ± 2.71
91.63 ± 2.78
188.52 ± 64.54
28.48 ± 0.68
227.04 ± 31.45
85.38 ± 2.7
29.11 ± 0.85
27.74 ± 0.73
227.74 ± 16.82
80.82 ± 0.64
117.67 ± 17.46
25.22 ± 0.38
242.71 ± 13.62
144.35 ± 91.4
SPECTRAL NORM
87.86 ± 3.44
19.65 ± 0.9
129.96 ± 6.6
86.09 ± 7.66
20.24 ± 0.62
17.88 ± 0.64
80.05 ± 1.33
70.64 ± 0.31
86.87 ± 8.03
18.23 ± 0.56
201.94 ± 27.28
99.97 ± 2.75
Table 2: FID for unconditional GANs under different hyperparameter settings. Mean and standard deviations are computed
across three random seeds. Adding the self-supervision loss reduces the sensitivity of GAN training to hyperparameters.
α ∈{0.2, 0.5, 1}, and select α = 0.2 for all datasets (see the
appendix for details). For all other hyperparameters, we use
the values in Miyato et al. and Miyato and Koyama .
We train CIFAR10, LSUN-BEDROOM and CELEBA-HQ for
100k steps on a single P100 GPU. For IMAGENET we train
for 1M steps. For all datasets we use the Adam optimizer
with learning rate 0.0002.
4.2. Comparison of Sample Quality
To evaluate generated samples from different
methods quantitatively, we use the Frechet Inception Distance (FID) . In FID, the true data and generated samples are ﬁrst embedded in a speciﬁc layer of a pre-trained
Inception network. Then, a multivariate Gaussian is ﬁt
to the data and the distance computed as FID(x, g) =
||µx −µg||2
2 + Tr(Σx + Σg −2(ΣxΣg)
2 ), where µ and
Σ denote the empirical mean and covariance and subscripts
x and g denote the true and generated data respectively. FID
is shown to be sensitive to both the addition of spurious
modes and to mode dropping . An alternative approximate measure of sample quality is Inceptions Score
(IS) Salimans et al. . Since it has some ﬂaws Barratt and
Sharma , we use FID as the main metric in this work.
Figure 4 shows FID training curves on CIFAR10
and IMAGENET. Table 1 shows the FID of the best run
across three random seeds for each dataset and model combination. The unconditional GAN is unstable on IMAGENET
and the training often diverges. The conditional counterpart
outperforms it substantially. The proposed method, namely
SS-GAN, is stable on IMAGENET, and performs substantially better than the unconditional GAN. When equipped
with self-modulation it matches the performance on the conditional GAN. In terms of mean performance (Figure 4)
the proposed approach matches the conditional GAN, and
in terms of the best models selected across random seeds
(Table 1), the performance gap is within 5%. On CIFAR10
and LSUN-BEDROOM we observe a substantial improvement
over the unconditional GAN and matching the performance
of the conditional GAN. Self-supervision appears not to
signiﬁcantly improve the results on CELEBA-HQ. We posit
that this is due to low-diversity in CELEBA-HQ, and also for
which rotation task is less informative.
Robustness across hyperparameters
GANs are fragile;
changes to the hyperparameter settings have a substantial
impact to their performance . Therefore, we evaluate
different hyperparameter settings to test the stability of SS-
GAN. We consider two classes of hyperparameters: First,
those controlling the Lipschitz constant of the discriminator,
a central quantity analyzed in the GAN literature . We
evaluate two state-of-the-art techniques: gradient penalty ,
and spectral normalization . The gradient penalty introduces a regularization strength parameter, λ. We test two
values λ ∈{1, 10}. Second, we vary the hyperparameters of
the Adam optimizer. We test two popular settings (β1, β2):
(0.5, 0.999) and (0, 0.9). Previous studies ﬁnd that multiple
discriminator steps per generator step help training , so
we try both 1 and 2 discriminator steps per generator step.
Table 2 compares the mean FID scores of the unconditional models across penalties and optimization hyperparameters. We observe that the proposed approach yields
consistent performance improvements. We observe that in
settings where the unconditional GAN collapses (yielding
FIDs larger than 100) the self-supervised model does not
exhibit such a collapse.
4.3. Large Scale Self-Supervised GAN
We scale up training the SS-GAN to attain the best possible FID for unconditional IMAGENET generation. To do
this, we increase the model’s capacity to match the model
Uncond-GAN
SS-GAN (sBN)
(a) CIFAR10
Uncond-GAN
SS-GAN (sBN)
(b) IMAGENET
Figure 4: FID learning curves on CIFAR10 and IMAGENET. The curves show the mean performance across three random
seeds. The unconditional GAN (Uncond-GAN) attains signiﬁcantly poorer performance than the conditional GAN (Cond-
GAN). The unconditional GAN is unstable on IMAGENET and the runs often diverge after 500k training iterations. The
addition of self-supervision (SS-GAN) stabilizes Uncond-GAN and boosts performance. Finally, when we add the additional
self-modulated Batch Norm (sBN) to SS-GAN, which mimics generator conditioning in the unconditional setting, this
unconditional model attains the same mean performance as the conditional GAN.
in .3 We train the model on 128 cores of Google TPU
v3 Pod for 500k steps using batch size of 2048. For comparison, we also train the same model without the auxiliary
self-supervised loss (Uncond-GAN). We report the FID at
50k to be comparable other literature reporting results on
IMAGENET. We repeat each run three times with different
random seeds.
For SS-GAN we obtain the FID of 23.6 ± 0.1 and
71.6 ± 66.3 for Uncond-GAN. Self-supervision stabilizes
training; the mean and variance across random seeds is
greatly reduced because, unlike for the regular unconditional
GAN, SS-GAN never collapsed. We observe improvement
in the best model across random seeds, and the best SS-GAN
attains an FID of 23.4. To our knowledge, this is the best
results attained training unconditionally on IMAGENET.
4.4. Representation Quality
We test empirically whether self-supervision encourages
the discriminator to learn meaningful representations. For
this, we compare the quality of the representations extracted
from the intermediate layers of the discriminator’s ResNet
architecture. We apply a common evaluation method for
representation learning, proposed in Zhang et al. . In
particular, we train a logistic regression classiﬁer on the
feature maps from each ResNet block to perform the 1000way classiﬁcation task on IMAGENET or 10-way on CIFAR10
and report top-1 classiﬁcation accuracy.
We report results using the Cond-GAN, Uncond-GAN,
3The details can be found at 
compare_gan.
Figure 5: A random sample of unconditionally generated
images from the self-supervised model. To our knowledge,
this is the best results attained training unconditionally on
and SS-GAN models. We also ablate the adversarial loss
from our SS-GAN which results in a purely rotation-based
self-supervised model (Rot-only) which uses the same architecture and hyperparameters as the SS-GAN discriminator. We report the mean accuracy and standard deviation
across three independent models with different random seeds.
Training details for the logistic classiﬁer are in the appendix.
Table 4 shows the quality of representation at after
1M training steps on IMAGENET. Figure 9 shows the learning
curves for representation quality of the ﬁnal ResNet block
on IMAGENET. The curves for the other blocks are provided
in appendix. Note that “training steps” refers to the training
iterations of the original GAN, and not to the linear classiﬁer
which is always trained to convergence. Overall, the SS-
GAN yields the best representations across all blocks and
training iterations. We observe similar results on CIFAR10
provided in Table 3.
In detail, the IMAGENET ResNet contains six blocks.
For Uncond-GAN and Rot-only, Block 3 performs best,
for Cond-GAN and SS-GAN, the ﬁnal Block 5 performs
best. The representation quality for Uncond-GAN drops at
500k steps, which is consistent with the FID drop in Figure 4. Overall, the SS-GAN and Cond-GAN representations
are better than Uncond-GAN, which correlates with their
improved sample quality. Surprisingly, the the SS-GAN
overtakes Cond-GAN after training for 300k steps. One possibility is that the Cond-GAN is overﬁtting the training data.
We inspect the representation performance of Cond-GAN
on the training set and indeed see a very large generalization
SS-GAN (sBN)
Table 3: Top-1 accuracy on CIFAR10. Mean score across
three training runs of the original model. All standard deviations are smaller than 0.01 and are reported in the appendix.
SS-GAN (sBN)
Table 4: Top-1 accuracy on IMAGENET. Mean score across
three training runs of the original model. All standard deviations are smaller than 0.01, except for Uncond-GAN whose
results exhibit high variance due to training instability. All
standard deviations are reported in the appendix.
GAN training iterations
final block (block5)
Figure 6: IMAGENET Top 1 accuracy (mean across three
seeds) to predict labels from discriminator representations.
X-axis gives the number of GAN training iterations.
gap, which indicates overﬁtting.
When we ablate the GAN loss, leaving just the rotation
loss, the representation quality substantially decreases. It
seems that the adversarial and rotation losses complement
each other both in terms of FID and representation quality. We emphasize that our discriminator architecture is
optimized for image generation, not representation quality.
Rot-only, therefore, is an ablation method, and is not a stateof-the-art self-supervised learning algorithm. We discuss
these next.
Table 5 compares the representation quality of SS-GAN
to state-of-the-art published self-supervised learning algorithms. Despite the architecture and hyperparameters being
optimized for image quality, the SS-GAN model achieves
competitive results on IMAGENET. Among those methods,
only BiGAN also uses a GAN to learn representations;
but SS-GAN performs substantially (0.073 accuracy points)
better. BiGAN learns the representation with an additional
encoder network, while SS-GAN is arguably simpler because
it extracts the representation directly from the discriminator.
The best performing method is the recent DeepClustering
algorithm . This method is just 0.027 accuracy points
ahead of SS-GAN and requires expensive ofﬂine clustering
after every training epoch.
In summary, the representation quality evaluation highlights the correlation between representation quality and
image quality. It also conﬁrms that the SS-GAN does learn
relatively powerful image representations.
5. Related Work
GAN forgetting
Catastrophic forgetting was previously
considered as a major cause for GAN training instability.
The main remedy suggested in the literature is to introduce
Context 
BiGAN 
Colorization 
RotNet 
DeepClustering 
SS-GAN (sBN)
Table 5: Comparison with other self-supervised representation learning methods by top-1 accuracy on IMAGENET. For
SS-GAN, the mean performance is presented.
temporal memory into the training algorithm in various ways.
For example, Grnarova et al. induce discriminator memory by replaying previously generated images. An alternative
is to instead reuse previous models: Salimans et al. introduce checkpoint averaging, where a running average of the
parameters of each player is kept, and Grnarova et al. 
maintain a queue of models that are used at each training
iteration. Kim et al. add memory to retain information
about previous samples. Other papers frame GAN training
as a continual learning task. Thanh-Tung et al. study
catastrophic forgetting in the discriminator and mode collapse, relating these to training instability. Liang et al. 
counter discriminator forgetting by leveraging techniques
from continual learning directly (Elastic Weight Sharing 
and Intelligent Synapses ).
Conditional GANs
Conditional GANs are currently the
best approach for generative modeling of complex data sets,
such as ImageNet. The AC-GAN was the ﬁrst model to
introduce an auxiliary classiﬁcation loss for the discriminator . The main difference between AC-GAN and the
proposed approach is that self-supervised GAN requires
no labels. Furthermore, the AC-GAN generator generates
images conditioned on the class, whereas our generator is
unconditional and the images are subsequently rotated to produce the artiﬁcial label. Finally, the self-supervision loss for
the discriminator is applied only over real images, whereas
the AC-GAN uses both real and fake.
More recently, the P-cGAN model proposed by Miyato
and Koyama includes one real/fake head per class .
This architecture improves performance over AC-GAN. The
best performing GANs trained on GPUs and TPUs 
use P-cGAN style conditioning in the discriminator. We
note that conditional GANs also use labels in the generator,
either by concatenating with the latent vector, or via FiLM
modulation .
Self-supervised learning
Self-supervised learning is a
family of methods that learn the high level semantic representation by solving a surrogate task. It has been widely used
in the video domain , the robotics domain 
and the image domain . We focused on the image
domain in this paper. Gidaris et al. proposed to rotate
the image and predict the rotation angle. This conceptually
simple task yields useful representations for downstream
image classiﬁcation tasks. Apart form trying to predict the
rotation, one can also make edits to the given image and
ask the network to predict the edited part. For example, the
network can be trained to solve the context prediction problem, like the relative location of disjoint patches or
the patch permutation of a jigsaw puzzle . Other surrogate tasks include image inpainting , predicting the color
channels from a grayscale image , and predicting the
unsupervised clustering classes . Recently, Kolesnikov
et al. conducted a study on self-supervised learning with
modern neural architectures.
6. Conclusions and Future Work
Motivated by the desire to counter discriminator forgetting, we propose a deep generative model that combines
adversarial and self-supervised learning. The resulting novel
model, namely self-supervised GAN when combined with
the recently introduced self-modulation, can match equivalent conditional GANs on the task of image synthesis, without having access to labeled data. We then show that this
model can be scaled to attain an FID of 23.4 on unconditional
ImageNet generation which is an extremely challenging task.
This line of work opens several avenues for future research. First, it would be interesting to use a state-of-the-art
self-supervised architecture for the discriminator, and optimize for best possible representations. Second, the selfsupervised GAN could be used in a semi-supervised setting
where a small number of labels could be used to ﬁne-tune the
model. Finally, one may exploit several recently introduced
techniques, such as self-attention, orthogonal normalization
and regularization, and sampling truncation , to yield
even better performance in unconditional image synthesis.
We hope that this approach, combining collaborative selfsupervision with adversarial training, can pave the way towards high quality, fully unsupervised, generative modeling
of complex data.
Acknowledgements
We would also like to thank Marcin Michalski, Karol
Kurach and Anton Raichuk for their help with infustrature,
and major contributions to the Compare GAN library. We
appreciate useful discussions with Ilya Tolstikhin, Olivier
Bachem, Alexander Kolesnikov, Josip Djolonga, and Tiansheng Yao. Finally, we are grateful for the support of other
members of the Google Brain team, Zürich.