The Author(s) BMC Bioinformatics 2016, 17(Suppl 19):509
DOI 10.1186/s12859-016-1377-y
Open Access
Drug-target interaction prediction via
class imbalance-aware ensemble learning
Ali Ezzat1, Min Wu2, Xiao-Li Li2* and Chee-Keong Kwoh1
15th International Conference On Bioinformatics 
Queenstown, Singapore. 21-23 September 2016
Background: Multiple computational methods for predicting drug-target interactions have been developed to
facilitate the drug discovery process. These methods use available data on known drug-target interactions to train
classifiers with the purpose of predicting new undiscovered interactions. However, a key challenge regarding this data
that has not yet been addressed by these methods, namely class imbalance, is potentially degrading the prediction
performance. Class imbalance can be divided into two sub-problems. Firstly, the number of known interacting
drug-target pairs is much smaller than that of non-interacting drug-target pairs. This imbalance ratio between
interacting and non-interacting drug-target pairs is referred to as the between-class imbalance. Between-class
imbalance degrades prediction performance due to the bias in prediction results towards the majority class (i.e. the
non-interacting pairs), leading to more prediction errors in the minority class (i.e. the interacting pairs). Secondly, there
are multiple types of drug-target interactions in the data with some types having relatively fewer members (or are less
represented) than others. This variation in representation of the different interaction types leads to another kind of
imbalance referred to as the within-class imbalance. In within-class imbalance, prediction results are biased towards
the better represented interaction types, leading to more prediction errors in the less represented interaction types.
Results: We propose an ensemble learning method that incorporates techniques to address the issues of betweenclass imbalance and within-class imbalance. Experiments show that the proposed method improves results over 4
state-of-the-art methods. In addition, we simulated cases for new drugs and targets to see how our method would
perform in predicting their interactions. New drugs and targets are those for which no prior interactions are known. Our
method displayed satisfactory prediction performance and was able to predict many of the interactions successfully.
Conclusions: Our proposed method has improved the prediction performance over the existing work, thus proving
the importance of addressing problems pertaining to class imbalance in the data.
Keywords: Drug-target interaction prediction, Class imbalance, Between-class imbalance, Within-class imbalance,
Small disjuncts, Ensemble learning
Background
On average, it takes over a dozen years and around 1.8
billion dollars to develop a drug . Moreover, most of
the drugs being developed fail to reach the market due
to reasons pertaining to toxicity or low efficacy . To
mitigate the risks and costs inherent in traditional drug
*Correspondence: 
2Institute for Infocomm Research (I2R), A*Star, Fusionopolis Way, Singapore
138632, Singapore
Full list of author information is available at the end of the article
discovery, many pharmaceutical companies resort to drug
repurposing or repositioning where drugs already on the
market may be reused for novel disease treatments that
differ from their original objective and purpose .
Intuitively, repurposing a known drug to treat new diseases is convenient and cost-effective for the following two
reasons. Firstly, since the drug being repurposed is one
that is already on the market (i.e. already approved by the
FDA), this implicitly means that it already passed clinical
trials that ensure the drug is safe to use. Secondly, the drug
being repurposed has already been studied extensively,
© The Author(s). 2016 Open Access This article is distributed under the terms of the Creative Commons Attribution 4.0
International License ( which permits unrestricted use, distribution, and
reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the
Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver
( applies to the data made available in this article, unless otherwise stated.
The Author(s) BMC Bioinformatics 2016, 17(Suppl 19):509
 
so many of the drug’s properties (e.g. interaction profile,
therapeutic or side effects, etc.) are known before initiating the drug repurposing effort. As such, drug repurposing helps facilitate and accelerate the research and
development process in the drug discovery pipeline .
Many data sources are publicly available online that
support efforts in computational drug repositioning .
Based on the types of data being used, different methods
and procedures have been proposed to achieve drug repositioning . In this paper, we particularly focus on globalscale drug-target interaction prediction; that is, leveraging
information on known drug-target interactions, we aim to
predict or prioritize new previously unknown drug-target
interactions to be further investigated and confirmed via
experimental wet-lab methods later on.
The main benefit of this technique for drug repositioning efforts is that, given a protein of interest (e.g. its gene
is associated with a certain disease), many FDA-approved
drugs may simultaneously be computationally screened to
determine good candidates for binding . As previously
mentioned, using an approved drug as a starting point in
drug development has desirable benefits regarding cost,
time and effort spent in developing the drug. In addition,
other benefits of this technique include the screening of
potential off-targets that may cause undesired side effects,
thus facilitating the detection of potential problems early
in the drug development process. Finally, new predicted
targets for a drug could improve our understanding of its
actions and properties .
Efforts involving global-scale prediction of drug-target
interactions have been fueled by the availability of publicly
available online databases that store information on drugs
and their interacting targets, such as KEGG , DrugBank
 , ChEMBL and STITCH .
These efforts can be divided into three categories. The
first category is that of ligand-based methods where the
drug-target interactions are predicted based on the similarity between the target proteins’ ligands. A problem with
this category of methods is that many target proteins have
little or no ligand information available, which limits the
applicability of these methods .
Docking simulation methods represent the second category of approaches for predicting drug-target interactions. Although they have been successfully used to predict drug-target interactions , a limitation with
these methods is that they require the 3D structures of
the proteins, which is a problem because not all proteins
have their 3D structures available. In fact, most membrane
proteins (which are popular drug targets) do not have
resolved 3D structures, as determining their structures is
a challenging task .
The third category is the chemogenomic approaches
which simultaneously utilize both the drug and target information to perform predictions. Chemogenomic
methods come in a variety of forms. Some are kernelbased methods that make use of information encoded in
both drug and target similarity matrices to perform predictions , while other chemogenomic methods use
graph-based techniques, such as random walk and
network diffusion .
In this paper, we focus on a particular type of chemogenomic methods, namely feature-based methods, where
drugs and targets are represented with sets of descriptors
(i.e. feature vectors). For example, He et al. represented
drugs and targets using common chemical functional
groups and pseudo amino acid composition, respectively
 , while Yu et al. used molecular descriptors that were
calculated using the DRAGON package and the
PROFEAT web server for drugs and targets, respectively . Other descriptors have also been used such as
position-specific scoring matrices , 2D molecular fingerprints , MACCS fingerprints , and domain and
PubChem fingerprints .
In general, many of the existing methods treat drugtarget interaction prediction as a binary classification
problem where the positive class consists of interacting drug-target pairs and the negative class consists of
non-interacting drug-target pairs. Clearly, there exists a
between-class (or inter-class) imbalance as the number of
the non-interacting drug-target pairs (or majority negative class instances) far exceeds that of the interacting
drug-target pairs (or minority positive class instances).
This results in biasing the existing prediction methods
towards classifying instances into the majority class to
minimize the classification errors . Unfortunately,
minority class instances are the ones of interest to us. A
common solution that was used in previous studies (e.g.
 ) is to perform random sampling from the majority
class until the number of sampled majority class instances
matches that of the minority class instances. While this
considerably mitigates the bias problem, it inevitably leads
to the discarding of useful information (from the majority
class) whose inclusion may lead to better predictions.
The other kind of class imbalance that also degrades
prediction performance, but has not been previously
addressed, is the within-class (or intra-class) imbalance
which takes place when rare cases are present in the data
 . In our case, there are multiple different types of drugtarget interactions in the positive class, but some of them
are represented by relatively fewer members than others
and can be considered as less well-represented interaction
groups (also known as small concepts or small disjuncts).
If not processed well, they are a source of errors because
predictions would be biased towards the well-represented
interaction types in the data and ignore these specific
small concepts.
In this paper, we propose a simple method that
addresses the two imbalance problems stated above.
The Author(s) BMC Bioinformatics 2016, 17(Suppl 19):509
 
Firstly, we provide a solution for the high imbalance ratio
between the minority and majority classes while greatly
decreasing the amount of information discarded from
the majority class. Secondly, our method also deals with
the within-class imbalance prevalent in the data by balancing the ratios between the different concepts inside
the minority class. Particularly, we first perform clustering to detect homogenous groups where each group
corresponds to one specific concept and the interactions
within smaller groups are relatively easier to be incorrectly
classified. As such, we artificially enhance small groups
via oversampling, which essentially helps our classification model focus on these small concepts to minimize
classification errors.
This section provides our dataset information including
raw drug-target interaction data and the data representation that turns each drug-target pair into its feature vector
representation.
Drug-target interaction data
The interaction data used in this study was collected
recently from the DrugBank database . Some statistics regarding the
collected interaction data are given in Table 1. In total,
there are 12674 drug-target interactions between 5877
drugs and their 3348 protein interaction partners. The full
lists of drugs and targets used in this study as well as the
interaction data (i.e. which drugs interact with which targets) have been included as supplementary material [see
Additional files 1, 2 and 3].
Data representation
After having obtained the interaction data, we generated
features for the drugs and targets respectively. Particularly, descriptors for drugs were calculated using the Rcpi
 package. Examples of drug features include constitutional, topological and geometrical descriptors among
other molecular properties. Note that biotech drugs have
been excluded from this study as Rcpi could only generate such features for small-molecule drugs. The statistics
given in Table 1 reflect our final dataset after the removal
of these biotech drugs.
Now, we describe how target features were obtained.
Since it is generally assumed that the complete information of a target protein is encoded in its sequence , it
may be intuitive to represent targets by their sequences.
Table 1 Statistics of the interaction dataset used in this study
Interactions
However, representing the targets this way is not suitable for machine learning algorithms because the length
of the sequence varies from one protein to another. To
deal with this issue, an alternative to using the raw protein sequences is to compute (from these same sequences)
a number of different descriptors corresponding to various protein properties. The list of computed features is
intended to be as comprehensive as possible so that it may,
as much as possible, convey all the information available
in the genomic sequences that they were computed from.
Computing this list of features for each of the targets lets
them be represented using fixed-length feature vectors
that can be used as input to machine learning methods.
In our work, the target features were computed from their
genomic sequences with the help of the PROFEAT 
web server.
The features that have been used to represent targets
in this work are descriptors related to amino acid composition; dipeptide composition; autocorrelation; composition, transition and distribution; quasi-sequence-order;
amphiphilic pseudo-amino acid composition and total
amino acid properties. Note that a similar list of features was used previously in . Subsets of these features
have also been used in other previous studies concerning
drug-target interaction prediction . More information regarding the computed features can be accessed at
the online documentation webpage of the PROFEAT web
server where all the features are described in detail.
After generating features for drugs and targets, there
were features that had constant values among all drugs (or
targets). Such features were removed as they would not
contribute to the prediction of drug-target interactions.
Furthermore, there were other features that had missing
values for some of the drugs (or targets). For each of these
features, the missing values were replaced by the mean of
the feature over all drugs (or targets). In the end, 193 and
1290 features remained for drugs and targets, respectively.
The full lists of drug features and target features used in
this study have been included as supplementary material
[see Additional files 4 and 5].
Next, every drug-target pair is represented by feature
vectors that are formed by concatenating the feature vectors of the corresponding drug and target involved. For
example, a drug-target pair (d, t) is represented by the
feature vector,
[ d1, d2, . . . , d193, t1, t2, . . . , t1290] ,
where [ d1, d2, . . . , d193] is the feature vector corresponding to drug d, and [ t1, t2, . . . , t1290] is the feature vector corresponding to target t. Hereafter, we also refer
to these drug-target pairs as instances. Finally, to avoid
potential feature bias in its original feature values, all features were normalized to the range using min-max
The Author(s) BMC Bioinformatics 2016, 17(Suppl 19):509
 
normalization before performing drug-target interaction
prediction as follows
∀i = 1, . . . , 193 , di =
di −min(di)
max(di) −min(di)
∀j = 1, . . . , 1290 , tj =
tj −min(tj)
max(tj) −min(tj).
The feature vectors that were computed for the drugs
and targets have been included as supplementary material
[see Additional files 6 and 7].
The proposed method was developed with an intention to
deal with two key imbalance issues, namely the betweenclass imbalance and the within-class imbalance. Here, we
describe in detail how each of these imbalance issues was
handled. For notation, we use P to refer to the set of
positive instances (i.e. the known experimentally verified
drug-target interactions) and use N to refer to the remaining negative instances (consisting of all other drug-target
pairs that do not occur in P).
Technically speaking, these remaining instances should
be called unlabeled instances as they have not been experimentally verified to be true non-interactions. In fact, we
believe that some of the instances in N are actually true
drug-target interactions that have not been discovered
yet. Nevertheless, to simplify our discussion, we refer to
them as negative instances since we assume the proportion of non-interactions in N to be quite high.
Our proposed algorithm
We propose a simple ensemble learning method where
the prediction results of the different base learners are
aggregated to produce the final prediction scores. For base
learners, our ensemble method uses decision trees which
are popularly used in ensemble methods (e.g. random forest ). Decision trees are known to be unstable learners,
meaning that their prediction results are easily perturbed
by modifying the training set, making them a good fit with
ensemble methods which make use of the diversity in their
base learners to improve prediction performance .
It is generally known that an ensemble learning method
improves prediction performance over any of its constituent base learners only if they are uncorrelated. Intuitively, if the base learners of an ensemble method were
identical, then there would no gain in prediction performance at all. As such, adding diversity to the base learners
is important.
One way of introducing diversity to the base learners
that is used in our method is supplying each base learner
with a different training set. Another way of adding diversity that we also employ here is feature subspacing; that is,
for each of the base learners, we represent the instances
using a different subset of the features. More precisely, for
each base learner, we randomly select two thirds of the
features to represent the instances.
Algorithm 1 shows our pseudocode for the overall architecture of our proposed method where the specific steps
for handling the two imbalance issues are discussed in
the following subsections. Following is a summary of the
• T decision trees are trained (T is a parameter),
• Prediction results of the T trees are aggregated by
simple averaging to give the final prediction scores.
• For each decision tree, treei:
1. Randomly select a subset of the features, Fi.
2. Obtain Pi by performing feature subspacing on P
3. Oversample Pi.
4. Randomly sample Ni from N such that |Ni| = |Pi|.
5. Remove instances of Ni from N.
6. Modify Ni by performing feature subspacing on it
7. Train treei using the positive set Pi and the
negative set Ni as the training set.
Algorithm 1: Pseudocode of proposed method.
Input: P = positive instances,
N = negative instances,
T = number of base learners.
Result: ensembleclassifier = trained ensemble.
for i ←1 to T do
Fi = randomly selected feature subset
Pi = P(Fi)
//feature subspacing
//for within-class imbalance
Pi = OVERSAMPLE(Pi)
//for between-class imbalance
Randomly sample Ni ∈N
until |Ni| = |P|;
Ni = Ni(Fi)
//feature subspacing
treei = train decision tree using Pi and Ni
return ensemble = 1
Within-class imbalance
We are now ready to explain the OVERSAMPLE(Pi) in
Algorithm 1. As mentioned in the introduction section,
within-class imbalance refers to the presence of specific
The Author(s) BMC Bioinformatics 2016, 17(Suppl 19):509
 
types of interactions in the positive set P that are underrepresented in the data as compared to other interaction
types. Such cases are referred to as small concepts, and
they are a source of errors because prediction algorithms
are typically biased in that they favor the better represented interaction types in the data so as to achieve better
generalization performance on unseen data .
To deal with this issue, we use the K-means++ clustering method to cluster the data into K homogenous
clusters (K is a parameter) where each cluster corresponds to one specific concept. This results in interaction
groups/clusters of different sizes. The assumption here is
that the small clusters (i.e. those that contain few members) correspond to the rare concepts (or small disjuncts)
that we are concerned about. Supposing that the size of
the biggest cluster is maxClusterSize, all clusters are resampled until their sizes are equal to maxClusterSize. This
way, all concepts become represented by the same number
of members and are consequently treated equally in training our classifier. Essentially, this is similar in spirit to the
idea of boosting where examples that are incorrectly
classified have their weights increased so that classification methods will focus on the hard-to-classify examples
to minimize the classification errors.
Algorithm 2 shows the pseudocode for the oversampling procedure. Pi is first clustered into K clusters of
different sizes. After determining the size of the biggest of
these clusters, maxClusterSize, all clusters are re-sampled
until their sizes are equal to maxClusterSize. The resampled clusters are then assigned to Pi before returning
it to the main algorithm in the “Our proposed algorithm”
subsection.
Algorithm 2: Oversampling procedure.
Input: Pi = positive instances.
Result: ensemble = trained ensemble.
Cluster Pi into K clusters: C1 . . . CK
maxClusterSize = maxk size(Ck)
for j ←1 to K do
Re-sample Cj
until size(Cj) = maxClusterSize;
Pi = Pi ∪members(Cj)
An issue that we considered while implementing the
oversampling procedure was that of data noise. Indeed,
emphasizing small concept data can become a counterproductive strategy if there is much noise in the data.
However, the data used in this study was obtained from
DrugBank , and since the data stored there is regularly curated by experts, we have high confidence in the
interactions observed in our dataset. In other words, the
interactions (or positive instances) are quite reliable and
are expected to contain little to no noise. On the other
hand, the negative instances are expected to contain noise
since, as mentioned earlier, these negative instances are
actually unlabeled instances that likely contain interactions that have not been discovered yet. Here, we only
amplify the importance of small-concept data from the
positive set (i.e. the set of known drug-target interactions).
Since the positive instances being emphasized are highly
reliable, the potential impact of noise on the prediction
performance is minimal.
Between-class imbalance
Between-class imbalance refers to the bias in the prediction results towards the majority class, leading to errors
where minority examples are classified into the majority class. We wanted to ensure that predictions are not
biased towards the majority class while, at the same time,
decrease the amount of useful majority class information
being discarded. To that end, a different set of negative instances Ni is randomly sampled from N for each
base learner i such that |Ni| = |Pi|. The 1:1 ratio of the
sizes of Pi and Ni eliminates the bias of the prediction
results towards the majority class. Moreover, whenever a
set of negative instances Ni is formed for a base learner,
its instances are excluded from consideration when we
perform random sampling from N for future base learners. The different non-overlapping negative sets that are
formed for the base learners lead to better coverage of the
majority class in training the ensemble classifier.
Note that, to improve coverage of the majority class
in training, the value of the parameter T needs to be
increased where T is the number of base learners in the
ensemble method, which also determines the number of
the times that we want to draw instances from the negative set N. In general, with the increase of the value of T,
more useful information from the majority class will be
incorporated to build our final classification model.
Results and discussion
In this section, we have performed comprehensive experiments in which we compare our proposed technique with
4 existing methods. Below, we first elaborate on our experimental settings. Next, we provide details of our crossvalidation experiments and comparison results. Finally,
we focus on predicting interactions for new drugs and new
targets, which is crucial for both novel drug design and
drug repositioning tasks.
The Author(s) BMC Bioinformatics 2016, 17(Suppl 19):509
 
Experimental settings
To evaluate our proposed method, we conducted an
empirical comparison with 2 state-of-the-art methods and
2 baseline methods. Particularly, Random Forest and SVM
are existing state-of-the-art methods that were both used
in a recent work for predicting drug-target interactions
 . Note that the parameters for these 2 methods were
set to the default optimal values supplied in . We also
included two baseline methods, namely Decision Tree and
Nearest Neighbor. For Decision Tree, we employed the
fitctree built-in package in MATLAB and used the default
parameter values as they were found to produce reasonable good results. As for Nearest Neighbor, it produces a
prediction score for every test instance a by computing
its similarity to the nearest neighbor b from the minority
class P (which contains the known interacting drug-target
pairs) based on the following equations,
scorea = maxb(sim(a, b)),
sim(a, b) = exp
−||a −b||2
where |F| is the number of features.
For the above 4 competing methods, they all used P
as the positive set, while the negative set was sampled
randomly from N until its size reached |P|. In contrast,
our method oversampled P for each base learner i, giving Pi, and a negative set Ni was sampled from N for each
base learner i such that |Ni| = |Pi|. Note that different
base learners have used different negative sets in our proposed method. In addition, the parameters K and T for
our method were set to 100 and 500, respectively, to generate sufficient homogenous clusters and leverage more
negative data.
Cross validation experiments
To study the prediction performance of our proposed
method, we performed a standard 5-fold cross validation
and computed the AUC for each method (i.e. the area
under the ROC curve). More precisely, for each of the
methods being compared, 5 AUC scores were computed
(one for each fold) and then averaged to give the final overall AUC score. Note that AUC is known to be insensitive
to skewed class distributions . Considering that the
drug target interaction dataset used in this study is highly
imbalanced (we have much more negatives than positives), AUC score is thus a suitable metric for evaluation
of the different computational methods.
Figure 1 shows the ROC curves for various methods. It
is obvious that the ROC curve for our proposed method
dominates those for the other methods, implying that it
has a higher AUC score. In particular, Table 2 shows the
AUC scores for different methods in details. Our proposed method achieves an AUC of 0.900 and performs
significantly better than other existing methods.
As shown in Table 2, the second best method is Random Forest. Moreover, our method is similar to Random
Fig. 1 Plot of ROC curves of the different methods. ROC curves for the different methods are plotted together, providing a visual comparison
between their prediction performances
The Author(s) BMC Bioinformatics 2016, 17(Suppl 19):509
 
Table 2 AUC Results of cross validation experiments
Decision Tree
0.760 (0.004)
0.804 (0.004)
Nearest Neighbor
0.814 (0.003)
Random Forest
0.855 (0.006)
Proposed Method
0.900 (0.006)
Standard deviations are included between parentheses. Best AUC is indicated
Forest in that they are both ensembles of decision trees
with feature subspacing. Both our proposed method and
Random Forest perform very well in drug-target interaction prediction, showing that ensemble methods are
indeed superior to achieve good prediction performance.
However, our method differs from Random Forest in two
perspectives. Firstly, Random Forest performs bagging on
a single sampled negative set for each base learner, while
our method leverages multiple non-overlapping negative
sets for different base learners. Secondly, our method also
oversamples the positive set in a way that is intended
to deal with the within-class imbalance, while Random
Forest does not. Due to these 2 differences, our method
achieved an AUC of 0.900, which is 4.5% higher than
Random Forest with an AUC of 0.855. This supports our
claim that dealing with class imbalance in the data is
important for improving the prediction performance.
Predicting interactions for new drugs and targets
A scenario that may occur in drug discovery is that we
may have a target protein of interest for which no information on interacting drugs is available. This is typically
a more challenging case than if we had information on
drugs that the target protein is already known to interact
with. A similar scenario that occurs frequently in practice is that we have new compounds (potential drugs) for
which no interactions are known yet, and we want to
determine candidate target proteins that they may interact with. When there is no interaction information on a
drug or target, they are referred to as a new drug or a new
To test the ability of our method to correctly predict interactions in these challenging cases, we simulated
the cases of new drugs and targets by leaving them out
of our dataset, training with the rest of the data and
then obtaining predictions for these new drugs and new
targets. In our case studies, we ranked the predicted
Table 3 Top 20 targets predicted for Aripiprazole and Theophylline
Aripiprazole
Theophylline
5-hydroxytryptamine receptor 2A
cAMP-specific 3’,5’-cyclic phosphodiesterase 4A
Alpha-1B adrenergic receptor
Histone deacetylase 2
Muscarinic acetylcholine receptor M2
Adenosine receptor A2a
5-hydroxytryptamine receptor 2C
Adenosine receptor A1
D(1) dopamine receptor
cGMP-inhibited 3’,5’-cyclic phosphodiesterase A
Alpha-2C adrenergic receptor
cAMP-specific 3’,5’-cyclic phosphodiesterase 4B
Histamine H1 receptor
Adenosine receptor A2b
Muscarinic acetylcholine receptor M3
cGMP-specific 3’,5’-cyclic phosphodiesterase
D(2) dopamine receptor
Adenosine receptor A3
Muscarinic acetylcholine receptor M1
Thymidylate synthase
5-hydroxytryptamine receptor 1B
Histone deacetylase 1
Delta-type opioid receptor
Cyclin-dependent kinase 2
D(4) dopamine receptor
Reverse transcriptase/RNaseH
D(3) dopamine receptor
Cap-specific mRNA (nucleoside-2’-O-)-methyltransferase
5-hydroxytryptamine receptor 1D
Multi-sensor signal transduction histidine kinase
Alpha-1 adrenergic receptor
Alpha-1 adrenergic receptor
Muscarinic acetylcholine receptor M5
Serine/threonine-protein kinase pim-1
Muscarinic acetylcholine receptor M4
Serine-protein kinase ATM
Alpha-2B adrenergic receptor
Proto-oncogene tyrosine-protein kinase Src
5-hydroxytryptamine receptor 1A
Phosphatidylinositol 4,5-bisphosphate 3-kinase
catalytic subunit alpha isoform
Targets in bold are the true known targets of the drugs
The Author(s) BMC Bioinformatics 2016, 17(Suppl 19):509
 
interactions and investigated the top 20 interactions.
In particular, we investigated two drugs, Aripiprazole
and Theophylline, and two targets, Glutamate receptor
ionotropic, kainate 2 and Xylose isomerase, respectively.
Tables 3 and 4 show the top 20 predictions for these drugs
and targets.
In our dataset, Aripiprazole and Theophylline are known
to interact with 25 and 8 targets, respectively. Out of the
top 20 predicted targets for Aripiprazole, 19 were correctly predicted as shown in Table 3. For Theophylline, all
of its 8 interactions were highly ranked in its top 20 list.
Moreover, Glutamate receptor ionotropic, kainate 2 and
Xylose isomerase have 20 and 7 interacting drugs in our
dataset. Out of the top 20 predicted drugs for Glutamate
receptor ionotropic, kainate 2, 17 were successfully predicted as shown in Table 4. For Xylose isomerase, all its
7 drugs were predicted in the top 20. These promising
results show that our method is indeed reliable for predicting interactions in the cases of new drugs or targets.
Finally, we investigated the possibility that some of
the unconfirmed interactions in Tables 3 and 4 might
be true. For example, we observed that Delta-type opioid receptor is indeed a target for Aripiprazole, which
was confirmed from the T3DB online database . We
have also confirmed, using the STITCH online database
 , that Adenosine receptor A3 and Histone deacetylase 1 are true targets of Theophylline as well. These
findings suggest that the unconfirmed interactions in
Tables 3 and 4 may be true interactions that have not been
discovered yet.
Conclusion
We proposed a simple yet effective ensemble method for
predicting drug-target interactions. This method includes
techniques for dealing with two types of class imbalance in the data, namely between-class imbalance and
within-class imbalance. In our experiments, our method
has demonstrated significantly better prediction performance than that of the state-of-the-art methods via crossvalidation. In addition, we simulated new drug and new
target prediction cases to evaluate our method’s performance under such challenging scenarios. Our experimental results show that our proposed method was able to
highly rank true known interactions, indicating that it
is reliable in predicting interactions for new compounds
or previously untargeted proteins. This is particularly
important in practice for both identifying new drugs and
detecting new targets for drug repositioning.
Table 4 Top 20 drugs predicted for Glutamate receptor ionotropic, kainate 2 and Xylose isomerase
Glutamate receptor ionotropic, kainate 2
Xylose isomerase
Metharbital
Butabarbital
alpha-D-Xylopyranose
Pentobarbital
L-Xylopyranose
Thiopental
beta-D-Ribopyranose
D-Sorbitol
Secobarbital
D-Xylulose
Hexobarbital
2-Methylpentane-1,2,4-Triol
Tris-Hydroxymethyl-Methyl-Ammonium
Amobarbital
(4r)-2-Methylpentane-2,4-Diol
Phenobarbital
Butalbital
Beta-D-Glucose
Aprobarbital
D-Allopyranose
Methylphenobarbital
2-Deoxy-Beta-D-Galactose
Lysine Nz-Carboxylic Acid
3-O-Methylfructose in Linear Form
Domoic Acid
Dithioerythritol
Heptabarbital
(2s,3s)-1,4-Dimercaptobutane-2,3-Diol
1,4-Dithiothreitol
Mephenytoin
Drugs in bold are true known drugs of the targets
The Author(s) BMC Bioinformatics 2016, 17(Suppl 19):509
 
Additional files
Additional file 1: Drug IDs. This file contains the DrugBank IDs of the
drugs used in this study. (46 kb TXT)
Additional file 2: Target IDs. This file contains the UniProt IDs of the
targets used in this study. (23 kb TXT)
Additional file 3: Drug-target interaction matrix. This file contains the
known drug-target interactions in the form of a matrix, where rows
represent the drugs, and the columns represent the targets. Drug-target
pairs that interact have a 1 in their corresponding cell and 0 otherwise.
(37500 kb TXT)
Additional file 4: List of drug features. This file contains the names of the
drug features used in this study. More details on the features can be found
at: 
(1 kb TXT)
Additional file 5: List of target features. This file contains the names of the
target features used in this study. More details on the features can be
found at: (16 kb TXT)
Additional file 6: Drug feature vectors. This file contains the feature
vectors for the drugs. (6180 kb TXT)
Additional file 7: Target feature vectors. This file contains the feature
vectors for the targets. (24400 kb TXT)
Acknowledgements
Not applicable.
Declarations
This article has been published as part of BMC Bioinformatics Volume 17
Supplement 19, 2016. 15th International Conference On Bioinformatics
 : bioinformatics. The full contents of the supplement are
available online 
supplements/volume-17-supplement-19.
Publication of this article was funded by the Agency for Science, Technology
and Research (A*STAR), Singapore.
Availability of data and materials
The dataset supporting the conclusions of this article is included within the
article (and its additional files).
Authors’ contributions
AE performed the data collection, the implementation of the proposed
method and the writing of this document. MW and X-LL assisted with the
design of the proposed method and provided useful feedback and discussion
throughout the course of this work. C-KK assisted in the writing of this
document and helped with enhancing the results and discussion sections of
this work. All authors read and approved the final manuscript.
Competing interests
The authors declare that they have no competing interests.
Consent for publication
Not applicable.
Ethics approval and consent to participate
Not applicable.
Author details
1School of Computer Science & Engineering, Nanyang Technological
University, Nanyang Ave., Singapore 639798, Singapore. 2Institute for
Infocomm Research (I2R), A*Star, Fusionopolis Way, Singapore 138632,
Singapore.
Published: 22 December 2016