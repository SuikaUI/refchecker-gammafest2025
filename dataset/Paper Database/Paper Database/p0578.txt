METHODS ARTICLE
published: 23 December 2013
doi: 10.3389/fninf.2013.00039
Explicit B-spline regularization in diffeomorphic image
registration
Nicholas J. Tustison 1* and Brian B. Avants 2
1 Department of Radiology and Medical Imaging, University of Virginia, Charlottesville, VA, USA
2 Penn Image Computing and Science Laboratory, Department of Radiology, University of Pennsylvania, Philadelphia, PA, USA
Edited by:
Hans J. Johnson, The University of
Reviewed by:
Ipek Oguz, UNC Chapel Hill, USA
Andrey Fedorov, Brigham and
Women’s Hospital, USA
*Correspondence:
Nicholas J. Tustison, Department of
Radiology and Medical Imaging,
University of Virginia, 480 Ray C
Hunt Drive, Suite 124,
Charlottesville, VA 22903, USA
e-mail: 
Diffeomorphic mappings are central to image registration due largely to their topological
properties and success in providing biologically plausible solutions to deformation and
morphological estimation problems. Popular diffeomorphic image registration algorithms
include those characterized by time-varying and constant velocity ﬁelds, and symmetrical
considerations. Prior information in the form of regularization is used to enforce
transform plausibility taking the form of physics-based constraints or through some
approximation thereof, e.g., Gaussian smoothing of the vector ﬁelds [a la Thirion’s
Demons ]. In the context of the original Demons’ framework, the so-called
directly manipulated free-form deformation (DMFFD) can be
viewed as a smoothing alternative in which explicit regularization is achieved through fast
B-spline approximation. This characterization can be used to provide B-spline “ﬂavored”
diffeomorphic image registration solutions with several advantages. Implementation is
open source and available through the Insight Toolkit and our Advanced Normalization
Tools (ANTs) repository. A thorough comparative evaluation with the well-known SyN
algorithm , implemented within the same framework, and its B-spline
analog is performed using open labeled brain data and open source evaluation tools.
Keywords: Advanced normalization tools, diffeomorphisms, directly manipulated free-form deformation, Insight
Toolkit, spatial normalization
1. INTRODUCTION
Establishment of anatomical and functional correspondence is
a crucial step toward gaining insight into biological processes.
Neuroscience research efforts, such as characterizing brain morphology, require accurate and robust methods for producing
such mappings. The extensive literature detailing methodology is
evidence of the rich history of algorithmic development which
continues contemporaneously. We highlight several key historical contributions which are particularly relevant to the work
presented.
Free-form deformation (FFD) image registration, characterized by regularization based on the B-spline basis functions, has
several advantages including algorithmic simplicity, good performance, and guaranteed parametric continuity. Current research
was preceded by related work for geometric modeling and originated with such important contributions as Szeliski and Coughlan ; Thévenaz et al. , and
Rueckert et al. . Continued development within this early
spline-based paradigm produced additional innovations such as
integrated similarity metrics , additional transformation constraints , and
notable open source implementations .
Parallel to this branch of algorithmic progress are the informally denoted “dense transforms” perhaps best exempliﬁed by
Thirion’s seminal contribution . Relationships
with earlier elastic 
and ﬂuid registration methods are
detailed in the works of Bro-Nielsen and Gramkow and
Pennec et al. who observe that smoothing via Gaussian
convolution, a deﬁning characteristic of Demons, of the update
or total displacement ﬁeld is a greedy approximation for solving the partial differential equations governing the physics of
an elastic or ﬂuid deformation, respectively. However, the use
of such approximations entails that physical properties, such as
topological regularity, are no longer guaranteed.
It is interesting to note that within this context, traditional
FFD algorithms can be viewed as a type of ﬂuid-like Demons
approach where, rather than projecting the update ﬁeld to the
space of regularized ﬁelds using Gaussian convolution, gradient ﬁelds are projected to a smooth space characterized by the
B-spline basis functions. This analogy was hinted at in our earlier work where we showed that ﬁtting
the update ﬁeld to a B-spline object using a fast approximation
routine is equivalent to a preconditioning of the standard gradient used in gradient descent-based
FFD optimization. This preconditioning is used to mitigate the
hemstitching effect induced by the ill-conditioned nature of the
traditional gradient-based FFD formulation 1. We denoted this
new FFD variant as directly manipulated free-form deformation
1This phenomenon is explained in greater detail in Tustison et al. but,
brieﬂy, the distribution of the uniform B-spline basis functions spanning the
image domain produces long ravines in the image registration energy topography. These topographical features cause an inefﬁcient back-and-forth traversal
in classic steepest descent optimization, also known as “hemstitching.”
Frontiers in Neuroinformatics
www.frontiersin.org
December 2013 | Volume 7 | Article 39 | 1
NEUROINFORMATICS
Tustison and Avants
DMFFD diffeomorphic image registration
(DMFFD) and, as part of the ITKv4 refactoring efforts, has been
implemented for use with the new registration framework2 which
permits both B-spline smoothing on the update (“viscous”) and
total (“elastic”) displacement ﬁelds at each iteration (cf analogous
Gaussian, i.e., Demons, implementation3).
Continuing from the work of Christensen et al. 
and subsequent exploration into the mathematical formalisms
of diffeomorphisms , the
well-known Large Deformation Diffeomorphic Metric Mapping
(LDDMM) algorithm was proposed in Beg et al. . In contrast to the mapping produced by Christensen et al. ,
LDDMM yields the geodesic solution in the space of diffeomorphisms between two images. Since its introduction, LDDMM
has inspired much innovation in the image registration literature. Applying the log-Euclidean framework of Arsigny et al.
 , DARTEL (Diffeomorphic Anatomic Registration using
Exponential Lie algebra) uses a constant velocity ﬁeld parameterization to provide a fast, diffeomorphic alternative . Additionally, symmetrical considerations in the velocity
ﬁeld parameterization are discussed in Avants et al. in
the context of a cross correlation similarity metric. By explicitly symmetrizing the LDDMM formulation, this Symmetric
Normalization (SyN) approach minimizes the bias of the resulting transformation when selecting the “ﬁxed” and “moving”
images. A greedy version of this algorithm has proven successful in neuroimaging and pulmonary applications as well as in multi-atlas label fusion
 .
Although many extensions of LDDMM rely on some form of
Gaussian convolution for regularization ,
there has been signiﬁcant interest in constraining FFD approaches
to the space of diffeomorphisms. An early attempt reported in
Rueckert et al. enforced diffeomorphic transforms by
concatenating multiple FFD transforms, each of which is constrained to describe a one-to-one mapping. Modat et al. 
incorporated the log-Euclidean framework for enforcing diffeomorphic transformations and ensuring invertibility. Similarly, the
work of De Craene et al. provided a full LDDMM-style
algorithm based on B-splines called temporal FFD in which the
time-varying velocity ﬁeld is modeled using a 4-D B-spline object
(3-D + time). Numerical Eulerian integration of the mapping
propagated within the velocity ﬁeld yields the transform between
parameterized time points.
As alluded to earlier, B-spline approximation can also be used
for regularizing time-varying vector ﬁelds in an analogous fashion
as Gaussian convolution. In this vein, and similar to De Craene
et al. , we reported in Tustison and Avants the
use of an n-D + time B-spline object to represent the characteristic velocity ﬁelds. However, we use the DMFFD formulation to
improve the solution convergence. This also facilitates modeling
temporal periodicity and the enforcement of stationary boundaries. Both this work and our earlier work 
2 
UpdateDisplacementFieldTransform.html.
3 
UpdateDisplacementFieldTransform.html.
demonstrate that the DMFFD framework is potentially applicable to the entire gamut of diffeomorphic registration algorithms
and provides alternative smoothing possibilities with different
continuity properties (e.g., C2 vs. C3).
The two regularization approaches (i.e., Gaussian convolution vs. DMFFD), however, produce characteristically different
solutions. In addition to smoothing kernel differences, Gaussian
convolution tends to “ﬂatten” the signal in contrast to an approximation or ﬁtting of the signal provided by the DMFFD approach.
Also, whereas Gaussian convolution operates entirely within discretized space, the B-spline approximation routine constructs a
continuous object prior to any voxelwise reconstruction of the
sampled ﬁelds. Interestingly, a similar comparison was made with
respect to Gaussian derivative estimation .
Although typically estimated using truncated, discrete Gaussian
convolution, an alternative based on B-spline approximation
demonstrated superior performance with similar computational
Three popular diffeomorphic algorithms and their DMFFD
analogs (LDDMM, DARTEL, and SyN) were implemented by
the authors as part of the recent refactoring of the open source
Insight Toolkit (ITK) although related work had been previously
implemented within the popular Advanced Normalization Tools
(ANTs)4. Given the popularity and excellent performance of the
greedy variant of SyN, our evaluation focus in this work is its Bspline analog which we denote as “B-spline SyN” or “DMFFD
SyN.” Evaluations of the respective algorithmic instantiations are
performed using the antsRegistration program found in
the ANTs repository (also originally developed by the authors).
This permits a direct algorithmic comparison as potential sources
for implementation bias have been reduced .
Additionally, in the spirit of open science, all text, ﬁgures, and
scripts to reproduce the results contained in this work are publicly
available online5.
2. MATERIAL AND METHODS
2.1. THEORETICAL OVERVIEW
Given the spatial domain  of d−dimensionality deﬁned over
image I, a diffeomorphic mapping, φ, parameterized over t ∈
 transforms the image I to the target image J using I ◦φ(x, 1)
where the geodesic path φ(x, t) is described by 
|I ◦φ−1(x, 1) −J|2d
φ is generated as the solution of the ordinary differential equation
= v(φ(x, t), t), φ(x, 0) = Id
where v is a time-dependent smooth ﬁeld (as dictated by the
functional norm L), v :  × t →Rd. Diffeomorphic mappings
between parameterized time points {ta, tb} ∈ are obtained
4 
5 
Frontiers in Neuroinformatics
www.frontiersin.org
December 2013 | Volume 7 | Article 39 | 2
Tustison and Avants
DMFFD diffeomorphic image registration
from Equation (2) through integration of the transport equation,
φ(x, tb) = φ(x, ta) +
ta v(φ(x), t)dt.
However, as pointed out in Avants et al. , implementations
of this standard LDDMM formulation are negatively affected by
the lack of optimization symmetry where arbitrary assignment of
ﬁxed and moving images could lead to different solutions despite
the fact that the theoretical geodesic solution describes the same
parameterized path forwards and backwards. This observation led
to the symmetric formulation of Equation (1) found in Avants
et al. :
L + ∥v2(t)∥2
1 (x, 0.5) −J ◦φ−1
2 (x, 0.5)|2d
= vi(φi(x, t), t), φi(x, 0) = Id, i ∈{1, 2}.
With extension to arbitrary similarity metric choice, the second
term is replaced with
1 (x, 0.5), J ◦φ−1
2 (x, 0.5)
with a popular choice for ∼being a local neighborhood cross
correlation . Note that t is parameterized in opposite directions between φ1 and φ2. A diagrammatic
illustration of the explicit symmetry associated with SyN is shown
in Figure 1.
2.1.1. St. nava’s theory of greed and original SyN
Although presenting a rigorous framework for image registration solutions with desirable properties, the complexity of these diffeomorphic methodologies requires substantial computational resources. For typical 3-D neuroimaging
applications, the corresponding solutions require numerical
integration over and storage of 4-D velocity ﬁelds at each
iteration which is limiting for many common computational
platforms.
Therefore, in addition to the full-scale SyN offering described
in Avants et al. , the authors therein provided a “greedy”
alternative which has demonstrated superior performance in different applications 6 while simultaneously being capable of running
with limited computational resources. This is due to the restriction of the discrete, time-parameterized velocity ﬁeld samples
to their respective endpoints, i.e., the vi(x, t) are sampled at t ∈
6SyN was also the standard registration for the MICCAI 2013 Workshop on
Segmentation: Algorithms Theory, and Applications (SATA) and corresponding challenge ( 
{0, 0.5, 1} implying simultaneous storage of only four transform
vector ﬁelds φ1(x), φ−1
1 (x), φ2(x), and φ−1
2 (x) (cf Figure 1).
Furthermore, the forward and inverse mappings are guaranteed
to be consistent within the discrete domain i.e., ∥φ−1
Id∥2 < ϵ. Since the greedy SyN framework is the focus of
the evaluation, the algorithmic steps are brieﬂy sketched in
Algorithm 1.
Algorithm 1 | Greedy SyN algorithm
φi ←Id, φ−1
▷i ∈{1, 2}
for all image resolution levels do
while not converged do
▷Sv is a smoothing operation on the
update transform ﬁeld
) ▷Sφ is a smoothing operation on
the total transform ﬁeld
▷Inverse ﬁeld
estimation described in Avants et al. 
upsample current φi and φ−1
to next resolution level
return φ ←φ1 ◦φ−1
2 , φ−1 ←φ2 ◦φ−1
2.1.2. Directly manipulated free-form deformation diffeomorphic
Although several velocity ﬁeld regularization operators have been
proposed, many algorithmic instantiations default to Gaussian
smoothing due to its simplicity both in implementation and complexity terms. A viable and practical alternative is the DMFFD
approach based on B-splines for explicit regularization of vector
Given the similarity metric ∼, the d-dimensional update
ﬁeld (i.e., preconditioned gradient ﬁeld), δvi1,...,id, is given by
δvi1,...,id =
j = 1 Bij(xc
where the set of B(·) are the univariate B-spline basis functions for separately modulating regularity in the solution for
each parametric dimension, N is the number of voxels in
the reference image domain, r is the spline order in all
dimensions,7 and ∂∼
∂x is the spatial similarity metric gradient at
7In terms of implementation, spline orders can be speciﬁed separately for each
dimension but, for simplicity, we only specify a single spline order.
8For comparison, FFD image registration uses the calculated gradient which,
for a single control point is evaluated using , J ◦φ2(0.5)
. The full forward and
inverse transforms are found through composition, i.e., φ = φ1 ◦φ−1
and φ−1 = φ2 ◦φ−1
Similarly, in the case of d-dimensional time-parameterized diffeomorphic image registration, the time-dependent velocity ﬁeld
can be represented as a (d + 1)-dimensional B-spline object
vi1,...,id,itBit(t)
other explicit regularization):
δvi1,...,id =
Intuitively, this can be understood as a distribution of the spatial similarity
metric gradient to the set of control points according to the basis function
weighting which, due to the local property of B-splines, is only non-zero in a
localized region surrounding each sample point. The problematic issue with
standard FFD image registration is that the parametric domain of the peripheral B-spline basis functions extends beyond the image boundaries resulting
in a relatively lower weighting contribution effect. As a corrective, Equation
(7) normalizes the control point gradient contribution by the actual B-spline
weighting overlap with the image domain.
Note that this modiﬁcation is ﬁrst discussed and derived in Hsu et al. 
and Lee et al. in the context of ﬁtting scattered data for a computer
graphics audience which was an extension and improvement over Sederberg’s
original FFD manipulation computer graphics technique . Whereas the latter (i.e., FFD) technique performs geometric deformation of the graphics object embedded in a B-spline object via
manipulation of the control points, the former (i.e., DMFFD) technique permits direct manipulation of the actual object with the control point values
being updated indirectly. The corresponding fast algorithm for scattered data
approximation using DMFFD was proposed in Lee et al. .
Based on the needs of one of our colleagues, the ﬁrst author (N.T.) implemented and generalized the work of Lee et al. which was reported in
Tustison and Gee and was N.T.’s very ﬁrst ITK contribution. A couple years later the second author (B.A.) requested an FFD implementation
for ANTs which N.T. naively assumed to be equivalent to applying Tustison
and Gee to smoothing the metric gradient (a la Demons). The subsequent realization that this assumption was incorrect and ﬁguring out why the
algorithm still worked despite it not being a “correct” FFD implementation
resulted in Tustison et al. .
where vi1,...,id,it is a (d + 1)-dimensional control point lattice
characterizing the velocity ﬁeld. The preconditioned gradient
analog of Equation (7) for updating the time-varying velocity
ﬁeld control point lattice is
δvi1,...,id,it =
j = 1 Bij(xc
which takes into account the temporal locations of the dense gradient ﬁeld sampled in t ∈ . Nt and N are the number of
time point samples and the number of voxels in the reference
image domain, respectively9.
For regularization of constant velocity ﬁelds, e.g., SyN or
DARTEL, updating the ﬁeld is performed using Equation (7). In
the case B-spline SyN, this applies to the smoothing operators Sv
and Sφ in Algorithm 1 although best performance (at least for the
data described in this work) typically employs no smoothing on
the total transform ﬁeld, i.e., Sφ is such that Sφ it was shown that one could associate each a sample,
c with a conﬁdence weighting. Thus, in order to
enforce stationary boundaries for all described DMFFD-based diffeomorphic
algorithms, we assign to the image boundary metric gradients the null vector
with a corresponding large conﬁdence value.
Frontiers in Neuroinformatics
www.frontiersin.org
December 2013 | Volume 7 | Article 39 | 4
Tustison and Avants
DMFFD diffeomorphic image registration
• itk::TimeVaryingVelocityFieldTransform
ParametersAdaptor
• itk::TimeVaryingVelocityFieldImage
RegistrationMethodv4
• itk::GaussianSmoothingOnUpdateTime
VaryingVelocityFieldTransform
• itk::TimeVaryingBSplineVelocityField
• itk::TimeVaryingBSplineVelocityField
ImageRegistrationMethodv4
• itk::TimeVaryingBSplineVelocityField
TransformParametersAdaptor
• itk::ConstantVelocityFieldTransform
• itk::ConstantVelocityFieldTransform
ParametersAdaptor
• itk::GaussianExponentialDiffeomorphic
• itk::GaussianExponentialDiffeomorphic
TransformParametersAdaptor
• itk::BSplineExponentialDiffeomorphic
• itk::BSplineExponentialDiffeomorphic
TransformParametersAdaptor
• itk::SyNImageRegistrationMethod
• itk::BSplineSyNImageRegistrationMethod
These and other classes (e.g., similarity metrics, optimization methods, and utility classes) were developed as part of
the ITKv4 registration framework refactoring. Much of the
original ITK image registration infrastructure was left intact
including the so-called “sparse” transforms such as various
rigid (versor, Euclidean) and other linear transforms. The
transform classes contributed by our group were, including those listed above, were meant to augment what already
existed. All the transforms listed above are derived from the
itk::DisplacementFieldTransform class which permits speciﬁcation of a transform described by a sampled displacement ﬁeld. The derived classes are then modiﬁed according
to the different transform constraints. Other types of classes
are used to coordinate the image registration process. The
itk::ImageRegistrationMethodv4 is the base interface for performing all image registration steps. Smoothing
and resampling for multi-resolution image registration is performed in this class as is the calling of the selected optimizer. Output consists of a single optimized transform. Multiple
instantiations of this class in series, in conjunction with
the itk::CompositeTransform class, are used to optimize a composition of transforms. Some of the diffeomorphic
approaches do not easily ﬁt into this generalized optimization
framework necessitating specialized method classes such as those
listed above. The adaptors 10 are used to modify the parameters between resolution levels during the course of transform
optimization within the methods classes. For example, the resolution of the displacement ﬁeld transforms follows that of the
image resolution and the updating is handled by the corresponding transform adaptors. Further details can be found in the
documentation provided within the classes themselves11.
The class itk::BSplineScatteredDataPointSet
ToImageFilter
regularization
which is an implementation of the methods described in
Tustison and Gee . Although applicable to various
scenarios (e.g., curve and surface estimation), it has been
optimized for imaging applications and multi-threaded for
fast processing on suitable machines. Additionally, numerical
integration for solving Equations (2) and (3) utilizes Runge-
Kutta which provides a more stable alternative than other
methods . Implementation is provided in the
class itk::TimeVaryingVelocityFieldIntegration
ImageFilter.
A complete packaging of these classes has been made available
as part of our ANTs toolkit12. The antsRegistration program13takes advantage of the enhanced ITKv4 registration framework and was developed by the authors to provide a robust and
versatile solution for a wide variety of image registration applications. The basic conceptualization for use is that one can set-up
any number of registration “stages” with each stage being characterized by a speciﬁed transform. For example, a representative
command call is as follows:
# Register the $fixed and $moving images
# with initial alignment of the centers
# of intensity followed by the following
# three stages:
rigid -> affine -> B-spline SyN
antsRegistration
--dimensionality 3 \
--output ${prefix} \
--use-histogram-matching 1 \
--initial-moving-transform [${fixed},
${moving},1] \
--transform Rigid[0.1] \
--metric MI[${fixed},${moving},1,32,
Regular,0.25] \
--convergence 1000x500x250x100 \
--smoothing-sigmas 3x2x1x0 \
--shrink-factors 8x4x2x1 \
--transform Affine[0.1] \
10We gratefully acknowledge Marius Staring’s contribution in providing the
broad design of the adaptors.
11 
12 
13The long and short command line help menus can be invoked by the commands ‘antsRegistration -help’ and ‘antsRegistration -h’,
respectively.
Frontiers in Neuroinformatics
www.frontiersin.org
December 2013 | Volume 7 | Article 39 | 5
Tustison and Avants
DMFFD diffeomorphic image registration
--metric MI[${fixed},${moving},1,32,
Regular,0.25] \
--convergence 1000x500x250x100 \
--smoothing-sigmas 3x2x1x0 \
--shrink-factors 8x4x2x1 \
--transform BSplineSyN[0.1,26,0,3] \
--metric CC[${fixed},${moving},1,4] \
--convergence 100x70x50x20 \
--smoothing-sigmas 3x2x1x0 \
--shrink-factors 6x4x2x1
# Apply the resulting transforms (generic
# affine + B-spline SyN) to the
# moving labels.
antsApplyTransforms
--dimensionality 3 \
--input ${moving_labels} \
--reference-image ${fixed} \
--output ${moving_warped_labels} \
--n NearestNeighbor \
--transform ${prefix}1Warp.nii.gz \
--transform ${prefix}0GenericAffine.mat\
--default-value 0
Listing 1 | Representative script containing antsRegistration and
antsApplyTransforms command calls used for evaluation.
In this example, we ﬁrst calculate an initial translation transform by aligning the centers of (intensity) mass (although
alignment based on other features is possible) 14. The resulting transform is then used as input for determining an optimal
rigid transform. Serial propagation of the resulting composite
transform continues until all optimal transforms have been determined. Optimization for each stage is determined by the speciﬁed
general parameters including: smoothing and downsampling of
ﬁxed and moving images, convergence criteria (including number of iterations per resolution level) and metric (or metrics). Any
pair of images can be speciﬁed per metric per stage15.
Although the resulting transforms for each stage can be written to disk as output, the default output consists of a condensed
set of transforms where compatible transforms have been composed to a single transform. For example, in the above command call, the initial translation, rigid, and afﬁne transforms
are combined into a single generic afﬁne transform ﬁle with the
results of the deformable transform consisting of discrete vector
14This step corresponds to the -initial-moving-transform option.
Generally, the user can specify an ITK transform for initialization or can perform an initial translation based on either the geometric center of the images,
the center of the image intensities, or the origin of the images. See the help
menu ‘antsRegistration -help’ for more details.
15To help the reader who wishes to explore antsRegistration with
speciﬁc use of the parameters used for this study and speciﬁed above,
we have created a script with a simpliﬁed interface and placed it in
the Scripts/ subdirectory of the ANTs repository. This script, called
antsRegistrationSyN.sh takes a ﬁxed and moving image and performs a comprehensive (i.e., rigid →afﬁne →deformable) registration using
SyN (‘-t s’) or B-spline SyN (‘-t b’).
ﬁelds. The output transform ﬁles can then be applied using the
antsApplyTransforms program which permits composition of any number of transform ﬁles with different interpolation
schemes. For both programs interpolation is never performed
more than once.
2.3. EVALUATION DATA
In the well-known Klein comparative study ,
14 image registration algorithms were evaluated based on performance on publicly available labeled brain data. For our evaluation, we used these same data. Speciﬁcally, we used the data sets
denoted as:
which are available for download from Arno Klein’s website16.
The number of subjects per cohort is provided in the denotation. Table 1 summarizes core information about the data sets
used. Further details of these ﬁrst four labeled brain data (e.g.,
labeling protocol, data sources) are given in Klein et al. . We
also include the labeled brain data provided at the MICCAI 2012
Grand Challenge and Workshop on Multi-Atlas Labeling17 which
we denote as MAL35. This T1-weighted MRI data set consists of
35 subject MRIs taken from the Oasis database18. The corresponding labels were provided by Neuromorphometrics, Inc 19. under
academic subscription.
Comparative
evaluation
registration
approaches was performed within each cohort using a “pseudogeodesic” approach. Instead of registering every subject to every
other subject within a data set, we generated the transforms
from each subject to a cohort-speciﬁc shape/intensity template.
Not only does this reduce the computational time required
for ﬁnding the pairwise transforms between subjects but prior
Table 1 | Brief overview of the data sets used for the SyN vs. B-spline
SyN comparison.
Resolution
Preprocessing
[0.86, 0.86, 1.5]
Rotated to “cardinal” pose
[1, 1.5, 1]
Aligned to talaraich, bias
[0.86, 1.5, 0.86]
Registered to MNI305, bias
Afﬁne-registered to
MNI152, bias corr.
Average of 3–4 acquisitions,
bias corr.
16 
17 
18 
19 
Frontiers in Neuroinformatics
www.frontiersin.org
December 2013 | Volume 7 | Article 39 | 6
Tustison and Avants
DMFFD diffeomorphic image registration
work has demonstrated improvement in registration with this
approach over direct pairwise registration .
Since the two algorithms have been implemented within the same
framework, all registration parameters are identical (i.e., linear
registration stage parameters, winsorizing values, etc.) except for
the parameters governing the smoothing of the gradient ﬁeld.
The cohort templates were built using the ANTs script ants
MultivariateTemplateConstruction.sh which is a
multivariate implementation of the work described in Avants
et al. . Canonical views for each of the ﬁve templates used
for this study are given in Figure 2. Since calculation of the transform from each subject to the template also includes generation
of the corresponding inverse transform, the total transformation
from a given subject to any other is determined from the composition of transforms mapping through the template. An example
illustration of the geodesic approach is given in Figure 3.
Additionally, we reﬁned the labelings for each subject of each
cohort using the multi-atlas label fusion algorithm (MALF) developed by Wang et al. which is also distributed with ANTs.
For a given subject within a data set, every other subject was
mapped to that subject using the pseudo-geodesic transform. The
set of transformed labelings were then used to determine a consensus labeling for that subject. This was to minimize the obvious
observer dimensionality artifacts where manual raters observe and
label in a single dimension at a time. This is most easily seen in
the axial or sagittal views of the different cohorts as labelings were
done primarily in the coronal view (see Figure 4). We include
both sets of results. This provides two sets of labels per subject
for evaluation20.
20The MALF labels are available at 
3. RESULTS
As mentioned previously, a template was constructed for each
data set (cf Figure 2) from all cohort images. Subsequently, each
image was registered to its corresponding template using either
SyN or B-spline SyN as described previously (prior linear registration stages were identical between the two algorithms). As a
brute-force parameter exploration is not a part of this work, we
rely on previously reported research and our own experience as authors/developers of
the algorithm/software to select parameters which demonstrate
robust performance across data sets. For both algorithms, the
gradient step was 0.1 for each of the four multi-resolution levels with shrink factors of {6, 4, 2, 1} and Gaussian smoothing for
each of those levels being N (0, {9, 4, 1, 0}) in terms of voxels.
The number of iterations per level were {100, 100, 70, 20} with a
convergence threshold of 10−9 and window size of 15 iterations21.
All processing was performed using the linux cluster at the
University of Virginia 22 using the PBS Pro queuing system
for managing resources. The perl scripts used to create the
jobs for the cluster are included in the github account associated with this evaluation. For the data sets used in this study,
times for B-spline SyN were approximately 15–40% greater than
Gaussian-based SyN using single-threading and a dense metric gradient sampling. Timing data for speciﬁc data sets are
refactoring,
convergence
monitoring
itk::Convergence
MonitoringFunction). Instead of testing for convergence between
two successive time points, we use a windowed monitoring function which
keeps track of a sequence, or window, of energy values and determines the
convergence from the slope of a line ﬁtted to the series.
22 
FIGURE 2 | Canonical views for each of the ﬁve cohort-speciﬁc templates generated using the ANTs tools as described in Avants et al. . The
pseudo-geodesic transform between subjects is created from the composition of transforms to/from the relevant template.
Frontiers in Neuroinformatics
www.frontiersin.org
December 2013 | Volume 7 | Article 39 | 7
Tustison and Avants
DMFFD diffeomorphic image registration
FIGURE 3 | Illustration of generating a pseudo-geodesic for any two
subjects within the MGH10 cohort. Once the transforms between the
template and each subject are calculated, the mapping between any two
subjects is found by composition of forward and inverse transforms. For
example, in the MGH data set, the pseudo-geodesic transform to map
Subject g4 to Subject g7 is found by composing the forward transform from
g4 to the template with the inverse transform from the template to g7 (green
dashed lines).
given in Table 2 Timing includes both rigid and afﬁne transform
optimizations.
The only difference between the two registration settings consists of the Gaussian and B-spline parameters governing the
update ﬁeld smoothing, Sv. In our experience, smoothing of the
total ﬁeld did not improve the results, at least for these data
(which conforms with our experience with other data), so the
total ﬁeld smoothing, Sφ is 0 for both registration approaches.
Speciﬁcally, the chosen parameters for the SyN algorithm were:
Sφ = N (0, 0) and Sv = N (0, 3) in voxel terms23. Although our
experience with B-spline SyN is much more limited, we were able
to choose comparable parameters based on a knot spacing for
the update ﬁeld of 26 mm at the base level which is reduced by
a factor of two for each succeeding multiresolution level. This
yields a ﬁnal knot spacing of 3.25 mm 24. For comparison, after
selecting these smoothing parameters we discovered in the supplementary material of Klein et al. the similarity to the
gradient smoothing parameter for the IRTK FFD algorithm which
also used four multi-resolution levels with an initial knot spacing
of 20 mm per dimension for a ﬁnal knot spacing of 2.5 mm.
23Or, in equivalent antsRegistration command line parlance, -t
SyN[0.1,3,0].
24Or, equivalently, -t BSplineSyN[0.1,26,0].
Quality of overlap using the Dice similarity metric was determined from the transformed labels using the open source ITK
implementation described in Tustison and Gee . Both the
original labels and MALF labels were warped to the ﬁxed image
for comparison using nearest neighbor interpolation. A joint Dice
metric value was calculated from the combined labels for each
cohort for each of the two SyN methods. These values are rendered in notched box plot format in Figure 5. Non-overlapping
notches indicate approximately statistically signiﬁcantly different
median values at the 95% conﬁdence level .
For all data sets, the B-spline SyN variant showed a small but statistically signiﬁcant improvement in overall Dice values. In order
to provide a more complete picture of performance differences,
we also accounted for label volumetric considerations . In Figure 5 we plotted the Dice value difference between
each SyN variant (B-spline SyN—SyN) for each label of each
intra-subject registration pair within a data set vs. the volume of
the label in the ﬁxed image. Values above and below the dashed
line indicate better regional performance for B-spline SyN and
SyN, respectively.
To further characterize the deformable transform differences,
we calculated the log of the Jacobian determinant of the transformations from each subject to the template and tabulated statistical
information within the brain region only. A noticeable difference between the two algorithms was the respective range of
Frontiers in Neuroinformatics
www.frontiersin.org
December 2013 | Volume 7 | Article 39 | 8
Tustison and Avants
DMFFD diffeomorphic image registration
FIGURE 4 | Axial views of sample labelings for a member of each
data set. The second row consists of the original labelings with the
third row being reﬁned versions of those labelings using the MALF
algorithm . These reﬁnements provide more
consistency between labelings and improved comparative assessments
between algorithms.
Table 2 | Timing (in hours) per registration for both SyN algorithms
across data sets.
B-spline SyN
10.7 ± 2.8
10.6 ± 1.9
14.2 ± 2.0
values in log Jacobians. We plotted the (95th%—5th%) for each
algorithm across all data sets in Figure 6. It is apparent that Bspline SyN results exhibit a much greater range of deformation.
Qualitative differences are shown in Figure 7. In order to ensure
randomness to minimize presentation bias in illustrating qualitative results , we used R to generate uniform random numbers for both subject and axial slice
selection. We then used the log Jacobian images to locate regions
of maximal difference between the SyN and B-spline SyN results.
From Figure 7 it is quite apparent that the results are very similar
which is to be expected considering the almost identical algorithmic make-up between the two approaches (e.g., similarity metric,
implementation, linear transforms). However, there are subtle
differences particularly in the cortex which help explain both the
relative difference in Jacobian and Dice distribution.
4. DISCUSSION AND CONCLUSIONS
B-spline SyN produced slightly greater Dice values than the original SyN. Although actual differences are relatively small, they
are statistically signiﬁcant. By implementing both algorithms in
the same code base, we are not only able to eliminate nonregularization components of the registration but we are also able
to eliminate implementation differences. Thus, performance disparity can be isolated to smoothing choice. However, even with
this restricted focus there are various reasons for the evaluation
outcome. These include the approximation-vs.-convolution distinction mentioned earlier for the two regularization approaches
(which could also explain the reason why the range of log
Jacobian values tend to be signiﬁcantly higher for B-spline SyN).
Also, the fact that the regularization for B-spline SyN is theoretically continuous whereas the truncated Gaussian convolution is only a discrete approximation could be a potential
Additional observations of interest concern the differences in
results between the MALF and original labelings for all data sets.
Not only was there an overall increase in performance for both
algorithms with the MALF labels for all cohorts, but there was also
an increase in performance disparity relative to the variance in
the resulting Dice values. A possible explanation for this, and one
that seems quite plausible, is that the MALF labelings are derived
from registering a cohort to the target subject and then performing a consensus labeling . Both these steps
are heavily reliant on image intensity information illustrates how performance difference varies with label volume
for each cohort.
Frontiers in Neuroinformatics
www.frontiersin.org
December 2013 | Volume 7 | Article 39 | 10
Tustison and Avants
DMFFD diffeomorphic image registration
FIGURE 6 | Violin plots of the range of log Jacobian values (95th%—5th%) for all deformable transforms from each subject to its corresponding
template. B-spline SyN demonstrates a tendency to produce a much greater range of log Jacobian values.
FIGURE 7 | Randomly selected axial slices showing qualitative differences between SyN and B-spline SyN. Crosshairs indicate regions of maximal
Jacobian difference.
use a form of correlation as the similarity measure for optimization). Since the MALF “correction” tends to group labeled regions
according to the same metric used for establishing anatomical
correspondences, alignment of these labeled regions seems much
more likely which would result in higher Dice metrics. A related
effect for labeled data in general is being currently investigated
by the authors. From the label volume vs. Dice difference plots,
there is no immediately discernible pattern of performance variation with region size. However, a possible confound is that region
deﬁnitions vary between cohorts. Although we did not look at
region vs. performance difference variation within cohorts, such
inquiry is certainly possible as we have made the resulting csv ﬁles
available with the github repository associated with this work.
Relative to Klein’s study , it should
be noted that the SyN implementation used in that study
is found in the ANTS program which is a precursor of the
antsRegistration program described earlier. Although
the theoretical aspects are the same, there are substantial
Frontiers in Neuroinformatics
www.frontiersin.org
December 2013 | Volume 7 | Article 39 | 11
Tustison and Avants
DMFFD diffeomorphic image registration
implementation differences between the two programs. In addition, several parameters varied between the two studies which
translated into a more aggressive metric and gradient step in
addition to fewer levels and iterations 25. In this study we took
a more conservative approach based on our continued development and experience resulting in parameters which have proven
useful in our cortical thickness pipeline (encapsulated in the
ANTs script antsCorticalThickness.sh) and our experience with the MICCAI 2013 SATA challenge data. We also ran
our own internal experiments with Gaussian-based SyN (both
ANTS and antsRegistration) using the same conservative
parameters on the MAL35 data for which the latter demonstrated
slightly improved performance over the former.
Despite the thorough evaluation with multiple data sets, we
readily acknowledge the limitations of this study including a
very focused application, i.e., healthy brains of a single modality, and absence of a thorough exploration of parameter selection
and sensitivity. Although such work might be beneﬁcial (e.g., by
aiding other researchers in parameter selection), characterizing
parameter permutations of potential interest would expand the
current work far beyond its intended scope. However, in addition to this work, SyN has also been previously evaluated in
Klein et al. and Avants et al. and, based on additional experience and application, the parameter set was modiﬁed
each time but still yielded excellent performance providing evidence for ﬂexibility in parameter selection. Outside of a range of
parameters based on sound engineering principles, experience,
and intimate knowledge of both the corresponding algorithms
and software, determination of optimal generic parameters even
for a speciﬁc application is difﬁcult. In fact, the “No Free Lunch
Theorem” Wolpert and Macready emphasizes the importance of prior knowledge in tuning optimization algorithms for a
particular application.
One of the advantages that has not been explored in this work
is the use of B-spline SyN for small deformation estimation problems such as in pulmonary or cardiac applications. Such problems
typically require greater regularization which implies larger discrete kernels for Gaussian convolution. A related issue concerns
applications involving severely anisotropic data where the continuous nature of the DMFFD approach might help over Gaussian
convolution. Also, we emphasize that underlying the DMFFD
approaches is a ﬁtting routine for sparse and scattered data which
offers added ﬂexibility over smoothing using discrete convolution
where the latter implies regularly placed data on a rectilinear grid
for conventional implementations. This advantage could translate
into faster running times if only select points are used to drive the
registration or make possible more complex registration scenarios involving data arranged continuously within a ﬁnite domain
 . Finally, the possibility of varying data
conﬁdence values, as introduced in Tustison and Gee with
DMFFD-based routines would permit incorporation of spatial
25Speciﬁcally,
supplementary
parameters
PR[${fixed},${moving},1,2] -o ${output} -r
Gauss -t SyN[0.5] -i 30x99x11
-use-Histogram-
preferential weighting (i.e., additional prior knowledge) during
optimization. Ongoing work will continue to explore these issues.
A signiﬁcant amount of research has been devoted to image
registration algorithmic development. Given their many salient
characteristics particularly with respect to large deformation
estimation constrained by topological continuity, diffeomorphic
registration approaches have been a particular focus in the neuroimaging community. However, many groups continue to ﬁnd
success with non-diffeomorphic FFD methods . Using our DMFFD framework,
B-spline regularization is easily adapted into the diffeomorphic
registration framework and performs well compared to analogous
algorithms which we demonstrated in this work for the case of the
widely-used SyN.