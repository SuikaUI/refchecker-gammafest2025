Multimodal Unsupervised
Image-to-Image Translation
Xun Huang1, Ming-Yu Liu2, Serge Belongie1, Jan Kautz2
Cornell University1
Abstract. Unsupervised image-to-image translation is an important and
challenging problem in computer vision. Given an image in the source
domain, the goal is to learn the conditional distribution of corresponding images in the target domain, without seeing any examples of corresponding image pairs. While this conditional distribution is inherently
multimodal, existing approaches make an overly simpliﬁed assumption,
modeling it as a deterministic one-to-one mapping. As a result, they fail
to generate diverse outputs from a given source domain image. To address
this limitation, we propose a Multimodal Unsupervised Image-to-image
Translation (MUNIT) framework. We assume that the image representation can be decomposed into a content code that is domain-invariant,
and a style code that captures domain-speciﬁc properties. To translate
an image to another domain, we recombine its content code with a random style code sampled from the style space of the target domain. We
analyze the proposed framework and establish several theoretical results.
Extensive experiments with comparisons to state-of-the-art approaches
further demonstrate the advantage of the proposed framework. Moreover,
our framework allows users to control the style of translation outputs by
providing an example style image. Code and pretrained models are available at 
Keywords: GANs, image-to-image translation, style transfer
Introduction
Many problems in computer vision aim at translating images from one domain to
another, including super-resolution , colorization , inpainting , attribute
transfer , and style transfer . This cross-domain image-to-image translation setting has therefore received signiﬁcant attention . When the dataset
contains paired examples, this problem can be approached by a conditional generative model or a simple regression model . In this work, we focus on the
much more challenging setting when such supervision is unavailable.
In many scenarios, the cross-domain mapping of interest is multimodal. For
example, a winter scene could have many possible appearances during summer
due to weather, timing, lighting, etc. Unfortunately, existing techniques usually
assume a deterministic or unimodal mapping. As a result, they fail
to capture the full distribution of possible outputs. Even if the model is made
stochastic by injecting noise, the network usually learns to ignore it .
 
Xun Huang, Ming-Yu Liu, Serge Belongie, Jan Kautz
(a) Auto-encoding
(b) Translation
Fig. 1. An illustration of our method. (a) Images in each domain Xi are encoded to a
shared content space C and a domain-speciﬁc style space Si. Each encoder has an inverse
decoder omitted from this ﬁgure. (b) To translate an image in X1 (e.g., a leopard) to
X2 (e.g., domestic cats), we recombine the content code of the input with a random
style code in the target style space. Diﬀerent style codes lead to diﬀerent outputs.
In this paper, we propose a principled framework for the Multimodal UNsupervised Image-to-image Translation (MUNIT) problem. As shown in Fig. 1 (a),
our framework makes several assumptions. We ﬁrst assume that the latent space
of images can be decomposed into a content space and a style space. We further
assume that images in diﬀerent domains share a common content space but not
the style space. To translate an image to the target domain, we recombine its
content code with a random style code in the target style space (Fig. 1 (b)). The
content code encodes the information that should be preserved during translation, while the style code represents remaining variations that are not contained
in the input image. By sampling diﬀerent style codes, our model is able to produce diverse and multimodal outputs. Extensive experiments demonstrate the
eﬀectiveness of our method in modeling multimodal output distributions and
its superior image quality compared with state-of-the-art approaches. Moreover,
the decomposition of content and style spaces allows our framework to perform
example-guided image translation, in which the style of the translation outputs
are controlled by a user-provided example image in the target domain.
Related Works
Generative adversarial networks (GANs). The GAN framework has
achieved impressive results in image generation. In GAN training, a generator is
trained to fool a discriminator which in turn tries to distinguish between generated samples and real samples. Various improvements to GANs have been proposed, such as multi-stage generation , better training objectives ,
and combination with auto-encoders . In this work, we employ GANs to
align the distribution of translated images with real images in the target domain.
Image-to-image translation. Isola et al. propose the ﬁrst uniﬁed framework for image-to-image translation based on conditional GANs, which has been
extended to generating high-resolution images by Wang et al. . Recent studies have also attempted to learn image translation without supervision. This
Multimodal Unsupervised Image-to-Image Translation
problem is inherently ill-posed and requires additional constraints. Some works
enforce the translation to preserve certain properties of the source domain data,
such as pixel values , pixel gradients , semantic features , class labels
 , or pairwise sample distances . Another popular constraint is the cycle
consistency loss . It enforces that if we translate an image to the target domain and back, we should obtain the original image. In addition, Liu et al. 
propose the UNIT framework, which assumes a shared latent space such that
corresponding images in two domains are mapped to the same latent code.
A signiﬁcant limitation of most existing image-to-image translation methods is the lack of diversity in the translated outputs. To tackle this problem,
some works propose to simultaneously generate multiple outputs given the same
input and encourage them to be diﬀerent . Still, these methods can
only generate a discrete number of outputs. Zhu et al. propose a Bicycle-
GAN that can model continuous and multimodal distributions. However, all the
aforementioned methods require pair supervision, while our method does not. A
couple of concurrent works also recognize this limitation and propose extensions
of CycleGAN/UNIT for multimodal mapping / .
Our problem has some connections with multi-domain image-to-image translation . Speciﬁcally, when we know how many modes each domain has
and the mode each sample belongs to, it is possible to treat each mode as a separate domain and use multi-domain image-to-image translation techniques to
learn a mapping between each pair of modes, thus achieving multimodal translation. However, in general we do not assume such information is available. Also,
our stochastic model can represent continuous output distributions, while still use a deterministic model for each pair of domains.
Style transfer. Style transfer aims at modifying the style of an image while
preserving its content, which is closely related to image-to-image translation.
Here, we make a distinction between example-guided style transfer, in which the
target style comes from a single example, and collection style transfer, in which
the target style is deﬁned by a collection of images. Classical style transfer approaches typically tackle the former problem, whereas image-to-image
translation methods have been demonstrated to perform well in the latter .
We will show that our model is able to address both problems, thanks to its
disentangled representation of content and style.
Learning disentangled representations. Our work draws inspiration from
recent works on disentangled representation learning. For example, InfoGAN 
and β-VAE have been proposed to learn disentangled representations without supervision. Some other works focus on disentangling content from
style. Although it is diﬃcult to deﬁne content/style and diﬀerent works use different deﬁnitions, we refer to “content” as the underling spatial structure and
“style” as the rendering of the structure. In our setting, we have two domains
that share the same content distribution but have diﬀerent style distributions.
Xun Huang, Ming-Yu Liu, Serge Belongie, Jan Kautz
Multimodal Unsupervised Image-to-image Translation
Assumptions
Let x1 ∈X1 and x2 ∈X2 be images from two diﬀerent image domains. In the
unsupervised image-to-image translation setting, we are given samples drawn
from two marginal distributions p(x1) and p(x2), without access to the joint
distribution p(x1, x2). Our goal is to estimate the two conditionals p(x2|x1)
and p(x1|x2) with learned image-to-image translation models p(x1→2|x1) and
p(x2→1|x2), where x1→2 is a sample produced by translating x1 to X2 (similar
for x2→1). In general, p(x2|x1) and p(x1|x2) are complex and multimodal distributions, in which case a deterministic translation model does not work well.
To tackle this problem, we make a partially shared latent space assumption.
Speciﬁcally, we assume that each image xi ∈Xi is generated from a content
latent code c ∈C that is shared by both domains, and a style latent code
si ∈Si that is speciﬁc to the individual domain. In other words, a pair of
corresponding images (x1, x2) from the joint distribution is generated by x1 =
1(c, s1) and x2 = G∗
2(c, s2), where c, s1, s2 are from some prior distributions
2 are the underlying generators. We further assume that G∗
deterministic functions and have their inverse encoders E∗
1)−1 and E∗
2)−1. Our goal is to learn the underlying generator and encoder functions with
neural networks. Note that although the encoders and decoders are deterministic,
p(x2|x1) is a continuous distribution due to the dependency of s2.
Our assumption is closely related to the shared latent space assumption proposed in UNIT . While UNIT assumes a fully shared latent space, we postulate that only part of the latent space (the content) can be shared across domains
whereas the other part (the style) is domain speciﬁc, which is a more reasonable
assumption when the cross-domain mapping is many-to-many.
Fig. 2 shows an overview of our model and its learning process. Similar to Liu
et al. , our translation model consists of an encoder Ei and a decoder Gi for
each domain Xi (i = 1, 2). As shown in Fig. 2 (a), the latent code of each autoencoder is factorized into a content code ci and a style code si, where (ci, si) =
i (xi), Es
i (xi)) = Ei(xi). Image-to-image translation is performed by swapping
encoder-decoder pairs, as illustrated in Fig. 2 (b). For example, to translate an
image x1 ∈X1 to X2, we ﬁrst extract its content latent code c1 = Ec
randomly draw a style latent code s2 from the prior distribution q(s2) ∼N(0, I).
We then use G2 to produce the ﬁnal output image x1→2 = G2(c1, s2). We note
that although the prior distribution is unimodal, the output image distribution
can be multimodal thanks to the nonlinearity of the decoder.
Our loss function comprises a bidirectional reconstruction loss that ensures
the encoders and decoders are inverses, and an adversarial loss that matches the
distribution of translated images to the image distribution in the target domain.
Multimodal Unsupervised Image-to-Image Translation
(b) Cross-domain translation
(a) Within-domain reconstruction
auto encoders
auto encoders
Fig. 2. Model overview. Our image-to-image translation model consists of two autoencoders (denoted by red and blue arrows respectively), one for each domain. The latent
code of each auto-encoder is composed of a content code c and a style code s. We train
the model with adversarial objectives (dotted lines) that ensure the translated images
to be indistinguishable from real images in the target domain, as well as bidirectional
reconstruction objectives (dashed lines) that reconstruct both images and latent codes.
Bidirectional reconstruction loss. To learn pairs of encoder and decoder that
are inverses of each other, we use objective functions that encourage reconstruction in both image →latent →image and latent →image →latent directions:
– Image reconstruction. Given an image sampled from the data distribution,
we should be able to reconstruct it after encoding and decoding.
recon = Ex1∼p(x1)[||G1(Ec
1(x1)) −x1||1]
– Latent reconstruction. Given a latent code (style and content) sampled
from the latent distribution at translation time, we should be able to reconstruct it after decoding and encoding.
recon = Ec1∼p(c1),s2∼q(s2)[||Ec
2(G2(c1, s2)) −c1||1]
recon = Ec1∼p(c1),s2∼q(s2)[||Es
2(G2(c1, s2)) −s2||1]
where q(s2) is the prior N(0, I), p(c1) is given by c1 = Ec
1(x1) and x1 ∼p(x1).
We note the other loss terms Lx2
recon, Lc2
recon, and Ls1
recon are deﬁned in a similar
manner. We use L1 reconstruction loss as it encourages sharp output images.
The style reconstruction loss Lsi
recon is reminiscent of the latent reconstruction
loss used in the prior works . It has the eﬀect on encouraging diverse
outputs given diﬀerent style codes. The content reconstruction loss Lci
recon encourages the translated image to preserve semantic content of the input image.
Adversarial loss. We employ GANs to match the distribution of translated
images to the target data distribution. In other words, images generated by our
Xun Huang, Ming-Yu Liu, Serge Belongie, Jan Kautz
model should be indistinguishable from real images in the target domain.
GAN = Ec1∼p(c1),s2∼q(s2)[log(1 −D2(G2(c1, s2)))] + Ex2∼p(x2)[log D2(x2)] (4)
where D2 is a discriminator that tries to distinguish between translated images
and real images in X2. The discriminator D1 and loss Lx1
GAN are deﬁned similarly.
Total loss. We jointly train the encoders, decoders, and discriminators to optimize the ﬁnal objective, which is a weighted sum of the adversarial loss and the
bidirectional reconstruction loss terms.
E1,E2,G1,G2 max
D1,D2 L(E1, E2, G1, G2, D1, D2) = Lx1
recon + Lx2
recon) + λc(Lc1
recon + Lc2
recon) + λs(Ls1
recon + Ls2
where λx, λc, λs are weights that control the importance of reconstruction terms.
Theoretical Analysis
We now establish some theoretical properties of our framework. Speciﬁcally, we
show that minimizing the proposed loss function leads to 1) matching of latent
distributions during encoding and generation, 2) matching of two joint image
distributions induced by our framework, and 3) enforcing a weak form of cycle
consistency constraint. All the proofs are given in Appendix A.
First, we note that the total loss in Eq. (5) is minimized when the translated
distribution matches the data distribution and the encoder-decoder are inverses.
Proposition 1. Suppose there exists E∗
2 such that: 1) E∗
2)−1, and 2) p(x1→2) = p(x2) and p(x2→1) = p(x1). Then E∗
2 minimizes L(E1, E2, G1, G2) = max
D1,D2 L(E1, E2, G1, G2, D1, D2) (Eq. (5)).
Latent Distribution Matching For image generation, existing works on combining auto-encoders and GANs need to match the encoded latent distribution
with the latent distribution the decoder receives at generation time, using either KLD loss or adversarial loss in the latent space. The autoencoder training would not help GAN training if the decoder received a very
diﬀerent latent distribution during generation. Although our loss function does
not contain terms that explicitly encourage the match of latent distributions,
it has the eﬀect of matching them implicitly.
Proposition 2. When optimality is reached, we have:
p(c1) = p(c2), p(s1) = q(s1), p(s2) = q(s2)
The above proposition shows that at optimality, the encoded style distributions
match their Gaussian priors. Also, the encoded content distribution matches the
distribution at generation time, which is just the encoded distribution from the
other domain. This suggests that the content space becomes domain-invariant.
Multimodal Unsupervised Image-to-Image Translation
Joint Distribution Matching Our model learns two conditional distributions
p(x1→2|x1) and p(x2→1|x2), which, together with the data distributions, deﬁne
two joint distributions p(x1, x1→2) and p(x2→1, x2). Since both of them are designed to approximate the same underlying joint distribution p(x1, x2), it is desirable that they are consistent with each other, i.e., p(x1, x1→2) = p(x2→1, x2).
Joint distribution matching provides an important constraint for unsupervised image-to-image translation and is behind the success of many recent methods. Here, we show our model matches the joint distributions at optimality.
Proposition 3. When optimality is reached, we have p(x1, x1→2) = p(x2→1, x2).
Style-augmented Cycle Consistency Joint distribution matching can be
realized via cycle consistency constraint , assuming deterministic translation models and matched marginals . However, we note that this
constraint is too strong for multimodal image translation. In fact, we prove
in Appendix A that the translation model will degenerate to a deterministic
function if cycle consistency is enforced. In the following proposition, we show
that our framework admits a weaker form of cycle consistency, termed as styleaugmented cycle consistency, between the image–style joint spaces, which is more
suited for multimodal image translation.
Proposition 4. Denote h1 = (x1, s2) ∈H1 and h2 = (x2, s1) ∈H2. h1, h2 are
points in the joint spaces of image and style. Our model deﬁnes a deterministic
mapping F1→2 from H1 to H2 (and vice versa) by F1→2(h1) = F1→2(x1, s2) ≜
1(x1), s2), Es
1(x1)). When optimality is achieved, we have F1→2 = F −1
Intuitively, style-augmented cycle consistency implies that if we translate an
image to the target domain and translate it back using the original style, we
should obtain the original image. Style-augmented cycle consistency is implied
by the proposed bidirectional reconstruction loss, but explicitly enforcing it could
be useful for some datasets:
cc = Ex1∼p(x1),s2∼q(s2)[||G1(Ec
1(x1), s2)), Es
1(x1)) −x1||1]
Experiments
Implementation Details
Fig. 3 shows the architecture of our auto-encoder. It consists of a content encoder,
a style encoder, and a joint decoder. More detailed information and hyperparameters are given in Appendix B. We also provide an open-source implementation
in PyTorch at 
Content encoder. Our content encoder consists of several strided convolutional
layers to downsample the input and several residual blocks to further process
it. All the convolutional layers are followed by Instance Normalization (IN) .
Xun Huang, Ming-Yu Liu, Serge Belongie, Jan Kautz
Fig. 3. Our auto-encoder architecture. The content encoder consists of several strided
convolutional layers followed by residual blocks. The style encoder contains several
strided convolutional layers followed by a global average pooling layer and a fully
connected layer. The decoder uses a MLP to produce a set of AdaIN parameters
from the style code. The content code is then processed by residual blocks with AdaIN
layers, and ﬁnally decoded to the image space by upsampling and convolutional layers.
Style encoder. The style encoder includes several strided convolutional layers,
followed by a global average pooling layer and a fully connected (FC) layer. We
do not use IN layers in the style encoder, since IN removes the original feature
mean and variance that represent important style information .
Decoder. Our decoder reconstructs the input image from its content and style
code. It processes the content code by a set of residual blocks and ﬁnally produces the reconstructed image by several upsampling and convolutional layers.
Inspired by recent works that use aﬃne transformation parameters in normalization layers to represent styles , we equip the residual blocks with
Adaptive Instance Normalization (AdaIN) layers whose parameters are dynamically generated by a multilayer perceptron (MLP) from the style code.
AdaIN(z, γ, β) = γ
where z is the activation of the previous convolutional layer, µ and σ are channelwise mean and standard deviation, γ and β are parameters generated by the
MLP. Note that the aﬃne parameters are produced by a learned network, instead
of computed from statistics of a pretrained network as in Huang et al. .
Discriminator. We use the LSGAN objective proposed by Mao et al. . We
employ multi-scale discriminators proposed by Wang et al. to guide the
generators to produce both realistic details and correct global structure.
Domain-invariant perceptual loss. The perceptual loss, often computed as
a distance in the VGG feature space between the output and the reference
image, has been shown to beneﬁt image-to-image translation when paired supervision is available . In the unsupervised setting, however, we do not
have a reference image in the target domain. We propose a modiﬁed version
of perceptual loss that is more domain-invariant, so that we can use the input
Multimodal Unsupervised Image-to-Image Translation
image as the reference. Speciﬁcally, before computing the distance, we perform
Instance Normalization (without aﬃne transformations) on the VGG features in order to remove the original feature mean and variance, which contains much domain-speciﬁc information . In Appendix C, we quantitatively show that Instance Normalization can indeed make the VGG features
more domain-invariant. We ﬁnd the domain-invariant perceptual loss accelerates training on high-resolution (≥512 × 512) datasets and thus employ it on
those datasets.
Evaluation Metrics
Human Preference. To compare the realism and faithfulness of translation
outputs generated by diﬀerent methods, we perform human perceptual study
on Amazon Mechanical Turk (AMT). Similar to Wang et al. , the workers
are given an input image and two translation outputs from diﬀerent methods.
They are then given unlimited time to select which translation output looks
more accurate. For each comparison, we randomly generate 500 questions and
each question is answered by 5 diﬀerent workers.
LPIPS Distance. To measure translation diversity, we compute the average
LPIPS distance between pairs of randomly-sampled translation outputs from
the same input as in Zhu et al. . LPIPS is given by a weighted L2 distance
between deep features of images. It has been demonstrated to correlate well with
human perceptual similarity . Following Zhu et al. , we use 100 input images and sample 19 output pairs per input, which amounts to 1900 pairs in total.
We use the ImageNet-pretrained AlexNet as the deep feature extractor.
(Conditional) Inception Score. The Inception Score (IS) is a popular metric for image generation tasks. We propose a modiﬁed version called
Conditional Inception Score (CIS), which is more suited for evaluating multimodal image translation. When we know the number of modes in X2 as well
as the ground truth mode each sample belongs to, we can train a classiﬁer
p(y2|x2) to classify an image x2 into its mode y2. Conditioned on a single
input image x1, the translation samples x1→2 should be mode-covering (thus
p(y2|x1) =
p(y|x1→2)p(x1→2|x1) dx1→2 should have high entropy) and each
individual sample should belong to a speciﬁc mode (thus p(y2|x1→2) should
have low entropy). Combing these two requirements we get:
CIS = Ex1∼p(x1)[Ex1→2∼p(x2→1|x1)[KL(p(y2|x1→2)||p(y2|x1))]]
To compute the (unconditional) IS, p(y2|x1) is replaced with the unconditional
class probability p(y2) =
p(y|x1→2)p(x1→2|x1)p(x1) dx1 dx1→2.
IS = Ex1∼p(x1)[Ex1→2∼p(x2→1|x1)[KL(p(y2|x1→2)||p(y2))]]
To obtain a high CIS/IS score, a model needs to generate samples that are both
high-quality and diverse. While IS measures diversity of all output images, CIS
measures diversity of outputs conditioned on a single input image. A model that
Xun Huang, Ming-Yu Liu, Serge Belongie, Jan Kautz
deterministically generates a single output given an input image will receive
a zero CIS score, though it might still get a high score under IS. We use the
Inception-v3 ﬁne-tuned on our speciﬁc datasets as the classiﬁer and estimate
Eq. (8) and Eq. (9) using 100 input images and 100 samples per input.
UNIT . The UNIT model consists of two VAE-GANs with a fully shared
latent space. The stochasticity of the translation comes from the Gaussian encoders as well as the dropout layers in the VAEs.
CycleGAN . CycleGAN consists of two residual translation networks trained
with adversarial loss and cycle reconstruction loss. We use Dropout during both
training and testing to encourage diversity, as suggested in Isola et al. .
CycleGAN* with noise. To test whether we can generate multimodal
outputs within the CycleGAN framework, we additionally inject noise vectors
to both translation networks. We use the U-net architecture with noise added
to input, since we ﬁnd the noise vectors are ignored by the residual architecture
in CycleGAN . Dropout is also utilized during both training and testing.
BicycleGAN . BicycleGAN is the only existing image-to-image translation
model we are aware of that can generate continuous and multimodal output
distributions. However, it requires paired training data. We compare our model
with BicycleGAN when the dataset contains pair information.
Edges ↔shoes/handbags. We use the datasets provided by Isola et al. ,
Yu et al. , and Zhu et al. , which contain images of shoes and handbags
with edge maps generated by HED . We train one model for edges ↔shoes
and another for edges ↔handbags without using paired information.
Animal image translation. We collect images from 3 categories/domains,
including house cats, big cats, and dogs. Each domain contains 4 modes which
are ﬁne-grained categories belonging to the same parent category. Note that the
modes of the images are not known during learning the translation model. We
learn a separate model for each pair of domains.
Street scene images. We experiment with two street scene translation tasks:
– Synthetic ↔real. We perform translation between synthetic images in the
SYNTHIA dataset and real-world images in the Cityscape dataset .
For the SYNTHIA dataset, we use the SYNTHIA-Seqs subset which contains
images in diﬀerent seasons, weather, and illumination conditions.
– Summer ↔winter. We use the dataset from Liu et al. , which contains
summer and winter street images extracted from real-world driving videos.
Yosemite summer ↔winter (HD). We collect a new high-resolution dataset
containing 3253 summer photos and 2385 winter photos of Yosemite. The images
are downsampled such that the shortest side of each image is 1024 pixels.
Multimodal Unsupervised Image-to-Image Translation
with noise
Fig. 4. Qualitative comparison on edges →shoes. The ﬁrst column shows the input and
ground truth output. Each following column shows 3 random outputs from a method.
Table 1. Quantitative evaluation on edges →shoes/handbags. The diversity score is
the average LPIPS distance . The quality score is the human preference score, the
percentage a method is preferred over MUNIT. For both metrics, the higher the better.
edges →shoes
edges →handbags
CycleGAN 
CycleGAN* with noise
MUNIT w/o Lx
MUNIT w/o Lc
MUNIT w/o Ls
BicycleGAN †
† Trained with paired supervision.
First, we qualitatively compare MUNIT with the four baselines above, and three
variants of MUNIT that ablate Lx
recon respectively. Fig. 4 shows
example results on edges →shoes. Both UNIT and CycleGAN (with or without
noise) fail to generate diverse outputs, despite the injected randomness. Without
recon or Lc
recon, the image quality of MUNIT is unsatisfactory. Without Ls
the model suﬀers from partial mode collapse, with many outputs being almost
identical (e.g., the ﬁrst two rows). Our full model produces images that are both
diverse and realistic, similar to BicycleGAN but does not need supervision.
The qualitative observations above are conﬁrmed by quantitative evaluations.
We use human preference to measure quality and LPIPS distance to evaluate
Xun Huang, Ming-Yu Liu, Serge Belongie, Jan Kautz
Sample translations
(a) edges ↔shoes
Sample translations
(b) edges ↔handbags
Fig. 5. Example results of (a) edges ↔shoes and (b) edges ↔handbags.
Sample translations
(a) house cats →big cats
Sample translations
(b) big cats →house cats
(c) house cats →dogs
(d) dogs →house cats
(e) big cats →dogs
(f) dogs →big cats
Fig. 6. Example results of animal image translation.
diversity, as described in Sec. 5.2. We conduct this experiment on the task of
edges →shoes/handbags. As shown in Table 1, UNIT and CycleGAN produce
very little diversity according to LPIPS distance. Removing Lx
recon or Lc
recon from
MUNIT leads to signiﬁcantly worse quality. Without Ls
recon, both quality and
diversity deteriorate. The full model obtains quality and diversity comparable to
the fully supervised BicycleGAN, and signiﬁcantly better than all unsupervised
baselines. In Fig. 5, we show more example results on edges ↔shoes/handbags.
We proceed to perform experiments on the animal image translation dataset.
As shown in Fig. 6, our model successfully translate one kind of animal to another. Given an input image, the translation outputs cover multiple modes, i.e.,
multiple ﬁne-grained animal categories in the target domain. The shape of an
animal has undergone signiﬁcant transformations, but the pose is overall preserved. As shown in Table 2, our model obtains the highest scores according to
both CIS and IS. In particular, the baselines all obtain a very low CIS, indicating
Multimodal Unsupervised Image-to-Image Translation
Sample translations
(a) Cityscape →SYNTHIA
(b) SYNTHIA →Cityscape
(c) summer →winter
(d) winter →summer
Fig. 7. Example results on street scene translations.
Sample translations
(a) Yosemite summer →winter
(b) Yosemite winter →summer
Fig. 8. Example results on Yosemite summer ↔winter (HD resolution).
their failure to generate multimodal outputs from a given input. As the IS has
been shown to correlate well to image quality , the higher IS of our method
suggests that it also generates images of high quality than baseline approaches.
Fig. 7 shows results on street scene datasets. Our model is able to generate
SYNTHIA images with diverse renderings (e.g., rainy, snowy, sunset) from a
given Cityscape image, and generate Cityscape images with diﬀerent lighting,
Xun Huang, Ming-Yu Liu, Serge Belongie, Jan Kautz
(a) edges →shoes
(b) big cats →house cats
Fig. 9. image translation. Each row has the same content while each column has the
same style. The color of the generated shoes and the appearance of the generated cats
can be speciﬁed by providing example style images.
Table 2. Quantitative evaluation on animal image translation. This dataset contains 3
domains. We perform bidirectional translation for each domain pair, resulting in 6
translation tasks. We use CIS and IS to measure the performance on each task. To
obtain a high CIS/IS score, a model needs to generate samples that are both highquality and diverse. While IS measures diversity of all output images, CIS measures
diversity of outputs conditioned on a single input image.
with noise
house cats →big cats
big cats →house cats
house cats →dogs
dogs →house cats
big cats →dogs
dogs →big cats
shadow, and road textures from a given SYNTHIA image. Similarly, it generates winter images with diﬀerent amount of snow from a given summer image,
and summer images with diﬀerent amount of leafs from a given winter image.
Fig. 8 shows example results of summer ↔winter transfer on the high-resolution
Yosemite dataset. Our algorithm generates output images with diﬀerent lighting.
Example-guided Image Translation. Instead of sampling the style code from
the prior, it is also possible to extract the style code from a reference image.
Multimodal Unsupervised Image-to-Image Translation
Gatys et al. Chen et al.
Fig. 10. Comparison with existing style transfer methods.
Speciﬁcally, given a content image x1 ∈X1 and a style image x2 ∈X2, our
model produces an image x1→2 that recombines the content of the former and
the style latter by x1→2 = G2(Ec
2(x2)). Examples are shown in Fig. 9.
Note that this is similar to classical style transfer algorithms that
transfer the style of one image to another. In Fig. 10, we compare out method
with classical style transfer algorithms including Gatys et al. , Chen et al. ,
AdaIN , and WCT . Our method produces results that are signiﬁcantly
more faithful and realistic, since our method learns the distribution of target
domain images using GANs.
Conclusions
We presented a framework for multimodal unsupervised image-to-image translation. Our model achieves quality and diversity superior to existing unsupervised
methods and comparable to state-of-the-art supervised approach. Future work
includes extending this framework to other domains, such as videos and text.