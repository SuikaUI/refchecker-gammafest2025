A review on outlier/anomaly detection in time
series data
Ane Bl´azquez-Garc´ıa ∗1, Angel Conde †2, Usue Mori ‡3, and Jose
A. Lozano §4
1,2 Ikerlan Technology Research Centre, Basque Research and
Technology Alliance (BRTA). Pº J.M. Arizmendiarrieta, 2.
Arrasate/Mondrag´on, 20500, Spain.
3,4 Intelligent Systems Group (ISG), Department of Computer
Science and Artiﬁcial Intelligence, University of the Basque
Country (UPV/EHU). Manuel de Lardizabal, 1. Donostia/San
Sebasti´an, 20018, Spain.
4 Basque Center for Applied Mathematics (BCAM). Mazarredo
Zumarkalea, 14. Bilbao, 48009, Spain.
Recent advances in technology have brought major breakthroughs in
data collection, enabling a large amount of data to be gathered over time
and thus generating time series. Mining this data has become an important task for researchers and practitioners in the past few years, including
the detection of outliers or anomalies that may represent errors or events
of interest. This review aims to provide a structured and comprehensive
state-of-the-art on outlier detection techniques in the context of time series. To this end, a taxonomy is presented based on the main aspects that
characterize an outlier detection technique.
Outlier detection, anomaly detection, time series, data mining,
taxonomy, software
Introduction
Recent advances in technology allow us to collect a large amount of data over
time in diverse research areas.
Observations that have been recorded in an
∗ 
† 
‡ 
§ 
orderly fashion and which are correlated in time constitute a time series. Time
series data mining aims to extract all meaningful knowledge from this data,
and several mining tasks (e.g., classiﬁcation, clustering, forecasting, and outlier
detection) have been considered in the literature .
Outlier detection has become a ﬁeld of interest for many researchers and
practitioners and is now one of the main tasks of time series data mining. Outlier
detection has been studied in a variety of application domains such as credit
card fraud detection, intrusion detection in cybersecurity, or fault diagnosis in
industry. In particular, the analysis of outliers in time series data examines
anomalous behaviors across time . In the ﬁrst study on
this topic, which was conducted by Fox , two types of outliers in univariate
time series were deﬁned: type I, which a↵ects a single observation; and type II,
which a↵ects both a particular observation and the subsequent observations.
This work was ﬁrst extended to four outlier types , and then to the
case of multivariate time series . Since then, many deﬁnitions
of the term outlier and numerous detection methods have been proposed in the
literature. However, to this day, there is still no consensus on the terms used
 ; for example, outlier observations are often referred to as
anomalies, discordant observations, discords, exceptions, aberrations, surprises,
peculiarities or contaminants.
From a classical point of view, a widely used deﬁnition for the concept outlier
has been provided by Hawkins :
“An observation which deviates so much from other observations as
to arouse suspicions that it was generated by a di↵erent mechanism.”
Therefore, outliers can be thought of as observations that do not follow the
expected behavior.
As shown in Fig. 1, outliers in time series can have two di↵erent meanings,
and the semantic distinction between them is mainly based on the interest of
the analyst or the particular scenario considered. These observations have been
related to noise, erroneous, or unwanted data, which by themselves are not
interesting to the analyst .
In these cases, outliers should
be deleted or corrected to improve the data quality and generate a cleaner
dataset that can be used by other data mining algorithms. For example, sensor
transmission errors are eliminated to obtain more accurate predictions because
the principal aim is to make predictions.
Nevertheless, in recent years and,
especially in the area of time series data, many researchers have aimed to detect
and analyze unusual but interesting phenomena. Fraud detection is an example
of this because the main objective is to detect and analyze the outlier itself.
These observations are often referred to as anomalies .
The purpose of this review is to present a structured and comprehensive
state-of-the-art on outlier detection techniques in time series data and attempt
to extract the essence of the concept outlier, focusing on the detection algorithms
given by di↵erent authors. Despite the broad terminology that is used to refer to
Outliers meaning
Unwanted data
Event of interest
Analyze the outlier itself
Data cleaning
Figure 1: Meaning of the outliers in time series data depending on the aim of
the analyst.
outliers, this review focuses on the identiﬁcation of outliers in the unsupervised
framework, regardless of the term used in the original papers.
Although a number of surveys on outlier detection methods have been presented in the literature , very few focus on temporal data, including time series . In fact, to the best of our
knowledge, there is no review in the literature that deals exclusively with time
series data and provides a taxonomy for the classiﬁcation of outlier detection
techniques according to their main characteristics. In addition to grouping the
techniques and providing a global understanding of the outliers and their detection in time series, this taxonomy also helps the readers to choose the type
of technique that best adapts to the problem that they intend to solve. This
review will also report some of the publicly available software.
The rest of this paper is organized as follows. In Section 2, a taxonomy for
the classiﬁcation of outlier detection techniques in time series data is proposed.
Section 3, Section 4 and Section 5 present di↵erent techniques used for point,
subsequence, and time series outlier detection, respectively. The techniques are
classiﬁed according to the taxonomy proposed in Section 2, and the intuition
of the concept outlier on which the methods are based is provided. In Section
6, the publicly available software for some of the considered outlier detection
methods is presented. Finally, Section 7 contains the concluding remarks and
outlines some areas for further research.
A taxonomy of outlier detection techniques in
the time series context
Outlier detection techniques in time series data vary depending on the input data
type, the outlier type, and the nature of the method. Therefore, a comprehensive
taxonomy that encompasses these three aspects is proposed in this section. Fig.
2 depicts an overview of the resulting taxonomy, and each axis is described in
detail below.
Input data
The ﬁrst axis represents the type of input data that the detection method is
able to deal with (i.e., a univariate or a multivariate time series).
Outlier detection techniques in time series
Input data
Outlier type
Univariate
time series
Multivariate
time series
Nature of the method
Point Subsequence Time series
Multivariate
Univariate
Multivariate
Univariate
Figure 2: Proposed taxonomy of outlier detection techniques in time series data.
Deﬁnition 1 (Univariate time series) A univariate time series X = {xt}t2T
is an ordered set of real-valued observations, where each observation is recorded
at a speciﬁc time t 2 T ✓Z+.
Then, xt is the point or observation collected at time t and S = xp, xp+1, ..., xp+n−1
the subsequence of length n |T| starting at position p of the time series X, for
p, t 2 T and p |T| −n + 1. It is assumed that each observation xt is a realized
value of a certain random variable Xt. Some examples of univariate time series
can be found in Fig. 3a and Fig. 4a.
Deﬁnition 2 (Multivariate time series) A multivariate time series X = {xt}t2T
is deﬁned as an ordered set of k-dimensional vectors, each of which is recorded
at a speciﬁc time t 2 T ✓Z+ and consists of k real-valued observations,
xt = (x1t, ..., xkt) 1.
Then, xt is said to be a point and S = xp, xp+1, ..., xp+n−1 a subsequence
of length n |T| of the multivariate time series X, for p, t 2 T and p 
|T| −n + 1. For each dimension j 2 {1, ..., k}, Xj = {xjt}t2T is a univariate
time series and each observation xjt in the vector xt is a realized value of a
random time-dependent variable Xjt in Xt = (X1t, ..., Xkt). In this case, each
variable could depend not only on its past values but also on the other timedependent variables. Some examples of multivariate time series can be seen in
Fig. 3b and Fig. 4b.
Outlier type
The second axis describes the outlier type that the method aims to detect (i.e.,
a point, a subsequence, or a time series).
• Point outliers. A point outlier is a datum that behaves unusually in a
speciﬁc time instant when compared either to the other values in the
time series (global outlier) or to its neighboring points (local outlier).
Point outliers can be univariate or multivariate depending on whether they
1Note that this deﬁnition could include irregularly sampled time series or dimensions (variables) with di↵erent temporal granularities, assuming that some of the xit values might be
missing. However, the techniques discussed in this paper only consider regularly sampled time
series with the same temporal granularity in all dimensions.
a↵ect one or more time-dependent variables, respectively. For example,
Fig. 3a contains two univariate point outliers, O1 and O2, whereas the
multivariate time series composed of three variables in Fig. 3b has both
univariate (O3) and multivariate (O1 and O2) point outliers.
(a) Univariate time series.
Variable 1
Variable 2
Variable 3
(b) Multivariate time series.
Figure 3: Point outliers in time series data.
• Subsequence outliers. This term refers to consecutive points in time whose
joint behavior is unusual, although each observation individually is not
necessarily a point outlier.
Subsequence outliers can also be global or
local and can a↵ect one (univariate subsequence outlier) or more (multivariate subsequence outlier) time-dependent variables. Fig. 4 provides an
example of univariate (O1 and O2 in Fig. 4a, and O3 in Fig. 4b) and
multivariate (O1 and O2 in Fig. 4b) subsequence outliers. Note that the
latter do not necessarily a↵ect all the variables (e.g., O2 in Fig. 4b).
(a) Univariate time series.
Variable 1
Variable 2
Variable 3
(b) Multivariate time series.
Figure 4: Subsequence outliers in time series data.
• Outlier time series. Entire time series can also be outliers, but they can
only be detected when the input data is a multivariate time series. Fig. 5
depicts an example of an outlier time series that corresponds to Variable
4 in a multivariate time series composed of four variables. The behavior
of Variable 4 signiﬁcantly di↵ers from the rest.
Variable 1
Variable 2
Variable 3
Variable 4
Figure 5: Outlier time series (Variable 4) in a multivariate time series.
Observe that this axis is closely related to the input data type. If the method
only allows univariate time series as input, then no multivariate point or subsequence outliers can be identiﬁed. In addition, outlier time series can only be
found in multivariate time series. Finally, it should be noted that the outliers
depend on the context. Thus, if the detection method uses the entire time series
as contextual information, then the detected outliers are global. Otherwise, if
the method only uses a segment of the series (a time window), then the detected
outliers are local because they are outliers within their neighborhood. Global
outliers are also local, but not all local outliers are global. In other words, some
local outliers may seem normal if all of the time series is observed but may be
anomalous if we focus only on their neighborhood (e.g., O1 in Fig. 3a).
Nature of the method
The third axis analyzes the nature of the detection method employed (i.e., if the
detection method is univariate or multivariate). A univariate detection method
only considers a single time-dependent variable, whereas a multivariate detection method is able to simultaneously work with more than one time-dependent
variable. Note that the detection method can be univariate, even if the input
data is a multivariate time series, because an individual analysis can be performed on each time-dependent variable without considering the dependencies
that may exist between the variables. In contrast, a multivariate technique cannot be used if the input data is a univariate time series. Consequently, this axis
will only be mentioned for multivariate time series data.
Point outliers
Point outlier detection is the most common outlier detection task in the area
of time series. This section presents the techniques used to detect this type
of outlier, in both univariate (Section 3.1) and multivariate (Section 3.2) time
series data.
Speciﬁcally, as shown in Fig. 6, two key characteristics of these methods will
be highlighted throughout their presentation. Concerning the ﬁrst characteristic, or the treatment of temporality, some methods consider the inherent temporal order of the observations, while others completely ignore this information.
The main di↵erence between the methods that include temporal information
and those that do not is that the latter methods produce the same results, even
if they are applied to a shu✏ed version of the series. Within the methods that
use temporality, a subgroup of methods use time windows. Consequently, the
same results are obtained when shu✏ing the observations within the window,
but not when shu✏ing the whole time series.
Point outlier
Temporality
Streaming / Non-streaming
Figure 6: Characteristics related to point outlier detection problems.
In relation to the second characteristic (see Fig. 6), some techniques are able
to detect outliers in streaming time series by determining whether or not a new
incoming datum is an outlier as soon as it arrives, without having to wait for
more data. Within this group, some methods use a ﬁxed model throughout the
stream evolution, whereas others update the models used for detection with the
new information received—either by retraining the whole model or by learning
in an incremental manner. We consider that a technique does not apply to a
streaming time series (i.e., non-streaming) if it is unable to make a decision at
the arrival of the new datum.
Most of the analyzed point outlier detection techniques can be applied in a
streaming context and they take the temporality of the data into account, either
by considering the full time series as an ordered sequence or with the use of time
windows. Therefore, we will only make reference to this axis for methods that
cannot be applied in a streaming environment or which completely ignore the
temporal information in the data. Finally, even though many techniques can
theoretically deal with streaming time series, very few are able to adapt incrementally to the evolution of the stream. Consequently, we will also highlight
these techniques.
Univariate time series
The techniques that will be discussed in this section intend to detect point
outliers in a univariate time series and are organized based on the diagram shown
in Fig. 7. Since a single time-dependent variable is considered, recall that these
outliers are univariate points and that only univariate detection techniques can
be used for their detection.
Point outliers
Model-based
Density-based
Prediction
Histogramming
Estimation
Figure 7: Types of methods for detecting point outliers in univariate time series.
The most popular and intuitive deﬁnition for the concept of point outlier is
a point that signiﬁcantly deviates from its expected value. Therefore, given a
univariate time series, a point at time t can be declared an outlier if the distance
to its expected value is higher than a predeﬁned threshold ⌧:
|xt −ˆxt| > ⌧
where xt is the observed data point, and ˆxt is its expected value. This problem
is graphically depicted in Fig. 8, where the observed values within the shadowed
area are at most at distance ⌧from their expected values. Clearly, O3 is the
point that di↵ers the most from its expected value, although O1, O2, and O4 are
also farther than distance ⌧(outside the band), so all four are declared outliers.
Figure 8: Point outlier detection in univariate time series based on the comparison of expected and observed values.
The outlier detection methods based on the strategy described in equation (1) are denominated model-based methods in this paper and are the most
common approaches in the literature. Even though each technique computes the
expected value ˆxt and the threshold ⌧di↵erently, they are all based on ﬁtting a
model (either explicitly or implicitly). As shown in Table 1, if ˆxt is obtained using previous and subsequent observations to xt (past, current, and future data),
then the technique is within the estimation model-based methods. In contrast, if
ˆxt is obtained relying only on previous observations to xt (past data), then the
technique is within the prediction model-based methods. In practice, the main
di↵erence between using estimation or prediction methods is that techniques
within this latter category can be used in streaming time series because they
can determine whether or not a new datum is an outlier as soon as it arrives.
In the case of estimation methods, this can only be done if, in addition to some
points preceding xt, only the current point xt is used to compute the estimated
value (k2 = 0).
The most simple estimation models are based on constant or piecewise constant models, where basic statistics such as the median or the Median Absolute Deviation (MAD) are used
to obtain the expected value ˆxt. These statistics are calculated using the full
series or by grouping the data in equal-length segments and cannot be applied in
streaming when future data is needed (k2 > 0). A more sophisticated approach
is to utilize unequal-length segments obtained with a segmentation technique.
Table 1: Data used in model-based techniques in univariate time series, for
k ≥1, and k1, k2 ≥0 such that k1 + k2 > 0.
Expected value
Point outliers
Estimation models
{xt−k1, ..., xt, ..., xt+k2}
|xt −ˆxt| > ⌧
Prediction models
{xt−k, ..., xt−1}
Dani et al. use the mean of each segment to determine the expected
value of the points within that segment. They also use an adaptive threshold
⌧i = ↵σi, where ↵is a ﬁxed value and σi the standard deviation of segment i.
Other estimation-based techniques intend to identify data points that are
unlikely if a certain ﬁtted model or distribution is assumed to have generated
the data. For instance, some authors model the structure of the data using
smoothing methods such as B-splines or kernels or variants
of the Exponentially Weighted Moving Average (EWMA) method , Song et al. and Zhang et al. use slope constraints,
Mehrang et al. assume that the data are approximately normal if the outliers are not taken into account, and Reddy et al. use Gaussian Mixture
Models (GMM).
Once a model or distribution is assumed and ﬁtted, Chen et al. ;
Carter and Streilein and Reddy et al. use equation (1) directly
to decide whether a point is an outlier or not. Similarly, Song et al. 
establish a maximum and a minimum possible slope between consecutive values,
whereas Zhang et al. model the change in slopes before and after time
t, assuming that the slopes should not change signiﬁcantly at a time point.
Finally, in Mehrang et al. , the Extreme Studentized Deviate (ESD) test
is employed to make the decision: the null hypothesis considered is that there
are no outliers, whereas the alternative is that there are up to k. Regardless
of the temporal correlation, the algorithm computes k test statistics iteratively
to detect k point outliers.
At each iteration, it removes the most outlying
observation (i.e., the furthest from the mean value).
Some other univariate outlier detection methods have analyzed all of the
residuals obtained from di↵erent models to identify the outliers.
For example, Hochenbaum et al. use the STL decomposition, and Akouemo and
Povinelli use ARIMA models with exogenous inputs, linear
regression or Artiﬁcial Neural Networks (ANNs). Although most of these models can also be used in prediction, in this case, the outliers are detected in the
residual set using past and future data. Speciﬁcally, once the selected model is
learned, hypothesis testing is applied over the residuals to detect the outliers.
In Akouemo and Povinelli , assuming that the underlying
distribution of the residuals is known, the minimum and maximum values are
examined simultaneously at each iteration of the algorithm. The hypothesis
to be tested is whether an extremum is an outlier (alternative hypothesis) or
not (null hypothesis). The detected outliers are corrected, and the process is
repeated until no more outliers are detected. In contrast, in Hochenbaum et al.
 , the ESD test explained in the previous paragraph is applied but the
median and MAD are used for robustness instead of the mean and standard
deviation.
In contrast to estimation models, techniques based on prediction models ﬁt
a model to the time series and obtain ˆxt using only past data; that is, without
using the current point xt or any posterior observations. Points that are very
di↵erent from their predicted values are identiﬁed as outliers. Recall that all of
the techniques within this category can deal with streaming time series.
Within the prediction-based methods, some use a ﬁxed model and thus are
not able to adapt to the changes that occur in the data over time. For example,
the DeepAnT algorithm that was presented by Munir et al. is a deep
learning-based outlier detection approach that applies a ﬁxed Convolutional
Neural Networks (CNNs) to predict values in the future. Other methods use
an autoregressive model or an ARIMA model , which obtain conﬁdence intervals for the predictions instead of
only point estimates. Consequently, these methods implicitly deﬁne the value
Other techniques adapt to the evolution of the time series by retraining the
model. As the most basic approach, Basu and Meckesheimer describe
a method that predicts the value ˆxt with the median of its past data. More
elaborately, Zhou et al. ﬁt an ARIMA model within a sliding window
to compute the prediction interval, so the parameters are reﬁtted each time that
the window moves a step forward.
Extreme value theory is another prediction-based approach that has been
employed to detect point outliers in streaming univariate series, using past data
and retraining. Given a ﬁxed risk q, this theory allows us to obtain a threshold
value zq,t that adapts itself to the evolution of the data such that P(Xt > zq,t) <
q, for any t ≥0, assuming that the extreme values follow a Generalized Pareto
Distribution (GPD). Incoming data is used to both detect anomalies (Xt > zq,t)
and reﬁne zq,t. Even if this notation is valid for upper thresholding, the idea
is symmetrical when getting lower-bound thresholds or both upper- and lowerbound thresholds.
Si↵er et al. propose two algorithms based on this
theory: SPOT, for data following any stationary distribution; and DSPOT, for
data that can be subject to concept drift .
Some of these prediction-based methods retrain the underlying model periodically, or each time a new point arrives. Therefore, they can adapt to the
evolution of the data. However, none of them applies incremental model learning
approaches, where the model is not rebuilt from scratch each time but is updated
incrementally using only the new information received. This avoids the cost associated with training the models more than once and permits a more gradual
adaptation to changes that can occur in the data, which is of special interest in
streaming contexts . In this sense, and in contrast to the
previous approaches, Xu et al. suggest modeling a univariate time
series stream in an incremental fashion. This method uses Student-t processes
to compute the prediction interval and updates the covariance matrix with the
newly arrived data point. Ahmad et al. use the Hierarchical Temporal
Memory (HTM) network, which is also a prediction model-based technique that
updates incrementally as new observations arrive.
All of these techniques are based on equation (1).
However, not all the
existing point outlier detection methods rely on that idea, such as the densitybased methods, which belong to the second category of methods depicted in Fig.
7. Techniques within this group consider that points with less than ⌧neighbors
are outliers; that is, when less than ⌧objects lie within distance R from those
points. This could be denoted as
xt is an outlier () |{x 2 X|d(x, xt) R}| < ⌧
where d is most commonly the Euclidean distance, xt is the data point at time
stamp t to be analyzed, X is the set of data points, and R 2 R+. Thus, a point
is an outlier if ⌧p + ⌧s < ⌧, where ⌧p and ⌧s are the number of preceding and
succeeding neighbors (points that appear before and after xt) at distance lower
or equal than R, respectively.
The detection of density-based outliers has been widely handled in nontemporal data, but the concept of neighborhood is more complex in time series
because the data are ordered. To take temporality into account, Angiulli and
Fassetti and Ishimtsev et al. apply this method within a
sliding window, which allows us to wheter or not a new value of a streaming
time series is an outlier upon arrival.
An illustration of this density-based outlier concept is provided in Fig. 9 at
two di↵erent time steps with R = 0.5, ⌧= 3, and a sliding window of length 11.
When using sliding windows, a point can be an outlier for a window (e.g., O13
at t = 13) but not for another (e.g., I13 at t = 17). However, if a data point has
at least ⌧succeeding neighbors within a window, then it cannot be an outlier
for any future evolution (e.g., S4 at t = 13).
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
(a) t = 13
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
(b) t = 17
Figure 9: Density-based outliers within a sliding window of length 11 at time
Histogramming is the last group analyzed in this section.
This type of
method is based on detecting the points whose removal from the univariate time
series results in a histogram representation with lower error than the original,
even after the number of buckets has been reduced to account for the separate
storage of these points (see Fig. 10). The histogram is built by computing the
average of the values within each bucket, in which the order of the observations
is preserved. Then, given a sequence of points X and a number of buckets B,
D ⇢X is a deviant set if
B) > EX−D(H⇤
B is the optimal histogram (histogram with lowest approximation error) on X with B buckets, EX() is the total error in the approximation and
B−|D| is the optimal histogram on X −D with B −|D| buckets. Jagadish
et al. introduced the term deviant to refer to these point outliers. They
proposed a dynamic programming mechanism to produce a histogram consisting of B −|D| buckets and |D| deviants, minimizing its total error. Some years
later Muthukrishnan et al. observed that for any bucket, the optimal set
of k = |D| deviants always consists of the l highest and remaining k −l lowest
values within the bucket, for some l k. Moreover, they presented not only an
optimal algorithm for non-streaming time series but also a closely approximate
algorithm and a heuristic approach for the streaming case.
eleven buckets.
(b) Optimal histogram with nine
buckets and O1 and O2 removed.
Figure 10: Example of a deviant set D = {O1, O2} in a univariate time series.
To conclude our review of point outlier detection in univariate time series,
a summary of the analyzed techniques and their characteristics is provided in
Table 2. This table includes the inherent characteristics of the point outliers
in time series data mentioned in Fig. 6, whether the algorithm is iterative or
not, the meaning the point outlier has for the authors, and the term they use
to name it. We consider that a method is iterative if it is repeatedly applied
on the same set to ﬁnd the outliers. In this case, the few iterative methods are
related to detecting unwanted data and improving the quality of the time series.
Caution must be taken with the estimation methods that can theoretically
be applied in a streaming time series; that is, those that do not use subsequent
observations to the last arrived data point xt (k2 = 0 in Table 1). Although, it
may in theory be possible to apply these techniques in streaming contexts, these
methods use the last observation received (xt) and some other past information
to calculate its expected value (ˆxt) and they then decide whether or not it is an
Table 2: Summary of the techniques used in point outlier detection in univariate
time series.
Temporality
Jagadish et al. 
Muthukrishnan et al. 
Basu and Meckesheimer 
Estimation
Prediction
Angiulli and Fassetti 
Chen et al. 
Estimation
Hill and Minsker 
Prediction
Zhang et al. 
Prediction
Carter and Streilein 
Estimation
Akouemo and Povinelli 
Estimation
Mehrang et al. 
Estimation1
Estimation 2
Dani et al. 
Estimation
Song et al. 
Estimation
Zhang et al. 
Estimation
Akouemo and Povinelli 
Estimation
Xu et al. 
Prediction
Ishimtsev et al. 
Akouemo and Povinelli 
Estimation
Reddy et al. 
Estimation
Si↵er et al. 
Prediction
Ahmad et al. 
Prediction
Hochenbaum et al. 
Estimation
Zhou et al. 
Prediction
Munir et al. 
Prediction
I: Event of interest; U: Unwanted data // W: Window // D: Deviant; O: Outlier; A: Anomaly; C: Corrupted.
2 Hypothesis testing.
* Incremental updating.
outlier. Consequently, they must perform some calculations after the new point
has arrived. The cost of this computation depends on the complexity of each
method (which has not been analyzed in this paper or in every original works)
but may not always guarantee a fast enough response. Thus, in practice, some
of these techniques may not be applicable in streaming contexts and prediction
methods are more recommendable for these situations.
Multivariate time series
The input time series is sometimes a multivariate time series with possibly correlated variables rather than a univariate time series. As opposed to the univariate
time series case, the detection method used to identify point outliers in multivariate time series can deal not only with a single variable (Section 3.2.1) but
also with more than one variable simultaneously (Section 3.2.2). Additionally,
a point outlier in a multivariate time series can a↵ect one (univariate point) or
more than one (multivariate point, a vector at time t) variables (see Fig. 3b).
As will be seen in the following sections, some multivariate techniques are able
to detect univariate point outliers and (similarly) some univariate techniques
can be used to detect multivariate point outliers. The characteristics mentioned
in Fig. 6 will also be highlighted.
Univariate techniques
Given that a multivariate time series is composed of more than one timedependent variable, a univariate analysis can be performed for each variable
to detect univariate point outliers, without considering dependencies that may
exist between the variables. Although the literature barely provides examples
of this type of approach, in essence, all of the univariate techniques discussed
in Section 3.1 could be applied to each time-dependent variable of the input
multivariate time series. As one of the few examples, Hundman et al. 
propose using the Long Short-Term Memory (LSTM) deep learning technique
(which is a prediction model-based method) to predict spacecraft telemetry and
ﬁnd point outliers within each variable in a multivariate time series, following
the idea of equation (1). Additionally, the authors present a dynamic thresholding approach in which some smoothed residuals of the model obtained from
past data are used to determine the threshold at each time step.
Correlation dependencies between the variables are not considered when applying univariate techniques to each time-dependent variable, leading to a loss
of information. To overcome this problem, and at the same time to leverage
that univariate detection techniques are highly developed, some researchers apply a preprocessing method to the multivariate time series to ﬁnd a new set of
uncorrelated variables where univariate techniques can be applied. These methods are based on dimensionality reduction techniques, and as depicted in Fig.
11, the multivariate series is simpliﬁed into a representation of lower dimension
before applying univariate detection techniques. Since the new series are combinations of the initial input variables, the identiﬁed outliers are multivariate;
that is, they a↵ect more than one variable.
Figure 11: Simpliﬁcation of point outlier detection in multivariate time series.
Some of those dimensionality reduction techniques are based on ﬁnding the
new set of uncorrelated variables by calculating linear combinations of the initial variables. For example, Papadimitriou et al. propose an incremental
Principal Component Analysis (PCA) algorithm to determine the new independent variables. In this case, the posterior univariate point outlier detection
technique that is applied is based on the autoregressive prediction model (AR).
Alternatively, Galeano et al. suggest reducing the dimensionality with
projection pursuit, which aims to ﬁnd the best projections to identify outliers.
The authors mathematically prove that the optimal directions are those that
maximize or minimize the kurtosis coeﬃcient of the projected time series. Univariate statistical tests are then applied iteratively to each projected univariate time series for multivariate point outlier
detection. Similarly, Baragona and Battaglia propose using Independent
Component Analysis (ICA) to obtain a set of unobservable independent non-
Gaussian variables, assuming that the observed data has been generated by a
linear combination of those variables. Outliers are identiﬁed in each new series
independently if equation (1) is satisﬁed for ˆxit = µi and ⌧i = 4.47σi, where µi
is the mean and σi the standard error of the ith new variable.
Other techniques reduce the input multivariate time series into a single timedependent variable rather than into a set of uncorrelated variables. Lu et al.
 deﬁne the transformed univariate series using the cross-correlation function between adjacent vectors in time; that is, xt−1 and xt.
Point outliers
are iteratively identiﬁed in this new series as those that have a low correlation
with their adjacent multivariate points. The threshold value ⌧is determined
at each iteration by the multilevel Otsu’s method. Shahriar et al. also
transformed the multivariate time series into a univariate series using a transformation speciﬁcally designed for the application domain considered.
outliers are identiﬁed using equation (1) and the 3-sigma rule.
The main characteristics of the univariate techniques analyzed for point outlier detection in multivariate time series are described in Table 3 in chronological
order. Most of them are non-iterative. In addition, point outliers are events of
interest for almost all the researchers. Particularly, note that the transformation
methods proposed by Galeano et al. and Lu et al. are speciﬁc for
outlier detection and not general dimensionality reduction techniques.
As far as the characteristics mentioned in Fig. 6 are concerned, in dimensionality reduction techniques, the temporality depends on both the transformation
and the outlier detection method applied.
If at least one of these considers
temporality, then so does the complete method because the same results are
not obtained when the observations of the input multivariate time series are
shu✏ed. In the case of PCA, projection pursuit, and ICA, these transformation methods do not consider temporality, so the temporality depends on the
univariate detection method. Conversely, Shahriar et al. and Lu et al.
 use methods that include temporality in the transformation phase. In
the other approach where the dimensionality is not reduced, the temporality
directly depends on the applied detection method.
Finally, all of the methods that we have reviewed in this section can theoret-
Table 3: Summary of the univariate techniques used in multivariate time series
for point outlier detection.
Temporality
Papadimitriou et al. 
Dim. reduction
Galeano et al. 
Dim. reduction
Baragona and Battaglia 
Dim. reduction
Shahriar et al. 
Dim. reduction
Lu et al. 
Dim. reduction
Hundman et al. 
Prediction
I: Event of interest; U: Unwanted data // O: Outlier; A: Anomaly; E: Event.
ically detect point outliers in a streaming context using sliding windows because
none needs future data to provide an output. In this context, the predictionbased approach proposed by Hundman et al. would work the best because, in contrast to techniques based on dimensionality reduction, the newly
arrived point to be analyzed is not used on the model construction. However,
no incremental versions have been proposed.
Multivariate techniques
In contrast to the univariate techniques discussed previously, this section analyzes the multivariate methods that deal simultaneously with multiple timedependent variables, without applying previous transformations.
These approaches perform the detection directly using all the original input data variables
and can be divided into three groups, as described in Fig. 12.
Point outliers
Model-based
Dissimilarity-based
Prediction
Histogramming
Estimation
Figure 12: Types of methods for detecting point outliers in multivariate time
As in univariate time series, model-based techniques can also be used to detect point outliers in multivariate time series. Methods within this group are
based on ﬁtting a model that captures the dynamics of the series to obtain expected values in the original input time series. Then, for a predeﬁned threshold
⌧, outliers are identiﬁed if:
||xt −ˆxt|| > ⌧
where xt is the actual k-dimensional data point, and ˆxt its expected value.
Note that this is a generalization of the deﬁnition given for the model-based
techniques in univariate time series and that the intuition is repeated (refer to
equation (1) and Table 1). In fact, ˆxt can be obtained using estimation models—
which use past, current, and future values—or prediction models—which only
use past values (see Fig. 13).
Variable 1
Variable 2
Variable 3
(a) Estimation models.
Variable 1
Variable 2
Variable 3
(b) Prediction models.
Figure 13: Example of the data used in model-based techniques.
Within the estimation model-based category, autoencoders are one of the
most commonly used methods. Autoencoders are a type of neural network that
learns only the most signiﬁcant features of a training set used as the reference
of normality.
Since outliers often correspond to non-representative features,
autoencoders fail to reconstruct them, providing large errors in (4). Sakurada
and Yairi use this method, where the input of the autoencoder is a
single multivariate point of the time series. The temporal correlation between
the observations within each variable is not considered in this approximation.
Therefore, to account for temporal dependencies, Kieu et al. propose
extracting features within overlapping sliding windows (e.g., statistical features
or the di↵erence between the Euclidean norms of two consecutive time windows)
before applying the autoencoder.
Su et al. suggest a more complex
approach based on a Variational AutoEncoder (VAE) with a Gated Recurrent
Unit (GRU). The input of the model is a sequence of observations containing
xt and l preceding observations to it. The output is the reconstructed xt (ˆxt).
Additionally, they apply extreme value theory in the reference
of normality to automatically select the threshold value.
Apart from using autoencoders, ˆxt can also be derived from the general trend
estimation of multiple co-evolving time series. Zhou et al. use a
non-parametric model that considers both the temporal correlation between
the values within each variable and inter-series relatedness in a uniﬁed manner
to estimate that trend. In this case, even though the trend of each variable
is estimated using the multivariate time series, univariate point outliers are
identiﬁed within each variable using equation (1) instead of k-dimensional data
The other model-based techniques that can be used to obtain ˆxt in equation
(4) are the prediction model-based techniques (see Fig. 13b). Techniques within
this category also ﬁt a model to a multivariate time series, but the expected
values are the predictions for the future made on the basis of past values. For
example, the Contextual Hidden Markov Model (CHMM) incrementally captures both the temporal dependencies and the correlations between the variables
in a multivariate time series . The temporal dependence is
modeled by a basic HMM, and the correlation between the variables is included
into the model by adding an extra layer to the HMM network. The DeepAnt
algorithm mentioned in Section 3.1 is also capable of detecting point outliers in multivariate time series using the CNN prediction model.
Once the model is learned, the next timestamp is predicted using a window of
previous observations as input.
All of these estimation and prediction model-based techniques can theoretically be employed in a streaming context using sliding windows because
no subsequent points to xt are needed.
As with univariate time series, the
estimation-based methods need to consider at least the newly arrived point xt
(k2 = 0 in Table 1), so prediction-based techniques are more appropriate for
detecting outliers in a streaming fashion. Additionally, these model-based techniques all use a ﬁxed model, and they do not adapt to changes over time, except
for the proposal of Zhou et al. , which is incrementally updated.
The dissimilarity-based methods will be discussed next. These techniques
are based on computing the pairwise dissimilarity between multivariate points
or their representations, without the need for ﬁtting a model. Therefore, for a
predeﬁned threshold ⌧, xt is a point outlier if:
s(xt, ˆxt) > ⌧
where xt is the actual k-dimensional point, ˆxt its expected value, and s measures
the dissimilarity between two multivariate points. These methods do not usually
use the raw data directly, but instead use di↵erent representation methods. For
example, Cheng et al. represent the data using a graph where
nodes are the multivariate points of the series and the edges the similarity values
between them computed with the Radial Basis Function (RBF). The idea is to
apply a random walk model in the graph to detect the nodes that are dissimilar
to the others (i.e., hardly accessible in the graph). By contrast, Li et al. 
propose recording the historical similarity and dissimilarity values between the
variables in a vector.
The aim is to analyze the dissimilarity of consecutive
points over time and detect changes using ||.||1.
The last group depicted in Fig. 12 refers to the histogramming approach,
where the term deviant has also been used in the context of multivariate series
(see the deﬁnition given in (3)). Muthukrishnan et al. extend the technique for deviant detection explained in Section 3.1 to multivariate time series
by treating the measurements collected at the same timestamp as a vector. Similar to the univariate case, the method aims to detect the vectors that should
be removed so that the compressed representation (histogram) of the remaining
data is improved. The authors propose an algorithm for both streaming and
non-streaming series to ﬁnd approximate optimal deviants.
The main characteristics of the multivariate techniques analyzed for point
outlier detection in multivariate time series are depicted in Table 4 in chrono-
logical order. Even if most of them ﬁnd multivariate point outliers, some use
the multivariate information to identify point outliers that only a↵ect a single variable (i.e., univariate point outliers). All of the analyzed techniques are
non-iterative, and outliers represent events of interest for the researchers. In
addition, most of them obtain di↵erent results if they are applied to a shu✏ed
version of the time series. Although all these methods can detect outliers in a
streaming context, few are incremental or updated as new data arrives.
Table 4: Summary of the multivariate techniques used in multivariate time
series for point outlier detection.
Temporality
Incremental
Muthukrishnan et al. 
Histogramming
Multivariate
Cheng et al. 
Estimation
Multivariate
Li et al. 
Dissimilarity
Univariate
Sakurada and Yairi 
Estimation
Multivariate
Zhou et al. 
Prediction
Multivariate
Kieu et al. 
Estimation
Multivariate
Munir et al. 
Prediction
Multivariate
Zhou et al. 
Estimation
Univariate
Su et al. 
Estimation
Multivariate
D: Deviant; O: Outlier; A: Anomaly; A’: Abnormality; E: Event; N: Novelty.
Subsequence outliers
As shown in Fig. 2, subsequence outliers are the second type of outliers that
can be detected in time series data. In this case, the aim is to identify a set
of consecutive points that jointly behave unusually. To this end, subsequence
outlier detection methods need to consider some key aspects, which are shown in
Fig. 14, and which make the detection of subsequence outliers more challenging
than point outlier detection.
Subsequence outlier
Representation
Periodicity
Figure 14: Characteristics related to subsequence outlier detection problems.
To begin with, subsequences are composed of a set of points and are not
composed of a single point, so they have a certain length. Typically, methods
consider ﬁxed-length subsequences, although some techniques do allow us to
detect subsequences of di↵erent lengths (variable-length) simultaneously ; Wang et al. ) 2. Methods based on ﬁxed-length subsequences need the user to predeﬁne the length, and they commonly obtain the
subsequences using a sliding window over the time series. In contrast, methods
that allow ﬁnding variable-length subsequences do not prespecify this length.
A ﬁnal aspect to consider regarding the length of the subsequence is that the
number of subsequences that the method will consider and analyze depends on
the chosen length, thus the number of subsequences will be higher when the
length is shorter.
The second characteristic that subsequence outlier detection methods need
to consider is the representation of the data. Since the comparison between subsequences is more challenging and costly than the comparison between points,
many techniques rely on a representation of the subsequences rather than using
the original raw values. Discretization is a widely used representation method
and can be obtained using approaches such as equal-frequency binning ), equal-width binning ; Chen
et al. ; Rasheed and Alhajj ), or SAX ;
Wang et al. ).
These discretization techniques can also be used as a
starting point to obtain other representations, such as bitmaps ; Kumar et al. ). A detailed overview of the existing research regarding outlier detection in discrete sequences can be found in Chandola et al.
 , which highlights the applicability of those techniques to time series data.
Additionally, apart from discretization, raw data has also been used directly to
obtain representations based on dictionaries ), exemplars ), or connectivity values ).
Another issue that has been barely considered in the literature but which
makes the detection of subsequence outliers more challenging is that they can
be periodic. Periodic subsequence outliers are unusual subsequences that repeat over time ; Rasheed and Alhajj ). Unlike
point outliers where periodicity is not relevant, periodic subsequence outliers
are important in areas such as fraud detection because it might be interesting
to discover certain periodic anomalous transactions over time.
Finally, as opposed to point outlier detection, where some methods did not
take into account the temporal dependencies, subsequences consider the temporality by default. In addition, when analyzing subsequence outliers in a streaming context, three cases can occur: i) a single data point arrives, and an answer
(i.e., outlier or non-outlier) must be given for a subsequence containing this
new point; ii) a subsequence arrives, and it needs to be marked as an outlier or
non-outlier; and iii) a batch of data arrives and subsequence outliers need to be
found within it. In either case, the literature provides methods that can give an
answer in a streaming fashion using sliding windows. However, most of them
keep the model ﬁxed and do not adapt to changes in the streaming sequence.
We will focus on these incremental techniques because they are more suitable
for processing streaming time series.
2Note that methods that ﬁnd ﬁxed-length subsequence outliers could also ﬁnd subsequences
of di↵erent lengths by applying the method repeatedly for each possible length.
Univariate time series
The detection methods used to detect univariate subsequence outliers in univariate time series will be analyzed in this section. We have grouped these techniques according to the di↵erent ideas or deﬁnitions on which they are based
(see Fig. 15).
Subsequence outliers
Discord detection
Dissimilarity-based
Frequency-based
Prediction model-based
Information theory
Figure 15: Types of methods for detecting subsequence outliers in univariate
time series.
The ﬁrst and most straightforward idea consists of detecting the most unusual subsequence in a time series (denominated time series discord) , by comparing each subsequence with the others;
that is, D is a discord of time series X if
D02A,D\D0=;(d(D, D0)) >
S02A,S\S0=;(d(S, S0))
where A is the set of all subsequences of X extracted by a sliding window, D0 is a
subsequence in A that does not overlap with D (non-overlapping subsequences),
S0 in A does not overlap with S (non-overlapping subsequences), and d is the
Euclidean distance between two subsequences of equal length. Typically, discord
discovery techniques require the user to specify the length of the discord. Two
examples are given in Fig. 16, in which the most unusual subsequences (O1 and
O2) are shown.
Figure 16: Discord examples using jmotif package .
The simplest way of ﬁnding discords is using brute-force, which requires a
quadratic pairwise comparison. Even so, the process can be sped-up by reordering the search using heuristics and pruning o↵some fruitless calculations with
the HOT-SAX algorithm , which is
based on the SAX discrete representation.
Many variants of the HOT-SAX algorithm aim to reduce its time complexity
by enhancing both the heuristic reordering and the pruning for discord detection,
which may be based on the Haar wavelet transformation and augmented trie
 , on bit representation clustering , on bounding boxes , on clustering categorical
data , and on the iSAX representation .
Additionally, Liu et al. not only is the HOT-SAX algorithm applied in a
streaming context using a sliding window but an incremental algorithm has also
been suggested to simplify this computation. The method proposed by Chau
et al. is also based on this incremental algorithm.
Those discord discovery techniques require the user to prespecify the length
of the discord, which in many cases may not be known. Consequently, Senin
et al. present two approaches to detect variable-length discords applying
grammar-induction procedures in the time series discretized with SAX. Since
symbols that are rarely used in grammar rules are non-repetitive and thus most
likely to be unusual, subsequence outliers correspond to rare grammar rules,
which naturally vary in length.
Given that the lengths of the subsequences
vary, the Euclidean distance between them is calculated by shrinking the longest
subsequence with the Piecewise Aggregate Approximation (PAA) to obtain subsequences of the same length.
The abovementioned discord detection techniques are limited to ﬁnding the
most unusual subsequence within a time series. However, since they do not
have a reference of normality or a threshold, they cannot specify whether it is
indeed an outlier or not. Therefore, this decision must be made by the user.
Conversely, the other categories in Fig. 15 consider a criterium of normality
and contain speciﬁc rules to decide whether or not the identiﬁed subsequences
are outliers.
For example, dissimilarity-based methods are based on the direct comparison of subsequences or their representations, using a reference of normality. In
this category, the reference of normality, as well as the representations used to
describe the subsequences, vary widely, in contrast to the dissimilarity-based
techniques analyzed in Section 3.2.2. Then, for a predeﬁned threshold ⌧, subsequence outliers are those that are dissimilar to normal subsequences; that
s(S, ˆS) > ⌧
where S is the subsequence being analyzed or its representation, ˆS is the expected value of S obtained based on the reference of normality, and s measures
the dissimilarity between two subsequences.
Typically, S is of ﬁxed-length,
non-periodic, and extracted via a sliding window.
Some dissimilarity-based
approaches are described below ordered based on the considered reference of
normality (see Fig. 17), which will be used to obtain the expected value ˆS.
Same time series
The most straightforward approach is to consider the same
time series object of the analysis as the reference of normality (Fig. 17a). Clustering techniques commonly use this reference of normality to create clusters
by grouping subsequences that are similar to each other and by separating dissimilar subsequences into di↵erent clusters (see Fig. 18). Then, ˆS in equation
of normality
(a) Same time series.
of normality
(b) External time series.
of normality
(c) Previous subsequence.
Figure 17: Reference of normality used by similarity-based approaches.
(7) can be deﬁned by the centroid or center of the cluster to which S belongs.
For example, Chen and Cook and Chen et al. cluster discretized
subsequences of the same length and ﬂag subsequences that are far from the
nearest centroid ( ˆS) as outliers. In this case, the distance used is the Euclidean
norm of three speciﬁc distances between the discretized subsequences. Alternatively, Izakian and Pedrycz employ Fuzzy C-Means (FCM) clustering on
the raw data, allowing each subsequence to belong to more than one cluster. In
particular, the authors use the Euclidean distance in (7). Note that these two
clustering approaches are not applied to streaming time series in the original
papers but could be extended using stream clustering algorithms propose dynamic clustering to identify variablelength outliers in a streaming context. The method works directly with raw
data and assumes that the observations arrive in ﬁxed-length batches (Bi is the
ith batch). Given L initial batches, grammar-induction is used to ﬁnd a rule for
dividing the incoming batches of data into M non-overlapping variable-length
subsequences; that is, Bi = Si1 [Si2 [...[SiM (all batches are split in the same
points). Clustering is then applied to the set of subsequences S1j, S2j, ..., SLj
for each j separately. A new incoming subsequence is ﬂagged as an outlier using
dynamic clustering and observing when it is either far from its closest cluster
centroid or belongs to a sparsely populated cluster.
There are other techniques besides clustering that also use the same time
series as the reference of normality.
For instance, Ren et al. use the
same time series to represent each subsequence with a value that indicates how
dissimilar it is with the rest (connectivity value). To this end, a Markov chain
random walk model is applied in a graph where each node is a subsequence
and each edge the pairwise similarity value between the nodes .
In particular, the pairwise similarity values are computed
based on the Piecewise Aggregate Pattern Representation (PAPR), which is a
matrix representation that captures the statistical information covered in the
subsequence.
External time series
There are some methods that rely on an external time
series as a reference of normality, assuming that it has been generated by the
same underlying process but with no outliers. For example, Jones et al. 
use an external time series to ﬁnd a set of exemplars that summarizes all of
its subsequences within it and which detects outliers as those that are far from
their nearest exemplar ( ˆS). In this case, subsequences are represented by a feature vector of two components that captures both the shape and the stochastic
variations of the subsequences in a time series, using smoothing and some statistics (e.g., the mean and the standard deviation). The authors use a weighted
Euclidean distance in equation (7), taking into account the components of both
a subsequence and its nearest exemplar.
In this category, we have also included techniques that use past non-outlier
subsequences as the reference of normality. Even if these subsequences belong to
the same time series, this set is considered as an external set where outliers are
not detected, unlike the previous category. For instance, Carrera et al. 
collect the most relevant subsequences within a series of past subsequences in
a dictionary. Subsequence outliers are those that cannot be accurately approximated by a linear combination of some subsequences of the dictionary ( ˆS),
resulting in a large error in (7) using the Euclidean distance .
Previous subsequence
Finally, there are some techniques that only use the
previous adjacent non-overlapping window to the subsequence being analyzed
as the reference of normality, which means that they have a much more local
perspective than the others. Wei et al. and Kumar et al. use
this reference of normality to obtain ˆS. Speciﬁcally, the authors represent each
subsequence by a bitmap; that is, a matrix in which each cell represents the frequency of a local region within a subsequence (the frequency of the subwords).
A subsequence whose local regions di↵er from the regions of its previous adjacent subsequence ( ˆS) is ﬂagged as an outlier, using the squared Euclidean
distance between each pair of elements of the bitmaps. In this case, bitmaps
are incrementally updated at each time step.
Returning to the general classiﬁcation of the subsequence outlier detection
techniques, the third group of methods belongs to the prediction model-based
category in Fig. 15, which assume that normality is reﬂected by a time series
composed of past subsequences. These methods intend to build a prediction
model that captures the dynamics of the series using past data and thus make
predictions of the future. Subsequences that are far from those predictions are
ﬂagged as outliers because, although they may resemble subsequences that have
appeared previously, they do not follow the dynamics captured by the model:
|xi −ˆxi| > ⌧
where S = xp, ..., xp+n−1 is the subsequence being analyzed, ˆS is its predicted
value, and ⌧is the selected threshold. Predictions can be made in two di↵erent
manners: point-wise or subsequence-wise. Models that use point-wise prediction
make predictions for as many points as the length of the subsequence iteratively.
With this in mind, any method within Section 3.1 could be used for this purpose. However, since each predicted value is used to predict the subsequent
point, the errors accumulate as predictions are made farther into the future. In
contrast, the subsequence-wise prediction calculates predictions for whole subsequences at once (not iteratively). Within this category, Munir et al. 
use Convolutional Neural Networks (CNN) to predict whole subsequences and
detect outliers using a model built with past subsequences.
The next subsequence outlier detection methods are the frequency-based, as
shown in Fig. 15, which also use one of the reference of normality mentioned
in Fig. 17. A subsequence S is an outlier if it does not appear as frequently as
|f(S) −ˆf(S)| > ⌧
where f(S) is the frequency of occurrence of S, ˆf(S) its expected frequency, and
⌧a predeﬁned threshold. Due to the diﬃculty of ﬁnding two exact real-valued
subsequences in a time series when counting the frequencies, these methods all
work with a discretized time series.
A paradigmatic example can be found in Keogh et al. .
external univariate time series as reference, a subsequence extracted via a sliding
window in a new univariate time series is an outlier relative to that reference
if the frequency of its occurrence in the new series is very di↵erent to that
expected. Rasheed and Alhajj also propose an algorithm based on the
frequency of the subsequences but the aim is to detect periodic subsequence
outliers together with their periodicity. In this case, the reference of normality
is the same time series. The intuition behind this method is that a periodic
subsequence outlier repeats less frequently in comparison to the more frequent
subsequences of same length. The algorithm checks the periodicity based on the
algorithm described in Rasheed et al. .
As shown in Fig. 15, the last group of subsequence outlier detection methods
correspond to information theory based techniques, which are closely related to
the frequency-based methods.
In particular, Yang et al. focus
on detecting periodic subsequence outliers in discretized univariate time series
using this theory. They assume that a subsequence that occurs frequently is less
surprising and thus carries less information than a rare subsequence. Therefore,
the aim is to ﬁnd infrequent but still repetitive subsequences with rare symbols,
using the same time series as the reference of normality; that is, Yang et al.
 mark S as an outlier if
I(S) ⇥f(S) > ⌧
where I(S) ≥0 is the information carried by S and f(S) ≥1 is the number of
occurrences of S. I(S) is computed taking into account the number of times the
symbols within S are repeated through the series, so a discretized subsequence
S that has symbols that do not commonly appear in the time series has a large
I(S). Conversely, if f(S) is large (S occurs frequently), then the information
I(S) will be lower, closer to 0.
A summary of the methods that detect subsequence outliers in univariate
time series is presented in Table 5. Most of these methods detect non-periodic
outliers of ﬁxed-length, assuming the length is known in advance. Many techniques use a discretized version of the time series to compare real-valued subsequences e↵ectively or to speed up the search process of outliers, this one specifically in the discord discovery category. However, discretizing a time series may
cause loss of information. In contrast to the many methods that discover point
outliers, the analyzed methods for subsequences are not iterative. In addition,
for all of the authors, the outlier represents an event of interest. A reference of
normality is also commonly used when detecting subsequence outliers. Finally,
it is worth mentioning that some methods may perform better in time series
with periodic or repetitive patterns (e.g., clustering, the frequency-based, and
the information theory based).
Multivariate time series
This section presents some of the detection techniques that have been used in the
literature to detect subsequence outliers in multivariate time series data. The
nature of these methods can be either univariate (Section 4.2.1) or multivariate
(Section 4.2.2), and they can detect subsequence outliers that a↵ect either one
variable (univariate subsequence outliers) or multiple variables, which are all
aligned (multivariate subsequence outliers).
Univariate detection techniques
Each variable of the multivariate time series can contain subsequence outliers
that are independent of other variables. The identiﬁcation of those subsequences
Table 5: Summary of the characteristics of subsequence outlier detection approaches in univariate time series.
Discretization
Yang et al. 
Inf. theory
Keogh et al. 
Wei et al. 
Similarity
Kumar et al. 
Keogh et al. 
Lin et al. 
Fu et al. 
Bu et al. 
Liu et al. 
Buu and Anh 
Chen and Cook 
Dissimilarity
Chen et al. 
Li et al. 
Izakian and Pedrycz 
Dissimilarity
Sanchez and Bustos 
Rasheed and Alhajj 
Senin et al. 
Carrera et al. 
Dissimilarity
Jones et al. 
Dissimilarity
Ren et al. 
Dissimilarity
Chau et al. 
Munir et al. 
Wang et al. 
Dissimilarity
F: Fixed; V: Variable // S: Surprise; D: Discord; O: Outlier; A: Anomaly.
may be carried out by applying the univariate techniques discussed in Section
4.1 to each time-dependent variable. In particular, Jones et al. 
apply the exemplar-based method to each variable of the multivariate input
time series, using an external time series as the reference of normality and
without considering the correlation that may exist between variables. Recall
that omitting this correlation can lead to a loss of information.
Intending to simplify the multivariate task but without completely ignoring
the correlation between the variables, some methods reduce the dimensionality
of the input series before applying a univariate detection technique. For example, Wang et al. extend their method for univariate subsequences by
applying clustering to a simpliﬁed series to detect variable-length subsequence
outliers (see equation (7)). The simpliﬁed series is obtained by ﬁrst applying
their univariate technique to each of the variables independently; that is, each
univariate batch of data is separated into variable-length subsequences, and the
obtained subsequences are then clustered as explained in Section 4.1.
this process, a set of representative univariate subsequences is obtained for each
variable. Each new multivariate batch of data is then represented by a vector
of distances, (d1, d2, ..., dl), where dj represents the Euclidean distance between
the jth variable-length subsequence of the new batch and its corresponding representative subsequence. As with their univariate technique, the reference of
normality that is considered by this method is the same time series.
The technique proposed by Hu et al. is also based on reducing the dimensionality of the time series and allows us to detect variable-length discords,
while using the same time series as the reference of normality. This is based
on the fact that the most unusual subsequences tend to have local regions with
signiﬁcantly di↵erent densities (points that are similar) in comparison to the
other subsequences in the series. Each point in the new univariate time series
describes the density of a local region of the input multivariate time series obtained by a sliding window. This series is also used to obtain the variable-length
subsequences. Discords are identiﬁed using the Euclidean and Bhattacharyya
distances simultaneously.
Table 6 provides a summary of the univariate techniques used in multivariate time series for the detection of subsequence outliers together with their
characteristics. The detected subsequence outliers a↵ect a single variable if the
univariate technique is applied to each variable. Otherwise, if the technique is
employed in a reduced time series, then the outliers commonly a↵ect multiple
variables because the new series contains multivariate information. It should
be noted that although Wang et al. identify multivariate batch outliers,
the variable-length subsequence outliers that are then identiﬁed within those
batches a↵ect a single variable. Finally, none of the analyzed techniques detect
periodic subsequence outliers.
Table 6: Summary of the univariate techniques used in multivariate time series
for subsequence outlier detecion.
Subsequence
Discretization
Jones et al. 
Dissimilarity
Univariate
Wang et al. 
Univariate
Hu et al. 
Multivariate
A: Anomaly; D: Discord.
Multivariate detection techniques
The techniques for multivariate subsequence outlier detection that will be reviewed in this section deal with multiple time-dependent variables simultane-
ously and typically detect temporally aligned outliers that a↵ect multiple variables. As shown in Fig. 19, these techniques are divided into two main groups.
However, the philosophy behind some of them is repeated because they are an
extension of simpler techniques introduced in previous sections.
Subsequence outliers
Model-based
Dissimilarity-based
Estimation
Prediction
Figure 19: Types of methods for detecting subsequence outliers in multivariate
time series.
The ﬁrst type of technique to be discussed is the model-based technique. As
mentioned in previous sections, the aim is to detect the subsequences that are
far from their expected value, which can be obtained using an estimation model
or a prediction model. A subsequence S = xp, ..., xp+n−1 of length n is an
outlier if
||xi −ˆxi|| > ⌧
for a predeﬁned threshold ⌧.
Within the techniques based on estimation models, the approach proposed
by Jones et al. intends to ﬁnd pairs of related variables using a set of
nonlinear functions. Once this is done, a value in a variable can be estimated
using observations from another variable (past and future with respect to xt).
These functions are learned using an external multivariate time series as the
reference of normality (see Fig. 17). Estimations and error calculations can
then be done for new time series. Within this new series, a subsequence in one
variable is estimated using the learned functions and data from another variable.
In contrast, the CNN method described by Munir et al. is a prediction
model-based technique, which is a direct extension of the method explained in
Section 4.1 to detect time-aligned outliers that a↵ect multiple variables.
The second group corresponds to the dissimilarity-based techniques, a generalization of equation (7) that ﬁnds unusual subsequences in a multivariate time
series based on the pairwise dissimilarity calculation between subsequences or
their representations. Unlike in the univariate subsequence outlier detection,
this type of technique has barely been used in multivariate series. In the only example, Cheng et al. extend their method for point outliers (Section
3.2.2) to obtain how dissimilar is a node representing a ﬁxed-length subsequence
with the others. This dissimilarity value is obtained by applying a random walk
model in the graph, and the computation of the pairwise similarity between
those nodes is also based on the RBF.
A summary of the multivariate techniques analyzed for subsequence outlier
detection is given in Table 7.
In all of the cases, the subsequence outliers
represent an event of interest.
In addition, the techniques ﬁnd non-periodic
outliers of ﬁxed-length without using a discretization technique.
Table 7: Summary of the multivariate techniques used in multivariate time
series for subsequence outlier detecion.
Subsequence
Cheng et al. 
Dissimilarity
Multivariate
Jones et al. 
Estimation
Univariate
Munir et al. 
Prediction
Multivariate
Anomaly / Outlier
Outlier time series
The analyzed task has so far been to identify point and subsequence outliers
within a time series, either univariate or multivariate. However, there are some
cases where it may also be interesting to ﬁnd entire unusual variables in a
multivariate time series. This could lead, for example, to the identiﬁcation of
malicious users or mail servers behaving unusually.
Recall that outlier time
series can only be detected in multivariate time series and using a multivariate detection technique. Unfortunately, the literature has barely analyzed the
detection of this type of outlier.
Some of the key aspects presented for the subsequence outliers (see Fig. 14)
can also appear when attempting to detect outlier time series. First, each timedependent variable in a multivariate time series can have a di↵erent length.
Second, representation methods such as discretization can also be used to facilitate the comparisons between variables. In addition, all of the outlier time
series detection methods can theoretically be applied in a streaming context
using sliding windows. However, in contrast to subsequences, the property of
temporality is not necessarily considered by these methods.
This section will examine the techniques that detect outlier time series, following the diagram given in Fig. 20.
Outlier time series
Dimensionality reduction
Dissimilarity-based
Figure 20: Types of methods for detecting outlier time series in multivariate
time series.
The ﬁrst type of technique to be discussed is based on dimensionality reduction. As mentioned in the previous sections, the aim of these techniques is
to reduce the dimensionality of the input multivariate time series into a set of
uncorrelated variables. As shown in Fig. 21, Hyndman et al. propose reducing the dimensionality by extracting some representative statistical features
from each time series (e.g., mean, and ﬁrst order of autocorrelation) and then
applying PCA. Outlier time series are detected by their deviation from the highest density region in the PCA space, which is deﬁned by the ﬁrst two principal
components. Laptev et al. use clustering in that PCA space to detect
outlier time series by measuring the deviation between the cluster centroids and
the points that represent the time series.
Figure 21: Outlier time series detection in a multivariate time series composed
of 50 variables using PCA in the extracted features with the anomalous package
Instead of applying a detection technique in a lower space, original raw data
can also be used directly. Indeed, the dissimilarity-based techniques in Fig. 20
directly analyze the pairwise dissimilarity between the time series. The most
common approach within this category is clustering. The intuition is similar
to that depicted in Fig. 18, but whole time series are considered instead of
subsequences. In this case, the reference of normality is the same multivariate
time series.
Given that the well-known k-means clustering algorithm is not useful for
unsynchronized variables because it uses the Euclidean distance, Rebbapragada
et al. propose using Phased k-means in unsynchronized periodic multivariate time series. This technique is a modiﬁcation of k-means so that the
phase of each time-dependent variable to its closest centroid is adjusted prior
to dissimilarity calculation at every iteration. Once a set of representative time
series centroids is generated, the outliers are identiﬁed using equation (7) and
cross-correlation as the similarity measure between time series. Benkabou et al.
 also use clustering but in this case based on the Dynamic Time Warping
(DTW) measure, which allows the series to be warped and shifted in time and
have di↵erent lengths. The method optimizes an objective function by both
minimizing the within-cluster distances using the DTW measure and maximizing the negative entropy of some weights that are assigned to each time series.
Time series that increase the within-cluster distances to their closest cluster
have smaller weights. Speciﬁcally, time series with small weights are considered
to be outliers.
Other dissimilarity-based techniques are based on shapelets, which are representative time series subsequences . Beggel et al. 
use them to describe the shape of normal variables and detect outlier time-
dependent variables in a multivariate time series. The shapelets are learned
using an external time series as the reference of normality.
The idea is to
measure the dissimilarity that each learned shapelet has with a variable using
the Euclidean distance. Subsequences of outlier variables are dissimilar to the
learned shapelets.
A summary of the techniques used for outlier time series detection is provided
in Table 8. All of these techniques intend to ﬁnd events of interest and none is
iterative. Unlike the subsequences, the length of the series is always speciﬁed.
The approach proposed by Benkabou et al. is the only one that can deal
with time series with variables of di↵erent lengths. The works reviewed in this
section directly use raw data and consider temporality.
Table 8: Summary of the characteristics of outlier time series detection in multivariate time series.
Variable-length
Rebbapragada et al. 
Dissimilarity-based
Anomaly / Outlier
Hyndman et al. 
Dimensionality reduction
Anomaly / Outlier / Unusual
Benkabou et al. 
Dissimilarity-based
Beggel et al. 
Dissimilarity-based
Publicly available software
In this section, the publicly available software for outlier detection in time series
data according to the techniques mentioned in previous sections is provided. A
summary of this software can be found in Table 9, in which the technical descriptions (Related research column) and the link to access the code (Code column)
are presented. The table is organized based on the outlier type the technique
detects. In particular, the only package that includes multiple methods is OTSAD
in R , which detects point outliers in univariate time series.
Concluding remarks and future work
In this paper, an organized overview of outlier detection techniques in time series
data has been proposed. Moreover, a taxonomy that categorizes these methods depending on the input data type, the outlier type, and the nature of the
detection method has been included. This section ﬁrst discusses some general
remarks about the analyzed techniques, and it then introduces the conclusions
regarding the axes of the taxonomy.
As seen in previous sections, a broad terminology has been used to refer
to the same concept; that is, the outlier in unlabeled time series data. The
term outlier has been mainly used in point outlier detection, whereas discord
or anomaly have been more frequently used in subsequence outlier detection.
Table 9: Summary of the publicly available software in chronological order.
Language Related research
Point outliers
tsoutliers
Chen and Liu 
 
packages/tsoutliers
Papadimitriou
 
project/spirit-1/www
Angiulli and Fassetti
 
 
tree/master/moa/src/main/java/moa/
clusterers/outliers/Angiulli
Song et al. 
 
sigmod15-screen
Laptev et al. 
 
Zhang et al. 
 
sigmod16-scr
Si↵er et al. 
 
AnomalyDetection
Hochenbaum
 
AnomalyDetection
Ahmad et al. 
 
Hundman et al. 
 
OmniAnomaly
Su et al. 
 
OmniAnomaly
 ; Ishimtsev et al.
 ; Iturria et al.
 
Subsequence outliers
Wei et al. ; Kumar et al. 
 
 
 
Senin et al. 
 
 
com/seninp/saxpy
Jones et al. 
 
GrammarViz
 
grammarviz2_src
Outlier time series
Hyndman et al. 
 
anomalous-acm
In outlier time series detection, both outlier and anomaly have been used. Additionally, these terms are related to the objective of the detection such that
outlier is mostly used when detecting unwanted data, whereas anomaly has
been when detecting events of interest.
In most of the analyzed works, the concept outlier represents an event of
interest; that is, the authors mainly focus on extracting the outlier information
considered as useful data rather than on cleaning the useless or unwanted data
to improve the data quality for further analysis. Most of those who focus on
handling unwanted data use iterative techniques and detect point outliers in
univariate time series. These outliers are usually removed or replaced by an
expected value. Therefore, it might be interesting to extend this type of methods
by developing techniques that improve the data quality of multivariate time
series data.
Despite the variety in terminology and purpose, all of the methods that we
have reviewed are based on the same idea: detecting those parts in a time series
(point, subsequence, or whole time series) that signiﬁcantly di↵er from their
expected value. Each author uses di↵erent means to obtain this expected value
and compute how far it is from the actual observation to decide whether or not
it is an outlier.
Although some techniques obtain the expected value based on an external
or reference set, caution must be taken because it can itself contain outliers
and distort the detection. In fact, they are in the limit of the unsupervised
framework because although the time series has no labels, it is usually assumed
that all the external or reference data are non-outliers.
Once the expected value is obtained, a threshold is often needed to decide
whether or not we have found an outlier. Given that the results directly vary
depending on that selection and few techniques give an automatic way to determine the threshold , an interesting future line of research would be to deepen on the
dynamic and adaptive selection of thresholds in both univariate and multivariate time series. Indeed, to the best of our knowledge, there are no methods that
include this type of threshold in the subsequence and entire time series outlier
As a ﬁnal general remark and before proceeding with the conclusions regarding the axes of the taxonomy, the time elapsed from one observation to
the subsequent is also an important aspect to consider. The vast majority of
methods assume that the time series are regularly sampled. However, real life
often does not provide this type of data, and converting it into such type is not
always the best option. Therefore, outlier detection in an irregularly sampled
time series is an interesting future direction line.
Having provided some general conclusions, we will now focus on each of the
axes. Starting from the ﬁrst axis, the most remarkable conclusion is that even if
most of the analysis has been performed on univariate input time series data, in
recent years special emphasis has been placed on multivariate series. However,
some techniques analyze each variable independently, even though they have a
multivariate time series as input.
For the second axis, point outlier detection is the most researched problem
due to its simplicity in comparison to the rest.
Within this category, it is
remarkable that some techniques do not consider the temporal information at
all. This can lead to not detecting outliers that violate the temporal correlation
of the series. Thus, possible future work may include temporal information to
techniques that do not consider it ; Si↵er et al.
 ) to see if the results improve. Additionally, even if theoretically many
techniques can determine if a new data point is an outlier upon arrival, no
study has been conducted to analyze whether these methods can really give an
immediate response in real time or not. Consequently, an in-depth investigation
could be done to analyze the computational cost of outlier detection techniques
and to determine whether these methods can be practically used in real-time
scenarios. There is also a chance for further incremental algorithm developments
to ensure quick responses that adapt to the evolution of the stream.
Subsequence outliers and outlier time series have been handled less frequently. Most of the subsequence outlier detection methods ﬁnd non-periodic
and ﬁxed-length outliers. Indeed, there are no techniques that identify periodic
subsequence outliers in multivariate time series. This can be a promising area
for further investigation and may be of interest in areas such as cybersecurity
to detect periodic network attacks, or in credit-fraud detection to detect periodic thefts. Additionally, within techniques that detect subsequence outliers,
care must be taken with the way in which clustering is performed because it
has been shown that clustering all of the subsequences extracted from a time
series by a sliding window produces meaningless results .
A straightforward solution could be to use non-overlapping subsequences, but
this slicing may miss relevant information when the time series presents a nonperiodical structure.
Not much work has been carried out on the detection of outlier time series.
Other research directions in this line include using di↵erent distance measures
and creating more e↵ective methods for dealing with time-dependent variables
of di↵erent lengths.
In addition, variables could be represented using other
representations than raw data to facilitate comparisons.
Within the dissimilarity-based techniques that detect either subsequence or
whole time series outliers (e.g., clustering), the dissimilarity measure that is
used inﬂuences the results obtained. The Euclidean distance accounts for the
majority of all published work mentioned in this review due to its computation
eﬃciency. However, other measures, such as DTW, could lead to an improvement in the detection of outliers because they include temporal information. An
interesting future research direction would be to observe how di↵erent dissimilarity measures inﬂuence the outlier detection algorithms in time series data to
see if any of them improve the results of the Euclidean distance. In particular,
meta-learning approaches such as that proposed by Mori et al. could
be used as they provide an automatic selection of the most suitable distance
In addition to these types of outliers, there could be other types of unexplored outliers. For example, it may be interesting to detect outliers that
propagate over time within di↵erent variables of a multivariate time series; that
is, an outlier may begin in a unique variable and then propagate through other
variables in later time steps. As far as we know, this problem has not been
addressed yet in the literature, or at least it has not been done under the name
of outlier/anomaly detection. Therefore, developing an algorithm capable of detecting outliers caused by the same origin or variable but occurring at di↵erent
time steps in di↵erent variables appears to be a promising direction for future
Finally, with regard to the nature of the detection method, it should be
noted that some univariate techniques (e.g., the distance-based) can easily be
generalized to the multivariate case by considering the distance between vectors
instead of points.
However, complex correlations between the variables in a
multivariate time series are not taken into account. This may lead us to not
identify observations that look normal in each variable individually but which
violate the correlation structure between variables. In addition, when applying a univariate technique separately to each variable in a multivariate time
series, the correlation dependencies are ignored. This can be computationally
expensive when the number of variables is large. Hence, an extension of the
univariate detection techniques applied to multivariate time series should be
studied ; Hundman et al. ) so that the correlations
between variables representing complex system behaviors are included.
Acknowledgments
A. Bl´azquez-Garc´ıa and A. Conde are supported by Grant No. KK/2019-00095
from the Elkartek program under the DIGITAL project of the Basque Government.
U. Mori is supported by the Basque Government through the research group Grant No.
IT1244-19 and by the Spanish Ministry of Science,
Innovation and Universities: Grants No. TIN2016-78365-R., and No. PID2019-
104966GB-I00; J.A. Lozano is supported by the Basque Government through
the BERC 2018-2021 program and research group Grant No. IT1244-19 and
by the Spanish Ministry of Science, Innovation and Universities: BCAM Severo
Ochoa accreditation Grants No. SEV-2017-0718, No. TIN2016-78365-R, and
No. PID2019-104966GB-I00.