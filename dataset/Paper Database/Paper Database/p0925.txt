Exploiting Emoticons in Sentiment Analysis
Alexander Hogenboom1
 
Daniella Bal1
 
Flavius Frasincar1
 
Malissa Bal1
 
Franciska de Jong1,2
 
Uzay Kaymak3
 
1Erasmus University Rotterdam, P.O. Box 1738, 3000 DR Rotterdam, the Netherlands
2Universiteit Twente, P.O. Box 217, 7500 AE Enschede, the Netherlands
3Eindhoven University of Technology, P.O. Box 513, 5600 MB Eindhoven, the Netherlands
As people increasingly use emoticons in text in order to express, stress, or disambiguate their sentiment, it is crucial for
automated sentiment analysis tools to correctly account for
such graphical cues for sentiment. We analyze how emoticons typically convey sentiment and demonstrate how we
can exploit this by using a novel, manually created emoticon sentiment lexicon in order to improve a state-of-the-art
lexicon-based sentiment classiﬁcation method.
We evaluate our approach on 2,080 Dutch tweets and forum messages, which all contain emoticons and have been manually
annotated for sentiment.
On this corpus, paragraph-level
accounting for sentiment implied by emoticons signiﬁcantly
improves sentiment classiﬁcation accuracy.
This indicates
that whenever emoticons are used, their associated sentiment dominates the sentiment conveyed by textual cues and
forms a good proxy for intended sentiment.
Categories and Subject Descriptors
H.3.1 [Information Storage and Retrieval]:
Analysis and Indexing—Linguistic processing; I.2.7 [Arti-
ﬁcial Intelligence]: Natural Language Processing—Language parsing and understanding
General Terms
Algorithms, experimentation, performance
Sentiment analysis, emoticons, sentiment lexicon
INTRODUCTION
Today’s Web enables users to produce an ever-growing
amount of utterances of opinions. People can write blogs
and reviews, post messages on discussion forums, and publish whatever crosses their minds on Twitter in a trice. This
Permission to make digital or hard copies of all or part of this work for
personal or classroom use is granted without fee provided that copies are
not made or distributed for proﬁt or commercial advantage and that copies
bear this notice and the full citation on the ﬁrst page. To copy otherwise, to
republish, to post on servers or to redistribute to lists, requires prior speciﬁc
permission and/or a fee.
SAC’13 March 18-22, 2013, Coimbra, Portugal.
Copyright 2013 ACM 978-1-4503-1656-9/13/03 ...$10.00.
phenomenon yields a continuous ﬂow of an overwhelming
amount of data, containing traces of valuable information –
people’s sentiment with respect to products, brands, etcetera.
As recent estimates indicate that one in three blog posts 
and one in ﬁve tweets discuss products or brands, the
abundance of user-generated content published through such
social media renders automated information monitoring tools
crucial for today’s businesses.
Sentiment analysis comes to answer this need. Sentiment
analysis refers to a broad area of natural language processing, computational linguistics, and text mining. Typically,
the goal is to determine the polarity of natural language
texts. An intuitive approach would involve scanning a text
for cues signaling its polarity.
In face-to-face communication, sentiment can often be
deduced from visual cues like smiling. However, in plaintext computer-mediated communication, such visual cues
are lost. Over the years, people have embraced the usage
of so-called emoticons as an alternative to face-to-face visual cues in computer-mediated communication like virtual
utterances of opinions. In this light, we deﬁne emoticons as
visual cues used in texts to replace normal visual cues like
smiling to express, stress, or disambiguate one’s sentiment.
Emoticons are typically made up of typographical symbols
such as “:”, “=”, “-”, “)”, or “( ” and commonly represent facial expressions. Emoticons can be read either sideways, like
“:-( ” (a sad face), or normally, like “(ˆ ˆ)” (a happy face).
In recent years, several approaches to sentiment analysis
of natural language text have been proposed. Many stateof-the-art approaches represent text as a bag of words, i.e.,
an unordered collection of the words occurring in a text.
Such an approach allows for vector representations of text,
enabling the use of machine learning techniques for classifying the polarity of text. Features in such representations
may be, e.g., words or parts of words.
However, machine learning polarity classiﬁers typically require a lot of training data in order to function properly.
Moreover, even though machine learning classiﬁers may perform very well in the domain that they have been trained
on, their performance drops signiﬁcantly when they are used
in a diﬀerent domain . In this light, alternative lexiconbased methods have gained (renewed) attention in recent
research , not in the least because they
have been shown to have a more robust performance across
domains and texts .
These methods tend to keep a
more linguistic view on textual data rather than abstracting away from natural language by means of vectorization.
As such, deep linguistic analysis comes more naturally in
lexicon-based approaches, thus allowing for intuitive ways
of accounting for structural or semantic aspects of text in
sentiment analysis .
Lexicon-based sentiment analysis approaches use sentiment lexicons for retrieving the polarity of individual words
and aggregate these scores in order to determine the text’s
polarity. A sentiment lexicon typically contains simple and
compound words and their associated sentiment, possibly
diﬀerentiated by Part-of-Speech (POS) and/or meaning .
However, today’s lexicon-based approaches typically do
not consider emoticons. Conversely, one of the ﬁrst steps in
most existing work is to remove many of the typographical
symbols typically constituting emoticons, thus preventing
emoticons from being detected at all. Yet, state-of-the-art
sentiment analysis approaches may be ignoring important
information, as an emoticon may for instance signal the intended sentiment of an otherwise objective statement, e.g.,
“This product does not work :-( ”. Therefore, we aim to investigate how emoticons are typically used to convey sentiment and how we can exploit this in order to improve the
state-of-the-art of lexicon-based sentiment analysis.
The remainder of this paper is structured as follows. First,
Section 2 elaborates on sentiment analysis and how emoticons are used in computer-mediated communication. Then,
in Section 3, we analyze how emoticons are typically related
to the sentiment of the text they occur in and we additionally propose a method for harvesting information from
emoticons when analyzing the sentiment of natural language
text. The performance of our novel approach is assessed in
Section 4. Last, in Section 5, we draw conclusions and propose directions for future work.
RELATED WORK
In a recent literature survey on sentiment analysis ,
the current surge of research interest in systems that deal
with opinions and sentiment is attributed to the fact that,
despite today’s users’ hunger for and reliance upon on-line
advice and recommendations, explicit information on user
opinions is often hard to ﬁnd, confusing, or overwhelming.
Many sentiment analysis approaches exist, yet harvesting information from emoticons has been relatively little explored.
Sentiment Analysis
As sentiment analysis tools have particularly useful applications in marketing and reputation management , sentiment analysis tools are often evaluated on collections of reviews, which typically contain people’s opinions expressed in
natural language, often along with an associated (numeric)
score quantifying one’s judgment.
In this light, a widely
used corpus for assessing sentiment analysis approaches is
a collection of 2,000 English movie reviews, annotated for
sentiment .
Among the popular bag-of-word approaches, a binary representation of text, indicating the presence of speciﬁc words,
has initially proven to be an eﬀective approach, yielding an
accuracy of 87.2% on the movie review data .
research has focused on diﬀerent vector representations of
text, including vector representations with additional features representing semantic distinctions between words 
or vector representations with tf-idf -based weights for word
features . Such approaches typically yield an accuracy
on the movie review data set of over 90.0%.
The alternative lexicon-based approaches typically exhibit
lower accuracy on the movie review data set, but tend to be
more robust across domains .
Also, lexicon-based approaches can be generalized relatively easily to other languages by using dictionaries . A rather simple lexiconbased sentiment analysis framework has been shown to have
an accuracy up to 59.5% on the full movie review data
set . A more sophisticated lexicon-based sentiment analysis approach has been shown to have an average accuracy
of 68.0% on 1,900 documents from the movie review data
set . A deeper linguistic analysis focusing on diﬀerentiating between rhetorical roles of text segments has recently
been proven to perform comparably well too . On 1,000
documents from the movie review data set, this approach
yields an accuracy of 72.0%, which is a 4.5% improvement
over not accounting for structural aspects of content.
Even though recent lexicon-based sentiment analysis approaches explore promising new directions of incorporating
structural and semantic aspects of content , they typically fail to harvest information from potentially important
cues for sentiment in today’s user-generated content – emoticons. Nevertheless, emoticons have already been exploited
to a limited extent, mainly for automated data annotation.
For instance, in early work, a crude distinction between a
handful of positive and negative emoticons has been used to
automatically generate data sets with positive and negative
samples of natural language text in order to train and test
polarity classiﬁcation techniques .
These early results
suggest that the polarity information conveyed by emoticons
is topic- and domain-independent. These ﬁndings have been
successfully applied in later work in order to automatically
construct sets of positive and negative tweets .
In more recent research, a small set of emoticons has been
used as features for polarity classiﬁcation . However, the
results of the latter work do not indicate that treating emoticons as if they are normal sentiment-carrying words yields a
signiﬁcant improvement over ignoring emoticons when classifying the polarity of natural language text. Provided that
emoticons are nevertheless important cues for sentiment in
today’s user-generated content, the key to harvesting information from emoticons lies in understanding how they relate
to a text’s overall sentiment.
To the best of our knowledge, existing research however
does not focus on investigating how emoticons aﬀect the sentiment of natural language text, nor on exploring how this
phenomenon can be exploited in lexicon-based sentiment
analysis. In order to be able to address this hiatus, we need
to ﬁrst understand how emoticons are used in computermediated communication.
Research has demonstrated that humans are clearly in-
ﬂuenced by the use of nonverbal cues in face-to-face communication . Nonverbal cues have even been shown
to dominate verbal cues in face-to-face communication in
case both types of cues are equally strong . Apparently,
nonverbal cues are deemed important indicators for people in order to understand the intentions and emotions of
whoever they are communicating with.
Translating these
ﬁndings to computer-mediated communication does hence
not seem too far-fetched, if it were not for the fact that
plain-text computer-mediated communication does not leave
much room for nonverbal cues.
However, users of computer-mediated communication have
found ways to overcome the lack of personal contact by using emoticons. The ﬁrst emoticon was used on September
19, 1982 by professor Scott Fahlman in a message on the
computer science bulletin board of Carnegie Mellon University.
In his message, Fahlman proposed to use “:-)” and
“:-( ” to distinguish jokes from more serious matters, respectively. It did not take long before the phenomenon of
emoticons had spread to a much larger community. People
started sending yells, hugs, and kisses by using graphical
symbols formed by characters found on a typical keyboard.
A decade later, emoticons had found their way into everyday computer-mediated communication and had become the
paralanguage of the Web . By then, 6.1% of the messages on electronic mailing lists and 13.2% of UseNet
newsgroup posts were estimated to contain emoticons.
Thus, nonverbal cues have emerged in computer-mediated
communication. These cues are however conceptually different from nonverbal cues in face-to-face communication
– cues like laughing and weeping are often referred to as
involuntary ways of expressing oneself in face-to-face communication, whereas the use of their respective equivalents
“:-)” and “:-( ” in computer-mediated communication is intentional . As such, emoticons enable people to indicate
subtle mood changes, to signal irony, sarcasm, and jokes,
and to express, stress, or disambiguate their (intended) sentiment, perhaps even more than nonverbal cues in face-toface communication can. Therefore, harvesting information
from emoticons appears to be a viable strategy to improve
the state-of-the-art of sentiment analysis. Yet, the question
is not so much whether, but rather how we should account
for emoticons when analyzing a text for sentiment.
EMOTICONS AND SENTIMENT
In order to exploit emoticons in automated sentiment analysis, we ﬁrst need to analyze how emoticons are typically related to the sentiment of the text they occur in. Insights into
what parts of a text are aﬀected by emoticons in which way
are crucial for advancing the state-of-the-art of sentiment
analysis by harvesting information from emoticons.
Emoticons as Cues for Sentiment
In order to assess the role emoticons play in conveying the
sentiment of a text, we have performed a qualitative analysis
of a collection of 2,080 Dutch tweets and forum messages.
We have randomly sampled this content from search results
from Twitter and Google discussion groups when querying
for brands like Vodafone, KLM, Kinect, etcetera.
First, we hypothesize that emoticons have a rather local
eﬀect, i.e., they aﬀect a paragraph or a sentence. Paragraphs
typically address diﬀerent points of view for a single topic or
diﬀerent topics, thus rendering the applicability of an emoticon in one paragraph to another paragraph rather unlikely.
In our sample collection, upon inspection, emoticons generally have a paragraph-level eﬀect for paragraphs containing
only one emoticon.
When a paragraph contains multiple
emoticons, our sample shows that an emoticon is generally
more likely to aﬀect the sentence in which it occurs.
Interestingly, in our sample, 84.0% of all emoticons are
placed at the end of a paragraph, 9.0% are positioned somewhere in the middle of a paragraph, and 7.0% are used at
the beginning of a paragraph. This positioning of emoticons
suggests that it is typically not a single word, but rather
Table 1: Typical examples of how emoticons can be
used to convey sentiment.
I love my work :-D
Intensiﬁcation
The movie was bad :-D
:-D I got a promotion
Only sentiment
- - I love my work
The movie was bad - -
Intensiﬁcation
I got a promotion - -
Only sentiment
a text segment that is aﬀected by an emoticon. Additionally, these results imply that in case an emoticon is used
in the middle of a paragraph with multiple emoticons, the
emoticon is statistically more likely to be associated with
the preceding text segment.
Rather than only looking into what is aﬀected by emoticons, we have also assessed how emoticons aﬀect text. Our
sample shows that emoticons can generally be used in three
First, emoticons can be used to express sentiment
when sentiment is not conveyed by any clearly positive or
negative words in a text segment, thus rendering the emoticons to be carrying the only sentiment in the sentence in such
cases. Second, emoticons can stress sentiment by intensifying the sentiment already conveyed by sentiment-carrying
words. Third, emoticons can be used to disambiguate sentiment, for instance in cases where the sentiment associated
with sentiment-carrying words needs to be negated. Some
examples can be found in Table 1.
Table 1 clearly shows that the sentiment associated with a
sentence can diﬀer when using diﬀerent emoticons, i.e., the
happy emoticon “:-D” and the “- -” emoticon indicating extreme boredom or disagreement, irrespective of the position
of the emoticons. The sentiment carried by an emoticon is
independent from its embedding text, rendering word sense
disambiguation techniques not useful for emoticons. As
such, the sentiment of emoticons appears to be dominating
the sentiment carried by verbal cues in sentences, if any.
In some cases, this may be a crucial property which can be
exploited by automated sentiment analysis approaches. For
instance, when an emoticon is the only cue in a sentence
conveying sentiment, we are typically dealing with a phenomenon that we refer to as factual sentiment. For example, the sentence“I got a promotion”does nothing more than
stating the fact that one got promoted. However, getting a
promotion is usually linked to a positive emotion like happiness or pride. Therefore, human interpreters could typically
be inclined to acknowledge the implied sentiment and thus
consider the factual statement to be a positive statement.
This however requires an understanding of context and involves incorporating real-world knowledge into the process
of sentiment analysis. For machines, this is a cumbersome
task. In this light, emoticons can be valuable cues for deriving an author’s intended sentiment.
We propose a novel framework for automated sentiment
analysis, which takes into account the information conveyed
by emoticons. The goal of this framework is to detect emoticons, determine their sentiment, and assign the associated
sentiment to the aﬀected text in order to correctly classify
the polarity of natural language text as either positive or
Figure 1: Overview of our sentiment analysis framework.
negative. In order to accomplish this, we build upon existing
work . Our framework, depicted in Figure 1, is essentially
a pipeline in which each component fulﬁlls a speciﬁc task in
analyzing the sentiment of an arbitrary document. Here, a
document is a piece of natural language text which can be
as small as a one-line tweet or as big as a news article, blog,
or forum message with multiple paragraphs, as long as it is
one coherent piece of text.
First, we load a document in order for it to be analyzed
for sentiment. Then, the document is split into text segments, which may be either paragraphs or sentences (step
When splitting a document into paragraphs, we look
for empty lines or lines starting with an indentation. When
splitting a document into sentences, we look for punctuation
marks, such as “.”, “!”, and “?”, as well as for emoticons, as
most emoticons are placed at the end of a text segment (see
Section 3.1).
Sentiment analysis is subsequently initially
performed on segment level, after which the segment-level
results are combined.
Each text segment is checked for the presence of emoticons
(step 2). To this end, we propose an emoticon sentiment lexicon, which we deﬁne as a list of character sequences, representing emoticons, and their associated sentiment scores.
These emoticons may be organized into emoticon synsets,
which we deﬁne as groups of emoticons denoting the same
emotion. Table 2 shows examples of such emoticon synsets.
When checking a text segment for the presence of emoticons,
we compare each word in the segment with the emoticon
sentiment lexicon. Here, we consider words to be character
sequences, separated by whitespace characters. If a word in
a text segment matches a character sequence in the emoticon
sentiment lexicon, the segment is rated for sentiment based
on the sentiment imposed onto the text by its emoticons
(step 3a). Else, the segment is analyzed for the sentiment
conveyed by its sentiment-carrying words (step 3b1–3).
In case a text segment is analyzed based on the emoticons it contains (step 3a), the segment is assigned a sentiment score equal to the average sentiment associated with
its emoticons, as derived from the emoticon sentiment lexicon. Sentiment scores of sentiment-carrying words (if any)
are ignored in this process, as our analysis presented in Section 3.1 indicates that the sentiment of emoticons tends to
dominate the sentiment carried by verbal cues.
In order to analyze a text segment for the sentiment conveyed by its sentiment-carrying words (step 3b1–3), it is ﬁrst
preprocessed by removing diacritics and other special characters (step 3b1) and identifying each word’s POS and its
purpose in the text, i.e., sentiment-carrying or modifying
term (step 3b2). Following existing work , we consider
modifying terms to change the sentiment of corresponding
word(s) – negations change the sentiment sign and ampliﬁers
increase the sentiment of the aﬀected sentiment words. After
determining the word types, the text segment is rated for its
conveyed sentiment by means of a lexicon-based sentiment
scoring method that essentially computes the sentiment
of the text segment as the average sentiment score of all
sentiment-carrying words in the segment (step 3b3).
As such, the sentiment score sent (si) of the i-th segment
si of document d can be computed as a function of the sentiment scores of either each emoticon eij in segment si or
each sentiment-carrying word wij and its modiﬁer mij, (if
any, else this modiﬁer defaults to 1), i.e.,
sent (si) =
j=1 sent(eij)
if vi > 0,
j=1(sent(wij)·sent(mij))
with vi the number of visual cues for sentiment in segment si
and ti the number of sentiment-carrying textual cues (i.e.,
combinations of sentiment-carrying words and their modi-
ﬁers, if any) in the segment.
Table 2: Typical examples of emoticon synsets.
Emoticon synset
:-D, =D, xD, (ˆ ˆ)
:’(, =’(, (; ;)
- -, -.-, (> <)
Embarrassment
:-$, =$, >///<
After determining the sentiment conveyed by each individual text segment, all text segments are recombined into
a single document. Note that a document can have both
segments with and without emoticons. The document sentiment score is then calculated as a weighted average of
all segment-level sentiment scores, where the weights correspond with the relative proportions of the number of sentimentcarrying words or emoticons (whichever is applicable) in
each respective segment (step 4). As such, the sentiment
score sent (d) of a document d is calculated as
sent (d) =
i=1 (sent (si) · (vi + (ai · ti)))
i=1 (vi + (ai · ti))
with p the number of partitions of document d and ai a
Boolean variable indicating whether a full sentiment analysis
needs to be performed on the textual cues of text segment
si (1) or not (0), i.e.,
if vi > 0,
Thus, the document’s sentiment score is returned. A negative score typically indicates a negative document (−1),
whereas other scores yield a positive classiﬁcation (1). The
classiﬁcation class (d) of document d is therefore deﬁned as
a function of its sentiment score sent (d) , i.e.,
class (d) =
if sent (d) ≥0,
POLARITY CLASSIFICATION BY
EXPLOITING EMOTICONS
Our novel method of classifying natural language text in
terms of its polarity by exploiting emoticons is evaluated
by means of a set of experiments. For our current purpose,
we focus on a test collection of Dutch documents. This test
collection consists of 2,080 Dutch tweets and forum messages
(1,067 positive documents and 1,013 negative documents),
which have been manually annotated for sentiment by three
human annotators until they reached agreement. We have
randomly sampled these messages from search results from
Twitter and Google discussion groups when querying for the
brands Vodafone, KLM, Kinect, etcetera. Emoticons occur
in all of our considered documents.
Experimental Setup
One of the key elements in our novel framework is the
emoticon sentiment lexicon. Several lists of emoticons are
readily available . We propose
to combine these eight existing lists into one large lexicon,
while leaving out duplicate entries, character representations
of body parts, and representations of objects, as the latter
two types of emoticons do not carry any sentiment.
This process yields a list of 574 emoticons representing
facial expressions or body poses like thumbs up. We have
let three human annotators manually rate the emoticons in
our lexicon for their associated sentiment. The annotators
were allowed to assign ratings of −1.0 (negative), −0.5, 0.0,
0.5, and 1.0 (positive). The sentiment score of each individual emoticon has subsequently been determined as the score
closest to the average of the annotators’ scores for that particular emoticon. In 87.5% of all cases, our three annotators
assigned identical scores to the respective emoticons.
The sentiment lexicon thus generated is utilized in the
C# implementation of our framework. In our implementation, we utilize a proprietary maximum-entropy based POS
tagger for Dutch and a proprietary sentiment lexicon for
Dutch words, both of which have been provided to us by
Teezir ( Our implementation can
perform both paragraph-level and sentence-level sentiment
analysis and the design of its graphical user interface, depicted in Figure 2 facilitates the comparison between sentiment analysis with and without taking into account the
information conveyed by emoticons.
The implementation of our proposed framework allows us
to perform a set of experiments in order to compare the
performance of several conﬁgurations of our sentiment analysis framework.
First, as an absolute baseline, we assess
the performance of our framework when not accounting for
the information conveyed by emoticons, thus essentially reducing the functionality of our pipeline to that of a stateof-the-art lexicon-based document-level sentiment analysis
approach . Then, as a ﬁrst alternative approach, we consider a sentiment analysis approach in which the sentiment
conveyed by emoticons aﬀects the surrounding text on a sentence level. Last, we consider accounting for the sentiment
conveyed by emoticons on a paragraph level when analyzing
the sentiment of a piece of natural language text.
In order to get a clear view on the impact of accounting for
the sentiment conveyed by emoticons in sentiment analysis,
we compare the performance of our considered sentiment
analysis approaches on our test collection, in which each
document contains at least one emoticon. In our comparisons, we assess the statistical signiﬁcance of the observed
performance diﬀerences by means of a paired two-sample
one-tailed t-test. To this end, we randomly split our data
sets into ten equally sized subsets of 208 documents, on
which we assess the performance of our considered methods.
The mean performance measures over these subsets
can then be compared by means of the t-test.
Experimental Results
Our considered sentiment analysis approaches exhibit clear
diﬀerences in terms of performance, as demonstrated in Table 3. This table reports precision, recall, and F1 measure
for positive and negative documents containing emoticons
separately, as well as the accuracy and macro-level F1 measure over this set of documents as a whole.
Precision is
the proportion of the positively (negatively) classiﬁed documents which have an actual classiﬁcation of positive (negative), whereas recall is the proportion of the actual positive
(negative) documents which are also classiﬁed as such. The
F1 measure is the harmonic mean of precision and recall.
The macro-level F1 measure is the average of the F1 scores
of the positive and negative documents.
Accuracy is the
proportion of correctly classiﬁed documents.
Table 3: Experimental results for all approaches on a set of documents containing emoticons.
Sentence-level
Paragraph-level
Figure 2: Graphical user interface facilitating comparison of results.
Table 3 clearly shows that on a set of documents containing emoticons, the absolute baseline of not accounting for the
information conveyed by emoticons is outperformed by both
considered methods of harvesting information from emoticons for the sentiment analysis process. Overall, sentencelevel accounting for emoticon sentiment yields an increase
in accuracy and macro-level F1 from 22% to 59% and from
22% to 65%, respectively. Assuming the sentiment conveyed
by emoticons to aﬀect the surrounding text on a paragraph
level increases both overall polarity classiﬁcation accuracy
and macro-level F1 even further to 94%. All reported diﬀerences in performance are statistically signiﬁcant at a significance level p < 0.001.
Experiments in recent competitions for sentiment analysis, such as the SemEval 2007 Task 14 on Aﬀective Text ,
have shown how diﬃcult it is to extract the valence (sentiment) of text for both supervised and unsupervised approaches, which currently lag behind the performance of the
inter-annotator agreement for valence. In this light, our results clearly indicate that considering emoticons when analyzing sentiment on natural language text appears to be
a fruitful addition to the state-of-the-art of (lexicon-based)
sentiment analysis. Our results suggest that whenever emoticons are used, these visual cues play a crucial role in conveying an author’s sentiment.
However, some issues still remain to be solved. One source
of polarity classiﬁcation errors lies in the interpretation of
human readers and their preference for certain aspects of a
text over others. For instance, the fragment “The weather
is bad :(. I want sunshine!! :)” would receive a sentiment
score of 0 when using our framework, as the emoticons cancel each other out in this particular piece of text. However,
in the annotation process, before reaching agreement, two
out of three annotators initially rated the fragment as positive, whereas one annotator classiﬁed the text as carrying
negative sentiment. All three human interpreters turned out
to deem one part of the fragment to be more important for
conveying the overall sentiment than the other part, even
though they initially did not agree on which part was crucial for the polarity of the fragment.
Conversely, for our
framework, each part of a text contributes equally to conveying the overall sentiment of the text.
Another source of errors can be nicely illustrated when
analyzing movie reviews.
The reviews in our corpus often start with a summary of the plot of a movie.
these summaries contain sentiment-carrying words, whereas
the writer is not yet expressing his or her own opinion at
that stage of the review.
Apparently, aspects other than
sentiment-carrying words and emoticons, such as their positioning, may be worthwhile exploiting in sentiment analysis.
CONCLUSIONS
As people increasingly use emoticons in their virtual utterances of opinions, it is of paramount importance for automated sentiment analysis tools to correctly interpret these
graphical cues for sentiment. The key contribution of our
work lies in our analysis of the role that emoticons typically
play in conveying a text’s overall sentiment and how we can
exploit this in a lexicon-based sentiment analysis method.
Whereas emoticons have until now been considered to be
used in a way similar to how textual cues for sentiment
are used , the qualitative analysis presented in our current paper demonstrates that the sentiment associated with
emoticons typically dominates the sentiment conveyed by
textual cues in a text segment. The results of our analysis
indicate that people typically use emoticons in natural language text in order to express, stress, or disambiguate their
sentiment in particular text segments, thus rendering them
potentially better local proxies for people’s intended overall
sentiment than textual cues.
In order to validate these ﬁndings, we have assessed the
performance of a lexicon-based sentiment analysis approach
accounting for the sentiment conveyed by emoticons on a
collection of 2, 080 Dutch tweets and forum messages, with
each document containing one or more emoticons. As a baseline, we have considered a similar lexicon-based sentiment
analysis approach without support for emoticons. On our
data set, accounting for the sentiment implied by emoticons
rather than by the textual cues on a paragraph level signiﬁcantly improves overall document polarity classiﬁcation
accuracy from 22% to 94%, whereas applying our method
on a sentence level yields an accuracy of 59%.
As our results are very promising, we envisage several directions for future work.
First, we would like to further
explore and exploit the interplay of emoticons and text, for
instance in cases when emoticons are used to intensify sentiment that is already conveyed by the text. Another possible
direction for future research includes applying our results in
a multilingual context and thus investigating how robust our
approach is across languages. Additionally, future research
could be focused on other collections of texts in order to
verify our ﬁndings in, e.g., speciﬁc case studies. Last, we
would like to exploit structural and semantic aspects of text
in order to identify important and less important text spans
in emoticon-based sentiment analysis.
ACKNOWLEDGMENTS
We would like to thank Teezir ( 
for their technical support, fruitful discussions, and for supplying us with data for this research. The authors of this
paper are partially supported by the Dutch national program COMMIT.