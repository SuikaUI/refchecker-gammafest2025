Sparsity-Cognizant Total Least-Squares for
Perturbed Compressive Sampling†
Hao Zhu∗, Geert Leus⋆, and Georgios B. Giannakis∗(contact author)
Submitted:
May 30, 2018
Solving linear regression problems based on the total least-squares (TLS) criterion has well-documented
merits in various applications, where perturbations appear both in the data vector as well as in the
regression matrix. However, existing TLS approaches do not account for sparsity possibly present in the
unknown vector of regression coefﬁcients. On the other hand, sparsity is the key attribute exploited by
modern compressive sampling and variable selection approaches to linear regression, which include noise
in the data, but do not account for perturbations in the regression matrix. The present paper ﬁlls this
gap by formulating and solving TLS optimization problems under sparsity constraints. Near-optimum
and reduced-complexity suboptimum sparse (S-) TLS algorithms are developed to address the perturbed
compressive sampling (and the related dictionary learning) challenge, when there is a mismatch between
the true and adopted bases over which the unknown vector is sparse. The novel S-TLS schemes also
allow for perturbations in the regression matrix of the least-absolute selection and shrinkage selection
operator (Lasso), and endow TLS approaches with ability to cope with sparse, under-determined “errorsin-variables” models. Interesting generalizations can further exploit prior knowledge on the perturbations
to obtain novel weighted and structured S-TLS solvers. Analysis and simulations demonstrate the practical
impact of S-TLS in calibrating the mismatch effects of contemporary grid-based approaches to cognitive
radio sensing, and robust direction-of-arrival estimation using antenna arrays.
EDICS: SSP-SNMD, SSP-PARE, DSP-RECO, SAM-CALB, MLR-COGP
† This work is supported by the NSF grants CCF-0830480, CCF-1016605, ECCS-0824007, and ECCS-1002180; G. Leus is
supported in part by NWO-STW under the VICI program (project 10382). Part of this work was presented at the 11th IEEE
International Workshop on Signal Processing Advances in Wireless Communications, Marrakech, Marocco, June 20 – 23, 2010.
∗H. Zhu and G. B. Giannakis are with the Department of Electrical and Computer Engineering, University of Minnesota, 200
Union Street SE, Minneapolis, MN 55455, USA. Tel/fax: (612)624-9510/625-2002, emails: {zhuh,georgios}@umn.edu
⋆G. Leus is with the Faculty of Electrical Engineering, Mathematics and Computer Science, Delft University of Technology,
Mekelweg 4, 2628 CD Delft, The Netherlands. Tel/fax: +31-15-2784327/2786190, email: 
IEEE TRANSACTIONS ON SIGNAL PROCESSING (SUBMITTED)
I. INTRODUCTION
Sparsity is an attribute possessed by many signal vectors either naturally, or, after projecting them
over appropriate bases. It has been exploited for a while in numerical linear algebra, statistics, and signal
processing, but renewed interest emerged in recent years because sparsity plays an instrumental role in
modern compressive sampling (CS) theory and applications; see e.g., .
In the noise-free setup, CS holds promise to address problems as fundamental as solving exactly
under-determined systems of linear equations when the unknown vector is sparse . Variants of CS
for the “noisy setup” are rooted in the basis pursuit (BP) approach , which deals with ﬁtting sparse
linear representations to perturbed measurements – a task of major importance for signal compression
and feature extraction. The Lagrangian form of BP is also popular in statistics for ﬁtting sparse linear
regression models, using the so-termed least-absolute shrinkage and selection operator (Lasso); see e.g.,
 , , and references thereof. However, existing CS, BP, and Lasso-based approaches do not account
for perturbations present in the matrix of equations, which in the BP (respectively Lasso) parlance is
referred to as the representation basis or dictionary (correspondingly regression) matrix.
Such perturbations appear when there is a mismatch between the adopted basis matrix and the actual
but unknown one – a performance-critical issue in e.g., sparsity-exploiting approaches to localization,
time delay, and Doppler estimation in communications, radar, and sonar applications , , , .
Performance analysis of CS and BP approaches for the partially-perturbed linear model with perturbations
only in the basis matrix, as well as for the fully-perturbed one with perturbations present also in the
measurements, was pursued recently in , , and . But devising a systematic approach to
reconstructing sparse vectors under either type of perturbed models was left open.
Interestingly, for non-sparse over-determined linear systems, such an approach is available within the
framework of total least-squares (TLS), the basic generalization of LS tailored for ﬁtting fully-perturbed
linear models . TLS and its variants involving regularization with the ℓ2-norm of the unknown
vector , have found widespread applications in diverse areas, including system identiﬁcation with
errors-in-variables (EIV), retrieval of spatial and temporal harmonics, reconstruction of medical images,
and forecasting of ﬁnancial data . TLS was also utilized by for dictionary learning, but the
problem reduces to an over-determined linear system with a non-sparse unknown vector. Unfortunately,
TLS approaches, with or without existing regularization terms, cannot yield consistent estimators when
the linear model is under-determined, nor they account for sparsity present in the unknown vector of
regression coefﬁcients.
May 30, 2018
IEEE TRANSACTIONS ON SIGNAL PROCESSING (SUBMITTED)
From a high-level vantage point, the present paper is about ﬁtting sparse, perturbed, linear models,
through what is termed here the sparse (S-) TLS framework. On the one hand, S-TLS provides CS,
BP, and Lasso-type algorithms suitable for ﬁtting partially- and fully-perturbed linear models. On the
other hand, it furnishes TLS with sparsity-cognizant regularized alternatives, which yield consistent
estimators even for under-determined models. The novel framework does not require a priori information
on the underlying perturbations, and in this sense S-TLS based algorithms have universal applicability.
However, the framework is ﬂexible enough to accommodate both deterministic as well as probabilistic
prior information that maybe available on the perturbed data. The practical impact is apparent to any CS,
BP/Lasso, and TLS-related application involving reconstruction of a sparse vector based on data adhering
to an over- or under-determined, partially- or fully-perturbed, linear model.
The speciﬁc contributions and organization of the paper are as follows. With unifying notation, Section
II outlines the pertinent CS-BP-Lasso-TLS context, and introduces the S-TLS formulation and problem
statement. Section III presents two equivalent formulations, which are ﬁrst used to establish optimality
of S-TLS estimators in the maximum a posteriori (MAP) sense, under a fully-perturbed EIV model.
Subsequently, the same formulations are utilized in Section IV to develop near-optimum and reducedcomplexity suboptimum S-TLS solvers with convergence guarantees. The scope of S-TLS is considerably
broadened in Section V, where a priori information on the deterministic structure of the data vector, the
basis matrix, and/or the statistics of the perturbations is incorporated to develop weighted and structured
(WS) S-TLS criteria along with associated algorithms to optimize them. The impact of WSS-TLS
is demonstrated in Section VI using two paradigms: cognitive radio sensing, and direction of arrival
estimation with (possibly uncalibrated) antenna arrays. Simulated tests in Section VII illustrate the merits
of the novel (WS)S-TLS framework relative to BP, Lasso, and TLS alternatives. The paper is wrapped
up with brief concluding comments and future research directions in Section VIII.
Notation: Upper (lower) bold face letters are used throughout to denote matrices (column vectors);
(·)T denotes transposition; (·)† the matrix pseudo-inverse; vec(·) the column-wise matrix vectorization;
⊗the Kronecker product; ⌈·⌉the ceiling function; 1m×n the m × n matrix of all ones; 0m×n the m × n
matrix of all zeros; I the identity matrix; ∥· ∥F the Frobenius norm; and ∥· ∥p the p-th vector norm for
p ≥1; N(µ, Σ) the vector Gaussian distribution with mean µ and covariance Σ; and p[x = x′|y = y′]
the conditional probability density function (pdf) of the continuous random variable (r.v.) x taking the
value x′, given that the r.v. y took the value y′.
May 30, 2018
IEEE TRANSACTIONS ON SIGNAL PROCESSING (SUBMITTED)
II. PRELIMINARIES AND PROBLEM STATEMENT
Consider the under-determined linear system of equations, y = Cθo, where the unknown n×1 vector
θo is to be recovered from the given m × 1 data vector y and the m × n matrix C. With m < n and
no further assumption, only approximations of θo are possible using the minimum-norm solution; or,
the least-squares (LS) regularized by the ℓ2-norm, which solves in closed form the quadratic problem:
minθ ∥y −Cθ∥2
2 for some chosen γ > 0. Suppose instead that over a known basis matrix B,
the unknown vector satisﬁes θo = Bxo with xo being sparse, meaning that:
(as0) The n × 1 vector xo contains more than n −m zero elements at unknown entries.
Under (as0) and certain conditions on the matrix A := CB, compressive sampling (CS) theory asserts
that exact recovery of xo can be guaranteed by solving the nonconvex, combinatorially complex problem:
minx ∥x∥0 subject to (s.to) y = Ax. More interestingly, the same assertion holds with quantiﬁable
chances if one relaxes the ℓ0- via the ℓ1-norm, and solves efﬁciently the convex problem: minx ∥x∥1 s.to
y = Ax , , .
Suppose now that due to data perturbations the available vector y adheres only approximately to
the linear model Axo. The ℓ1-norm based formulation accounting for the said perturbations is known
as basis pursuit (BP) , and the corresponding convex problem written in its Lagrangian form is:
minx ∥y −Ax∥2
2 + λ1∥x∥1, where λ1 > 0 is a sparsity-tuning parameter. (For large λ1, the solution is
driven toward the all-zero vector; whereas for small λ1 it tends to the LS solution.) This form of BP
coincides with the Lasso approach developed for variable selection in linear regression problems ,
 . For uniformity with related problems, the BP/Lasso solvers can be equivalently written as
{ˆxLasso, ˆeLasso} := arg min
2 + λ1∥x∥1
s. to y + e = Ax .
Two interesting questions arise at this point: i) How is the performance of CS and BP/Lasso based
reconstruction affected if perturbations appear also in A? and ii) How can sparse vectors be efﬁciently
reconstructed from over- and especially under-determined linear regression models while accounting for
perturbations present in y and/or A?
In the context of CS, perturbations in A can be due to disturbances in the compressing matrix C, in the
basis matrix B, or in both. Those in C can be due to non-idealities in the analog implementation of CS;
while those in B can also emerge because of mismatch between the adopted basis B and the actual one,
which being unknown, is modeled as B + EB. This mismatch emerges with grid-based approaches to
May 30, 2018
IEEE TRANSACTIONS ON SIGNAL PROCESSING (SUBMITTED)
localization, time delay, and spatio-temporal frequency or Doppler estimation , , , , , .
In these applications, the entries of θo have e.g., a sparse discrete-time Fourier transform with peaks
off the frequency grid {2πk/n}n−1
k=0, but the postulated B is the fast Fourier transform (FFT) matrix
built from this canonical grid. In this case, the actual linear relationship is θo = (B + EB)xo with xo
sparse. Bounds on the CS reconstruction error under basis mismatch are provided in ; see also ,
where the mismatch-induced error was reduced by increasing the grid density. Performance of BP/Lasso
approaches for the under-determined, fully-perturbed (in both y and A) linear model was analyzed in 
by bounding the reconstruction error, and comparing it against its counterpart derived for the partiallyperturbed (only in y) model derived in . Collectively, and address the performance question
i), but provide no algorithms to address the open research issue ii).
The overarching theme of the present paper is to address this issue by developing a sparse total leastsquares (S-TLS) framework. Without exploiting sparsity, TLS has well-documented impact in applications
as broad as linear prediction, system identiﬁcation with errors-in-variables (EIV), spectral analysis, image
reconstruction, speech, and audio processing, to name a few; see and references therein. For overdetermined models with unknown vectors xo not abiding with (as0), TLS estimates are given by
ˆxTLS, ˆETLS, ˆeTLS
:= arg min
x,E,e ∥[E e]∥2
s. to y + e = (A + E)x.
To cope with ill-conditioned matrices A, an extra constraint bounding ∥Γx∥2 is typically added in (2)
to obtain different regularized TLS estimates depending on the choice of matrix Γ , .
The distinct objective of S-TLS relative to (regularized) TLS is twofold: account for sparsity as per
(as0), and develop S-TLS solvers especially for under-determined, fully-perturbed linear models. To
accomplish these goals, one must solve the S-TLS problem concretely formulated (for λ > 0) as [cf. (1),
ˆxS−TLS, ˆES−TLS, ˆeS−TLS
:= arg min
x,e,E ∥[E e]∥2
s. to y + e = (A + E)x .
The main goal is to develop efﬁcient algorithms attaining at least the local and hopefully the global
optimum of (3) – a challenging task since presence of the product Ex reveals that the problem is generally
nonconvex. Similar to LS, BP, Lasso, and TLS, it is also worth stressing that the S-TLS estimates sought
in (3) are universal in the sense that perturbations in y and A can be random or deterministic with or
without a priori known structure.
May 30, 2018
IEEE TRANSACTIONS ON SIGNAL PROCESSING (SUBMITTED)
But if prior knowledge is available on the perturbations, can weighted and structured S-TLS problems
be formulated and solved? Can the scope of S-TLS be generalized (e.g., to recover a sparse matrix Xo
using A and a data matrix Y), and thus have impact in classical applications such as calibration of
antenna arrays, or contemporary ones, such as cognitive radio sensing? Can S-TLS estimates be (e.g.,
Bayes) optimal if additional modeling assumptions are invoked? These questions will be addressed in
the ensuing sections, starting from the last one.
III. MAP OPTIMALITY OF S-TLS FOR EIV MODELS
Consider the EIV model with perturbed input (A) and perturbed output (y) obeying the relationship
y = Aoxo + (−ey) ,
A = Ao + (−EA)
where the notation of the model perturbations ey and EA stresses their difference with e and E, which
are variables selected to yield the optimal S-TLS ﬁt in (3). In a system identiﬁcation setting, ey and EA
are stationary random processes giving rise to noisy output/input data y/A, based on which the task is to
estimate the system vector xo (comprising e.g., impulse response or pole-zero parameters), and possibly
the inaccessible input matrix Ao. To assess statistical optimality of the resultant estimators, collect the
model perturbations in a column-vector form as vec([EA ey]), and further assume that:
(as1) Perturbations of the EIV model in (4) are independent identically distributed (i.i.d.), Gaussian r.v.s,
i.e., vec([EA ey]) ∼N(0, I), independent from Ao and xo. Entries of xo are zero-mean, i.i.d., according
to a common Laplace distribution. In addition, either (a) the entries of xo have common Laplacian
parameter 2/λ, and are independent from Ao, which has i.i.d. entries drawn from a zero-mean uniform
(i.e., non-informative) prior pdf; or, (b) the common Laplacian parameter of xo entries is 2(σ2+1)/(λσ2),
and Ao conditioned on xo has i.i.d. rows with pdf N(0, σ2[I −(1 + ∥xo∥2
Note that the heavy-tailed Laplacian prior on xo under (as1) is in par with the “non-probabilistic”
sparsity attribute in (as0). It has been used to establish that the Lasso estimator in (1) is optimal, in the
maximum a posteriori (MAP) sense, when EA ≡0 . If on the other hand, xo is viewed as non-sparse,
deterministic and Ao as deterministic or as adhering to (as1b), it is known that the TLS estimator in (2)
is optimum in the maximum likelihood (ML) sense for the EIV model in (4); see and .
Aiming to establish optimality of S-TLS under (as1), it is useful to re-cast (3) as described in the
following lemma. (This lemma will be used also in developing S-TLS solvers in Section IV.)
Lemma 1: The constrained S-TLS formulation in (3) is equivalent to two unconstrained (also nonconvex)
May 30, 2018
IEEE TRANSACTIONS ON SIGNAL PROCESSING (SUBMITTED)
optimization problems: (a) one involving x and E variables, namely
ˆxS−TLS, ˆES−TLS
∥y −(A + E)x∥2
and (b) one of fractional form involving only the variable x, expressed as
ˆxS−TLS := arg min
Proof: To establish the equivalence of (5) with (3), simply eliminate e by substituting the constraint
(3b) into the cost function of (3a). For (6), let v := vec([E e]), and re-write the cost in (3a) as ∥[E e]∥2
2; and the constraint (3b) as y−Ax = G(x)v, where G(x) := I⊗[xT , −1]. With x ﬁxed, the ℓ1-norm
can be dropped from (3a), and the reformulated optimization becomes: minv ∥v∥2
2 s. to y−Ax = G(x)v.
But the latter is a minimum-norm LS problem, admitting the closed-form solution
v(x) = GT (x)[G(x)GT (x)]−1(y −Ax) = (1 + ∥x∥2
2)−1GT (x)(y −Ax)
where the second equality holds because G(x)GT (x) = ∥[xT , −1]∥2
2I = (1 + ∥x∥2
2)I. Substituting (7)
back into the cost ∥v∥2
2, yields readily the fractional form in (6), which depends solely on x.
Using Lemma 1, it is possible to establish MAP optimality of the S-TLS estimator as follows.
Proposition 1: (MAP optimality). Under (as1), the S-TLS estimator in (3) is MAP optimal for the EIV
model in (4). Speciﬁcally, (5) is MAP optimal for estimating both xo and Ao under (as1a), while (6) is
MAP optimal for estimating only xo under (as1b).
Proof: Given y and A, the MAP approach to estimating both xo and Ao in (4) amounts to
maximizing with respect to (wrt) x and E the logarithm of the posterior pdf denoted as ln p[xo =
x, Ao = A + E|y, A]. Recalling that xo and Ao are independent under (as1a), Bayes’ rule implies that
this is equivalent to: minx,E −{ln p[y, A|xo = x, Ao = A + E] + ln p[xo = x] + ln p[Ao = A + E]},
where the summands correspond to the (conditional) log-likelihood and the log-prior pdfs, respectively.
The log-prior associated with the Laplacian pdf of xo is given by
ln p[xo = x] = ln
[(λ/4) exp(−λ|xν|/2)] = −(λ/2)
|xν| + n ln(λ/4)
while the log-prior associated with the uniform pdf of Ao is constant under (as1a), and thus does not
affect the MAP criterion. Conditioning the log-likelihood on xo and Ao, implies that the only sources
of randomness in the data [y A] are the EIV model perturbations, which under (as1) are independent,
standardized Gaussian; thus, the conditional log-likelihood is ln p[y, A|xo = x, Ao = A + E] = ln[ey =
y −(A + E)x] + ln p[EA = E]. After omitting terms not dependent on the variables x and E, the latter
shows that the log-likelihood contributes to the MAP criterion two quadratic terms 
exponents): (1/2){∥y−(A+E)x∥2
F }. Upon combining these quadratic terms with the ℓ1-norm
coming from the sum in (8), the log-posterior pdf boils down to the form minimized in (5), which per
Lemma 1 is equivalent to (3), and thus establishes MAP optimality of S-TLS under (as1a).
Proceeding to prove optimality under (as1b), given again the data y and A, consider the MAP approach
now to estimate only xo in (4), treating Ao as a nuisance parameter matrix that satisﬁes (as1b). MAP
here amounts to maximizing (wrt x only) the criterion ln p[xo = x|y, A]; and Bayes’ rule leads to the
equivalent problem minx −{ln p[y, A|xo = x] + ln p[xo = x]}. But conditioned on xo, (as1b) dictates
that Ao and [EA ey] are zero-mean Gaussian and independent. Thus, linearity of the EIV model (4)
implies that y and A are zero-mean jointly Gaussian in the conditional log-likelihood. Since rows of Ao
and [EA ey] are (conditionally) i.i.d. under (as1b), the rows of matrix [A y] are independent. In addition,
the ρth-row of [A y] denoted as [aT
ρ yρ], has inverse (conditional) covariance matrix
(σ2 + 1)I −σ2xxT /
1 + σ2∥x∥2
with determinant 1/(σ2 + 1)n not a function of x. After omitting such terms not dependent on x, and
using the independence among rows and their inverse covariance in (9), the conditional log-likelihood
boils down to the fractional form
2(σ2+1)∥y −Ax∥2
. Since the Laplacian parameter under
(as1b) equals 2(σ2 + 1)/(λσ2), the log-prior in (8) changes accordingly; and together with the fractional
form of the log-likelihood reduces the negative log-posterior to the cost in (6). This establishes MAP
optimality of the equivalent S-TLS in (3) for estimating only xo in (4), under (as1b).
Proposition 1 will be generalized in Section V to account for structured and correlated perturbations
with known covariance matrix. But before pursuing these generalizations, S-TLS solvers of the problem
in (3) are in order.
IV. S-TLS SOLVERS
Two iterative algorithms are developed in this section to solve the S-TLS problem in (3), which was
equivalently re-formulated as in (5) and (6). The ﬁrst algorithm can approach the global optimum but
is computationally demanding; while the second one guarantees convergence to a local optimum but is
computationally efﬁcient. Thus, in addition to being attractive on its own, the second algorithm can serve
as initialization to speed up convergence (and thus reduce computational burden) of the ﬁrst one. To
May 30, 2018
IEEE TRANSACTIONS ON SIGNAL PROCESSING (SUBMITTED)
appreciate the challenge and the associated performance-complexity tradeoffs in developing algorithms
for optimizing S-TLS criteria, it is useful to recall that all S-TLS problems are nonconvex; hence, unlike
ordinary TLS that can be globally optimized (e.g., via SVD ), no efﬁcient convex optimization solver
is available with guaranteed convergence to the global optimum of (3), (5), or (6).
A. Bisection-based ε-Optimal Algorithm
Viewing the cost in (6) as a Lagrangian function, allows casting this unconstrained minimization
problem as a constrained one. Indeed, sufﬁciency of the Lagrange multiplier theory implies that [7, Sec
3.3.4]: using the solution ˆxS−TLS of (6) for a given multiplier λ > 0 and letting µ := ∥ˆxS−TLS∥1, the
pertinent constraint is X1(µ) := {x ∈Rn : ∥x∥1 ≤µ}; and the equivalent constrained minimization
problem is [cf. (6)]
ˆxS−TLS := arg
x∈X1(µ) f(x) ,
f(x) := ∥y −Ax∥2
There is no need to solve (6) in order to specify µ, because a cross-validation scheme can be implemented
to specify µ in the stand-alone problem (10), along the lines used by e.g., to determine λ in (6). The
remainder of this subsection will thus develop an iterative scheme converging to the global optimum of
(10), bearing in mind that this equivalently solves (6), (5) and (3) too.
From a high-level view, the novel scheme comprises an outer iteration loop based on the bisection
method , and an inner iteration loop that relies on a variant of the branch-and-bound (BB) method
 . A related approach was pursued in to solve the clairvoyant TLS problem (2) under ℓ2-norm regularization constraints. The challenging difference with the S-TLS here is precisely the non-differentiable
ℓ1-norm constraint in X1(µ). The outer iteration “squeezes” the minimum cost f(x) in (10) between
successively shrinking lower and upper bounds expressible through a parameter a. Per outer iteration,
these bounds are obtained via inner iterations equivalently minimizing a surrogate quadratic function
g(x, a), which does not have fractional form, and is thus more convenient to optimize than f(x).
Given an upper bound a on f(x), the link between f(x) and g(x, a) follows if ones notes that
x∈X1(µ) f(x) =
is equivalent to
x∈X1(µ) g(x, a) =
2 −a(1 + ∥x∥2
Suppose that after outer iteration i the optimum a⋆in (11) belongs to a known interval Ii := [li, ui].
Suppose further that the inner loop yields the global optimum in (12) for a = (li + ui)/2, and consider
May 30, 2018
IEEE TRANSACTIONS ON SIGNAL PROCESSING (SUBMITTED)
evaluating the sign of g⋆(a) at this middle point a = (li +ui)/2 of the interval Ii. If g⋆((li +ui)/2) > 0,
the equivalence between (12) and (11) implies that a⋆> (li + ui)/2 > li; and hence, a⋆∈Ii+1 :=
[(li + ui)/2, ui], which yields a reduced-size interval Ii+1 by shrinking Ii from the left. On the other
hand, if g⋆((li + ui)/2) < 0, the said equivalence will imply that a⋆∈Ii+1 := [li, (li + ui)/2], which
shrinks the Ii interval from the right. This successive shrinkage through bisection explains how the outer
iteration converges to the global optimum of (10).
What is left before asserting rigorously this convergence, is to develop the inner iteration which ensures
that the global optimum in (12) can be approached for any given a speciﬁed by the outer bisection-based
iteration. To appreciate the difﬁculty here note that the Hessian of g(x, a) is given by H := 2(AT A−aI).
Clearly, H is not guaranteed to be positive or negative deﬁnite since a is positive. As a result, the cost
g(x, a) in (12) bypasses the fractional form of f(x) but it is still an indeﬁnite quadratic, and hence
nonconvex. Nonetheless, the quadratic form of g(x, a) allows adapting the BB iteration of , which can
yield a feasible and δ-optimum solution x⋆
g satisfying: a) x⋆
g ∈X1(µ); and b) g⋆(a) ≤g(x⋆
g, a) ≤g⋆(a)+δ,
where δ denotes a pre-speciﬁed margin.
In the present context, the BB algorithm ﬁnds successive upper and lower bounds of the function
x∈X1(µ),xL≤x≤xU
where the constraint xL ≤x ≤xU represents a box that shrinks as iterations progress. Upon converting
the constraints of (13) to linear ones, upper bounds U on the function g⋆
box(a) in (13) can be readily
obtained via suboptimum solvers of the constrained optimization of the indeﬁnite quadratic cost g(x, a);
see e.g., [7, Chp. 2]. Lower bounds on g⋆
box(a) can be obtained by minimizing a convex function gL(x, a),
which under-approximates g(x, a) over the interval xL ≤x ≤xU. This convex approximant is given by
gL(x, a) = g(x, a) + (x −xL)T D(x −xU)
where D is a diagonal positive semi-deﬁnite matrix chosen to ensure that gL(x, a) is convex, and stays
as close as possible below g(x, a). Such a matrix D can be found by minimizing the maximum distance
between gL(x, a) and g(x, a), and comes out as the solution of the following minimization problem:
(xU −xL)T D(xU −xL) s. to H + 2D ⪰0
where the constraint on the Hessian ensures that gL(x, a) remains convex. Since (15) is a semi-deﬁnite
program, it can be solved efﬁciently using available convex optimization software; e.g., the interior point
optimization routine in SeDuMi . Having selected D as in (15), minx∈X1(µ),xL≤x≤xU gL(x, a) is a
May 30, 2018
IEEE TRANSACTIONS ON SIGNAL PROCESSING (SUBMITTED)
convex problem (quadratic cost under linear constraints); thus, similar to the upper bound U, the lower
bound L on g⋆
box(a) can be obtained efﬁciently.
The detailed inner loop (BB scheme) is tabulated as Algorithm 1-a. It amounts to successively splitting
the initial box −µ1 ≤x ≤µ1, which is the smallest one containing X1(µ). Per inner iteration i, variable
U keeps track of the upper bound on g⋆
box(a), which at the end outputs to the outer loop the nearest
estimate of g⋆(a). Concurrently, the lower bound L on g⋆
box(a) determines whether the current box needs
to be further split, or discarded, if the difference U −L is smaller than the pre-selected margin δ. This
iterative splitting leads to a decreasing U and a tighter L, both of which prevent further splitting.
Recapitulating, the outer bisection-based iteration tabulated as Algorithm 1-b calls Algorithm 1-a to
ﬁnd a feasible δ-optimal solution x⋆
g to evaluate the sign of g⋆(a) in (12). Since x⋆
g is not the exact
global minimum of (12), positivity of g(x⋆
g, a) does not necessarily imply g⋆(a) > 0. But x⋆
g is δoptimal, meaning that g⋆(a) ≥g(x⋆
g, a) −δ; thus, g(x⋆
g, a) > δ, in which case the lower bound li+1 is
updated to (li + ui)/2; otherwise, if g(x⋆
g, a) ∈(0, δ), then li+1 should be set to (li + ui)/2 −δ.
As far as convergence is concerned, the following result can be established.
Proposition 2: (ε-optimal convergence) After at most
iterations, Algorithm 1-b
outputs an ε-optimal solution x⋆
ε to (10); that is,
and a⋆≤f(x⋆
ε) ≤a⋆+ ε.
Proof: Upon updating the lower and upper bounds, it holds per outer iteration i ≥1 that ui −li ≤
2(ui−1 −li−1) + δ; and by induction, ui −li ≤  1
i u0 + 2δ, when l0 = 0. The latter implies that if the
number of iterations i ≥
, the distance ui −li ≤ε is satisﬁed.
Since per outer iteration Algorithm 1-a outputs x⋆
g ∈X1(µ), it holds that the updated x⋆
ε is also feasible.
Further, the bisection process guarantees that li ≤a⋆≤f(x⋆
ε) ≤ui per iteration i. Since Algorithm 1-b
ends with ui −li ≤ε, the inequality in (16) follows readily.
Proposition 2 quantiﬁes the number of outer iterations needed by the bisection-based Algorithm 1-b to
approach within ε the global optimum of (10). In addition, the inner (BB) iterations bounding g⋆
box(a) are
expected to be fast converging because the box function in (13) is tailored for the box constraints induced
by the ℓ1-norm regularization. Nonetheless, similar to all BB algorithms, the complexity of Algorithm
1-a does not have guaranteed polynomial complexity on average. The latter necessitates as few calls of
Algorithm 1-a, which means as few outer iterations. Proposition 2 reveals that critical to this end is the
initial upper bound u0 (Algorithm 1-b simply initializes with u0 = f(0)).
This motivates the efﬁcient suboptimal S-TLS solver of the next subsection, which is of paramount
importance not only on its own, but also for initializing the ε-optimal algorithm.
May 30, 2018
IEEE TRANSACTIONS ON SIGNAL PROCESSING (SUBMITTED)
B. Alternating Descent Sub-Optimal Algorithm
The starting point for a computationally efﬁcient S-TLS solver is the formulation in (5). Given E, the
cost in (5) has the form of the Lasso problem in (1); while given x, it reduces to a quadratic form, which
admits closed-form solution wrt E. These observations suggest an iterative block coordinate descent
algorithm yielding successive estimates of x with E ﬁxed, and alternately of E with x ﬁxed. Speciﬁcally,
with the iterate E(i) given per iteration i ≥0, the iterate x(i) is obtained by solving the Lasso-like
convex problem as [cf. (1)]
x(i) = arg min
x ∥y −[A + E(i)]x∥2
2 + λ∥x∥1 .
With x(i) available, E(i + 1) for the ensuing iteration is found as
E(i + 1) = arg min
E ∥y −Ax(i) −Ex(i)∥2
By setting the ﬁrst-order derivative of the cost wrt E equal to zero, the optimal solution to the quadratic
problem (18) is obtained in closed form as
E(i + 1) = (1 + ∥x(i)∥2
2)−1[y −Ax(i)]xT (i).
The iterations are initialized at i = 0 by setting E(0) = 0m×n. Substituting the latter into (17), yields
x(0) = ˆxLasso in (1). That this is a good initial estimate is corroborated by the result in , which
shows that even with perturbations present in both A and y, the CS (and thus Lasso) estimators yield
accurate reconstruction. In view of the fact that the block coordinate descent iterations ensure that the
cost in (5) is non-increasing, the ﬁnal estimates upon convergence will be at least as accurate.
The block coordinate descent algorithm is provably convergent to a stationary point of the S-TLS cost
in (5), and thus to its equivalent forms in (3), (6) and (10), as asserted in the following proposition.
Proposition 3: (Convergence of alternating descent) Given arbitrary initialization, the iterates {E(i), x(i)}
given by (17) and (19) converge monotonically at least to a stationary point of the S-TLS problem (3).
Proof: The argument relies on the basic convergence result in . The alternating descent algorithm
speciﬁed by (17) and (19) is a special case of the block coordinate descent method using the cyclic rule
for minimizing the cost in (5). The ﬁrst two summands of this cost are differentiable wrt the optimization
variables, while the non-differential third term (ℓ1-norm regularization) is separable in the entries of x.
Hence, the three summands satisfy the assumptions (B1)–(B3) and (C2) in . Convergence of the
iterates {E(i), x(i)} to a coordinate minimum point of the cost thus follows by appealing to [29, Thm.
5.1]. Moreover, the ﬁrst summand is Gˆateaux-differentiable over its domain which is open. Hence, the
cost in (5) is regular at each coordinate’s minimum point, and every coordinate’s minimum point becomes
May 30, 2018
IEEE TRANSACTIONS ON SIGNAL PROCESSING (SUBMITTED)
a stationary point; see [29, Lemma 3.1]. Monotonicity of the convergence follows simply because the
cost per iteration may either reduce or maintain its value.
Proposition 3 solidiﬁes the merits of the alternating descent S-TLS solver. Simulated tests will further
demonstrate that the local optimum guaranteed by this computationally efﬁcient scheme is very close to
the global optimum attained by the more complex scheme of the previous subsection.
Since estimating E is simple using the closed form in (18), it is useful at this point to explore
modiﬁcations, extensions and tailored solvers for the problem in (17) by adapting to the present setup
existing results from the Lasso literature dealing with problem (1). From the plethora of available options
to solve (17), it is worth mentioning two computationally efﬁcient ones: the least-angle regression (LARS),
and the coordinate descent (CD); see e.g., . LARS provides the entire “solution path” of (17) for all
λ > 0 at complexity comparable to LS. On the other hand, if a single “best” value of λ is ﬁxed using
the cross-validation scheme , then CD is the state-of-the-art choice for solving (17).
CD in the present context cycles between iterates E(i), and scalar iterates of the x(i) entries. Suppose
that the ν-th entry xν(i) is to be found. Precursor entries {x1(i), . . . , xν−1(i)} have been already obtained
in the i-th iteration, and postcursor entries {xν+1(i−1), . . . , xn(i−1)} are also available from the previous
(i −1)-st iteration along with E(i) obtained in closed form as in (19). If αν(i) denotes the ν-th column
of [A + E(i)], the effect of these known entries can be removed from y by forming
eν(i) := y −
αj(i)xj(i) −
αj(i)xj(i −1) .
Using (20), the vector optimization problem in (17) reduces to the following scalar one with xν(i) as
unknown: xν(i) = arg minxν[∥eν(i)−αν(i)xν∥2
2 +λ|xν|]. This scalar Lasso problem is known to admit
a closed-form solution expressed in terms of a soft thresholding operator (see e.g., )
xν(i) = sign  eT
ν (i)αν(i) eT
ν (i)αν(i)
ν = 1, . . . , n
where sign(·) denotes the sign operator, and [χ]+ := χ, if χ > 0, and zero otherwise.
Cycling through the closed forms (19)-(21) explains why CD here is faster than, and thus preferable
over general-purpose convex optimization solvers of (17). Another factor contributing to its speed is
the sparsity of x(i), which implies that starting up with the all-zero vector, namely x(−1) = 0n×1,
offers initialization close to a stationary point of the cost in (5). Convergence to this stationary point is
guaranteed by using the results in , along the lines of Proposition 3. Note also that larger values
of λ in (21) force more entries of x(i) to be shrunk to zero, which corroborates the role of λ as a
sparsity-tuning parameter. The CD based S-TLS solver is tabulated as Algorithm 2.
May 30, 2018
IEEE TRANSACTIONS ON SIGNAL PROCESSING (SUBMITTED)
Remark 1: (Regularization options for S-TLS) Lasso estimators are known to be biased, but modiﬁcations
are available to remedy bias effects. One such modiﬁcation is the weighted Lasso, which replaces the
ℓ1-norm in (3) by its weighted version, namely Pn
ν=1 wν|xν|, where the weights {wν} are chosen using
the LS solution . An alternative popular choice is to replace the ℓ1-norm with concave regularization
terms , such as Pn
ν=1 log(xν + δ1), where δ1 is a small positive constant introduced to avoid
numerical instability. In addition to mitigating bias effects, concave regularization terms provide tighter
approximations to the ℓ0-(pseudo)norm, and although they render the cost in (3) nonconvex, they are
known to converge very fast to an improved estimate of x, when initialized with the Lasso solution .
Remark 2: (Group Lasso and Matrix S-TLS) When groups {xg}G
g=1 of x entries are a priori known to
be zero or nonzero (as a group), the ℓ1-norm in (3) must be replaced by the sum of ℓ2-norms, namely
g=1 ∥xg∥2. The resulting group S-TLS estimate can be obtained using the group-Lasso solver . In
the present context, this is further useful if one considers the matrix counterpart of the S-TLS problem
in (3), which in its unconstrained form can be written as [cf. (5)]
ˆXS−TLS, ˆES−TLS
∥Y −(A + E)X∥2
ν denotes the ν-th row of the n × L unknown matrix X, which is sparse in the sense that a
number of its rows are zero, and has to be estimated using an m × L data matrix Y along with the
regression matrix A, both with perturbations present. Problem (22) can be solved using block coordinate
descent cycling between iterates E(i) and rows xT
ν (i) as opposed to scalar entries as in (21).
V. WEIGHTED AND STRUCTURED S-TLS
Apart from the optimality links established in Proposition 1 under (as1), the S-TLS criteria in (3), (5),
and (6) make no assumption on the perturbations [E e]. In this sense, the S-TLS solvers of the previous
section ﬁnd universal applicability. However, one expects that exploiting prior information on [E e], can
only lead to improved performance. Thinking for instance along the lines of weighted LS, one is motivated
to weight ∥E∥2
F and ∥e∥2
2 in (5) by the inverse covariance matrix of E and e, respectively, whenever
those are known and are not both equal to I. As a second motivating example, normal equations, involved
in e.g., linear prediction, entail structure in E and e that capture sample estimation errors present in the
matrix [A y], which is Toeplitz. Prompted by these examples, this section is about broadening the scope
of S-TLS with weighted and structured forms capitalizing on prior information available about the matrix
[E e]. To this end, it is prudent to quantify ﬁrst the notion of structure.
May 30, 2018
IEEE TRANSACTIONS ON SIGNAL PROCESSING (SUBMITTED)
Deﬁnition 1. The m × (n + 1) data matrix [A y](p) has structure characterized by an np × 1 parameter
vector p, if and only if there is a mapping such that p ∈Rnp →[A y](p) := S(p) ∈Rm×(n+1).
Deﬁnition 1 is general enough to encompass any (even unstructured) matrix [A y](p), by simply
letting p := vec([A y]) ∈Rm(n+1) comprise all entries of [A y]. However, it becomes more relevant
when np ≪m(n + 1), the case in which p characterizes [A y] parsimoniously. Application examples
are abundant: structure in Toeplitz and Hankel matrices encountered with system identiﬁcation, deconvolution, and linear prediction; as well as in circulant and Vandermonde matrices showing up in spatiotemporal harmonic retrieval problems . Structured matrices A and sparse vectors xo emerge also in
contemporary CS gridding-based applications e.g., for spectral analysis and estimation of time-varying
channels, where rows of the FFT matrix are selected at random. (This last setting appears when training
orthogonal frequency-division multiplexing (OFDM) input symbols are used to estimate communication
links exhibiting variations due to mobility-induced Doppler effects .)
Consider now re-casting the S-TLS criteria in terms of p, and its associated perturbation vector denoted
by ǫ ∈Rnp. The Frobenius norm in the cost of (3a) is mapped to the ℓ2-norm of ǫ; and to allow for
weighting the structured perturbation vector using a symmetric positive deﬁnite matrix W ∈Rnp×np,
the weighted counterpart of ∥[E e]∥2
F becomes ǫT Wǫ. With regards to the constraint, recall ﬁrst from
Deﬁnition 1 that S(p) = [A y], which implies S(p + ǫ) = [A + E y + e]; hence, re-writing (3b) as
T = 0, yields the structured constraint as S(p+ǫ)
T = 0. Putting things
together, leads to the combined weighted-structured S-TLS version of (3) as
ǫT Wǫ + λ∥x∥1
s. to S(p + ǫ)
which clearly subsumes the structure-only form as a special case corresponding to W = I.
To conﬁne the structure quantiﬁed in Deﬁnition 1, two conditions will be imposed, which are commonly
adopted by TLS approaches , and are satisﬁed by most applications mentioned so far.
(as2) The structure mapping in Deﬁnition 1 is separable, meaning that with p = [(pA)T (py)T ]T , where
pA ∈RnA and py ∈Rny, it holds that S(p) := [A y](p) = [A(pA) y(py)]. In addition, the separable
structure mapping is linear (more precisely afﬁne), if and only if the S(p) matrix is composed of known
structural elements, namely “matrix atoms” S0, {SA
k=1 and “vector atoms” {sy
k=1, so that
S(p) = S0 +
May 30, 2018
IEEE TRANSACTIONS ON SIGNAL PROCESSING (SUBMITTED)
k) denotes the k-th entry of pA(py).
Similar to Deﬁnition 1, (24) is general enough to encompass even unstructured matrices S(p) := [Ay],
by setting S0 = 0, p := vec([A y]) ∈Rm(n+1), np := nA + ny = mn + m, and selecting the m vector
atoms (mn matrix atoms) as the canonical vectors (matrices), each with one entry equal to 1 and all
others equal to 0. Again, interesting structures are those with nA ≪mn and/or ny ≪m. (Consider for
instance a circulant m × n matrix A, which can be represented as in (24) using nA = m matrix atoms.)
Separability and linearity will turn out to simplify the constraint in (23b) for some given matrix atoms
and vector atoms collected for notational brevity in the matrices
1 · · · SA
1 · · · sy
ny] ∈Rm×ny .
Indeed, linearity in (as2) allows one to write S(p + ǫ) = S(p) + S(ǫ), and the constraint (23b)
as: S(ǫ)[xT , −1]T = −S(p)[xT , −1]T = y −Ax; while separability implies that S(ǫ)[xT , −1]T =
k][xT , −1]T = SA(I ⊗x)ǫA −Syǫy, where the deﬁnitions ǫ := [(ǫA)T (ǫy)T ]T
and (25) were used in the last equality along with the identity PnA
k x = SA(I ⊗x)ǫA. In a
nutshell, (23b) under (as2) becomes SA(I ⊗x)ǫA −Syǫy = y −Ax, in which ǫA is decoupled from ǫy.
Therefore, the weighted and structured (WS)S-TLS problem in (23) reduces to [cf. (3)]
s. to [SA(I ⊗x) −Sy]
or in a more compact form as: minx,ǫ {ǫT W ǫ + λ∥x∥1} s.to G(x)ǫ = r(x), after deﬁning
G(x) := [SA(I ⊗x) Sy]
r(x) := y −Ax .
Comparing (3) with (26) allows one to draw apparent analogies: both involve three sets of optimization
variables, and both are nonconvex because two of these sets enter the corresponding constraints in a
bilinear fashion [cf. product of E with x in (3b), and ǫA with x in (26b)].
Building on these analogies, the following lemma shows how to formulate WSS-TLS criteria, paralleling those of Lemma 1, where one or two sets of variables were eliminated to obtain efﬁcient, provably
convergent solvers, and establish statistical optimality links within the EIV model in (4).
The constrained WSS-TLS form in (23) is equivalent to two unconstrained nonconvex
May 30, 2018
IEEE TRANSACTIONS ON SIGNAL PROCESSING (SUBMITTED)
optimization problems: (a) one involving x and ǫA variables, namely
{ˆx, ˆǫA}W SS−TLS = arg min
(Sy)†[SA(I ⊗x)ǫA −r(x)]
(Sy)†[SA(I ⊗x)ǫA −r(x)]
where Sy is assumed full rank and square1, i.e., m = ny in (27); and also (b) one involving only the
variable x, expressed using the deﬁnitions in (27), as
ˆxW SS−TLS = arg min
G(x) W−1 GT (x)
† r(x) + λ∥x∥1} .
Proof: Constraint (26b) can be solved uniquely for ǫy to obtain ǫy = (Sy)†[SA(I⊗x)ǫA−(y−Ax)].
Plug the latter with the deﬁnition of r(x) from (27) into the quadratic form in (26a) to recognize that
(26) is equivalent to the unconstrained form in (28) with the ǫy variable eliminated.
To arrive at (29), suppose that x is given and view the compact form of (26) (after ignoring λ∥x∥1) as
the following weighted minimum-norm LS problem: minx,ǫ{ǫT Wǫ+λ∥x∥1} s.to G(x)ǫ = r(x). Solving
the latter in closed form expresses ǫ in terms of x as: ǫ(x) = W−1GT (x)
G(x)W−1GT (x)
Substitute now ǫ(x) back into the cost, and reinstate λ∥x∥1, to obtain (29).
The formulation in (28) suggests directly an iterative WSS-TLS solver based on the block coordinate
descent method. Speciﬁcally, suppose that the estimate ǫA(i) of ǫA is available at iteration i. Substituting
ǫA(i) into (28), allows estimating x as
x(i)=arg min
(Sy)†[SA(I ⊗x)ǫA(i)−r(x)]
(Sy)†[SA(I ⊗x)ǫA(i)−r(x)]
Since r(x) is linear in x [cf. (27)], the cost in (30) is convex (quadratic regularized by the ℓ1-norm as in
the Lasso cost in (1)); thus, it can be minimized efﬁciently. Likewise, given x(i) the perturbation vector
for the ensuing iteration can be found in closed form since the pertinent cost is quadratic; that is,
ǫA(i + 1) = arg min
(Sy)†[SA(I ⊗x(i))ǫA −r(x(i))]
(Sy)†[SA(I ⊗x(i))ǫA −r(x(i))]
1Tall Sy matrices with full column rank can be handled too for block diagonal weight matrices W typically adopted with
separable structures. This explains why the pseudo-inverse of Sy is used in this section instead of its inverse; but exposition
of the proof simpliﬁes considerably for the square case. Note also that the full rank assumption is not practically restrictive
because data matrices perturbed by noise of absolutely continuous pdf have full rank almost surely.
May 30, 2018
IEEE TRANSACTIONS ON SIGNAL PROCESSING (SUBMITTED)
To express ǫA(i + 1) compactly, partition W in accordance with p = [(pA)T , (py)T ]T ; i.e., let
Using (32), and equating to zero the gradient (wrt ǫA) of the cost in (31), yields the closed form
ǫA(i + 1) =
 ˇS(x(i))W ˇST (x(i))
† ˇS(x(i))[WT
yy]T (Sy)†r(x(i))
where ˇS(x(i)) :=
(Sy)†SA(I ⊗x(i))
Initialized with ǫA(0) = 0nA×1, the algorithm cycles between iterations (30) and (33). Mimicking the
steps of Proposition 3, it is easy to show that these iterations are convergent as asserted in the following.
Proposition 4: (Convergence). The iterates in (30) and (33) converge monotonically at least to a
stationary point of the cost in (23), provided that Sy in (27) has full column rank.
As with the solver of Section IV-B, CD is also applicable to the WSS-TLS solver, by cycling between
ǫA(i) and scalar iterates of the x(i) entries. To update the ν-th entry xν(i), suppose precursor entries
{x1(i), . . . , xν−1(i)} have been already obtained in the i-th iteration, and postcursor entries {xν+1(i −
1), . . . , xn(i −1)} are also available from the previous (i −1)-st iteration along with ǫA(i), found in
closed form as in (33). Letting αν(i) denote the ν-th column of 
(Sy)†  A + P
, the effect
of these known entries can be removed from y by forming [cf. (20)]
eν(i) := (Sy)†y −
αj(i)xj(i) −
αj(i)xj(i −1) .
Using (34), the vector optimization problem in (30) now reduces to the following scalar one with xν(i) as
unknown: xν(i) = arg minxν{∥αν(i)xν −eν(i)∥2
Wyy + 2[ǫA(i)]T WAyαν(i)xν + λ|xν|}, where ∥· ∥Wyy
denotes the ℓ2-norm weighted by Wyy. The solution of this scalar Lasso problem can be expressed using
the same soft-thresholding form as in (21), and is given by
xν(i) = sign
 [eν(i)Wyy −ǫA(i)WT
Ay]T αν(i)
[eν(i)Wyy −ǫA(i)WT
Ay]T αν(i)
This block CD algorithm enjoys fast convergence (at least) to a stationary point, thanks both to the
simplicity of (35), and the sparsity of x(i).
The WSS-TLS criterion in (28) is also useful to establish its statistical optimality under a structured
EIV model, with output-input data obeying the relationships
o )xo + (−Syǫy) ,
May 30, 2018
IEEE TRANSACTIONS ON SIGNAL PROCESSING (SUBMITTED)
where perturbation vectors ǫA and ǫy play the role of EA and ey in (4), and differ from the optimization
variables ǫA and ǫy in (26). Unknown are the vector xo, and the inaccessible input matrix A(pA
characterized by the vector pA
o . The model in (36) obeys the following structured counterpart of (as1a).
(as1′) Perturbations in (36) are jointly Gaussian, i.e., [ǫA ǫy] ∼N(0, W−1), as well as independent
o and xo. Vector xo has i.i.d. entries with the same prior as in (as1a); and it is independent from
o , which has i.i.d. entries drawn from a zero-mean uniform (i.e., non-informative) prior pdf.
The following optimality claim holds for the WSS-TLS estimator in (28), assured to be equivalent to
the solution of problem (26) by Lemma 2.
Proposition 5: (MAP optimality of WSS-TLS). Under (as1′) and (as2), the equivalent WSS-TLS problem
in (28) yields the MAP optimal estimator of xo and pA in the structured EIV model (36).
Proof: The proof follows the lines used in proving the MAP optimality of (5) under (as1a) in
Proposition 1. The log-prior pdf of xo contains an ℓ1-norm term as in (8), while the uniform prior on
o is constant under (as1′). Furthermore, given the structure mapping [A y] = S(p), the conditional
log-likelihood here can be expressed in terms of x and ǫA, as ln p[y, A|xo = x, pA
o = pA + ǫA] =
ǫA = ǫA, ǫy = −(Sy)†[y −(A + PnA
k )x] = (Sy)†[SA(I ⊗x)ǫA −r(x)]. After omitting
terms not dependent on x and ǫA, the conditional log-likelihood under the joint Gaussian distribution in
(as1′) boils down to half of the quadratic cost in (28). Combining the latter with ∥x∥1 from the log-prior
pdf, it follows that maximizing the log-posterior pdf amounts to minimizing the unconstrained sum of
the two, which establishes MAP optimality of the WSS-TLS estimator in (28).
VI. S-TLS APPLICATIONS
In this section, the practical impact of accounting for perturbations present in the data matrix [A y]
will be demonstrated via two sensing applications involving reconstruction of sparse vectors. In both, the
perturbation EA comes from inaccurate modeling of the underlying actual matrix Ao, while ey is due to
measurement noise.
A. Cognitive Radio Sensing
Consider Ns sources located at unknown positions, each transmitting an RF signal with power spectral
density (PSD) Φs(f) that is well approximated by a basis expansion model: Φs(f) = PNb
ν=1 xsνbν(f),
where {bν(f)}Nb
ν=1 are known (e.g., rectangular) basis functions, and {xsν}Ns
s=1 are unknown power
coefﬁcients. As source positions are also unknown, a Cartesian grid of known points {lg}Ng
g=1 is adopted
to describe candidate locations that transmitting radios could be positioned , ; see also Fig. 1.
May 30, 2018
IEEE TRANSACTIONS ON SIGNAL PROCESSING (SUBMITTED)
The task is to estimate the locations and powers of active sources based on PSD samples measured at
Nr cognitive radios (CRs) at known locations {ℓr}Nr
r=1. Per frequency fk, these samples obey the model
γgrΦg(fk)+σ2
r+er(fk) = [
γgrbν(fk)]xgν+σ2
r+er(fk) = aT
r (fk)xo+er(fk) (37)
where the PSD Φg(f) is nonzero only if a transmitting source is present at lg; γgr represents the channel
gain from the candidate source at lg to the CR at ℓr that is assumed to follow a known pathloss function
of the distance ||lg −ℓr||; σ2
r denotes the known noise variance at receiver r; the NbNg ×1 vector ar(fk)
collects products γgrbν(fk); vector xo contains the NbNg unknown power coefﬁcients xgν; and er(fk)
captures the error between the true, Φr(fk), and estimated, ˆΦr(fk), PSDs.
Estimated PSD samples at K frequencies from all Nr receivers are ﬁrst compensated by subtracting the
corresponding noise variances, and subsequently collected to form the data vector y of length m = KNr.
Noise terms −er(fk) are similarly collected to build the perturbation vector ǫy. Likewise, row vectors
r (fk) of length n = NbNg are concatenated to form the m × n matrix A. The latter is perturbed
(relative to the inaccessible Ao) by a matrix EA, which accounts for the mismatch between grid location
vectors, {lg}Ng
g=1, and those of the actual sources, {κs}Ns
s=1. To specify EA, let ǫs
gr := γsr −γgr for the
source at κs closest to lg, and substitute γgr = γsr −ǫs
gr into the double sum inside the square brackets
of (37). This allows writing A = Ao −EA, where EA is afﬁne structured with coefﬁcients {ǫs
matrix atoms formed by {bν(fk)}. All in all, the setup ﬁts nicely the structured EIV model in (36).
Together with {ǫs
gr}, the support of xo estimates the locations of sources, and the nonzero entries
of xo their transmit powers. Remarkably, this grid-based approach reduces localization – traditionally a
nonlinear estimation task – to a linear one, by increasing the problem dimensionality (Ng ≫Ns). What is
more, xo is sparse for two reasons: a) relative to the swath of available bandwidth, the transmitted PSDs
are narrowband; hence, the number of nonzero xgνs is small relative to Nb; and (b) the number of actual
sources (Ns) is much smaller than the number of grid points (Ng) that is chosen large enough to localize
sources with sufﬁciently high resolution. Existing sparsity-exploiting approaches to CR sensing rely on
BP/Lasso, and do not take into account the mismatch arising due to griding , . Simulations in Section
VII will demonstrate that sensing accuracy improves considerably if one accounts for grid-induced errors
through the EIV model, and compensates for them via the novel WSS-TLS estimators.
B. DoA Estimation via Sparse Linear Regression
The setup here is the classical one in sensor array processing: plane waves from Ns far-ﬁeld, narrowband sources impinge on a uniformly-spaced linear array (ULA) of Nr (possibly uncalibrated) antenna
May 30, 2018
IEEE TRANSACTIONS ON SIGNAL PROCESSING (SUBMITTED)
elements. Based on as few Nr × 1 vectors of spatial samples collected across the ULA per time instant
t (snapshot), the task is to localize sources by estimating their directions-of-arrival (DoA) denoted as
s=1. High-resolution, (weighted) subspace-based DoA estimators are nonlinear, and rely on the
sample covariance matrix of these spatio-temporal samples, which requires a relatively large number
of snapshots for reliable estimation especially when the array is not calibrated; see e.g., . This has
prompted recent DoA estimators based on sparse linear regression, which rely on a uniform polar grid
of Ng points describing candidate DoAs {θg}Ng
g=1 , . Similar to the CR sensing problem, the
g-th entry xg of the Ng × 1 unknown vector of regression coefﬁcients, xo,t, is nonzero and equal to the
transmit-source signal power, if a source is impinging at angle θg, and zero otherwise.
The Nr×1 array response vector to a candidate source at DoA θg is a(θg) = [1 e−jαg · · · e−jαg(Nr−1)]T ,
where αg := 2πd sin(θg) denotes the phase shift relative to the source signal wavelength between
neighboring ULA elements separated by distance d. The per-snapshot received data vector yt of length
m = Nr obeys the EIV model: yt = (A + EA) xo,t + (−ey,t), where −ey,t represents the additive noise
across the array elements; the m × n matrix A := [a(θ1) · · · a(θNg)] denotes the grid angle scanning
matrix of n = Ng columns; and EA represents perturbations arising because DoAs from actual sources
do not necessarily lie on the postulated grid points. Matrix EA can also account for gain, phase, and
position errors of antenna elements when the array is uncalibrated.
To demonstrate how a structured S-TLS approach applies to the DoA estimation problem at hand, consider for simplicity one source from direction ϑs, whose nearest grid angle is θg; and let ǫs
g := ϑs −θg be
the corresponding error that vanishes as the grid density grows large. For small ǫs
g, the actual source-array
phase shift αs := 2πd sin(θg +ǫs
g) can be safely approximated as 2πd[sin(θg) cos(ǫs
g)+cos(θg) sin(ǫs
2πd[sin(θg) + ǫs
g cos(θg)]; or, more compactly as αs ≈αg + ǫgβg, where βg := 2πd cos(θg). As a result,
using the approximation exp(−jαs) ≈exp[−j(αg + ǫs
gβg)] ≈(1 −jǫs
gβg) exp(−jαg), the actual array
response vector can be approximated as a linear function of ǫs
g; thus, it be expressed as
a(ϑs) = a(θg) + ǫs
φ(θg) := [0 −jβge−jαg, . . . , −jβg(Nr −1)e−jαg(Nr−1)]T .
With columns obeying (38), the actual array manifold is modeled as Ao = A+EA, where the perturbation
matrix is structured as EA = PNg
g , with the Nr × Ng matrix SA
g having all zero entries, except
for the g-th column that equals φ(θg). With such an array manifold and Sy = I, the grid-based DoA
setup matches precisely the structured EIV model in (36). The simulated tests in the ensuing section will
illustrate, among other things, the merits of employing WSS-TLS solvers to estimate xo,t and ǫs
on data collected by possibly antenna arrays. But before this, a ﬁnal remark is in order.
May 30, 2018
IEEE TRANSACTIONS ON SIGNAL PROCESSING (SUBMITTED)
Remark 3: (Relationships with and ) Although EA is not explicitly included in the model of
existing grid-based approaches, this mismatch has been mitigated either by iteratively reﬁning the grid
around the region where sources are present , or, by invoking the minimum description length (MDL)
test to estimate the number of actual sources Ns, followed by spatial interpolation to estimate their DoAs
 . These remedies require post-processing the initial estimates obtained by sparse linear regression.
In contrast, the proposed structured S-TLS based approach jointly estimates the nonzero support of xo,t
along with grid-induced perturbations. This allows for direct compensation of the angle errors to obtain
high-resolution DoA estimates in a single step, and in certain cases without requiring multiple snapshots.
Of course, multiple snapshots are expected to improve estimation performance using the matrix S-TLS
solver mentioned in Remark 2.
VII. SIMULATED TESTS
Four simulated tests are presented in this section to illustrate the merits of the S-TLS approach, starting
from the algorithms of Section IV.
Test Case 1: (Optimum vs. suboptimum S-TLS) The EIV model in (4) is simulated here with a 6 × 10
matrix A, whose entries are i.i.d. Gaussian having variance 1/6, so that the expected ℓ2-norm of each
column equals 1. The entries of EA and ey are also i.i.d. Gaussian with variance 0.0025/6 corresponding
to entry-wise signal-to-noise ratio (SNR) of 26dB. Vector xo has only nonzero elements in the two ﬁrst
entries: xo,1 = −1.3 and xo,2 = 5. Algorithm 1 is tested with µ = 5 against Algorithm 2 implemented
with different values of λ to obtain a solution satisfying ∥ˆxS−TLS∥1 = µ. For variable tolerance values ε
in Algorithm 1-b, the attained minimum cost f(x) in (11) is plotted in Fig. 2. To serve as a benchmark,
a genie-aided globally optimum scheme is also tested with the support of x known and equal to that of
xo. Speciﬁcally, the genie-aided scheme minimizes f(x) over all points with ℓ1-norm equal to µ, and
all entries being 0 except for the ﬁrst two. Using the equivalence between (11) and (12), the genie-aided
scheme per iteration amounts to minimizing a scalar quadratic program under linear constrains, which is
solved efﬁciently using the interior-point optimization routine in .
Fig. 2 shows that as ε becomes smaller, the minimum achieved value f(x) decreases monotonically,
and drops sharply to the global minimum attained by the genie-aided bisection scheme. Interestingly,
the alternating descent algorithm that guarantees convergence to a stationary point, exhibits performance
comparable to the global algorithm. For this reason, only the alternating descent algorithm is used in all
subsequent tests. Next, S-TLS estimates are compared with those obtained via BP/Lasso and (regularized)
TLS in the context of the CR sensing and array processing applications outlined in Section VI.
May 30, 2018
IEEE TRANSACTIONS ON SIGNAL PROCESSING (SUBMITTED)
Test Case 2: (S-TLS vs. Lasso vs. TLS) The setup here is also based on the EIV model (4), with A of
size 20 × 40 having i.i.d. Gaussian entries; and xo having 5 nonzero i.i.d. standardized Gaussian entries.
By averaging results over 200 Monte Carlo runs, the S-TLS solution is compared against the Lasso one
for 20 values of λ (uniformly spaced in log-scale), based on the ℓ2, ℓ1, and ℓ0 errors of the estimated
vectors relative to xo. (The ℓ0 error equals the percentage of entries for which the support of the two
vectors is different.) Fig. 3 corroborates the improvement of S-TLS over Lasso, especially in the ℓ0 norm.
Fig. 3(c) further demonstrates that over a range of moderate λ values, S-TLS consistently outperforms
Lasso in recovering the true support of xo. For high λ’s, both estimates come close to the all-zero vector,
so that the ℓ0 errors become approximately the same, even though the ℓ2 and ℓ1 errors are smaller for
Lasso. However, for both error norms S-TLS has a slight edge over moderate values of λ.
Receiver operating characteristic (ROC) curves are plotted in Fig. 3(d) to illustrate the merits of S-
TLS and Lasso over (regularized) TLS in recovering the correct support. The “best” λ for the S-TLS and
Lasso algorithms is chosen using cross-validation . As TLS cannot be applied to under-determined
systems, a 40 × 40 matrix A is selected. Since TLS and LS under an ℓ2-norm constraint ∥x∥2 ≤µ are
known to be equivalent when µ is small , the regularized TLS is tested using the function lsqi
for regularized LS from . The probability of correct detection, Pd, is calculated as the probability
of identifying correctly the support over nonzero entries of xo, and the probability of false alarms, Pfa,
as that of incorrectly deciding zero entries to be nonzero. The ROC curves in Fig. 3(d) demonstrate the
advantage of Lasso, and more clearly that of S-TLS, in recovering the correct support.
Test Case 3: (CR Spectrum Sensing) This simulation is performed with reference to the CR network
in the region [0 1] × [0 1] in Fig. 1. The setup includes Nr = 4 CRs deployed to estimate the power
and location of a single source with position vector [0.4 0.6], located at the center of four neighboring
grid points. The CRs scan K = 128 frequencies from 15MHz to 30MHz, and adopt the basis expansion
model in Section VI-A with Nb = 16 rectangular bν(f) functions, each of bandwidth 1MHz. The actual
source only transmits over the ν = 6-th band. The channel gains are exponentially decaying in distances
with exponent −1/2. The received data are generated using the transmit PSD described earlier, a regular
Rayleigh fading channel with 6 taps, and additive white Gaussian receiver noise at SNR=0dB. Receive-
PSDs are obtained using exponentially weighted periodograms (with weight 0.99) averaged over 1,000
coherence blocks; see also for more details of a related simulation. The WSS-TLS approach is used
to account for perturbations ǫs
gr in the channel gains. A diagonal matrix W is used with each diagonal
entry equal to ˆσ−2
 
the entries {xg6}16
g=1 were estimated as nonzero). However, Lasso identiﬁes four transmitting sources at
positions [0.3(0.5) 0.5(0.7)], the four grid points closest to [0.4 0.6]. WSS-TLS returns only one source
at position [0.5 0.5], along with the estimated ˆǫs
gr that yields ˆγsr = ˆǫs
gr + γgr. Concatenate the latter to
form ˆγs of length Nr = 4 ≪m. Using a reﬁned grid of 25 points uniformly spaced over the “zoom-in”
region [0.3 0.7] × [0.3 0.7] centered at [0.5 0.5], correlation coefﬁcients between ˆγs and those of each
candidate point are evaluated. The source position is estimated as the point with maximum correlation
coefﬁcient, which for WSS-TLS occurs at the true location [0.4 0.6]. To illustrate graphically the two
alternatives, the estimated maps of the spatial PSDs at the 6th frequency band are plotted in Fig. 4(a)
using the Lasso, and in Fig. 4(b) using WSS-TLS. The marked point indicates the actual source location
[0.4 0.6] in both maps. Unlike Lasso, the WSS-TLS identiﬁes correctly the true position of the source.
Test Case 4: (DoA Estimation) The setup here entails a ULA consisting of Nr = 8 antenna elements
with inter-element spacing d = 1/2, and a grid of Ng = 90 scanning angles from −90◦to 90◦wrt the
array boresight. Two sources (Ns = 2) of unit amplitude impinge from angles ϑs = 1◦and −9◦, both 1◦
off their nearest grid DoAs. As in the single-snapshot test in , the SNR is set to 20dB. The variance
g in (38) is obtained from the uniform distribution in [−1◦, 1◦]. Selecting λ according to the noise
level as in , Lasso returns four nonzero entries, two around each source at ϑs ± 1◦; while WSS-TLS
gives two nonzero θg estimates at −10◦(g = 40) and 0◦(g = 45), along with perturbation estimates ˆǫs
45. Using the latter, the DoAs are estimated as ˆϑs := ˆθg + ˆǫs
g for g = 40, 45. The angle spectra
using Lasso, and WSS-TLS with estimated ˆϑs, are compared in Fig. 5(a). The two black arrows depict
the actual source angles, and benchmark the true angular spectrum.
To further illustrate the merits of WSS-TLS in estimating correctly the closest grid point and subsequently each DoA, the sample variance of a DoA estimate is plotted versus SNR in Fig. 5(b) using Monte
Carlo runs, each with a single source randomly placed over [−1◦, 1◦]. Both WSS-TLS and Lasso are postprocessed by interpolating peaks in the obtained spectra from two nearest grid points, linearly weighted
by the estimated amplitudes as in . Both curves conﬁrm that WSS-TLS outperforms the Lasso.
More interestingly, the two WSS-TLS curves almost coincide, which further corroborates that WSS-TLS
manages in a single step to identify correctly the support of xo,t without requiring post processing.
VIII. CONCLUDING REMARKS
An innovative approach was developed in this paper to account for sparsity in estimating coefﬁcient
vectors of fully-perturbed linear regression models. This approach enriches TLS criteria that have been
traditionally used to ﬁt such models with the ability to handle under-determined linear systems. The
May 30, 2018
IEEE TRANSACTIONS ON SIGNAL PROCESSING (SUBMITTED)
novel S-TLS framework also enables sparsity-exploiting approaches (CS, BP, and Lasso) to cope with
perturbations present not only in the data but also in the regression matrix.
Near-optimum and reduced-complexity suboptimum solvers with global and local convergence guarantees were also developed to optimize the generally nonconvex S-TLS criteria. They rely on bisection,
branch-and-bound, or coordinate descent iterations, and have universal applicability regardless of whether
perturbations are modeled as deterministic or random. Valuable generalizations were also provided when
prior information is available on the deterministic structure or statistics of the associated (augmented) data
matrix. Under speciﬁc statistical models with errors-in-variables, the resultant (generally weighted and
structured) S-TLS estimators were proved to be optimal in the MAP sense. Simulated tests corroborated
the analytical claims, compared competing alternatives, and demonstrated the practical impact of the
novel S-TLS framework to grid-based sparsity-exploiting approaches for cognitive radio sensing, and
direction-of-arrival estimation with possibly uncalibrated antenna arrays.
Interesting topics to explore in future research, include performance analysis for the proposed S-TLS
algorithms, and online implementations for S-TLS optimal adaptive processing.