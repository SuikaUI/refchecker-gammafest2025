IEEE TRANSACTIONS ON SIGNAL PROCESSING, VOL. 40. NO. IO, OCTOBER 1992
The Discrete Wavelet Transform: Wedding the
A Trous and Mallat Algorithms
Mark J. Shensa
Abstract-In a general sense this paper represents an effort
to clarify the relationship of discrete and continuous wavelet
transforms. More narrowly, it focuses on bringing together two
separately motivated implementations of the wavelet trans-
form, the algorithme U trous and Mallat’s multiresolution de-
composition. It is observed that these algorithms are both spe-
cial cases of a single filter bank structure, the discrete wavelet
transform, the behavior of which is governed by one’s choice
of filters. In fact, the h trow algorithm, originally devised as a
computationally efficient implementation, is more properly
viewed as a nonorthonormal multiresolution algorithm for
which the discrete wavelet transform is exact. Moreover, it is
shown that the commonly used Lagrange i~ trous filters are in
one-to-one correspondence with the convolutional squares of
the Daubechies filters for orthonormal wavelets of compact
A systematic framework for the discrete wavelet transform
is provided, and conditions are derived under which it com-
putes the continuous wavelet transform exactly. Suitable filter
constraints for finite energy and boundedness of the discrete
transform are also derived. Finally, relevant signal processing
parameters are examined, and it is remarked that orthonor-
mality is balanced by restrictions on resolution.
I. INTRODUCTION
AVELETS are rapidly finding application as a tool
W for the analysis of nonstationary signals [ 11- .
However, with the notable exception of orthonormal
wavelets - , very little literature has been devoted to
linking discrete implementations to the continuous trans-
form. As in the case of the discrete Fourier transform,
these implementations (or filter banks) can, and should,
stand on their own as abstract decompositions of discrete
time series: Their wide sweeping significance, however,
lies in their interpretation as wavelet transforms. In a gen-
eral sense, this paper represents an effort to clarify the
relationship of discrete and continuous wavelet trans-
forms. More narrowly, it focuses on bringing together two
separately motivated implementations of the wavelet
transform. One of them, the algorithme U trous’ for non-
orthogonal wavelets , , was developed for music
synthesis and is particularly suitable for signal pro-
Manuscript received May 21, 1990; revised August 5, 1991. This work
The author is with the Naval Ocean Systems Center, San Diego, CA
IEEE Log Number 9202367.
Literally, “algorithm with holes,” this terminology, taken from ,
refers to the fact that all the even coefficients of the relevant filter (with the
exception of the center) are zero.
was supported in part by the ONR and NOSC IR program.
92152-5000.
cessing. The other, the multiresolution approach of Mal-
lat and Meyer, originally used in image processing, em-
orthonormal
 -[ 101. The
algorithm, apart from its wavelet interpretation, was dis-
covered previously in the form of quadrature mirror filter
(QMF) filter banks with perfect reconstruction where it
finds application in speech transmission and split-band
coding [ 111-[ 131.
A glance at these two algorithms suffices to reveal
closely related structures. In fact, apart from the con-
straints on their filters, the decimated B trous and Mal-
lat algorithms are identical. We are thus led to examine
the expanded family of algorithms encompassing both
types of filters. In this vein, it is shown that the Lagrange
interpolation filters commonly employed by the B trous
algorithm are actually the squares (in a convolutional
sense) of the Daubechies filters for compact orthonormal
wavelets. We also derive conditions under which the dis-
crete implementation computes a continuous wavelet
transform exactly and find that they bear an intimate re-
lationship to the B trous constraints.
From a more general viewpoint, the situation is as fol-
lows: The algorithms to be discussed all are filter bank
structures (see Fig. 1). Their only distinguishing feature
is the choice of two finite length filters, a low-pass filter
f and a bandpass filter g. The low-pass condition, ex-
pressed more precisely as C f k = J2, is necessary to the
construction of a corresponding continuous wavelet func-
tion. The bandpass requirement, while apparently not es-
sential to all applications, ensures that finite energy sig-
nals lead to finite energy transforms (see Section VI).
Under these conditions, the filter bank output will be re-
ferred to as the discrete wavelet transform (DWT), a ter-
minology which will become clear in the course of the
One class of DWT filter pairs are the Daubechies filters
 which yield orthogonal wavelet decompositions and
constitute, in more conventional terms, a QMF filter bank
with perfect reconstruction. Another is that for which the
low-pass filter satisfies the i trous condition hk =
6(k)/d2. Such filters, which simply serve to interpolate
every other point, correspond to a nonorthogonal wavelet
decomposition. As mentioned above, if they are further
restricted to be Lagrangian interpolators, they become the
squares of the Daubechies filters, which is quite remark-
able in consideration of the totally different derivations.
This also implies that a maximally flat filter with the same
U.S. government work not protected by U.S. copyright
SHENSA: DISCRETE WAVELET TRANSFORM
Fig. 1. A wavelet filter bank structure. The down-arrow indicates deci-
mation. The output of the transform is the family of signals w ' , forming
the two parameter transform w i in the scale-time plane. Following termi-
nology to be introduced, w' is the (decimated) discrete wavelet transform.
number of vanishing derivatives at 0 and 7r is a Lagran-
gian interpolator; a fact which may aid in the design of
maximally flat filters [ 141.
A fundamental question is, when do these discrete im-
plementations yield exact (i.e., sampled) versions of a
continuous wavelet transform? Aside from regularity con-
ditions relating to smoothness , we find that iff is a
trous, then the DWT coincides with a continuous wavelet
transform by a wavelet $(t) whose samples $(n) form the
filter g (i.e., g, = $(n)). Even iff is not B trous, the
algorithm is exact provided the signal lies in an appropri-
ate subspace; however, in that insthnce, the sampled
wavelet values depend on f as well as g. This is the situ-
ation in the orthonormal case where, moreover, the filter
g is almost completely determined from fthrough the con-
straints of orthogonality.
In the remainder of this introduction we define, and
briefly motivate, wavelet transforms at various levels of
discretization. Section I1 contains an abbreviated deriva-
tion of the h trous algorithm followed by a description of
the Mallat algorithm. (The uninitiated reader is particu-
larly referred to [ 11, , .) In Section I11 we define the
undecimated DWT, relate it to the decimated transform,
and provide algorithms for its computation. Section IV
states and proves several theorems which delineate the re-
lationship between the DWT and the continuous wavelet
transform. It may be read independently of the algorithms
of Section I1 although the motivation for the constructions
may not be clear. Section V defines the Lagrange a trous
filters and proves that they are the squares of the Daube-
chies filters. In Section VI, we formulate the inversion
problem and provide filter constraints which ensure finite
energy and bounded operators. It concludes with a short
examination of the tradeoffs involved in choosing the
bandpass filter, emphasizing the differences of the orthm-
ormal and nonorthogonal cases.
A. Transform Dejinitions
The continuous wavelet transform of a signal s(t) takes
W(a, b) = J a $ (G)
where $ is the analyzing wavelet, a represents a time di-
lation, b a time translation, and the bar stands for complex
conjugate. The normalization factor 1 / d a is perhaps most
effectively visualized as endowing IW(a, b)I2 with units
of power/hertz.2 Certain weak "admissibility"
tions are usually required on $(t) for it to be a candidate
for an analyzing wavelet; namely, square integrability and
where $(a)
is the Fourier transform of $(t). They ensure
that the transformation is a bounded invertible operator in
the appropriate spaces , . If $(U) is differentiable,
then it suffices that $ be zero mean, i.e., that S $(t) dt
= 0, for (1.2) to be satisfied.
In the realm of signal processing, the significance of
(1.1) is probably (or, at least, traditionally) best grasped
by comparing it to the short-time Fourier transform:
' F(w, b) = S h(t - b)e'"'s(t) dt.
Thus, to obtain F(w, b), one multiplies the signal by an
appropriate window h (such as a Gaussian) centered at
time b and then takes the Fourier transform. In mathe-
matical terms, (1.3) is an expansion of the signal in terms
of a family of functions h(t - b) e'"', which are generated
from a single function h(t) through translations b in time
and translations w in frequency. In contrast, the wavelet
transform (1. I) is an expansion in functions $((t - b ) / a )
generated by translations b in time and dilations a in time.3
Thus, the continuous wavelet transform resembles a (con-
tinuous) bank of short-time Fourier transforms with a dif-
ferent window for each frequency. The significance of this
is that, while the basis functions in (1.3) haveA the same
time and frequency resolution (that of h(t) and h (U)) at all
points of the transform plane, those of (1.1) have time
resolution (that of $(t/a)) which decreases with a and
frequency resolution (that of $ (aw)) which increases with
a . This property can be a great advantage in signal pro-
cessing since high frequency signal characteristics are
generally highly localized in time whereas slowly varying
signals require good low frequency resolution.
As originally proposed by Morlet et al. , $ was a
modulated Gaussian
r ~ / ( ~ ) = ejVote-t2/2
and this function is still the prototypical analyzing wave-
let for signal processing applications [I]. The window
function $(t/a) has Fourier transform
ae -(" -[vo/a112a
12, which has analysis frequency vola. We
emphasize that vo is simply a parameter which determines
the analyzing wavelet; its role should not be confused with
that of a even though the scale axis is often expressed in
terms of frequency under the transformation a -, vo/u.
Observe that (1.4) only satisfies the admissibility condl-
tion (1.2) approximately (cf. [ 161, [ 181). As expected, its
*The energy density is given by (WIZ [(da d b ) / a 2 ] , an expression which
is intimately linked to representations of the affine group (see , [Is],
 ). Since a is proportional to bandwidth, 1 WIZ is power/hertz. See Sec-
tion VI for a discussion of the discrete case.
3Alternatively, dilations in time may be considered contractions in fre-
quency since the Fourier transform of $(?/a) is a$(aw).
IEEE TRANSACTIONS ON SIGNAL PROCESSING, VOL. 40, NO. IO. OCTOBER 1992
bandwidth is proportional to l / a , thus giving rise to a
constant relative bandwidth; i.e., BW /(vola) = con-
stant. This feature is also reflected in the narrowing of the
time window at higher frequencies; i.e., at smaller a. In
general, one's choice of the function $(t) is dictated by
its time and frequency localization properties , [ 181.
We shall be exclusively concerned with discrete values
for a and b. In particular, we assume that a has the form
a = 2' where i is termed the octave of the transform. The
integral (1.1) then yields a wavelet series
W(2', n) !2 -
J2' s IC/ (7)
We remark that finite energy for the wavelet transform is
not at all equivalent to finite energy for the wavelet series.
It depends on the sampling grid as well as the function
$(t) . Thus, the admissibility condition (1.2) is not
necessarily appropriate in the discrete case and shall be
replaced with conditions on the relevant filters in Section
VI. In addition, we shall often take b to be a multiple of
W(2', 2'n) 7
$ 7 - n s(t) dt.
4 2 ' s-(:
A logical step in applying the theory to discrete signals
is to discretize the integral in (1.5)
The sample rate has been set equal to one. As indicated
by 2% on the left-hand side, (1.6), as well as (1.5b), are
decimated wavelet transforms. Octave i is only output
every 2' samples. In this form the resulting algorithms will
not be translation invariant ( ). This is easily seen by
substituting s(k - r) for s(k) which produces w(2', 2'(n
- r/2')), an integer translation of w(2', 2'n) only if r is
a multiple of 2'. However, the invariance, which is lost
by decimation, is easily restored by separately filtering
the even and odd sequences (see Section 111) or by using
an equivalent algorithm, also described in Section 111. Our
major reason for starting with (1.5b) rather than (1.5a) is
historical. It delineates the relationship of the DWT to the
QMF filter banks and (orthonormal) wavelet structures al-
ready found in the literature - . It also simplifies our
derivation of the i trous algorithm and readily lends itself
to physical interpretation (see Section VI). Note that the
original Mallat algorithm was decimated; i trow 
Let g be the discrete filter obtained by truncating the
sampled wavelet function; i.e., g, = $(n). Then, pro-
ceeding from (1.6), we shall be able to amve at the DWT
4Physically, this reflects a need for less frequency sampling of the trans-
form output at lower frequencies (i.e., larger scales U ) . Mathematically, b
= 2'n has its roots in the orthonormal wavelets where it suffices for in-
vertibility of the tranform . The general case, however, is much more
complex . Too sparse a sampling leads to incompleteness; oversampling
results in a redundant set of functions.
pictured in Fig. 1,
[W'I, = C g,-][S'l'
where [w'], corresponds to w(2', 2'n) of (1.6) and so is
the original signal s. The mysterious appearance of the
filter f in (1.7) will be unraveled in the derivation of the
i trow algorithm in Section 11. Finally, we shall come full
circle in Section IV where we show, under quite general
conditions, that given filtersf and g there exists a function
$(t) with $(n) = gf k E-, such that the DWT acting on
the sampled signal is exactly the sampled output of the
continuous wavelet transform (i.e., of the wavelet se-
r i e ~ ) . ~
In other words, the DWT with filter g defined by
which was originally conceived as an ap-
proximation of the (continuous) WT for an arbitrary ana-
lyzing wavelet $A(t), is exact for another wavelet func-
tion $B(t) where $B(n) = gf for all n. Of course, if there
is sufficient regularity, $A (t) and $B (t) will be close since
they coincide on the integers up to the length of g.
Before embarking on this voyage, we summarize, and
hopefully clarify, the plethora of transforms with a brief
analogy to the Fourier transform, Fourier series, the dis-
cretized z transform, and the discrete Fourier transform
(DFT). The Fourier transform of a continuous signal s(t)
S(W) k 1 e-j"'s(t) dt
is a function of the continuous variable W . Restricting it
to a discrete (one-dimensional) grid results in the coeffi-
cients of a Fourier series
e-j'*m' s(t) dt
which in turn may be computed approximately by
sZ(2.lrm At) = c e-j21rmkArs(k
the z transform of s, k s(n A t ) output at discrete points
. If s(t) is band limited and sampled at an appro-
priate rate, A t = 1 / N , then the above may be computed
exactly using the DFT
e -12lrmAI
c exp (-N)
These correspond precisely to "(a, b), W(2', n), w(2', n),
and undecimated w i . With wavelets, however, we have
the additional difficulty of dealing with a whole class of
functions $(I) rather than simply ,jut. Also complicating
things are its two-dimensional structure and the decimated
versions, which, due to their 2'n dependency on i, play a
distinguished role without analogy in the one-dimensional
'The adjoint filter g l =-z_k is used to simplify future notation. It cor-
responds to the integrand J . ( - t ) * s found in (l.l), (1.5), and (1.6).
SHENSA: DISCRETE WAVELET TRANSFORM
11. Two ALGORITHMS
A. Notation
Decimation, which appears as a down arrow in Fig. 1,
plays a pivotal role in all DWT algorithms. However, it
leads to operators which are not time invariant and present
a potential source of confusion. It is thus worthwhile to
first establish some formal notation.
Signals and filters in boldface type will be treated as
vectors, in which case * indicates discrete convolution and
yields a vector. The symbol f will be used for the Her-
mitian adjoint filter [ f ‘ ] k = f - k . Note that this is the com-
plex conjugate reversal and does not imply a conversion
of a column vector to a row vector. The above mentioned
decimation operator is represented by a matrix
where Bkm is the Kronecker delta and 6(k)
significance is the dilation operator
which dilates a vector by inserting zeros. Observe that A
are transposes of each other, and that although they
are linear, they are not time invariant; i.e., they are not
functions of k - m.
Convolution followed by decimation becomes [A( f *
$Ilk = C m & m [ f * SI, = [f*
SI2k = C m f 2 k - m S m . How-
ever, a particularly insidious pitfall remains; namely,
(Af) * s # A(f* s).
This “associativity” problem may be avoided by replac-
ing convolution by f with a matrix F defined by
which shall occasionally be used in our proofs. A trivial
calculation yields AFs = A(f * s). The symbol f will
also be used for the adjoint of matrices. This is consistent
with the above notation where [F’],,,
F,, = f n - , e
We define the Fourier transform s”(w) of a function s(t)
by (1.8) and the z transform (on the unit circle) of a dis-
crete signal s by
sz(w) k C sne-j*”.
In the subsequent interplay between continuous and dis-
crete functions one must be careful to distinguish the usage
of these two transforms, Ignoring their differences can
easily lead to erroneous conclusions. In particular, al-
though the Fourier transform of s(2t) is s^(w/2)/2,
Some comment concerning filter definitions is also ap-
propriate. Usage in the literature is uniform only up to the
adjoint. Also, the z transform is sometimes defined with
a positive exponential which leads to similar differences
in the frequency domain. In keeping with signal process-
ing applications we have chosen (2.5) as above, consist-
ent with the Fourier transform, and we shall define our
filters so that adjoints do not appear in convolutions. This
produces a minimum of adjoints and greatly simplifies the
notation. Unfortunately, it also results in the definition
g: = $(n) and the introduction off
as an interpolation
filter whereas g andf would be more natural. Note, also,
that our filters are the adjoints of the filters defined in ,
although their z transforms coincide since defines the
z transform with a plus sign.
B. The A Trow Algorithm
We take the discretized wavelet series (1.6) as our
starting point. The difficulty in implementing (1.6) is that,
even for +(t) of finite support, as i increases, $(t) must
be sampled at progessively more points, creating a large
computational burden. The solution posed by is to ap-
proximate the values at nonintegral points through inter-
polation via a finite filter f t . The resulting recursion is
highly efficient and may be implemented with the filter
bank structure of Fig. 1.
The interpolation is perhaps best introduced with an ex-
ample. Let f t be the filter (0.5, 1 .O, 0.5). Then,
f - 2k$(k)
approximates a sampling of $(t/2). With the help of the
dilation operator 0,
this may formalized as a general pro-
cedure for dyadic interpolation. The steps are illustrated
in Fig. 2 . Let g be a filter defined by g:
+(n); i.e.,
First we spread g’ to provide space in which to put the
interpolated values. The resulting filter is Dg’. Then we
apply a filter f which leaves the even points fixed and
interpolates to get the odd points. This condition, that f
be the identity on even points, is sufficiently important to
warrant a separate defintion, which follows.
Definition 2.1: The low-pass filter f is said to be an a
trous filter if it satisfies
The J 2 is simply a convenient means of including the
normalization factor of (1.6) in the filter. The result of the
IEEE TRANSACTIONS ON SIGNAL PROCESSING, VOL. 40, NO. 10, OCTOBER 1992
Fig. 2. Diagram illustrating the dilation and interpolation of a function
$(t): $(n/2) = d2 f
+ * (Dg+).
entire interpolation operation, as pictured in Fig. 2, is thus
if' * ( o g t ) l n = [
some sense. This, in turn depends principally on choice
of the filter f. A major step towards treating this question
lies in the results of Section IV, as was outlined at the end
of the introduction. Since the algorithm is exact for some
&(t), the question reduces to a) the quality of the ap-
proximation $ = $B and b) the effect of this approxima-
tion on the wavelet integral (1.1). Inasmuch as $(n) =
$B(n) for the finite set of integers n used to obtain g from
$(t), it is sufficient that these functions be smooth enough
and decrease fast enough at infinity. Conditions on f which
achieve regularity of the constructed wavelet $B are found
in [SI. Quantifying these statements remains a subject for
future study.
C. Multiresolution Algorithm
the same tree structure as (2.12) (cf. - ). Namely,
= .f; - 2k $(k)
Mallat's algorithm, illustrated in Fig. 3, has essentially
= J2 $(n/2).
Noting that $((k/2) - n) = $((k - 2n)/2) and insert-
ing the approximation (2.10) into (1.6), we obtain
- A(h * s')
= A ( g * s').
w(2, 2n) ;z x f l - 2 n - Z m g m S k
In keeping with the literature, we have replaced the filter
f with the filter h, which also serves to indicate that this
class of filters is constrained, as detailed below. We re-
mark that none of these filters are a trous filters. The con-
straints on h and g which ensure an orthonormal multi-
resolution analysis - are
g n - m ' z m ' - k S k
tively by replacing s in (2.11) with s i - ' , we find w(2',
= [g * (A(? * s>>l,
which is simply wi (1.7) with i = 1. Continuing induc-
C [ & 2 j - n h z j - m + g 2 j - n g 2 j - m ~ = 6nm
2%) = wi for all ii where wh is given by (1.7), which can
be rewritten for real f
si+' = A(f * si)
h, = J 2 .
wi = g * si.
Except for decimation of the output (the undecimated ver-
sion will be derived in Section 111), this is the a trous al-
gorithm described in . Thus, we see that the a trous
algorithm is simply a DWT for which the filter f (an in-
terpolator) satisfies condition (2.9) and the filter g is ob-
tained by sampling an a priori wavelet function $(t).
Remark 1: The definition (1.6) is not so transparent as
it might seem. It is, of course, intended to reflect an ap-
proximation to (1.5). From this viewpoint one might well
consider a change of variables t --* t/2' before discretiz-
ing (1.5). Such a procedure certainly alleviates the com-
putational problem since it dilates s(t) (that is, samples s
at 2', values which are known) rather than contracting
$(t). However, unless the original function s(t) was highly
oversampled (which begs the computational question), the
approximation is poor. More precisely, to accurately ap-
proximate s(t), and therefore also (1.5), we must sample
Recalling that Hm, k hm - ,
and that A ' = D, we may
rewrite (2.14a) and (2.14b) as
(H'D)(AH) + (G'D)(AG) = Z
(AH)(G'D) = 0.
Furthermore, (2.15) and (2.16) imply (e.g., multiply
(2.15) on the left by A H ' )
(AH)(H'D) = z
Thus, H'D and GtD are injections and (2.13). is an or-
thogonal decomposition of the discrete signal s'. That is,
si-' = H'Ds' + GtDwi with the scalarproduct (H'Ds')
* (G'Dw') = 0. In fact, (2.15) is a paradigm for invert-
ing the transform. These concepts are illustrated in Fig.
at least at the nyquist rate rnyp
for s. Then the integral for
octave i requires $(t) to be sampled at a rate 2' rnyq.
Furthermore, from (2.14) it follows that (2.13) repre-
Remark 2: The derivation above, as well as that in ,
of the a trous algorithm make no statements regarding the
accuracy of the approximation (2.11) or even of the dis-
decomPosition [6I9 [8I, [91 as follows:
function ($(t) whose Fourier trans-
There exists a
form is given by
cretization from (1.5) to (1.6). The former is iterated over
i and, hence, to succeed must be numerically stable in
SHENSA: DISCRETE WAVELET TRANSFORM
Fig. 3. The Mallat multiresolution algorithm. The down-amow indicates
decimation.
Fig. 4. Illustration of a single stage and its inverse in the multiresolution
algorithm for orthonormal wavelets.
Expression (2.18) forms the basis of a recursion
which in the time domain takes the form
h-kJ2 4(2t - k).
With some additional computation (see Section IV), one
may demonstrate that the translates and dilates of 4,
have the property
[AHlnk+:(t).
Note that the above definitions differ in the sign of i from
those of .
Finally, define
d2 g-k4(2t - k).
Then, using (2.14) and the above properties of 4, one can
show that the family of wavelets,
are orthonormal ( 5 $L(t) $jk(t) dt = 6, &), and that the d'
are the coefficients of the expansion of s(t) in terms of the
More precisely, the translates and dilates + l ( t ) of the
61n contrast, the wavelet functions $:(r)
(1 /J2') $((2/2') - n) of (1.5)
are not generally orthogonal. It is the filter constraints (2.14a) and (2.14b)
that ensure orthonormality. Dropping these two constraints in Section IV,
we develop a structure identical to (2.21)-(2.24); however, the constructed
need not be orthogonal.
scaling function form a basis for L2(R), and
d; = J2' s s(t)$ ($ - n ) = s s(t)$;(t) (2.25)
s(t)$(t - k).
Then, if s(t) is in L2(R), the expansion of s(t) is
s(r) = , c c d;$;(t).
This follows from, (2.25) and orthonormality since com-
pleteness of the q5L(t) implies completeness of the $i(t).
Until recently, the only known orthonormal wavelets
with compact support (i.e., zero outside a finite interval)
were the Haar functions, generated by $(t) = 1 for 0 I
t < 1/2; - 1 for - 1 /2 I
t < 0; and 0 elsewhere. Dau-
bechies , has uncovered an entire family of finite
length filters satisfying (2.14), demonstrating that the cor-
responding wavelets defined by (2.18), (2.23), and (2.24)
are orthonormal as a consequence of (2.15), (2.16) and
have compact support since they were generated by finite
length filters (see Section IV, eq. (4.10)). The first two
of these filters are
(1 + J 3 , 3 + J 3 , 3 - J 3 , 1 - J 3 )
h' = 4 ~ 2
where the first component of h is on the left. The wavelets
corresponding to (2.28a) are exactly the Haar function
mentioned above.
Some additional remarks relating the two algorithms are
in order. The conditions (2.14~) and (2.14d) effectively
make g a bandpass filter and h a low-pass filter (e.g., an
interpolation filter) with the sum on g k analogous to the
$(t) dt = 0. Also, d'"
corresponds to w l .
The additional decimation appearing in (2.13b) would not
appear in a translation invariant version of Mallat's al-
gorithm (cf. Section 111). On the other hand, although the
discrete filters g play algorithmically identical roles, the
$ i ( t ) of the ?i
trous algorithm are not the wavelet vectors
of a functional expansion. Rather the $k(r) are the duals
of a set of vectors for which the coefficients of the signal
expansion are w:. That is, they are the coefficients of an
expansion of the form s(t) = Cl, ( s,-$; ) $L(t) where ( )
indicates the L2 inner product, and $k(t) is the dual basis
or frame (see , ) of 11.;. In Mallat's algorithm, since
the $k(t) are orthonormal, the basis and its dual coincide.
Thus, in many senses, the discrete filters g are more fun-
damental than the wavelets themselves. It is usually the
coefficients which are of major interest; the actual wave-
lets $k(t), let alone their duals, are rarely computed.
IEEE TRANSACTIONS ON SIGNAL PROCESSING, VOL. 40. NO. IO. OCTOBER 1992
Finally, in anticipation of Section V, let us form the
squares of the two previous examples
hf * h = -
(1, 1) * -
(1, 1) = (1/2, 1, 1/2) '
h t * h = ( - ' o 2
1 2 0 2) (2.29b)
where * indicates convolution, and h given by (2.28a) and
(2.28b), respectively. Note that the filtersf = h * h / J 2
are 2i trous filters and that the interpolation equation (2.10)
holds exactly if $(t) is a polynomial in t of degree one or
three, respectively.
111. WAVELET TRANSFORMS
WITHOUT DECIMATION
As has often been pointed out , the recursions (2.12)
and (2.13) are not, in general, translation invariant. In
contrast, the original undecimated 2i trous algorithm ,
 , which is pictured in Fig. 5 and consists of entirely of
convolutions, is patently translation invariant. In this sub-
section we shall use that property to provide a formal def-
inition for an undecimated discrete wavelet transform w ,
then demonstrate that w; = K&, and also show that @ is
computed by the algorithm of Fig. 5.
Let Tm be the operation of translation by m; i.e.,
( T m s ) n 2 s n - m *
In order to include the dependency of w' on so, we add it
as an argument, writing w'(so). Equations (2.12a) and
(2.12b) become
wi(s0) = G(AF)'sO.
(Recall that Gmn & g, - ,.) Finally, we shall need two im-
portant identities, which are proved in Appendix A.
Namely, for any F of the form Fmn = fm - n , we have the
following lemmas.
Lemma 3. I:
[(AF)'Ink = [ ( A W I O , ~ - * ~ ~
Lemma 3.2:
[(AF)'],e'kw = eJ2ln0 IT fZ(2'w).
As expected, w' is not translation invariant,
[ w 1 ( ~ m s 4 ] n = c [ ~ ( ~ ~ l n , k ~ ; - r n
[ G ( A F ) ' I , , ~ + ~ ~ ;
[G(AF)'],,-,,,p;.
For example, [A F],, = f2, - ,, # [A F],,,, - ,,. However,
if we replace m by 2'm in (3.5) and use Lemma 3.1, the
last step becomes an equality so that
[ ~ ~ ( ~ 2 ~ r n s O ) l n
= [ w 1 ( s 0 ) 1 n - m .
Thus, translating so by 2'm translates octave i by m.
Fig. 5. The (undecimated) discrete wavelet transform. The filters D'f are
obtained from f by inserting 2' - 1 zeros between each pair of filter coef-
ficients. The operation of filtering is understood to mean convolution.
Note that the zeroth element of a series is invariant un-
der decimation so that wf and v3f should coincide at n =
0. Utilizing this fact, we obtain the nth output of the un-
decimated discrete wavelet transform by translating the
signal back by n samples and taking the decimated trans-
form at time zero. More precisely,
Dejnitiun 3. I: Define the undecimated discrete wavelet
transform G in terms of the decimated transform w by
[w'(s@)], P [w'(T-nso)]o.
= w ' (T-, Tm s O)IO
( T m - n so)l0
= [w'(sO)],-,.
We see that the desired invariance is achieved
It is also clear from (3.6) and (3.7) that sampling vV; every
2' points produces exactly wf, that is,
w:, = W i t n .
Next, we show that @ may be computed by the filter
sequence pictured in Fig. 5. The proof is obtained by tak-
ing z transforms. From (3.2) and (3.7)
c fiie-'"" = c c [G(AF)']Om~,+ne-J"W
[G(AF)']omeJm"s,(w).
Applying Lemma 3.2 to (3.10), we have
wi):(w) A C *;e-'nw
f,(2"w)sz(w)
where i = 0 is understood to mean there are no factors of
f,. As described in the next paragraph, this is exactly the
z transform of the algorithm pictured in Fig. 5.
It is eady to see that D'f is f with 2' - 1 zeros inserted
between every pair of filter coefficients and that its z trans-
form is f, (2'w). That is,
(D'f), = fz(2'w).
SHENSA: DISCRETE WAVELET TRANSFORM
Equation (3.11) is then equivalent to
(D'f) * si
*; = (Dig) * si
where so A s. This is essentially the original (undeci-
mated) 2 trous algorithm found in and . However,
we would like to emphasize that, since the development
in this subsection has not made use of any filter con-
straints, the general equivalence of the decimated output
that of Fig. 1 (equations (2.12)) follows for arbitrary fil-
A. An Alternative Implementation
of the algorithm pictured in Fig. 5 (equations (3.14)) and
A second possibility for the implementation of IV is to
use the algorithm in Fig., 1 and proceed directly from
(3.7). That is, to output iO.t',, one simply translates the sig-
nal by n and then computes wb. As an algorithm, this takes
the form a) compute wb; (b) translate the signal by one
sample; (c) go to step (a). Moreover, in view of (3.6),
one need not reperform the entire recursion (,i.e., (2.12))
for every time point n in order to obtain w'. Rather, at
each octave, the decimation is replaced by a split into even
and odd sequences, each of which is a starting point for
the next octave (see Fig. 6). A couple of examples suffice
to convince one that if, at octave i , n mod 2' = 0, then
one takes the upper branch; if n mod 2' = 1, then one
takes the lower branch. A rigorous derivation follows from
the formula (cf. )
T m /2 seven
T(rn - 1)/2~odd
We remark that Figs. 5 and 6 are computationally
equivalent provided that the algorithm in Fig. 5 is imple-
mented efficiently. The code must be written so as to omit
multiplication by the zero elements of filters D'f.
are mostly zeros for i > 2.) Depending on the number of
octaves, the computational burden still remains much
greater than that of the decimated algorithm (i.e., Fig. 1);
however, there is considerable parallelism which may be
sufficiently exploited on suitable hardware to produce a
real-time implementation .
IV. THE DWT AS AN EXACT WAVELET
Regardless of the filters employed, one can, of course,
perform the recursions (2.12) or (2.13) on the sampled
signal s. Moreoever, provided that f (respectively, h) is
low pass and g bandpass, the procedure may be inter-
preted physically as a bank of proportional bandwidth fil-
ters (cf. - also Section VI). In the present section,
we examine the mathematical significance of relaxing the
filter constraints (2.9) and (2.14). Our goal will be to re-
late the more general filter bank to the continuous wavelet
transform, thus, in a sense, justifying the term DWT (cf.
 ). In this endeavor, the major questions which we shall
address are: for what functions $(t) is the recursion (2.12)
Fig. 6. Diagram of an implementation of the undecimated DWT.
an exact implementation of (1.6) and for which $(t) and
s(t) do (1.5) and (1.6) coincide? The general answer is
that we are able to construct such a rc/ provided the dis-
cretized signal lies in the appropriate subspace of (cf.
(2.26)). A somewhat surprising result is that it is neces-
sary and sufficient forfto be a trous for condition (2.26)
to be dropped. Our approach shall be to mimic the con-
struction of orthonormal wavelets outlined in Section II-C.
A. Construction of the Scaling Function 4
ing function 4(t) with Fourier transform
We begin with the stipulation of the existence of a scal-
00 (JIa(,))
wherex(w) = ( f t ) , ( w ) is the z transform offt. To em-
phasize the nonorthogonality of the corresponding wave-
lets, we retain the symbol f rather than h. Note that this
function 4 need not have (and in general does not have)
all of the properties of the orthonormal 4 outlined in Sec-
tion II-C.
For (4.1) to converge to a nonzero function, the factors
must approach one. Thus, f , (0) = 1 , which implies
Even though 4 could be normalized differently by the in-
clusion of a factor in (4.1), the filter f must necessarily
obey the low-pass condition (4.2); i.e., (2.14d). No,te also
that, under the chosen normalization, j +(t) dt = d(0) =
1. However, without spme additional conditions, the re-
lationship of 4(t) to $ ( U ) remains somewhat tenuous.
Even under pointwise convergence, the limit may be a
highly discontinuous , fractal function . Suitable regu-
larity conditions for the inverse Fourier transform of a
product of the form (4.1) to converge to a reasonably be-
haved (e.g., L'(Z?), L2(R), and/or continuous) function
may be found in and . The results are summarized
in Appendix B.
IEEE TRANSACTIONS ON SIGNAL PROCESSING, VOL. 40, NO. IO. OCTOBER 1992
A time domain representation of 4(t) in terms off can
be derived from (4.1). Let x be the indicator function of
[-1/2,1/2)
From (4.1) and Lemma 3.2, it is not difficult to see that
4(t) = lim C [(AF)i]okJ2i~(2it - k).
In fact, the Fourier transform of (4.4) is7
which is just (4.1). Note that the existence of the function
(4.4) could have been taken as the starting point for our
analysis, since our proofs will not make use of (4.1).
We continue our parallel with Section 11-C. Define
4k(t) by definition 4.1, as follows.
Definition 4.1:
Then, substitution of 2't - n for t in (4.4) and the use of
Lemma 3.1 yield
J2'4(2't - n)
= lim C [(AF)']okJ2J+1x(2J+1t - 2'n - k)
= lim C [(AF)'-'I~,~-~,
,,J2'~(2't - k)
[(AF)'-'],kJ2JX(2Jt - k).
On replacing i by -i, this becomes
4h(t) = lim C [(AF)'+'],d2'~(2~t - k).
An immediate consequence of (4.8) is
paralleling (2.22). Thus, we see that, despite their lack of
orthogonality, the 4k(t) have retained most of their struc-
ture. Furthermore, iffis a finite filter, then 4(t) has finite
support . More, precisely, suppose the coefficients of
f are zero
[-A'-, N+]. Let
[(AFJ]okd2jx(2jt - k). Then, qJ(t) converges to 4(t),
and, as in (4.9), we have
equality is immediate from Lemma 3.2 and
(2 sin ( w / ~ ) ) / w .
We find, for example, that qj is zero for t < ti where tj
calculation for the right half interval, it follows that 4(t)
= limj-w qJ(t) is zero outside [-N-, N,].
- (tj- - N-)/2. With to = - 1 /2, and with a similar
B. Exactness
To avoid confusion and stress their differences, let us
first recapitulate some definitons. Four different trans-
forms W(a, b), W(2', 2'n), w(2', 2h), and w; have been
mentioned ((l.l), (1.5), (1.6) and (2.12)). We retain a
terminology parallel to Fourier transforms, namely,
wavelet transform (WT), wavelet series,8 discretized
wavelet series, and discrete wavelet transform (DWT),
respectively. The first two transforms involve integrals of
a continuous signal; the latter two contain sums of sam-
pled signals. The first three utilize a continuous wavelet
function $(t), the last one employs the discrete filters g
and f. For consistency, we shall continue our develop-
ment using decimated transforms; however, the results
hold without change for undecimated transforms. This
follows immediately, since they coincide for n = 0, and
the undecimated transforms may be obtained at time n =
no, by translating the signal by no samples and taking the
transform at n = 0. (See Section I11 where definition 3.1
remains valid for W(2', n) and w(2', n)).
Our starting point shall be a signal s(t) and discrete fil-
tersfandgwith w'definedby (2.12)ord1by(2.13), i.e.,
d'fl - Aw'.
Recall that the matrices F,,
and G,, are given by f, -
and g , -,, respectively. Of course, we must also specify
an initialization of the recursion (4.11) for some i; for
example, for the zeroth octave so. The obvious choice is
however, we shall also consider
which relates to the discretized wavelet series w(2', 2h),
s: A j 4(t - n)s(t) dt
which corresponds to the sampled WT (wavelet series).
For a given g, we shall construct a continuous function
$(t) such that the DWT of (4.11) is an exact implemen-
tation of the discretized wavelet series under (4.12b) and
of the wavelet transform under (4.12~).
Define $(t) by
4(t + k)gk =
4(c? - k ) g i
'At times, we shall prefer the term sampled WT rather than wavelet se-
ries in order to emphasize its role as a restriction of the continuous trans-
SHENSA: DISCRETE WAVELET TRANSFORM
[(AF)'Ink+;(t).
Using this expression, along with (4.6),
the definitions (4.13) and (4.14) yield
z n - k $ ' ; ( r )
= C [G(AF)'InkQ:(t).
If we take (4.12b) as the definition of so, the discretized
wavelet series (1.6) takes the form
w(2, 2%) 2 C J.k(m>s(m>
= C [G (A ~ 1 ' 1 n k Q i (m> s(m)
= [G(A F)'s0],
which, by (4.11) is exactly wk. Furthermore, under
(4.12~) we have (again using (4.15))
W(2', 2'n) 1 T',(t)s(t) dt
= s f; [G(AF)'In,4i(t)s(t) dt
[G(A ~ ' l n k j 4; (t> s(r) dt
= [G(AF)'s0],
again w',.
Finally, let us investigate the significance of the ii trow
condition; i.e., of the constraint (2.9), hk = hkO/J2. We
prove the following theorem.
Theorem 4. I : f is an ii trow filter
4(n) = ana.
Proof: Letting i = -1, n = 0, and t = n in (4.9)
4(n) = C [AF]okJ2 4(2n - k).
4(n) = 6nO * J2hn = 6ao-
Conversely, suppose that f2,, = snO/J2. Then, since
x ( - k ) = Am, (4.8) with i = 0 and t = 0 implies
Q(-n) = lim [(AF)J]noJ2J
= lim C [(AF)J-']nk[AF],J2 J2'-'
= lim [(A F)' - ']n0J2/ - I
- lim [AF],J2
The import of Theorem 4.1 quickly follows. Equation
(4.12b) implies (4.12a) for arbitrary signals if and only if
4(n) = Ana. Thus,
Corollary 4.1:
The algorithm'(4.11) is an exact im-
plementation of the DWT with so set equal to the sampled
signal if and only iff is an
trous filter.
Furthermore, g is also related to $(t) by sampling:
Corollary 4.2: Iff is an ?i
trous filter, then $(t) defined
by (4.13) satisfies $(n) = g:.
Wavelet coefficients of the type d' = Aw' - ' are easily
obtained by replacing $(t) by J 2 $(2t). More precisely,
let $'(t) & d 2 $(2r) = J 2 Ck gk4(2t + k), which coin-
cides with (2.23). Then, provided so satisfies (4.12c),
(4.11) and (4.17) imply
d', = wii'
= s $i;'(t)s(t) dt
= s $;'(t)s(r) dt.
Hence, although the $;'(t) are not orthogonal, the Mallat
algorithm still computes the wavelet transform. Of course,
u n g r (4.12a) and h trous, or for (4.12b), we have d', =
Ck $ A' (k) s(k), the counterpart of (4.16). It is interesting
that, in a sense, the decimated wavelet transforms (1.5b)
and (1.6) contain superfluous information. That is, they
are underdecimated by a factor of two, and, thus, w' prop-
erty belongs to octave i + 1.
C. Summary
Let us summarize the results of this section. We are
given discrete filters f and g such that (4.4) is well de-
fined. Define $(t) by
with corresponding transforms sampled WT (wavelet
40 - k>skt
and discretized wavelet series
w(2', 2%) A c s;i,(k)s(k).
* s stand for the scalar product Ck &(k)sk, and
#,(t) - s(t) for the L2 scalar product j &(t)s(t). Then
f i s ii trous * $(n) = g:.
For s discrete:
so = s andfis i trous 3 w(2', 2%) = wb (4.26a)
s 3 w(2', 2'n) = wi,.
IEEE TRANSACTIONS ON SIGNAL PROCESSING, VOL. 40. NO. IO, OCTOBER 1992
For s(t) mtinuous:
s: = +,(t)
s(t) * W(2', 2'n) = wf.
Ail the above results extend immediately to the undec-
imated transforms, W(2', n), w(2', n), and @: by transla-
tion invariance and definition 3.1. Also, the correspond-
ing properties hold for d' with $(t) replaced by J 2 $(2f).
Note that the orthonormal wavelets are only exact under
(4.26b) or (4.27) since their filters h are not a trous filters.
Furthermore, they do not satisfy (4.25).
V. LAGRANGE
INTERPOLATION
A reasonable class of a trous interpolators to consider
for (2.10) are those which are exact for polynomials P(t)
of degree I M for some M , i.e., for which
The minimum number of coefficients (unknowns)
equals the dimension of the space, i.e., satisfies 2N = M
+ 1 . Thus, the sums in (5.3) go from 1 to N. Moreover,
since for any n, the polynomials Q(x) L P(x - (n - 1)/2)
also form a basis, (5.3) is equivalent to
P ( i ) = k = c
I akP(l - k) + k = C
- I akP(-k)
which must hold for all P(x) of degree 1 2 N - 1.
grange polynomial
We pick out the kth coefficient by letting P be the La-
II ( x - i )
LfN-'(x) =
i , j in [-N + 1, NI.
II ( j - i )
- = C f;-zkP(k).
Then, LfN-'(k) = 1 3 ~ ~ ,
so that replacing P in (5.4) with
L ~ N - ' , we get
aj = L ; ! J ' ( ~ )
forj = 1, -
= L ? N - ' ( ~ >
forj = 1, -
Inasmuch as the Lagrange polynomials L 2 N - ' form a ba-
sis for polynomials of degree less than or equal to 2N -
1, these ak are in fact the unique solution to (5.4).
It is also straiglitforward to see from (5.5) and (5.6) that
a is symmetric, i e., forj > 0
For reasons which will become clear very shortly, we shall
call these filters Lagrange a trous filters. Since the a trous
filter f satisfies f2k = 13,,/J2, (5.1) is an identity for n
even. Let a contain the odd components offt
Then (5.1) is equivalent to
P (f) = kFoakP (F
+ k < O c akP (T
II (1/2 - i )
II (-1/2 + i )
aj = II (-j + 1 - i )
II (-j + i )
II (1/2 - i )
II ( j - i )
for n odd and for all polynomials P of degree I
tually, a single value of n implies (5.3) for all n; see
(5.4).) We proceed to express the ak in terms of Lagrange
In summary, we have the following theorem.
Theorem 5. I : Let f be an a trous filter, i.e.,
polynomials, and to show that the above conditions are
essentially equivalent to f = h * h '/42 where h is an
hk = J2 I30k.
appropriate Daubechies filter.
Assume, furthermore, that f is real with symmetric sup-
A. Construction of a
First, we parameterize the family of filters a satisfying
mials for which it must hold. For such a relationship to
exist, one must relate the length of the filter (the number
port described by k E [-2N + 1, 2N - 11. Then, f is-a
trous filter, that is, (5.1) holds for all poly-
nomials P of degree 1 2 N - 1 , if and only if the odd
components off are determined by (5.6). Furthermore, f
is necessarily symmetric.
+ '' the dimension Of the space Of
of unknowns) to M . To accomplish this, we shall assume
that a has exactly the minimum number of coefficients
needed to satisfy (5.3). We further assume that a has sym-
metric support; i.e., there is an N such that ak = 0 for (kl
> N and ak # 0 for Jkl = N. This assumption is not
unreasonable, at least for symmetric wavelets $(t), since
there is no reason a priori to distinguish between t and
-t, and one would even expect a to be symmetric. We
shall see, in fact, that the weaker condition of symmetric
support joined with the previous constraints implies that
a actually is symmetric.
B. Relationship to Daubechies (QMF) Filters
In , Daubechies constructs essentially the entire class
of finite length filters h which satisfy (2.14) and fulfill
suitable regularity conditions on (2.18). Explicitly, they
take the form
where h(z)
C h , P is the z transforms of h, and Q is
an appropriately constrained polynomial. (In this section
SHENSA: DISCRETE WAVELET TRANSFORM
it is convenient express the z transform as a polynomial
which we denoted 6(z) where h,(w) = h(ejw).) Her deri-
vation uses a specific g, which up to a phase factor is
g, = (-l)%(l - n)
and, as a consequence, (2.14a) reduces to
A h h t D = 1.
In other words, [hh t ] 2 n = A,,,,
which is the B trous con-
dition for hh t/d2. Finally, if Q is taken to be of minimal
degree (which turns out to be N - l), (el2
is unique .
In other words, the squares of these filters are character-
ized completely by satisfying (2.14d), (5.1 l), and being
of the form (5.9) with degree 2N - 1. We proceed to
show that the h * h equal the Lagrange B trous filters.
Let h be the Daubechies filter of order 2N. Since h *
h is symmetric, the above conditions are equivalent to
h * h t = 1 + c bk.Z2k-i + c bkz-2kc'
b(z> = i(i(1 + ~ ) ) ~ ( ; ( 1 + z - ' ) ) N Q ( ~ ) Q ( ~ - ' ) .
That is, J 2 f = h * h if and only if f(z) is of the form
(5.12a), (5.12b) and is of degree 2N - 1 in z (respec-
tively, in z-').
Next, we show that the bk coincide with the ak of (5.3).
We multiply (5.12a) by z n for an arbitrary integer n,
Z " b ( Z ) = Z n + c bkZn-1+2k + c bkZn+i-2k
The 2N zeros at z = - 1 in (5.12b) imply that
where i = 1,
, 2N - 1. The signs work out since n
- 1 + 2k - i and n + 1 + 2k - i have the same parity
while n - i differs. Define Po@) = 1. Then, since the
polynomials PO(x) and Pi (x) for i = 1, -
, 2N - 1 form
a basis for polynomials of degree 1 2 N - 1, and since
(5.14b) implies (5.17) for i = 0, (5.17) must hold for
arbitrary polynomials P(x) of degree 5 2N - 1. Replac-
ing Pi by P in (5.17) and setting ak = bIkl yields (5.3).
Conversely, Theorem 5.1 implies that if a satisfies (5.3)
for all polynomials of degree 1 2 N - 1 and has symmet-
ric support, then it must be symmetric. Clearly (5.17)
must be also be satisfied. From (5.2) and reversing the
above algebra, thisis equivalent to (5.12a) and (5.14) with
J 2 f(z) replacing p (2) where f(z) is of degree of 2N - 1
in z and also in z - ' . Letting n = 1 (or 0) in (5.14a), we
see thatf(z) has 2N roots at z = - 1. Sincefis symmetric,
f(z) must also have the form (5.12b). We conclude that
J 2 f = h * h t where h i s a Daubechies filter. Thus.
Theorem 5.2: There is a one-to-one correspondence be-
tween the squares of Daubechies orthonormal wavelet fil-
ters h of length 2N and the Lagrange B trous filters f of
length 4N - 1 given by f = h * ht/d2.
Note that one can compute the h of length 2N by taking
all possible square roots of the Lagrange a trous filters f.9
f is easily computed from (5.6) where its even compo-
nents given byhk = 6,/.j2,
its odd positive components
by f 2 k - = bk for k = 0 to N, and foraodd negative k by
symmetry. Also, the spectrum off, f(eIw) = Jh(eJw)12,
presents a convenient method of computing the power
spectra of the h's. In another vein, since the h are maxi-
mally flat filters (i.e., have same number of vanishing de-
rivatives at z = l and z = -l), Theorem 5.2 shows that
a maximally flat filter is a Lagrangian interpolator; a fact
which may aid in the design of such filters [ 141.
and since &-1)
= 0, we also have
2 c b k = 1 .
Next, we note that
Define a set of polynomials Pi by
Pi@) 4 2x(2x - 1)
(2x - i + 1).
Finally, setting the ith derivative of the right-hand side
of (5.13) at z = - 1 to zero, utilizing (5.15) and definition
(5.16), we obtain
VI. WAVELET FILTERS IN SIGNAL PROCESSING
This section has its roots in a question which originally
motivated the author to undertake this study: Inasmuch as
the B trous and Mallat algorithms share the same recur-
sions, why not choose the Daubechies filters since they
enjoy the additional advantage of orthonormality? The
strongest arguments in favor of orthonormality seem to be
mathematical elegance, ease of inversion, and, more sub-
tly, good numerical properties. The major drawback is a
lack of flexibility in filter design, in particular, an essen-
tially fixed relative bandwidth. On the other hand, we have
seen that the DWT has a firm analytical basis independent
of the B trous approximation, even in the nonorthonormal
case. In the present section, we shall briefly examine the
issues of inversion, boundedness, and adjustable relative
bandwidth. (Another fundamental issue, regularity of the
associated wavelet functions, appears in Appendix B.) In
P; - = c bkPi or wavelet $(t). This view is in the
spirit of the DWT as an entity in its own right, and it is
certainly a necessary element in deciding which filters to
use in practice.
Any software realization of the wavelet transform only
implements a finite number of octaves. Mathematically,
this reduces inversion to an algebraic question, one of
finding filters which satisfy certain (not overly restrictive)
equations. However, other considerations begin to come
into play. Exact inversion requires finite filters, and, even
then, exceedingly long filters may not be useful. More-
over, the constrained problem is considerably more diffi-
cult to solve. An alternative approach, approximation by
truncated infinite filters, might be acceptable, but, once
again, practical considerations dictate that the filters de-
cay quickly. Similarly, the behavior of the DWT at infin-
ity (i.e., w i
as i goes to infinity) becomes relevant. For
example, the condition C, g, = 0, the discrete counterpart
of (1.2), is not necessary for inversion of a finite number
of stages. However, it is necessary to finite energy and
boundedness, which are desirable properties inasmuch as
they reflect directly on the numerical stability of the al-
gorithm and/or its inverse (see, for example, ).
A. Inversion
To invert either the decimated or undecimated discrete
wavelet transform it suffices to invert a single stage (oc-
tave); that is, to find S I , given S I + '
and wl+' or W"'.
The equations for inverting the decimated algorithm are
exactly analogous to those for the Mallat algorithm pic-
tured in Fig. 4. One seeks two filters p and q which invert
a single stage of the decimated DWT in Fig. 1; i.e., such
S I = PDs'+' + ells1+'
= (PD)(AF)s' + (QD)(AG)s'.
Equivalently,
(PD)(AF) + (QD)(AG) = Z
where Z is the identity matrix. This type of equation,
which in the frequency domain may be separated into two
equations comparable to (2.14a) and (2.14b), has been
treated extensively (but not exhaustively) in the subband
coding literature (cf. , , or even ). The QMF
filters of the Mallat algorithm satisfy (6.2) with g,(w) =
f,(w + T ) , P = f t , and q = g' (i.e., (5.10) and (5.11)).
A less restricted class is just p = f t and q = g'. The
general class of filters satisfying (6.2), so-called bior-
thogonal filters, are examined in and . It should
be emphasized that for perfect reconstruction in applica-
tions all filters must be of finite length (FIR). This does
not imply that infinite filters (IIR) implemented by their
truncations are not worthy of consideration .
For the undecimated algorithm the requirements for in-
Fig. 7 . Illustration of a single stage and its inverse for the undecimated
algorithm found in Fig. 5.
version are much less stringent. In order to invert a stage
of the algorithm of Fig. 6, the filters p and q need only
satisfy (cf. Fig. 7)
SI = p * SI+' + q * W'
= ( p * f + q * g ) * s ' .
p * f + q * g = 6
where the Kronecker delta, 6 A 60,m, is the identity for
convolution. This is a single equation, and consequently
less restrictive th!n
(6.2). If the polynomials formed by
the z-transforms f ( z ) and g(z) are relatively prime, one
may apply the Euclidean algorithm for the greatest com-
mon divisor (in this case, one) to find p and q. It has the
advantage that finitefand g lead to finite p and q. Another
method is simply to solve the equation in frequency space,
Pz(w)fi(w) + qz(w)gz(w) = 1.
There is almost too much flexibility in solving this equa-
tion, although it becomes much more restrictive if one
demands that the filters be finite or rapidly decreasing.
Once again, a popular choice is f , f , + g,g, = 2,
which, for example, can be solved for gz by taking the
square root of 2 - 1 fzI as long as 1 f, (U) l2 I
2. (Or, vice
versa, it can be solved forf,.) The Daubechies (QMF)
filters h/d2 and g/d2 certainly satisfy this equation so
that inversion for the undecimated version of the Mallat
algorithm is immediate. Another case, useful in signal
processing, is to choosefto be h trous, p = ft/2, and g
any filter with nonvanishing spectrum except possibly
where I f,(u)I equals d2 (see next subsection). Important
questions of numerical stability, filter lengths, etc. cer-
tainly remain to be answered, but are well beyond the
scope of the present paper.
Finally, before departing from this subject, it should be
mentioned that inversion of the undecimated case in the
form of Fig. 5 also follows from (6.4). The inverting fil-
ters are just D'p and D'q. It is a simple matter to verify
that (6.4) implies that
(D'p) * (D'f) + (D'q) * (D'g) = 6 .
(Inserting zeros in 6 just yields 6.)
B. Finite Energy and Boundedness
The discrete wavelet transform is a m.apping of se-
quences s,, n = 1,. 2, * *
* into the space of doubly in-
dexed sequences wk, i , n = 1, 2, . * * . Finite energy for
SHENSA: DISCRETE WAVELET TRANSFORM
the signal is simply
c 1s,12 < OQ.
One’s initial tendency is to look for the same condition
on the wavelet transform, i.e., C i , , Iwk12 < OQ. However,
the actual situation is not quite so transparent. Referring
back to the continuous case, we have [ 161
i.e., the weight (measure) da db/a2 results in units of
energy. For the DWT, a = 2’ and db is either 1 (the un-
decimated case) or 2’ (the decimated case). Discretizing
and noting that du/a = d(ln U), we see that
= In 2 ($)
since Ai = 1 . Observing that octave i has a bandwidth,
up to a constant factor, of 1/2’, we assign (6.9) the fol-
lowing physical interpretation: The discrete wavelet
transform is in units of power/hertz. Multiplying by the
bandwidth 1 /2’ gives power, and additional multiplica-
tion by the time interval Ab gives energy. Note that the
decimated version only outputs every 2’ points so that in
that case Ab = 2’. In summary,
(In 2) Ai Ab
i) Iw:I2, I Wh12 are in units of power/hertz;
ii) octave i has bandwidth = 1 /2‘;
iii) I W i 12/2’ and IwL are in units of energy.
One should take care to note that for w;, the energy weight
du db/u2 is a constant independent of i so that IwfI2 is
discretized in a fashion so as to be both power/hertz and
energy /cell.
be the squared norm of s, and define
(1f”(12 & 2 lim sup 5
which corresponds to the DC energy (i.e., at w = 0). Fi-
nally, define the energy of the DWT by
Let 1 1 ~ 1 1 ~ C,
Energy conservation takes the form of the following Par-
seval’s relationship for discrete wavelets:
Dejnition 6.1: A particular choice of filters f and g is
said to be energy conserving if, for some constant C ,
One may also specify conservation for decimated trans-
forms, in which case the 2’ is dropped.
Except for some clarifying remarks at the end, we re-
strict the discussion in the remainder of this subsection to
the undecimated DWT. Following the above definitions,
we see that the wavelet transform will have finite energy
if and only if
c 2 11wq2 + IIf”112 < 00.
This is a necessary condition for the mapping w, from
Z2(Z) to Z2(Z2; 2-’, 1) to be bounded. Of course, in prac-
tice, implementations never compute an infinite number
of octaves. Nevertheless, the property (6.13) of finite en-
ergy can be quite important. Unbounded transformations
tend to have poor numerical behavior even when trun-
cated. Similarly, the inverse will not be bounded unless
the series (6.13) is bounded below. A wavelet represen-
tation which has these properties,
AllsJ12 5 C 2 11
+ I(fm112 I
B \ ( S \ ( ~ (6.14)
is called a frame (cf. , although here the ambient Hil-
bert space is 1’ rather than L2(R).) We proceed to derive
conditions on the filters f and g for (6.14) to hold.
Equations (3.14) imply
Suppose that
(If,(ct1)1~ + I gz(w)12) s 1.
Then, in the time domain, (6.15) and (6.16) imply
Adding 1) @‘-‘~~2/2’-’
to both sides and repeating for de-
creasing octaves implies that
Finally, letting J go to infinity, we get not only (6.13),
but also the right inequality of (6.14) with B = 1 .
However, the condition (6.16) is much too strong. That
is, the transformation g -+ Cg for a large enough constant
C would cause (6.16) to be violated even though C has
no effect other than to multiply the total energy by a con-
stant. In fact, the filters f and g produce finite energy
transforms if and only iff and Cg yield finite energy.
Thus, to have finite energy, it is sufficient to find a C >
0 such that max, (1 fz(w)(2 + C1 gZ(w)l2 I
2. Such a C
exists provided that 1 f, (U)’ I
2 and (1 /2) 1 gZ(w)l2/
(1 - [I /2] 1 f,(w)I2) is finite; i.e., is less than some finite
B = 1 /C. A similar argument holds for the lower bound.
<IfZ(U>l2 + I gz(412) 2 1
IEEE TRANSACTIONS ON SIGNAL PROCESSING, VOL. 40, NO. IO, OCTOBER 1992
then (6.18) holds with the inequality reversed and the left
inequality of (6.14) holds with A = 1 . Once again, we
apply the trick with the constant C and find that, for the
inverse to be bounded, it is sufficient that there exist A =
2 A. In summary,
Theorem 6.1: A sufficient condition for the undeci-
mated DFT IV and its inverse to satisfy (6.14) (that is, to
be bounded) is that, for all U , l f , ( ~ ) ( ~ 5 2 and
1/C > 0 such that (1/2)) gZ(w)l2/(1 - [1/21 If,(w)12)
To satisfy (6.20), one must have If,(w)l = 2
0, and the multiplicities of the corresponding roots must
be identical. Note, also, that (6.20) can be used to give
an estimate of B / A , the so-called tightness of the frame.
Whether these conditions are also necessary remains an
open question. One can, however, show from (3.11) and
an examination of the power IVi(w) at w = 0 that a nec-
essary condition is g, (0) = 0 (equivalently, C, g, = 0).
This is the discrete analog of the admissibility condition
(1.2). The author conjectures that in the discrete case it
is not a sufficient condition. (We remind the reader that
even in those cases for which the DWT is exactly the sam-
pled WT, finite energy of the continuous wavelet trans-
form does not imply that of the discrete transform.) We
do have, however, the following theorem:
Theorem 6.2: A necessary and sufficient condition for
energy conservation (6.12) is that for all w
- ( I f Z ( ~ > l 2 + 2
I gz(w)I2) = 1.
To prove this we may, without loss of generality, set C
= 1 (i.e., redefine g by the constant factor C). Sufficiency
follows as above, with inequalities replaced by equalities.
To prove necessity, we first note that energy preservation
for arbitrary signals implies the energy must be conserved
for each stage. (For example, if the signal is s ', energy
must be preserved, and since it is preserved for so, the
first stage must preserve energy.) From (6.15) this implies
(6.21) with C equal to one.
The decimated case seems to present problems. In or-
der for the above proofs to carry over, the even part of
the signal would need to compensate for the lack of the
factor 1/2' in (6.11b), but I ~ s ~ , ~ . , I ~ ~
# l/2l~si1~*.
problem presents yet another area for additional research.
C. Resolution and Relative Bandwidth
Considerable insight may be gained by viewing the al-
gorithm in the frequency domain. One stage of the deci-
mated DWT, illustrating (4.11) from this point of view,
is pictured in Fig. 8. Since we are dealing with the dis-
crete wavelet transforms, $(z) = $(ej") is evaluated on the
unit circle. For convenience only the positive frequencies
are pictured. Briefly, the algorithm is
a) Bandpass filter the upper half of the spectrum to
yield w ' .
b) Low-pass filter to obtain the lower half of the spec-
c) Decimate to expand the lower half to [0, n].
d) Go to a).
In somewhat more detail: We first obtain the high fre-
quency information by using g to filter the upper half of
the spectrum of s'. The filter output is w ' . Then, in prep-
aration for the next octave, s' is low-pass filtered by f.
This retains the, as yet unexamined, low frequency con-
tents and also prevents the upper half of the spectrum from
aliasing (i.e., contaminating the low frequency contents)
in the dilation which follows. Finally, the operator A
spreads" the remaining energy to fill the spectrum, pro-
ducing octave i + 1 . The procedure then repeats itself,
is bandpass filtered to get the spectral contents at
frequencies which are, in absolute units, one half the fre-
quencies of the previous octave.
A potential problem is immediately apparent. If the
bandwidth of gz(w) is less than ~ / 2 ,
a portion of the sig-
nal energy will be discarded; it never appears in w ' . One
possible remedy is to make g, sufficiently broad; how-
ever, that would limit the resolution. Alternatively, we
may introduce so-called voices. That is, we can employ
a bank of filters of the type g (see Fig. 9) in order to cover
the entire upper half of the spectrum.
We formalize some of these concepts using the modu-
lated Gaussian of (1.4) as an example. With the introduc-
tion of an additional parameter P, +(t) becomes
A e jvt e - - p 2 t 2 / 2 .
trum (10, 7T/21).
Its Fourier transform is given by
We define the bandwidth of $(U) as twice the interval
between points for which the modulus of (6.23) drops to
1 / e of its peak value, i.e.,
BW A 2d2 P.
The filter g (which, here, equals g t ) is the sampled ver-
" - e J ~ n e - 8 2 n 2 / 2 .
For convenience, we set the sample rate equal to one. The
following three restrictions on v and 0 are necessary: First,
in order that gz(w) lie in the upper half of the spectrum
(cf. Fig. 8), we require that
sion of (6.22), that is,
Next, in order that +(t) is admissible and analytic (see
 ), we demand
"A, which decimates, is a contraction. Thus, in the Fourier domain, it
is a dilation.
SHENSA: DISCRETE WAVELET TRANSFORM
Fig. 8. Illustration of one stage of the algorithm, octaves i and i + 1 inclusive, viewed from the frequency domain.
g, considered as a filter on octave i is v/2', and its band-
width is 2 J 2 p/2'. For this reason it is simpler and less
ambiguous to speak in terms of a relative bandwidth which
is independent of decimation. More precisely, we define
mean frequency '
(Any appropriate representative of the "center"
filter can replace the mean frequency in (6.28).) In the
case of g, we have
(2 J 2 p/27
Also, since n/2 5 v 5 n, we have 2 d 2 p/a 5 RBW
4 d 2 p/?r, or approximately
Fig 9 Plot of the power spectra of the bandpass filters for four voices
where $(U) is given by (6 23)
Under (6.26b), g,(w) - 0 for w I
0. (Reference 
recommends 0 I
v/5 as being sufficient.) Finally, in or-
der that the spectrum not be aliased, we set
In view of (6.30), we shall consider the parameter @ as,
essentially, the relative bandwidth of g.
T - J 2 p .
The number of voices M which we would expect to need
to cover the upper half of the spectrum is
These may be summarized in
max (2nP, n/2) I
v 5 ?r - J2 6.
is determined
At this point a word of caution is advised. The band-
width ofthe discrete filter g (e.g., (6.25)) is 2 J2 p only
when the sample rate is 1. Since the ith octave is the re-
sult of i decimations by 2, sampling the original signal so
at a rate A r = 1 results in a Nyquist frequency of n/2'
for octave i (i.e., for si). Thus, the central frequency of
The filter for voicej, which we denote
by sampling the function $ seems to be
a more natural definition since it maintains the affine
structure. (It is equivalent to taking a nondyadic value for
the dilation parameter U in (1. l).) Note that the band-
widths of the voices decrease with j , and the spectral
spacing 2 d 2 p /CY' differs somewhat from that assumed in
Control over the relative resolution is important be-
cause, although the absolute resolution (,0/2') improves
at higher octaves, at the same time, the analysis frequency
decreases. If one wishes to improve resolution at a given
frequency, one has to better the relative resolution, i.e.,
decrease 0. On the other hand, the standard tradeoffs ap-
ply to choosing p. Small
increases the relative resolu-
tion but also requires more voices and a longer filter g;
thus, more computation. (The duration of $(t) is on the
order of 2J2/p so that to provide a reasonable approxi-
mation to (6.22), the length of g must be proportional to
1 /p.) Moreover, the increased length of g implies a wors-
ening of the (relative) time resolution. The time-band-
width product is bounded below by the uncertainty prin-
ciple, and no amount of computation will simultaneously
produce arbitrarily small time and frequency resolution in
a single wavelet transform.
With respect to choosing the low-pass filterf, we note
that the spectrum of a longer filter f will generally have a
sharper cutoff. This cutoff is relevant because it prevents
the energy in the upper half of the spectrum from leaking
(aliasing) into the lower half under the decimation A. For
most applications, a Lagrange B trous filter of length 7 (N
= 2) is sufficient . One can, of course, also use the
asymmetric filters h. Their discrimination of temporal di-
rection seems intriguing, but remains univestigated.
Finally, how do the above considerations relate to or-
thonormal wavelets? The power spectra of filters h and g
obeying (2.14) satisfy , 
lh,(412 + I g,(4l2 = 2
I h m l = I gz(&7r)l = .j2.
It follows that, for positive frequencies (likewise, for neg-
ative frequencies), g and h must each maintain a band-
width on the order of 7r/2.11 Thus, in exchange for or-
thonormality one relinquishes control over bandwidth.
The relative
is, essentially,
(n/2)/(37r/4) = 2/3. On the other hand, if one wishes
to give time and frequency localization equal weight (e.g.,
= 1 SO that bandwidth = duration = 2d2), a relative
bandwidth in the neighborhood of 2/3 is in a sense opti-
"For the orthonormal wavelets of compact support, the larger the value
of N , the more rapid the asymptotic convergence of $(U) to zero; i.e., as
w + m . This hints at a smaller bandwidth for $ and, hence, also for g,
for large N . However, the speed at which the $(w) fall off near w = 0
appears to be fairly insensitive to N .
VII. CONCLUSION
We have seen that the B trous algorithm bears an inti-
mate relationship to Mallat's multiresolution algorithm.
Originally devised as a computationally efficient imple-
mentation, it is more properly viewed as a nonorthogonal
multiresolution algorithm for which the discrete wavelet
transform is exact. Moreover, the commonly used La-
grange B trow filters are simply the convolutional squares
of the Daubechies filters for compact orthonormal wave-
From a broader viewpoint, these two algorithms are in-
stances of the discrete wavelet transform (DWT), which,
in more conventional terms, is simply a filter bank utiliz-
ing decimation and two filters. There are two basic ver-
sions of the DWT one of which is simply the decimated
output (octave i is decimated by 2') of the other. The
decimated DWT is characterized by octaves a) obtained
by alternating a low-pass filter f with decimation, and b)
tapped by a bandpass filter g to produce the output. The
undecimated DWT inserts i zeros between the elements
of the filters at octave i in lieu of decimation. (In the case
of voices, several g's are used.) Finally, we note that un-
der very general conditions, there exists a function $(t)
such that the filter bank outputs wi correspond to the sam-
pled wavelet transform
thus, justifying the terminology discrete wavelet trans-
The personality of a given DWT is distinguished by the
choice of filters. Iff satisfies the B trous condition f2n =
hnO/J2, then g is the sampled version of $(t); i.e., g, =
$ ( - n). If finite length f and g obey the constraints of the
multiresolution algorithm, then the J2' $(2't - n) are the
compact orthonormal wavelets. A number of fundamental
constraints have been discussed. In various combinations
they have a bearing on the regularity of the wavelet func-
tion, on the energy in the transform domain, and on the
boundedness and invertibility of the transform. In partic-
ular, we have provided a set of conditions on the filters
sufficient for the transform and its inverse to be bounded.
The signal processing properties of the discrete wavelet
transform depend particularly strongly on the choice of g.
The general constraints mentioned above are not restric-
tive on g; however, there is considerably less freedom in
the orthonormal case. In particular, if orthonormality is a
requirement, the half bandwidth of g (and, hence, the rel-
ative bandwidth of the wavelet) is no longer adjustable.
It remains fixed at approximately 7r/2.
Many topics remain for investigation. Although con-
siderable work has been done in finding filter pairs which
have a complementary set for the inverse transform ([ 81,
 , ), it is far from exhaustive. The equivalence of
maximally flat filters (with equal order roots at 0 and T)
with Lagrange B trous filters as a design tool is perhaps
worthy of investigation. Many of our filter conditions on
energy are sufficient but possibly not necessary; a tight
SHENSA: DISCRETE WAVELET TRANSFORM
set of necessary and sufficient conditions for boundedness
would be desirable. Finally, an investigation into the
quality of the approximation of the DWT to the sampled
WT in the case where it is not exact could be fruitful. It
would perhaps lend more insight into the role of the reg-
ularity of the wavelet function in particular applications.
APPENDIX A
OF LEMMAS 3.1 AND 3.2
Lemma 3.1:
[(A F)']nk = [(AF)'1O,k - 21n.
Proof: For i = 1, we have
[AFIrrk = h n - k = [ A F 1 0 . k - 2 n .
respectively. Also,
w:, = IT&.
In essentially all applications f is a low-pass filter and g
is high-pass. This rather vague qualification is quantified
That is, in addition to the above definitions, it is ex-
pedient to impose auxiliary conditions on the filters to en-
sure a) that the DWT is related to some WT with a rea-
sonably behaved scale function 4(t); b) that the transform
have finite energy and be a bounded transformation; and,
often, c) that it be invertible. The algebraic conditions for
invertibility are found in (6.2) and (6.4). At the time of
this paper no single set of necessary and sufficient con-
ditions exist for the satisfaction of a) and b). Indeed, the
Then, by induction,
t(AF)'Iflk =
Lemma 3.2:
definition of "reasonable behavior" of the scale function
ultimately depends on the application. In an attempt to
provide some degree of organization, we first list the can-
didate constraints, loosely labeled as low-pass, high-pass,
or energy conditions. We then summarize their conse-
quences. If either of the filters is infinite it is assumed to
satisfy the decay condition , 
f 2 n --m [(AF)' - 'lmk
h n -m [(AF)'
- ' 1 0 , k - 2 ' - Im
f - m [(A F)' - '10,k -21- lm -2ln
3 E such that c Ifn[ n e < 00.
C j - m t (A F - ' ~ m ,
[(A F)'lO,k - 2'n.
1. Candidate Constraints
i) Low pass
c f, = J 2
c [(hF)'],kejkW = eJ2lnW
(i.e., (1/2)fz(0) = 1).
Proof: For i = 1, we have
ii) Energy
k [AF],eJk" = Cf2fl-keikw
;lL(412 5 1.
= eJ2""f,(w).
iii) Low pass
Then, by induction,
= (1 + e'w>Nr(4
k [(AF)'lnkeJkw
k [(AF)]flkeJk(2'-'w)
r = O f,(2'W).
where ly(w)l 5 C < 1/2 ((B.7) implies thatf,(a) = 0).
iv) Energy: complementary low-padhigh-pass pair
Equation (B. 8) implies
a) high pass
APPENDIX B
OF FILTER CONSTRAINTS
The discrete wavelet transform 19' and the decimated
discrete wavelet transform w' (or d') are defined for ar-
bitrary filters f and g by
s l + l = (D'f) * s f
I9' = (D'g) * s f
(i.e. 9 g z (0) = 0)
b) low padhigh pass
;If,(@l = 1 =$ sz(4 = 0
- A(f * si)
gz(o) = 0 * ;[fi(o)l = 1.
w' = g * S I
d i + t g Awi
+ Clgz(4l2) = 1.
IEEE TRANSACTIONS ON SIGNAL PROCESSING. VOL. 40, NO. IO. OCTOBER 1992
2. Implications
Necessity for pointwise convergence of (4.1) to $(U):
Sufficiency for (4.1) and (4.4) to :onverge in L’(R),
and L2(R) to continuous 4(t) and +(U), respectively:
(B.5)-(B.7). This is one of the central results of , which
also includes an examination of the decay of 4(t) and other
regularity properties. Note that an important class of
wavelets which does not fall under the domain of this
theorem is the Haar wavelets (2.28a). Pointwise conver-
gence still holds for the Haar wavelets, but they are not
continuous.
Necessity for finite energy: (B .9).
Sufficiency for finite energy and that the transformation
be bounded: (B.6) and B < 03 in (B.8).
Sufficiency for a bounded inverse: (B.6) and A > 0 in
Necessity and sufficiency for energy conservation:
ACKNOWLEDGMENT
The author would especially like to thank D. K. Le for
his meticulous reading of the manuscript and penetrating
remarks. He is also grateful to D. Stein for several stim-
ulating discussions. Finally, he thanks an anonymous re-
viewer for greatly simplifying the proof of Theorem 5.2.