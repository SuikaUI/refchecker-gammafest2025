Real-world Anomaly Detection in Surveillance Videos
Waqas Sultani1, Chen Chen2, Mubarak Shah2
1Department of Computer Science, Information Technology University, Pakistan
2Center for Research in Computer Vision (CRCV), University of Central Florida (UCF)
 , , 
Surveillance videos are able to capture a variety of realistic anomalies. In this paper, we propose to learn anomalies by exploiting both normal and anomalous videos. To
avoid annotating the anomalous segments or clips in training videos, which is very time consuming, we propose to
learn anomaly through the deep multiple instance ranking
framework by leveraging weakly labeled training videos,
i.e. the training labels (anomalous or normal) are at videolevel instead of clip-level. In our approach, we consider
normal and anomalous videos as bags and video segments
as instances in multiple instance learning (MIL), and automatically learn a deep anomaly ranking model that predicts
high anomaly scores for anomalous video segments. Furthermore, we introduce sparsity and temporal smoothness
constraints in the ranking loss function to better localize
anomaly during training.
We also introduce a new large-scale ﬁrst of its kind
dataset of 128 hours of videos. It consists of 1900 long
and untrimmed real-world surveillance videos, with 13 realistic anomalies such as ﬁghting, road accident, burglary,
robbery, etc.
as well as normal activities.
This dataset
can be used for two tasks.
First, general anomaly detection considering all anomalies in one group and all
normal activities in another group.
Second, for recognizing each of 13 anomalous activities. Our experimental results show that our MIL method for anomaly detection achieves signiﬁcant improvement on anomaly detection performance as compared to the state-of-the-art approaches.
We provide the results of several recent deep
learning baselines on anomalous activity recognition. The
low recognition performance of these baselines reveals
that our dataset is very challenging and opens more opportunities for future work.
The dataset is available at:
 
1. Introduction
Surveillance cameras are increasingly being used in public places e.g. streets, intersections, banks, shopping malls,
etc. to increase public safety. However, the monitoring capability of law enforcement agencies has not kept pace. The
result is that there is a glaring deﬁciency in the utilization of
surveillance cameras and an unworkable ratio of cameras to
human monitors. One critical task in video surveillance is
detecting anomalous events such as trafﬁc accidents, crimes
or illegal activities. Generally, anomalous events rarely occur as compared to normal activities. Therefore, to alleviate the waste of labor and time, developing intelligent computer vision algorithms for automatic video anomaly detection is a pressing need. The goal of a practical anomaly
detection system is to timely signal an activity that deviates
normal patterns and identify the time window of the occurring anomaly. Therefore, anomaly detection can be considered as coarse level video understanding, which ﬁlters out
anomalies from normal patterns. Once an anomaly is detected, it can further be categorized into one of the speciﬁc
activities using classiﬁcation techniques.
A small step towards addressing anomaly detection is to
develop algorithms to detect a speciﬁc anomalous event, for
example violence detector and trafﬁc accident detector
 . However, it is obvious that such solutions cannot
be generalized to detect other anomalous events, therefore
they render a limited use in practice.
Real-world anomalous events are complicated and diverse. It is difﬁcult to list all of the possible anomalous
events. Therefore, it is desirable that the anomaly detection algorithm does not rely on any prior information about
the events. In other words, anomaly detection should be
done with minimum supervision. Sparse-coding based approaches are considered as representative methods that achieve state-of-the-art anomaly detection results.
These methods assume that only a small initial portion of a
video contains normal events, and therefore the initial portion is used to build the normal event dictionary. Then, the
main idea for anomaly detection is that anomalous events
are not accurately reconstructable from the normal event
 
dictionary.
However, since the environment captured by
surveillance cameras can change drastically over the time
(e.g. at different times of a day), these approaches produce
high false alarm rates for different normal behaviors.
Motivation and contributions.
Although the abovementioned approaches are appealing, they are based on
the assumption that any pattern that deviates from the
learned normal patterns would be considered as an anomaly.
However, this assumption may not hold true because it is
very difﬁcult or impossible to deﬁne a normal event which
takes all possible normal patterns/behaviors into account
 . More importantly, the boundary between normal and
anomalous behaviors is often ambiguous. In addition, under realistic conditions, the same behavior could be a normal or an anomalous behavior under different conditions.
Therefore, it is argued that the training data of normal and
anomalous events can help an anomaly detection system
learn better. In this paper, we propose an anomaly detection
algorithm using weakly labeled training videos. That is we
only know the video-level labels, i.e. a video is normal or
contains anomaly somewhere, but we do not know where.
This is intriguing because we can easily annotate a large
number of videos by only assigning video-level labels. To
formulate a weakly-supervised learning approach, we resort
to multiple instance learning (MIL) . Speciﬁcally, we
propose to learn anomaly through a deep MIL framework
by treating normal and anomalous surveillance videos as
bags and short segments/clips of each video as instances in
a bag. Based on training videos, we automatically learn an
anomaly ranking model that predicts high anomaly scores
for anomalous segments in a video. During testing, a longuntrimmed video is divided into segments and fed into our
deep network which assigns anomaly score for each video
segment such that an anomaly can be detected. In summary,
this paper makes the following contributions.
• We propose a MIL solution to anomaly detection by
leveraging only weakly labeled training videos. We propose a MIL ranking loss with sparsity and smoothness constraints for a deep learning network to learn anomaly scores
for video segments. To the best of our knowledge, we are
the ﬁrst to formulate the video anomaly detection problem
in the context of MIL.
• We introduce a large-scale video anomaly detection
dataset consisting of 1900 real-world surveillance videos
of 13 different anomalous events and normal activities captured by surveillance cameras. It is by far the largest dataset
with more than 15 times videos than existing anomaly
datasets and has a total of 128 hours of videos.
• Experimental results on our new dataset show that our
proposed method achieves superior performance as compared to the state-of-the-art anomaly detection approaches.
• Our dataset also serves a challenging benchmark for
activity recognition on untrimmed videos due to the complexity of activities and large intra-class variations. We provide results of baseline methods, C3D and TCNN ,
on recognizing 13 different anomalous activities.
2. Related Work
Anomaly detection. Anomaly detection is one of the
most challenging and long standing problems in computer
vision . For
video surveillance applications, there are several attempts
to detect violence or aggression in videos.
Datta et al. proposed to detect human violence by exploiting motion and limbs orientation of people. Kooij et al. 
employed video and audio data to detect aggressive actions
in surveillance videos. Gao et al. proposed violent ﬂow descriptors to detect violence in crowd videos. More recently,
Mohammadi et al. proposed a new behavior heuristic
based approach to classify violent and non-violent videos.
Beyond violent and non-violent patterns discrimination,
authors in proposed to use tracking to model the normal motion of people and detect deviation from that normal
motion as an anomaly. Due to difﬁculties in obtaining reliable tracks, several approaches avoid tracking and learn
global motion patterns through histogram-based methods
 , topic modeling , motion patterns , social force
models , mixtures of dynamic textures model , Hidden Markov Model (HMM) on local spatio-temporal volumes , and context-driven method . Given the training videos of normal behaviors, these approaches learn distributions of normal motion patterns and detect low probable patterns as anomalies.
Following the success of sparse representation and dictionary learning approaches in several computer vision
problems, researchers in used sparse representation
to learn the dictionary of normal behaviors. During testing,
the patterns which have large reconstruction errors are considered as anomalous behaviors. Due to successful demonstration of deep learning for image classiﬁcation, several approaches have been proposed for video action classiﬁcation
 . However, obtaining annotations for training is dif-
ﬁcult and laborious, speciﬁcally for videos.
Recently, used deep learning based autoencoders to learn the model of normal behaviors and employed reconstruction loss to detect anomalies.
Our approach not only considers normal behaviors but also anomalous behaviors for anomaly detection, using only weakly labeled training data.
Ranking. Learning to rank is an active research area
in machine learning. These approaches mainly focused on
improving relative scores of the items instead of individual scores.
Joachims et al. presented rank-SVM to
improve retrieval quality of search engines. Bergeron et
al. proposed an algorithm for solving multiple instance
ranking problems using successive linear programming and
demonstrated its application in hydrogen abstraction problem in computational chemistry. Recently, deep ranking
networks have been used in several computer vision applications and have shown state-of-the-art performances. They
have been used for feature learning , highlight detection
 , Graphics Interchange Format (GIF) generation ,
face detection and veriﬁcation , person re-identiﬁcation
 , place recognition , metric learning and image retrieval . All deep ranking methods require a vast amount
of annotations of positive and negative samples.
In contrast to the existing methods, we formulate
anomaly detection as a regression problem in the ranking
framework by utilizing normal and anomalous data. To alleviate the difﬁculty of obtaining precise segment-level labels
(i.e. temporal annotations of the anomalous parts in videos)
for training, we leverage multiple instance learning which
relies on weakly labeled data (i.e. video-level labels – normal or abnormal, which are much easier to obtain than temporal annotations) to learn the anomaly model and detect
video segment level anomaly during testing.
3. Proposed Anomaly Detection Method
The proposed approach (summarized in Figure 1) begins
with dividing surveillance videos into a ﬁxed number of
segments during training. These segments make instances
Using both positive (anomalous) and negative
(normal) bags, we train the anomaly detection model using
the proposed deep MIL ranking loss.
3.1. Multiple Instance Learning
In standard supervised classiﬁcation problems using support vector machine, the labels of all positive and negative
examples are available and the classiﬁer is learned using the
following optimization function:
max(0, 1 −yi(w.φ(x) −b))
where 1⃝is the hinge loss, yi represents the label of each
example, φ(x) denotes feature representation of an image
patch or a video segment, b is a bias, k is the total number
of training examples and w is the classiﬁer to be learned. To
learn a robust classiﬁer, accurate annotations of positive and
negative examples are needed. In the context of supervised
anomaly detection, a classiﬁer needs temporal annotations
of each segment in videos. However, obtaining temporal
annotations for videos is time consuming and laborious.
MIL relaxes the assumption of having these accurate
temporal annotations. In MIL, precise temporal locations
of anomalous events in videos are unknown. Instead, only
video-level labels indicating the presence of an anomaly in
the whole video is needed. A video containing anomalies
is labeled as positive and a video without any anomaly is
labeled as negative. Then, we represent a positive video as
a positive bag Ba, where different temporal segments make
individual instances in the bag, (p1, p2, . . . , pm), where m
is the number of instances in the bag. We assume that at
least one of these instances contains the anomaly.
Similarly, the negative video is denoted by a negative bag,
Bn, where temporal segments in this bag form negative
instances (n1, n2, . . . , nm). In the negative bag, none of
the instances contain an anomaly. Since the exact information (i.e. instance-level label) of the positive instances is unknown, one can optimize the objective function with respect
to the maximum scored instance in each bag :
max(0, 1−YBj(max
i∈Bj(w.φ(xi))−b))
+∥w∥2 , (2)
where YBj denotes bag-level label, z is the total number of
bags, and all the other variables are the same as in Eq. 1.
3.2. Deep MIL Ranking Model
Anomalous behavior is difﬁcult to deﬁne accurately ,
since it is quite subjective and can vary largely from person to person. Further, it is not obvious how to assign 1/0
labels to anomalies. Moreover, due to the unavailability of
sufﬁcient examples of anomaly, anomaly detection is usually treated as low likelihood pattern detection instead of
classiﬁcation problem .
In our proposed approach, we pose anomaly detection
as a regression problem.
We want the anomalous video
segments to have higher anomaly scores than the normal
segments. The straightforward approach would be to use a
ranking loss which encourages high scores for anomalous
video segments as compared to normal segments, such as:
f(Va) > f(Vn),
where Va and Vn represent anomalous and normal video
segments, f(Va) and f(Vn) represent the corresponding
predicted scores, respectively.
The above ranking function should work well if the segment-level annotations are
known during training.
However, in the absence of video segment level annotations, it is not possible to use Eq. 3. Instead, we propose the
following multiple instance ranking objective function:
where max is taken over all video segments in each bag. Instead of enforcing ranking on every instance of the bag, we
enforce ranking only on the two instances having the highest anomaly score respectively in the positive and negative
bags. The segment corresponding to the highest anomaly
score in the positive bag is most likely to be the true positive
Instance scores in positive bag
MIL Ranking Loss with sparsity
and smoothness constraints
Anomaly video
Normal video
temporal segments
Positive bag
Negative bag
temporal segments
Bag instance (video segment)
pre-trained 3D ConvNet
C3D feature extraction
for each video segment
(anomaly score)
Instance scores in negative bag
Dropout 60%
Dropout 60%
Dropout 60%
Figure 1. The ﬂow diagram of the proposed anomaly detection approach. Given the positive (containing anomaly somewhere) and negative
(containing no anomaly) videos, we divide each of them into multiple temporal video segments. Then, each video is represented as a
bag and each temporal segment represents an instance in the bag. After extracting C3D features for video segments, we train a fully
connected neural network by utilizing a novel ranking loss function which computes the ranking loss between the highest scored instances
(shown in red) in the positive bag and the negative bag.
instance (anomalous segment). The segment corresponding
to the highest anomaly score in the negative bag is the one
looks most similar to an anomalous segment but actually is
a normal instance. This negative instance is considered as a
hard instance which may generate a false alarm in anomaly
detection. By using Eq. 4, we want to push the positive instances and negative instances far apart in terms of anomaly
score. Our ranking loss in the hinge-loss formulation is
therefore given as follows:
l(Ba, Bn) = max(0, 1 −max
One limitation of the above loss is that it ignores the underlying temporal structure of the anomalous video. First, in
real-world scenarios, anomaly often occurs only for a short
time. In this case, the scores of the instances (segments)
in the anomalous bag should be sparse, indicating only a
few segments may contain the anomaly. Second, since the
video is a sequence of segments, the anomaly score should
vary smoothly between video segments. Therefore, we enforce temporal smoothness between anomaly scores of temporally adjacent video segments by minimizing the difference of scores for adjacent video segments. By incorporating the sparsity and smoothness constraints on the instance
scores, the loss function becomes
l(Ba, Bn) = max(0, 1 −max
a) −f(Vi+1
where 1⃝indicates the temporal smoothness term and 2⃝
represents the sparsity term. In this MIL ranking loss, the
error is back-propagated from the maximum scored video
segments in both positive and negative bags. By training on
a large number of positive and negative bags, we expect that
the network will learn a generalized model to predict high
scores for anomalous segments in positive bags (see Figure
8). Finally, our complete objective function is given by
L(W) = l(Ba, Bn) + ∥W∥F ,
where W represents model weights.
Bags Formations. We divide each video into the equal
number of non-overlapping temporal segments and use
these video segments as bag instances. Given each video
segment, we extract the 3D convolution features . We
use this feature representation due to its computational ef-
ﬁciency, the evident capability of capturing appearance and
motion dynamics in video action recognition.
4. Dataset
4.1. Previous datasets
We brieﬂy review the existing video anomaly detection
datasets. The UMN dataset consists of ﬁve different
staged videos where people walk around and after some
time start running in different directions. The anomaly is
characterized by only running action.
UCSD Ped1 and
Ped2 datasets contain 70 and 28 surveillance videos,
respectively. Those videos are captured at only one location. The anomalies in the videos are simple and do not
reﬂect realistic anomalies in video surveillance, e.g. people
walking across a walkway, non pedestrian entities (skater,
biker and wheelchair) in the walkways. Avenue dataset 
consists of 37 videos. Although it contains more anomalies, they are staged and captured at one location. Similar to
 , videos in this dataset are short and some of the anomalies are unrealistic (e.g. throwing paper). Subway Exit and
Subway Entrance datasets contain one long surveillance video each. The two videos capture simple anomalies such as walking in the wrong direction and skipping
payment. BOSS dataset is collected from a surveillance
camera mounted in a train. It contains anomalies such as
harassment, person with a disease, panic situation, as well
as normal videos. All anomalies are performed by actors.
Overall, the previous datasets for video anomaly detection
are small in terms of the number of videos or the length of
the video. Variations in abnormalities are also limited. In
addition, some anomalies are not realistic.
4.2. Our dataset
Due to the limitations of previous datasets, we construct
a new large-scale dataset to evaluate our method. It consists
of long untrimmed surveillance videos which cover 13 realworld anomalies, including Abuse, Arrest, Arson, Assault,
Accident, Burglary, Explosion, Fighting, Robbery, Shooting, Stealing, Shoplifting, and Vandalism. These anomalies
are selected because they have a signiﬁcant impact on public safety. We compare our dataset with previous anomaly
detection datasets in Table 1.
Video collection. To ensure the quality of our dataset,
we train ten annotators (having different levels of computer
vision expertise) to collect the dataset. We search videos
on YouTube1 and LiveLeak2 using text search queries (with
slight variations e.g. “car crash”, “road accident”) of each
anomaly. In order to retrieve as many videos as possible,
we also use text queries in different languages (e.g. French,
Russian, Chinese, etc.) for each anomaly, thanks to Google
translator. We remove videos which fall into any of the following conditions: manually edited, prank videos, not captured by CCTV cameras, taking from news, captured using
a hand-held camera, and containing compilation. We also
discard videos in which the anomaly is not clear. With the
above video pruning constraints, 950 unedited real-world
surveillance videos with clear anomalies are collected. Using the same constraints, 950 normal videos are gathered,
leading to a total of 1900 videos in our dataset. In Figure 2, we show four frames of an example video from each
Annotation. For our anomaly detection method, only
video-level labels are required for training. However, in order to evaluate its performance on testing videos, we need
to know the temporal annotations, i.e. the start and ending
frames of the anomalous event in each testing anomalous
video. To this end, we assign the same videos to multiple annotators to label the temporal extent of each anomaly.
The ﬁnal temporal annotations are obtained by averaging
annotations of different annotators. The complete dataset is
ﬁnalized after intense efforts of several months.
1 
2 
Training and testing sets. We divide our dataset into
two parts: the training set consisting of 800 normal and 810
anomalous videos (details shown in Table 2) and the testing
set including the remaining 150 normal and 140 anomalous
videos. Both training and testing sets contain all 13 anomalies at various temporal locations in the videos. Furthermore, some of the videos have multiple anomalies. The distribution of the training videos in terms of length (in minute)
is shown in Figures 3. The number of frames and percentage of anomaly in each testing video are presented in Figures 4 and 5, respectively.
5. Experiments
5.1. Implementation Details
We extract visual features from the fully connected (FC)
layer FC6 of the C3D network . Before computing features, we re-size each video frame to 240 × 320 pixels and
ﬁx the frame rate to 30 fps. We compute C3D features for
every 16-frame video clip followed by l2 normalization. To
obtain features for a video segment, we take the average
of all 16-frame clip features within that segment. We input these features (4096D) to a 3-layer FC neural network.
The ﬁrst FC layer has 512 units followed by 32 units and
1 unit FC layers. 60% dropout regularization is used
between FC layers. We experiment with deeper networks
but do not observe better detection accuracy. We use ReLU
 activation and Sigmoid activation for the ﬁrst and the
last FC layers respectively, and employ Adagrad optimizer with the initial learning rate of 0.001. The parameters
of sparsity and smoothness constraints in the MIL ranking
loss are set to λ1=λ2 = 8 × 10−5 for the best performance.
We divide each video into 32 non-overlapping segments
and consider each video segment as an instance of the bag.
The number of segments (32) is empirically set. We also experimented with multi-scale overlapping temporal segments
but it does not affect detection accuracy. We randomly select 30 positive and 30 negative bags as a mini-batch. We
compute gradients by reverse mode automatic differentiation on computation graph using Theano . Speciﬁcally,
we identify set of variables on which loss depends, compute
gradient for each variable and obtain ﬁnal gradient through
chain rule on the computation graph. Each video passes
through the network and we get the score for each of its temporal segments. Then we compute loss as shown in Eq. 6
and Eq. 7 and back-propagate the loss for the whole batch.
Evaluation Metric.
Following previous works on
anomaly detection , we use frame based receiver operating characteristic (ROC) curve and corresponding area
under the curve (AUC) to evaluate the performance of our
method. We do not use equal error rate (EER) as it
does not measure anomaly correctly, speciﬁcally if only a
small portion of a long video contains anomalous behavior.
# of videos
Average frames
Dataset length
Example anomalies
UCSD Ped1 
Bikers, small carts, walking across walkways
UCSD Ped2 
Bikers, small carts, walking across walkways
Subway Entrance 
Wrong direction, No payment
Subwa Exit 
Wrong direction, No payment
Avenue 
Run, throw, new object
Harass, Disease, Panic
Abuse, arrest, arson, assault, accident, burglary, ﬁghting, robbery
Table 1. A comparison of anomaly datasets. Our dataset contains larger number of longer surveillance videos with more realistic anomalies.
Shoplifting
Figure 2. Examples of different anomalies from the training and testing videos in our dataset.
5.2. Comparison with the State-of-the-art
We compare our method with two state-of-the-art approaches for anomaly detection. Lu et al. proposed
dictionary based approach to learn the normal behaviors
and used reconstruction errors to detect anomalies. Following their code, we extract 7000 cuboids from each of the
normal training video and compute gradient based features
in each volume. After reducing the feature dimension using PCA, we learn the dictionary using sparse representation. Hasan et al. proposed a fully convolutional feedforward deep auto-encoder based approach to learn local
features and classiﬁer. Using their implementation, we train
Road Accidents
Shoplifting
Normal events
# of videos
Table 2. Number of videos of each anomaly in our dataset. Numbers in brackets represent the number of videos in the training set.
Number of videos
9-10 min > 10 min
Length (minutes) of videos
Figure 3. Distribution of videos according to length (minutes) in
the training set.
Testing videos
Number of frames
Figure 4. Distribution of video frames in the testing set.
Testing videos
Percentage of Anomaly
Figure 5. Percentage of anomaly in each video of the testing set.
Normal videos (59 to 208) do not contain any anomaly.
the network on normal videos using the temporal window
of 40 frames. Similar to , reconstruction error is used
to measure anomaly. We also use a binary SVM classiﬁer
as a baseline method. Speciﬁcally, we treat all anomalous
videos as one class and normal videos as another class. C3D
features are computed for each video, and a binary classi-
ﬁer is trained with linear kernel. For testing, this classiﬁer
provides the probability of each video clip to be anomalous.
The quantitative comparisons in terms of ROC and AUC
are shown in Figure 6 and Table 3. We also compare the
False Positive Rate
True Positive Rate
Binary classifier
Hassan et al.
Proposed with constraints
Figure 6. ROC comparison of binary classiﬁer (blue), Lu et al.
 (cyan), Hasan et al. (black), proposed method without
constraints (magenta) and with constraints (red).
results of our approach with and without smoothness and
sparsity constraints. The results show that our approach signiﬁcantly outperforms the existing methods. Particularly,
our method achieves much higher true positive rates than
other methods under low false positive rates e.g. 0.1-0.3.
The binary classiﬁer results demonstrate that traditional
action recognition approaches cannot be used for anomaly
detection in real-world surveillance videos. This is because
our dataset contains long untrimmed videos where anomaly
mostly occurs for a short period of time. Therefore, the
features extracted from these untrimmed training videos are
not discriminative enough for the anomalous events. In the
experiments, binary classiﬁer produces very low anomaly
scores for almost all testing videos. Dictionary learnt by
 is not robust enough to discriminate between normal
and anomalous pattern. In addition to producing the low
reconstruction error for normal portion of the videos, it
also produces low reconstruction error for anomalous part.
Hasan et al. learns normal patterns quite well. However, it tends to produce high anomaly scores even for new
normal patterns. Our method performing signiﬁcantly better than demonstrates the effectiveness and it emphasizes that training using both anomalous and normal videos
are indispensable for a robust anomaly detection system.
In Figure 7, we present qualitative results of our approach on eight videos.
(a)-(d) show four videos with
anomalous events.
Our method provides successful and
timely detection of those anomalies by generating high
anomaly scores for the anomalous frames. (e) and (f) are
two normal videos.
Our method produces low anomaly
scores (close to 0) through out the entire video, yielding
zero false alarm for the two normal videos. We also illustrate two failure cases in (g) and (h). Speciﬁcally, (g) is an
anomalous video containing a burglary event (person entering an ofﬁce through a window). Our method fails to detect
the anomalous part because of the darkness of the scene (a
night video). Also, it generates false alarms mainly due to
Frame number
Road Accident
Frame number
Anomaly score
Animal abuse
Frame number
Frame number
Frame number
Frame number
10000 12000 14000
Frame number
Frame number
(h) Normal
Anomaly score
Failure cases
Person entering the office
through window
Figure 7. Qualitative results of our method on testing videos. Colored window shows ground truth anomalous region. (a), (b), (c) and (d)
show videos containing animal abuse (beating a dog), explosion, road accident and shooting, respectively. (e) and (f) show normal videos
with no anomaly. (g) and (h) present two failure cases of our anomaly detection method.
Binary classiﬁer
Hasan et al. 
Lu et al. 
Proposed w/o constraints
Proposed w constraints
Table 3. AUC comparison of various approaches on our dataset.
occlusions by ﬂying insects in front of camera. In (h), our
method produces false alarms due to sudden people gathering (watching a relay race in street). In other words, it fails
to identify the normal group activity.
5.3. Analysis of the Proposed Method
Model training. The underlying assumption of the proposed approach is that given a lot of positive and negative
videos with video-level labels, the network can automatically learn to predict the location of the anomaly in the
video. To achieve this goal, the network should learn to
produce high scores for anomalous video segments during
training iterations. Figure 8 shows the evolution of anomaly
score for a training anomalous example over the iterations.
At 1,000 iterations, the network predicts high scores for
both anomalous and normal video segments. After 3,000
iterations, the network starts to produce low scores for normal segments and keep high scores of anomalous segments.
As the number of iterations increases and the network sees
more videos, it automatically learns to precisely localize
anomaly. Note that although we do not use any segment
level annotations, the network is able to predict the temporal location of an anomaly in terms of anomaly scores.
False alarm rate. In real-world setting, a major part of
a surveillance video is normal. A robust anomaly detection method should have low false alarm rates on normal
videos. Therefore, we evaluate the performance of our approach and other methods on normal videos only. Table 4
lists the false alarm rates of different approaches at 50%
threshold. Our approach has a much lower false alarm rate
Anomaly score
Frame number
Training iteration =1000
Anomaly score
Frame number
Training iteration =3000
Anomaly score
Frame number
Training iteration =5000
Frame number
Anomaly score
Training iteration =8000
Figure 8. Evolution of score on a training video over iterations.
Colored window represents ground truth (anomalous region). As
iteration increases, our method generates high anomaly scores on
anomalous video segments and low scores on normal segments.
False alarm rate
Table 4. False alarm rate comparison on normal testing videos.
than other methods, indicating a more robust anomaly detection system in practice. This validates that using both
anomalous and normal videos for training helps our deep
MIL ranking model to learn more general normal patterns.
5.4. Anomalous Activity Recognition Experiments
Our dataset can be used as an anomalous activity recognition benchmark since we have event labels for the anomalous videos during data collection, but which are not used
for our anomaly detection method discussed above. For activity recognition, we use 50 videos from each event and
divide them into 75/25 ratio for training and testing3. We
provide two baseline results for activity recognition on our
dataset based on a 4-fold cross validation.
For the ﬁrst
baseline, we construct a 4096-D feature vector by averaging C3D features from each 16-frames clip followed
by an L2-normalization. The feature vector is used as input to a nearest neighbor classiﬁer. The second baseline
is the Tube Convolutional Neural Network (TCNN) ,
3Training/testing partitions will be made publicly available.
Figure 9. (a) and (b) show the confusion matrices of activity recognition using C3D and TCNN on our dataset.
which introduces the tube of interest (ToI) pooling layer
to replace the 5-th 3d-max-pooling layer in C3D pipeline.
The ToI pooling layer aggregates features from all clips and
outputs one feature vector for a whole video. Therefore, it
is an end-to-end deep learning based video recognition approach. The quantitative results i.e. confusion matrices and
accuracy are given in Figure 9 and Table 5. These stateof-the-art action recognition methods perform poor on this
dataset. It is because the videos are long untrimmed surveillance videos with low resolution. In addition, there are large
intra-class variations due to changes in camera viewpoint
and illumination, and background noise.
Therefore, our
dataset is a unique and challenging dataset for anomalous
activity recognition.
Table 5. Activity recognition results of C3D and TCNN .
6. Conclusions
We propose a deep learning approach to detect realworld anomalies in surveillance videos. Due to the complexity of these realistic anomalies, using only normal data
alone may not be optimal for anomaly detection. We attempt to exploit both normal and anomalous surveillance
videos. To avoid labor-intensive temporal annotations of
anomalous segments in training videos, we learn a general
model of anomaly detection using deep multiple instance
ranking framework with weakly labeled data. To validate
the proposed approach, a new large-scale anomaly dataset
consisting of a variety of real-world anomalies is introduced. The experimental results on this dataset show that
our proposed anomaly detection approach performs signiﬁcantly better than baseline methods. Furthermore, we
demonstrate the usefulness of our dataset for the second task
of anomalous activity recognition.
7. Acknowledgement
The project was supported by Award No. 2015-R2-CX-
K025, awarded by the National Institute of Justice, Of-
ﬁce of Justice Programs, U.S. Department of Justice. The
opinions, ﬁndings, and conclusions or recommendations expressed in this publication are those of the author(s) and do
not necessarily reﬂect those of the Department of Justice.