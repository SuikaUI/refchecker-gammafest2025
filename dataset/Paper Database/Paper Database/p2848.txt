Proceedings of the 2015 Conference on Empirical Methods in Natural Language Processing, pages 1412–1421,
Lisbon, Portugal, 17-21 September 2015. c⃝2015 Association for Computational Linguistics.
Effective Approaches to Attention-based Neural Machine Translation
Minh-Thang Luong
Christopher D. Manning
Computer Science Department, Stanford University, Stanford, CA 94305
{lmthang,hyhieu,manning}@stanford.edu
An attentional mechanism has lately been
used to improve neural machine translation (NMT) by selectively focusing on
parts of the source sentence during translation.
However, there has been little
work exploring useful architectures for
attention-based NMT. This paper examines two simple and effective classes of attentional mechanism: a global approach
which always attends to all source words
and a local one that only looks at a subset
of source words at a time. We demonstrate
the effectiveness of both approaches on the
WMT translation tasks between English
and German in both directions. With local
attention, we achieve a signiﬁcant gain of
5.0 BLEU points over non-attentional systems that already incorporate known techniques such as dropout.
Our ensemble
model using different attention architectures yields a new state-of-the-art result in
the WMT’15 English to German translation task with 25.9 BLEU points, an improvement of 1.0 BLEU points over the
existing best system backed by NMT and
an n-gram reranker.1
Introduction
Neural Machine Translation (NMT) achieved
state-of-the-art performances in large-scale translation tasks such as from English to French and English to German . NMT is appealing since it requires minimal
domain knowledge and is conceptually simple.
The model by Luong et al. reads through all
the source words until the end-of-sentence symbol
<eos> is reached. It then starts emitting one target word at a time, as illustrated in Figure 1. NMT
1All our code and models are publicly available at http:
//nlp.stanford.edu/projects/nmt.
Figure 1: Neural machine translation – a stacking recurrent architecture for translating a source
sequence A B C D into a target sequence X Y
Z. Here, <eos> marks the end of a sentence.
is often a large neural network that is trained in an
end-to-end fashion and has the ability to generalize well to very long word sequences. This means
the model does not have to explicitly store gigantic
phrase tables and language models as in the case
of standard MT; hence, NMT has a small memory
footprint. Lastly, implementing NMT decoders is
easy unlike the highly intricate decoders in standard MT .
In parallel, the concept of “attention” has gained
popularity recently in training neural networks, allowing models to learn alignments between different modalities, e.g., between image objects
and agent actions in the dynamic control problem
 , between speech frames and
text in the speech recognition task , or between visual features of a picture
and its text description in the image caption generation task . In the context of
NMT, Bahdanau et al. has successfully applied such attentional mechanism to jointly translate and align words. To the best of our knowledge, there has not been any other work exploring
the use of attention-based architectures for NMT.
In this work, we design, with simplicity and effectiveness in mind, two novel types of attention-
based models: a global approach in which all
source words are attended and a local one whereby
only a subset of source words are considered at a
time. The former approach resembles the model
of but is simpler architecturally. The latter can be viewed as an interesting
blend between the hard and soft attention models
proposed in : it is computationally less expensive than the global model or the
soft attention; at the same time, unlike the hard attention, the local attention is differentiable, making it easier to implement and train.2 Besides, we
also examine various alignment functions for our
attention-based models.
Experimentally, we demonstrate that both of
our approaches are effective in the WMT translation tasks between English and German in both
directions. Our attentional models yield a boost
of up to 5.0 BLEU over non-attentional systems
which already incorporate known techniques such
as dropout.
For English to German translation,
we achieve new state-of-the-art (SOTA) results
for both WMT’14 and WMT’15, outperforming
previous SOTA systems, backed by NMT models and n-gram LM rerankers, by more than 1.0
BLEU. We conduct extensive analysis to evaluate
our models in terms of learning, the ability to handle long sentences, choices of attentional architectures, alignment quality, and translation outputs.
Neural Machine Translation
A neural machine translation system is a neural
network that directly models the conditional probability p(y|x) of translating a source sentence,
x1, . . . , xn, to a target sentence, y1, . . . , ym.3 A
basic form of NMT consists of two components:
(a) an encoder which computes a representation s
for each source sentence and (b) a decoder which
generates one target word at a time and hence decomposes the conditional probability as:
log p(y|x) =
j=1 log p (yj|y<j, s)
A natural choice to model such a decomposition in the decoder is to use a recurrent neural network (RNN) architecture, which most of the re-
2There is a recent work by Gregor et al. , which is
very similar to our local attention and applied to the image
generation task. However, as we detail later, our model is
much simpler and can achieve good performance for NMT.
3All sentences are assumed to terminate with a special
“end-of-sentence” token <eos>.
cent NMT work such as have in common. They, however, differ in terms of which RNN architectures are used
for the decoder and how the encoder computes the
source sentence representation s.
Kalchbrenner and Blunsom used an
RNN with the standard hidden unit for the decoder
and a convolutional neural network for encoding
the source sentence representation. On the other
hand, both Sutskever et al. and Luong et
al. stacked multiple layers of an RNN with
a Long Short-Term Memory (LSTM) hidden unit
for both the encoder and the decoder. Cho et al.
 , Bahdanau et al. , and Jean et al.
 all adopted a different version of the RNN
with an LSTM-inspired hidden unit, the gated recurrent unit (GRU), for both components.4
In more detail, one can parameterize the probability of decoding each word yj as:
p (yj|y<j, s) = softmax (g (hj))
with g being the transformation function that outputs a vocabulary-sized vector.5 Here, hj is the
RNN hidden unit, abstractly computed as:
hj = f(hj−1, s),
where f computes the current hidden state given
the previous hidden state and can be either a
vanilla RNN unit, a GRU, or an LSTM unit. In
 ,
the source representation s is only used once to
initialize the decoder hidden state. On the other
hand, in 
and this work, s, in fact, implies a set of source
hidden states which are consulted throughout the
entire course of the translation process. Such an
approach is referred to as an attention mechanism,
which we will discuss next.
In this work, following , we use the stacking LSTM
architecture for our NMT systems, as illustrated
in Figure 1. We use the LSTM unit deﬁned in
 . Our training objective is
formulated as follows:
(x,y)∈D −log p(y|x)
4They all used a single RNN layer except for the latter two
works which utilized a bidirectional RNN for the encoder.
5One can provide g with other inputs such as the currently
predicted word yj as in .
with D being our parallel training corpus.
Attention-based Models
Our various attention-based models are classifed
into two broad categories, global and local. These
classes differ in terms of whether the “attention”
is placed on all source positions or on only a few
source positions. We illustrate these two model
types in Figure 2 and 3 respectively.
Common to these two types of models is the fact
that at each time step t in the decoding phase, both
approaches ﬁrst take as input the hidden state ht
at the top layer of a stacking LSTM. The goal is
then to derive a context vector ct that captures relevant source-side information to help predict the
current target word yt. While these models differ
in how the context vector ct is derived, they share
the same subsequent steps.
Speciﬁcally, given the target hidden state ht and
the source-side context vector ct, we employ a
simple concatenation layer to combine the information from both vectors to produce an attentional
hidden state as follows:
˜ht = tanh(Wc[ct; ht])
The attentional vector ˜ht is then fed through the
softmax layer to produce the predictive distribution formulated as:
p(yt|y<t, x) = softmax(Ws˜ht)
We now detail how each model type computes
the source-side context vector ct.
Global Attention
The idea of a global attentional model is to consider all the hidden states of the encoder when deriving the context vector ct. In this model type,
a variable-length alignment vector at, whose size
equals the number of time steps on the source side,
is derived by comparing the current target hidden
state ht with each source hidden state ¯hs:
at(s) = align(ht, ¯hs)
 score(ht, ¯hs)
 score(ht, ¯hs′)
Here, score is referred as a content-based function
for which we consider three different alternatives:
score(ht, ¯hs) =
Wa[ht; ¯hs]
Global align weights
Attention Layer
Context vector
Figure 2: Global attentional model – at each time
step t, the model infers a variable-length alignment weight vector at based on the current target
state ht and all source states ¯hs. A global context
vector ct is then computed as the weighted average, according to at, over all the source states.
Besides, in our early attempts to build attentionbased models, we use a location-based function
in which the alignment scores are computed from
solely the target hidden state ht as follows:
at = softmax(Waht)
Given the alignment vector as weights, the context
vector ct is computed as the weighted average over
all the source hidden states.6
Comparison to – While
our global attention approach is similar in spirit
to the model proposed by Bahdanau et al. ,
there are several key differences which reﬂect how
we have both simpliﬁed and generalized from the
original model. First, we simply use hidden states
at the top LSTM layers in both the encoder and
decoder as illustrated in Figure 2. Bahdanau et
al. , on the other hand, use the concatenation of the forward and backward source hidden
states in the bi-directional encoder and target hidden states in their non-stacking uni-directional decoder. Second, our computation path is simpler;
we go from ht →at →ct →˜ht then make
a prediction as detailed in Eq. (5), Eq. (6), and
Figure 2. On the other hand, at any time t, Bahdanau et al. build from the previous hidden
state ht−1 →at →ct →ht, which, in turn,
6Eq. (9) implies that all alignment vectors at are of the
same length. For short sentences, we only use the top part of
at and for long sentences, we ignore words near the end.
Attention Layer
Context vector
Local weights
Aligned position
Figure 3: Local attention model – the model ﬁrst
predicts a single aligned position pt for the current
target word. A window centered around the source
position pt is then used to compute a context vector ct, a weighted average of the source hidden
states in the window. The weights at are inferred
from the current target state ht and those source
states ¯hs in the window.
goes through a deep-output and a maxout layer
before making predictions.7 Lastly, Bahdanau et
al. only experimented with one alignment
function, the concat product; whereas we show
later that the other alternatives are better.
Local Attention
The global attention has a drawback that it has to
attend to all words on the source side for each target word, which is expensive and can potentially
render it impractical to translate longer sequences,
e.g., paragraphs or documents.
To address this
deﬁciency, we propose a local attentional mechanism that chooses to focus only on a small subset
of the source positions per target word.
This model takes inspiration from the tradeoff
between the soft and hard attentional models proposed by Xu et al. to tackle the image caption generation task. In their work, soft attention
refers to the global attention approach in which
weights are placed “softly” over all patches in the
source image.
The hard attention, on the other
hand, selects one patch of the image to attend to at
a time. While less expensive at inference time, the
hard attention model is non-differentiable and requires more complicated techniques such as variance reduction or reinforcement learning to train.
7We will refer to this difference again in Section 3.3.
Our local attention mechanism selectively focuses on a small window of context and is differentiable. This approach has an advantage of avoiding the expensive computation incurred in the soft
attention and at the same time, is easier to train
than the hard attention approach. In concrete details, the model ﬁrst generates an aligned position
pt for each target word at time t. The context vector ct is then derived as a weighted average over
the set of source hidden states within the window
[pt−D, pt+D]; D is empirically selected.8 Unlike
the global approach, the local alignment vector at
is now ﬁxed-dimensional, i.e., ∈R2D+1. We consider two variants of the model as below.
Monotonic alignment (local-m) – we simply set
pt = t assuming that source and target sequences
are roughly monotonically aligned. The alignment
vector at is deﬁned according to Eq. (7).9
Predictive alignment (local-p) – instead of assuming monotonic alignments, our model predicts
an aligned position as follows:
pt = S · sigmoid(v⊤
p tanh(Wpht)),
Wp and vp are the model parameters which will
be learned to predict positions. S is the source sentence length. As a result of sigmoid, pt ∈[0, S].
To favor alignment points near pt, we place a
Gaussian distribution centered around pt . Specifically, our alignment weights are now deﬁned as:
at(s) = align(ht, ¯hs) exp
We use the same align function as in Eq. (7) and
the standard deviation is empirically set as σ = D
It is important to note that pt is a real nummber;
whereas s is an integer within the window centered at pt.10
Comparison to – have proposed a selective attention mechanism, very similar to our local attention, for the image generation
task. Their approach allows the model to select an
image patch of varying location and zoom. We,
instead, use the same “zoom” for all target positions, which greatly simpliﬁes the formulation and
still achieves good performance.
8If the window crosses the sentence boundaries, we simply ignore the outside part and consider words in the window.
9local-m is the same as the global model except that the
vector at is ﬁxed-length and shorter.
10local-p is similar to the local-m model except that we
dynamically compute pt and use a Gaussian distribution
to modify the original alignment weights align(ht, ¯hs) as
shown in Eq. (11). By utilizing pt to derive at, we can compute backprop gradients for Wp and vp.
Attention Layer
Figure 4: Input-feeding approach – Attentional
vectors ˜ht are fed as inputs to the next time steps to
inform the model about past alignment decisions.
Input-feeding Approach
In our proposed global and local approaches,
the attentional decisions are made independently,
which is suboptimal. Whereas, in standard MT,
a coverage set is often maintained during the
translation process to keep track of which source
words have been translated. Likewise, in attentional NMTs, alignment decisions should be made
jointly taking into account past alignment information.
To address that, we propose an inputfeeding approach in which attentional vectors ˜ht
are concatenated with inputs at the next time steps
as illustrated in Figure 4.11 The effects of having such connections are two-fold: (a) we hope
to make the model fully aware of previous alignment choices and (b) we create a very deep network spanning both horizontally and vertically.
Comparison to other work – Bahdanau et al.
 use context vectors, similar to our ct, in
building subsequent hidden states, which can also
achieve the “coverage” effect. However, there has
not been any analysis of whether such connections
are useful as done in this work. Also, our approach
is more general; as illustrated in Figure 4, it can be
applied to general stacking recurrent architectures,
including non-attentional models.
Xu et al. propose a doubly attentional
approach with an additional constraint added to
the training objective to make sure the model pays
equal attention to all parts of the image during the
caption generation process. Such a constraint can
11If n is the number of LSTM cells, the input size of the
ﬁrst LSTM layer is 2n; those of subsequent layers are n.
also be useful to capture the coverage set effect
in NMT that we mentioned earlier. However, we
chose to use the input-feeding approach since it
provides ﬂexibility for the model to decide on any
attentional constraints it deems suitable.
Experiments
We evaluate the effectiveness of our models on the
WMT translation tasks between English and German in both directions. newstest2013 (3000 sentences) is used as a development set to select our
hyperparameters.
Translation performances are
reported in case-sensitive BLEU on newstest2014 (2737 sentences) and newstest2015 (2169 sentences). Following , we report translation quality using two
types of BLEU: (a) tokenized12 BLEU to be comparable with existing NMT work and (b) NIST13
BLEU to be comparable with WMT results.
Training Details
All our models are trained on the WMT’14 training data consisting of 4.5M sentences pairs (116M
English words, 110M German words). Similar to
 , we limit our vocabularies to
be the top 50K most frequent words for both languages. Words not in these shortlisted vocabularies are converted into a universal token <unk>.
When training our NMT systems, following
 , we ﬁlter out sentence pairs whose lengths exceed 50
words and shufﬂe mini-batches as we proceed.
Our stacking LSTM models have 4 layers, each
with 1000 cells, and 1000-dimensional embeddings. We follow in training NMT with similar settings: (a) our parameters are uniformly initialized
in [−0.1, 0.1], (b) we train for 10 epochs using
plain SGD, (c) a simple learning rate schedule is
employed – we start with a learning rate of 1; after
5 epochs, we begin to halve the learning rate every epoch, (d) our mini-batch size is 128, and (e)
the normalized gradient is rescaled whenever its
norm exceeds 5. Additionally, we also use dropout
for our LSTMs as suggested by . For dropout models, we train for 12 epochs
and start halving the learning rate after 8 epochs.
Our code is implemented in MATLAB. When
12All texts are tokenized with tokenizer.perl and
BLEU scores are computed with multi-bleu.perl.
13With the mteval-v13a script as per WMT guideline.
Winning WMT’14 system – phrase-based + large LM 
Existing NMT systems
RNNsearch 
RNNsearch + unk replace 
RNNsearch + unk replace + large vocab + ensemble 8 models 
Our NMT systems
Base + reverse
12.6 (+1.3)
Base + reverse + dropout
14.0 (+1.4)
Base + reverse + dropout + global attention (location)
16.8 (+2.8)
Base + reverse + dropout + global attention (location) + feed input
18.1 (+1.3)
Base + reverse + dropout + local-p attention (general) + feed input
19.0 (+0.9)
Base + reverse + dropout + local-p attention (general) + feed input + unk replace
20.9 (+1.9)
Ensemble 8 models + unk replace
23.0 (+2.1)
Table 1: WMT’14 English-German results – shown are the perplexities (ppl) and the tokenized BLEU
scores of various systems on newstest2014. We highlight the best system in bold and give progressive
improvements in italic between consecutive systems. local-p referes to the local attention with predictive
alignments. We indicate for each attention model the alignment score function used in pararentheses.
running on a single GPU device Tesla K40, we
achieve a speed of 1K target words per second.
It takes 7–10 days to completely train a model.
English-German Results
We compare our NMT systems in the English-
German task with various other systems. These
include the winning system in WMT’14 , a phrase-based system whose language
models were trained on a huge monolingual text,
the Common Crawl corpus. For end-to-end neural machine translation systems, to the best of our
knowledge, is the only work experimenting with this language pair and currently
the SOTA system.
We only present results for
some of our attention models and will later analyze the rest in Section 5.
As shown in Table 1, we achieve progressive
improvements when (a) reversing the source sentence, +1.3 BLEU, as proposed in and (b) using dropout, +1.4 BLEU. On
top of that, (c) the global attention approach gives
a signiﬁcant boost of +2.8 BLEU, making our
model slightly better than the base attentional system of Bahdanau et al. (row RNNSearch).
When (d) using the input-feeding approach, we
seize another notable gain of +1.3 BLEU and outperform their system. The local attention model
with predictive alignments (row local-p) proves
to be even better, giving us a further improvement of +0.9 BLEU on top of the global attention
model. It is interesting to observe the trend previously reported in that perplexity strongly correlates with translation quality.
In total, we achieve a signiﬁcant gain of 5.0 BLEU
points over the non-attentional baseline, which already includes known techniques such as source
reversing and dropout.
The unknown replacement technique proposed
in yields
another nice gain of +1.9 BLEU, demonstrating
that our attentional models do learn useful alignments for unknown works. Finally, by ensembling
8 different models of various settings, e.g., using
different attention approaches, with and without
dropout etc., we were able to achieve a new SOTA
result of 23.0 BLEU, outperforming the existing
best system by +1.4 BLEU.
SOTA – NMT + 5-gram rerank (MILA)
Our ensemble 8 models + unk replace
Table 2: WMT’15 English-German results –
NIST BLEU scores of the existing WMT’15 SOTA
system and our best one on newstest2015.
Latest results in WMT’15 – despite the fact that
our models were trained on WMT’14 with slightly
less data, we test them on newstest2015 to demonstrate that they can generalize well to different test
sets. As shown in Table 2, our best system es-
WMT’15 systems
SOTA – phrase-based (Edinburgh)
NMT + 5-gram rerank (MILA)
Our NMT systems
Base (reverse)
+ global (location)
19.1 (+2.2)
+ global (location) + feed
20.1 (+1.0)
+ global (dot) + drop + feed
22.8 (+2.7)
+ global (dot) + drop + feed + unk
24.9 (+2.1)
Table 3: WMT’15 German-English results –
performances of various systems (similar to Table 1). The base system already includes source
reversing on which we add global attention,
dropout, input feeding, and unk replacement.
tablishes a new SOTA performance of 25.9 BLEU,
outperforming the existing best system backed by
NMT and a 5-gram LM reranker by +1.0 BLEU.
German-English Results
We carry out a similar set of experiments for the
WMT’15 translation task from German to English. While our systems have not yet matched
the performance of the SOTA system, we nevertheless show the effectiveness of our approaches
with large and progressive gains in terms of BLEU
as illustrated in Table 3. The attentional mechanism gives us +2.2 BLEU gain and on top of
that, we obtain another boost of up to +1.0 BLEU
from the input-feeding approach. Using a better
alignment function, the content-based dot product
one, together with dropout yields another gain of
+2.7 BLEU. Lastly, when applying the unknown
word replacement technique, we seize an additional +2.1 BLEU, demonstrating the usefulness
of attention in aligning rare words.
We conduct extensive analysis to better understand
our models in terms of learning, the ability to handle long sentences, choices of attentional architectures, and alignment quality. All models considered here are English-German NMT systems
tested on newstest2014.
Learning curves
We compare models built on top of one another as
listed in Table 1. It is pleasant to observe in Figure 5 a clear separation between non-attentional
and attentional models.
The input-feeding ap-
Mini−batches
basic+reverse
basic+reverse+dropout
basic+reverse+dropout+globalAttn
basic+reverse+dropout+globalAttn+feedInput
basic+reverse+dropout+pLocalAttn+feedInput
Figure 5: Learning curves – test cost (ln perplexity) on newstest2014 for English-German NMTs
as training progresses.
proach and the local attention model also demonstrate their abilities in driving the test costs lower.
The non-attentional model with dropout (the blue
+ curve) learns slower than other non-dropout
models, but as time goes by, it becomes more robust in terms of minimizing test errors.
Effects of Translating Long Sentences
We follow to group sentences of similar lengths together and compute a
BLEU score per group. As demonstrated in Figure 6, our attentional models are more effective
than the other non-attentional model in handling
long sentences: the translation quality does not degrade as sentences become longer. Our best model
(the blue + curve) outperforms all other systems in
all length buckets.
Sent Lengths
ours, no attn (BLEU 13.9)
ours, local−p attn (BLEU 20.9)
ours, best system (BLEU 23.0)
WMT’14 best (BLEU 20.7)
Jeans et al., 2015 (BLEU 21.6)
Figure 6: Length Analysis – translation qualities
of different systems as sentences become longer.
Choices of Attentional Architectures
We examine different attention models (global,
local-m, local-p) and different alignment functions (location, dot, general, concat) as described
in Section 3. Due to limited resources, we cannot run all the possible combinations. However,
global (location)
19.3 (+1.2)
global (dot)
20.5 (+1.9)
global (general)
19.1 (+1.8)
local-m (dot)
local-m (general)
20.4 (+1.8)
local-p (dot)
19.6 (+1.9)
local-p (general)
20.9 (+1.9)
Attentional Architectures – performances of different attentional models. We trained
two local-m (dot) models; both have ppl > 7.0.
results in Table 4 do give us some idea about different choices. The location-based function does
not learn good alignments: the global (location)
model can only obtain a small gain when performing unknown word replacement compared to using
other alignment functions.14
For content-based
functions, our implementation of concat does not
yield good performances and more analysis should
be done to understand the reason.15 It is interesting to observe that dot works well for the global
attention and general is better for the local attention. Among the different models, the local attention model with predictive alignments (local-p) is
best, both in terms of perplexities and BLEU.
Alignment Quality
A by-product of attentional models are word alignments. While visualized
alignments for some sample sentences and observed gains in translation quality as an indication of a working attention model, no work has assessed the alignments learned as a whole. In contrast, we set out to evaluate the alignment quality
using the alignment error rate (AER) metric.
Given the gold alignment data provided by
RWTH for 508 English-German Europarl sentences, we “force” decode our attentional models
to produce translations that match the references.
We extract only one-to-one alignments by selecting the source word with the highest alignment
14There is a subtle difference in how we retrieve alignments for the different alignment functions. At time step t in
which we receive yt−1 as input and then compute ht, at, ct,
and ˜ht before predicting yt, the alignment vector at is used
as alignment weights for (a) the predicted word yt in the
location-based alignment functions and (b) the input word
yt−1 in the content-based functions.
15With concat, the perplexities achieved by different models are 6.7 (global), 7.1 (local-m), and 7.1 (local-p).
global (location)
local-m (general)
local-p (general)
Berkeley Aligner
Table 6: AER scores – results of various models
on the RWTH English-German alignment data.
weight per target word. Nevertheless, as shown in
Table 6, we were able to achieve AER scores comparable to the one-to-many alignments obtained
by the Berkeley aligner .16
We also found that the alignments produced by
local attention models achieve lower AERs than
those of the global one.
The AER obtained by
the ensemble, while good, is not better than the
local-m AER, suggesting the well-known observation that AER and translation scores are not well
correlated . Due to space
constraint, we can only show alignment visualizations in the arXiv version of our paper.17
Sample Translations
We show in Table 5 sample translations in both
directions.
It it appealing to observe the effect of attentional models in correctly translating names such as “Miranda Kerr” and “Roger
Dow”. Non-attentional models, while producing
sensible names from a language model perspective, lack the direct connections from the source
side to make correct translations.
We also observed an interesting case in the
second English-German example, which requires
translating the doubly-negated phrase, “not incompatible”.
The attentional model correctly
produces “nicht . . . unvereinbar”; whereas the
non-attentional model generates “nicht vereinbar”,
meaning “not compatible”.18
The attentional
model also demonstrates its superiority in translating long sentences as in the last example.
Conclusion
In this paper, we propose two simple and effective attentional mechanisms for neural machine
16We concatenate the 508 sentence pairs with 1M sentence
pairs from WMT and run the Berkeley aligner.
17 
18The reference uses a more fancy translation of “incompatible”, which is “im Widerspruch zu etwas stehen”. Both
models, however, failed to translate “passenger experience”.
English-German translations
Orlando Bloom and Miranda Kerr still love each other
Orlando Bloom und Miranda Kerr lieben sich noch immer
Orlando Bloom und Miranda Kerr lieben einander noch immer .
Orlando Bloom und Lucas Miranda lieben einander noch immer .
′′ We ′ re pleased the FAA recognizes that an enjoyable passenger experience is not incompatible
with safety and security , ′′ said Roger Dow , CEO of the U.S. Travel Association .
“ Wir freuen uns , dass die FAA erkennt , dass ein angenehmes Passagiererlebnis nicht im Widerspruch zur Sicherheit steht ” , sagte Roger Dow , CEO der U.S. Travel Association .
′′ Wir freuen uns , dass die FAA anerkennt , dass ein angenehmes ist nicht mit Sicherheit und
Sicherheit unvereinbar ist ′′ , sagte Roger Dow , CEO der US - die .
′′ Wir freuen uns ¨uber die <unk> , dass ein <unk> <unk> mit Sicherheit nicht vereinbar ist mit
Sicherheit und Sicherheit ′′ , sagte Roger Cameron , CEO der US - <unk> .
German-English translations
In einem Interview sagte Bloom jedoch , dass er und Kerr sich noch immer lieben .
However , in an interview , Bloom has said that he and Kerr still love each other .
In an interview , however , Bloom said that he and Kerr still love .
However , in an interview , Bloom said that he and Tina were still <unk> .
Wegen der von Berlin und der Europ¨aischen Zentralbank verh¨angten strengen Sparpolitik in
Verbindung mit der Zwangsjacke , in die die jeweilige nationale Wirtschaft durch das Festhalten an der gemeinsamen W¨ahrung gen¨otigt wird , sind viele Menschen der Ansicht , das Projekt
Europa sei zu weit gegangen
The austerity imposed by Berlin and the European Central Bank , coupled with the straitjacket
imposed on national economies through adherence to the common currency , has led many people
to think Project Europe has gone too far .
Because of the strict austerity measures imposed by Berlin and the European Central Bank in
connection with the straitjacket in which the respective national economy is forced to adhere to
the common currency , many people believe that the European project has gone too far .
Because of the pressure imposed by the European Central Bank and the Federal Central Bank
with the strict austerity imposed on the national economy in the face of the single currency ,
many people believe that the European project has gone too far .
Table 5: Sample translations – for each example, we show the source (src), the human translation (ref),
the translation from our best model (best), and the translation of a non-attentional model (base). We
italicize some correct translation segments and highlight a few wrong ones in bold.
translation:
the global approach which always
looks at all source positions and the local one
that only attends to a subset of source positions
at a time. We test the effectiveness of our models in the WMT translation tasks between English and German in both directions. Our local
attention yields large gains of up to 5.0 BLEU
over non-attentional models that already incorporate known techniques such as dropout. For the
English to German translation direction, our ensemble model has established new state-of-the-art
results for both WMT’14 and WMT’15.
We have compared various alignment functions
and shed light on which functions are best for
which attentional models. Our analysis shows that
attention-based NMT models are superior to nonattentional ones in many cases, for example in
translating names and handling long sentences.
Acknowledgment
We gratefully acknowledge support from a gift
from Bloomberg L.P. and the support of NVIDIA
Corporation with the donation of Tesla K40 GPUs.
We thank Andrew Ng and his group as well as
the Stanford Research Computing for letting us
use their computing resources.
We thank Russell Stewart for helpful discussions on the models.
Lastly, we thank Quoc Le, Ilya Sutskever, Oriol
Vinyals, Richard Socher, Michael Kayser, Jiwei
Li, Panupong Pasupat, Kelvin Gu, members of the
Stanford NLP Group and the annonymous reviewers for their valuable comments and feedback.