An Enhanced Random Early Marking Algorithm for Internet Flow Control
Sanjeewa Athuraliya David Lapsley
Steven Low
Department of EEE, University of Melbourne, Australia
{ sadsa,laplsey,slow } @ee.mu.oz.au
Abstruct- We propose earlier an optimization based flow control
for the Internet called Random Early Mark@ (REM). In this paper
we propose and evaluate an enhancement that attempts to sped up
the convergence of REM in the face of large feedback delays. REM
can be regarded as an implementation of an optimization algorithm in
a distributed network. The basic idea is to treat the optimization algo-
rithm as a discrete time system and apply linear control techniques to
stabilize its transient. We show that the modified algorithm is stable
globally and converges exponentially locally. This algorithm translates
into an enhanced REM scheme and we illustrate the performance im-
provement through simulation.
Keywordr-Internet flow control, pricing, optimization flow control,
marking, REM, feedback delay
I. INTRODUCTION
We proposed earlier a flow control scheme for the Inter-
net called Random Early Marking (REM) [ 11. It is derived
from an optimization model where each source is charac-
terized by a utility function that models its valuation of
bandwidth and the goal is to maximize aggregate source
utility over their transmission rates subject to capacity con-
straints . 131, . The basic flow control algorithm can
be regarded as a distributed computation performed by the
sources and links to minimize the dual problem. The al-
gorithm however requires communication between sources
and links. This communication requirement is greatly sim-
plified in [51, [l] and leads to REM, a binary feedback
scheme similar to Random Early Detection (RED) . The
purpose of this paper is to propose an enhancement to REM
that attempts to significantly speed up its convergence in the
face of large feedback delays.
The value of the optimization model presented in , 
is twofold. First, though it may not be possible, nor criti-
cal, that optimality is exactly attained in a real network, the
optimization framework offers a means to explicitly steer
the entire network towards a desirable operating point. Sec-
ond it makes possible a systematic method to design and
refine practical flow control schemes, which can be treated
simply as implementations of a certain optimization algo-
rithm, where modifications to the flow control mechanism
is guided by modifications to the optimization algorithm.
For instance, it is well known that Newton algorithm has
The first two authors acknowledge the Australian Commonwdth GOV-
ernment for their Australian Postgraduate Awards, and the last author ac-
knowledges the support of the Australian Research Council under grants
S499705 and A49930405
much faster convergence than gradient projection algorithm.
By replacing the gradient projection algorithm presented in
[Z], by the Newton algorithm we derive in a practi-
cal Newton-like flow control scheme that can be proved to
maintain optimality, has the same communication require-
ment as the original scheme but enjoys a much better con-
vergence property. This paper provides another example on
how the optimization framework can be exploited to sys-
tematically refine REM.
There is a tremendous literature on flow control. The
works closest to this paper are optimization based , ,
[lo], [ll], 1121, , [21, [SI, [l] where the problem is
formulated as one of optimizing a social welfare and the
flow control mechanisms are derived as solutions to the op-
timization problem. They differ in their choice of objec-
tive functions or their solution approaches, and result in
rather different flow control mechanisms to be implemented
at the sources and the network links. In particular both [ 1 I],
[ 121 and our work solve the same optimization problem of
maximizing aggregate utility over source transmission rates.
The two works however differ in their solution approach,
which lead to different algorithms and their implementation
through marking , [I]. See for a detailed compari-
The paper is structured as follows. In Section I1 we sum-
marize our optimization model and the REM algorithm. In
Section In we extend the model to include feedback de-
lay and derive the enhanced algorithm. In Section IV we
present preliminary simulation results to illustrate the per-
formance improvement. We conclude in Section V with fu-
ture work. All proofs are omitted and can be found in a
forthcoming full paper.
11. OPTIMIZATION
MODEL AND REM
Consider a network that consists of a set L = { 1, . . . , L}
of unidirectional links of capacity q. 1 E L. The network
is shared by a set S = (1,. . . , S) of sources. Source
s is characterized by four parameters (L(s),U,,m,, M8).
The path L(s) C L is a subset of links that source s uses,
U, : R+ 3 !R is a utility function, m, 2 0 and M, 2 00
are the minimum and maximum transmission rates, respec-
tively, required by source s. Source s attains a utility U, (z,)
when it transmits at rate 2, that satisfies m, 5 zs 5 M,.
0-7803-5880-5/00/$10.00
(c) 2000 IEEE
IEEE INFOCOM 2000
We assume U, is increasing and strictly concave in its argu-
ment. Let 1, = [m,, MB] denote the range in which source
rate z8 must lie and I = (I,, s E S) be the vector. For each
link 1 let S(1) = {s E S 1 1 E L(s)) be the set of sources
that use link 1. Note that 1 E L(s) if and only if 8 E S(I).
Our objective is to choose source rates z = (z,,
p: maX2.€l,,sES CV,(za)
subject to
z8 5 q, I = 1,. . . , L.(2)
The constraint (2) says that the total source rate at any link
1 is less than the capacity. A unique maximizer, called the
primal optimal solution, exists since the objective function
is strictly concave, and hence continuous, and the feasible
solution set is compact.
Though the objective function is separable in z8, the
source rates z8 are coupled by the constraint (2). Solv-
ing the primal problem (1-2) directly requires coordination
among possibly all sources and is impractical in real net-
works. The key to a distributed and decentralized solution
is to look at its dual, e.g., [ 14, Section 3.4.21, [ 151:
D ~ P ) = c~,(Ps)
The first term of the dual objective function D(p) is decom-
posed into S separable subproblems (4-5). If we interpret
pi as the price per unit bandwidth at link 1 then ps is the
total price per unit bandwidth for all links in the path of S.
Hence zapa represents the bandwidth cost to source s when
it transmits at rate E,, and B8(p8) represents the maximum
benefit s can achieve at the given price pa. We shall see
that this scalar pa summarizes all the congestion informa-
tion source s needs to know. A source s can be induced to
solve maximization (4) by bandwidth charging. For each p,
a unique maximizer, denoted by z@(p), exists since U8 is
strictly concave.
In general (z8(p), s E S) may not be primal optimal,
but by the duality theory, there exists a p* 3 0 such that
(z8@), s E S) is indeed primal optimal. Hence we will
solve the dual problem (3). Given minimizing prices p* the
primal optimal source rates z* = z(p”) can be obtained by
0-7803-5880-5/00/$10.00 (c) 2000 IEEE
individual sources s : ~
ifUi(M8) L P I
~ i ( m , )
if UL(m8) < p
if U;(M8) > p
is the inverse of U:, which exists over the range
[U:(M8), U;(m8)]
since U; is continuous and U, strictly
concave. It is illustrated in Figure 1. Let z(p) = ( z8 (p) , s E
X 8 ( p ) =
Fig. 1. Source rate zs (p) as a function of (scalar) price p .
In , we propose to solve the dual problem using
the gradient projection algorithm that leads to the following
optimization flow control algorithm:
Al: Basic OFC
Pl(t + 1) = kl(t) 4- r(z’(t) - a>]+
z s ( t ) = 2 8 O l s ( t ) )
Here z‘(t) := CsEs(l)
z8(t) is the aggregate source rate
at link I at time t, and + = max{z,O}. Hence a link
raises or reduces its price accordingly as the demand 2’ (t)
is greater or less than the supply cr of bandwidth. A source
raises or reduces its rate accordingly as the path price p8(t)
is low or high (see (6)).
It is shown in that provided all utility functions are
strictly concave increasing and their second derivatives are
bounded away from zero, the basic OFC (optimization flow
control) algorithm A1 converges to yield the optimal rates
for sufficiently small stepsize 7. As discussed there, though
the optimization problem is formulated as a static problem
the flow control algorithm naturally adapts to changing link
capacities and set of sources at a link. simply use the current
link capacity q(t) and the current set S(l;t) of sources at
Algorithm A1 requires communication of link prices to
sources and source rates to links, and hence cannot be im-
plemented on the Internet. In [SI we show that a link can
We abuse notation and use zs
( a ) both as a function of scalar price p E
R+ and of vector price p E WF’. When p is a scalar, z s ( p ) is given
by (6). When p is a vector, zs@) = zS(ps)
= z . Y ( C ~ ~ ~ ( ~ ) P I ) .
meaning should be clear from the context.
IEEE INFOCOM 2000
simply set its price to a fraction of the buffer occupancy.
This is equivalent to the link estimating the aggregate source
rate z’(t) by the measured aggregate input rate $l(t) at the
link and using this estimate in the calculation of the gra-
dient. We prove there that this approximate gradient pro-
jection algorithm also converges to yield the optimal rates.
This simplification eliminates the need for explicit commu-
nication from sources to links. In the reversed direction we
propose a method in [l] that communicates link prices to
sources using only binary feedback. The basic idea is for a
link to mark a packet with a probability that is exponential to
its link price pr (t) so that the end to end marking probability
of a packet is exponential to the path price ps (t) . A source
can then estimate the end to end marking probability and
hence p8(t). This can be implemented using the proposed
ECN (Explicit Congestion Notification) bit in the IP header
 , . Combining these two simplifications yields the
REM algorithm of [ 11, where the marking probability is ex-
ponential in buffer occupancy.
Link Z’s algorithm:
1. Set price pl(t) = 7bi(t) where bl(t) is the (average)
buffer occupancy in period t .
2. For eachpacket that is notmarked, markit with theprob-
Source s’s algorithm:
1. Count the fraction rizs (t) of packets received in period t
that are muked, and estimate the path price by:
a”@) = - log2(1 - ??P(t))
2. Choose a new transmission rate zs(t + 1) for the next
period: z,(t + 1) = z8(lj8(t)).
111. ENHANCED
The model and algorithms in the last section assume zero
feedback delay. In this section we relax this assumption and
propose an enhanced algorithm.
Let 71, and r81 be the (constant) delay from link 2
to source 8 and from s to 1, respectively.
maxp,t,,C~p~
+ ~ , 1 I s E S(2) n S(I’)}. We will see be-
low that d is the maximum time for a price change in link
I’ to affect the price at link 1 through shared sources 8. In
particular
if delays are symmetric, Tis = T ~ Z
for all I, s, then
d is the maximum round trip delay of the network.
The basic OFC algorithm A1 becomes:
zs(t - 781) - cr)
Hence link 2 computes the next price using the delayed
source rates z,(t - ~
and source s computes a new rate
using delayed prices pl(t - 71,). It is important to note that
the algorithm described by (7-8) does not require the links
and sources to know their delays 719, ~ , 1 . This algorithm
is a special case of the asynchronous model considered in
 where links and sources update every period using the
most recent data. According to [4, Theorem 21 the algo-
rithm converges to yield the optimal source rates provided
the stepsize 7 is small enough.
Suppose there is a unique dual optimal price P * . ~ This
would be the case, e.g., if the utility functions are U,
a, logz, and every link I with pf > 0 has a single-link
connection s(l), i.e., for all I, there exists s(l) such that
L(s(Z)) = (1). We may assume without loss of gener-
ality that p; > 0 for all 1, because links 1 with p; = 0
are not saturated in equilibrium and hence can be omit-
ted from consideration. Then provided that the stepsize is
sufficiently small the sequence { p ( t ) } generated by (7-8)
converges to p*. Moreover for all sufficiently large t, we
have pi(t) > 0 for all I, and we can omit the projection
operation in price computation for sufficiently large t. As-
sume also that U:-’(Ms) = 0, Ui-l(m,) = CO so that
m(t+ 1) = PI@) 4- Y(
zs(t - T s l ) - 4 (9)
(p). Then the system is described by:
We will regard (9-10) as a discrete time system to be stabi-
lized, where the states are the link prices.
For the rest of the section we first consider the linearized
system of (9-10) in the neighbourhood of the unique equi-
librium p*. Then we will design a deadbeat controller for
the linearized system to speed up its convergence. This con-
trol law however requires a link to know the entire network
2The simulation in Section IV also shows what might happen when dual
optimal prices are nonunique: link prices may oscillate between two dual
optimal limit points while source rates converge to the unique primal opti-
mal vector.
0-7803-5880-5/00/$10.00 (c) 2000 IEEE
IEEE INFOCOM 2000
topology and is therefore impractical. Next we derive an
approximate control law that can be implemented by each
link using local information. Finally we apply the control
law to the REM algorithm.
Even though the control laws are derived for a linear sys-
tem around the equilibriump* their performance in the non-
linear setting away from the equilibrium is investigated in
the next section through simulation.
A. Linearized system
Let p(t) be the (2 + l)L dimensional expanded ‘state’:
whereeachp(t-T),T = 0,. . . ,d,isaL-vector. The(1,~)th
element of p(t) is pr(t - 7). Let p* be the (2 + l)L d’ imen-
sional vector with each of p(t - T ) , 7 = 0, . . . , d, replaced
by the unique equilibrium p* .
For any scalar p define p8 (p) by
= -u;’(zs(p))
where z(p) is given by (6).
Then after some manipulations we have
wherep8(t) = ( ~ I E L ( s ) p ~ ( t
- TI#)). Hencethefirstorder
term in the Taylor expansion of z8
Vjj~SW)@(t) - P*)
Linearizing (9-30) around the equilibrium p* and letting
$(t) = p(t) - p* we thus have, after rearranging,
$I(t + 1) = ?ji(t) - Y ~ b n ~ $ v ( t
71‘8 - 7 8 1 ) ( 1 1 )
where b1r1 = CsEs(l)ns(l,)
pa@”). The last equality uses
the fact that x1 (p*) = cr by complementary slackness, since
by assumption pf > 0. (1 1) makes the interdependence of
link prices apparent. It says that the new price pi(t + 1) at
link 1 depends not only on the current price at link 1, but
also on past prices pp (t - nt8 - ~
at other links 1’. This
is because in response to a price change at link l‘, sources
s E S(1) n S(1’) that traverse both links I‘ and I adjust their
rates, which then affect the price at link 1. Hence there is a
delay of Tits + r81 for a price update at link I’ to affect the
price at link 1 through shared sources S. This coupling of
link prices is described by blp .
To express (1 1) in matrix form, define the L x L matrices
A(T), T = 0,. . . , z, by:
[A(7)111’ =
P S W ) l(7-1’8 + 781 = 7)
8cs(l)ns([I)
Then we have, defining @(t)
= E(t) ij(t - 1)
a . . ij(t -
This describes the local behavior of the gradient projec-
tion algorithm around the (unique) equilibrium p* when the
feedback delays are nonzero.
Note the difference between our system and that of .
Their system has two important features that simplify sig-
nificantly the controller design. First their control (the ex-
plicit rates) are calculated at the network link where the
current as well as past buffer levels are available. Second,
all sources receive the same explicit rate (single congestion
node case), except possibly with different feedback delay,
and these past rates are also available at the link for calcu-
lation. These allow a simple proportional-plus-derivative
controller and lead to the simple close loop equations (38)
and (39) in their paper. In our case, current source rates are
not available at a link; moreover a link may not know the
value of +rsl and hence may not be able to use past source
rates in price adjustment (except the most recent one). On
the other hand a link always has the most current price, so
we consider a controller that uses only past values of local
B. Deadbeat controller
Suppose in computing a new price each link 1 averages
its past link prices and diagonally scale the gradient:
0-7803-5880-5/00/$10.00 (c) 2000 IEEE
IEEE INFOCOM 2000
Note that link 1 uses only the most recent source rates and
this does not require it to know the value of r81. The goal is
to compute the averaging parameters pi (T) and the scaling
parameter 71 in order to place the poles of the discrete time
system (12) at the origin, i.e., deadbeat control law. In equi-
librium both sides of (12) must be p* and hence p~ (T) must
satisfy (since CsEs(r)
2: = cr in equilibrium)
C p r ( T ) = 1,
Following similar derivation as in the last subsection, the
linearized system around p* is
where M(T) = diag(pr(T)), T = 0 ,...,a, and G =
diag(y1) are L x L diagonal matrices. The following result
explains how to choose the averaging matrices M(T) and
the scaling matrix G. For simplicity of exposition we as-
sume a large network where all delays are nonzero, qa 2 1,
T,~ 2 1 (otherwise, condition (15) below is replaced by
det(X1- M(0) -t- GA(0)) = XL).
Theorem 1: Suppose all delays are nonzero. Then all
poles of (14) are at the origin if and only if M ( T ) and G
are chosen to satisfy
det(M(.r) - GA(7)) = 0,
T = 0,. . . , d (16)
C M ( 7 ) = I
Moreover the above conditions uniquely determine the di-
Interestingly the theorem says that if all delays are nonzero
then current prices m(t) should not be used in the weighted
average of past prices.
Note that the above theorem ensures rapid convergence
only around the unique equilibrium point. p*. In order to
choose the averaging parameters pi (7)
to place all poles at
the origin, we have given up the choice of stepsize 7 (which
now becomes a matrix). This loss of freedom may upset
global stability. This is indeed observed in our simulation,
presented in the next section.
agonal matrices M(T) and G.
C. Appmxinlate deadbeat controller
Theorem 1 describes how to choose the averaging matri-
ces M(T) and the gain matrix G to enforce rapid conver-
gence towards the equilibrium p* when the system is in a
neighborhood of p'. However the equations (15-16) in the
theorem can only be solved centrally, as the off-diagonal el-
ements of the matrices A(T) imply that a link needs to know
information on sources at other links, and hence is imprac-
tical. In this subsection we derive an approximation to the
control law of the last section that can be implemented by
individual links locally. The idea is to approximate the ma-
trices A(T) by their diagonal terms.
Let B(7) = diag(P'(T),1 E L) be the L x L diagonal
matrices whose diagonal elements are
In words the Ith diagonal elements P ~ ( T )
of B(7) are the
(f), sum over all sources s that traverse link I
and have a round trip delay of 7. With this approximation
there is enough degree of freedom, provided 2 2 2, that we
can reduce the gain matrix G to an arbitrary scalar -y > 0.
This means that we can choose 7 to be sufficiently small
to ensure global convergence; contrast this with the exact
deadbeat control law of the last subsection. We will see in
the next section that the performance of this controller can
be better than that of the exact deadbeat controller whose
stepsize y is fixed by the condition (13).
The conditions corresponding to (15-17) in Theorem I
reduce to the following choice of weights pr (7):
and for all other I and T, p 1 ( ~ )
are chosen to satisfy
This control law is much simpler than that expressed in The-
orem 1: a link I can choose its own weights p l ( ~ )
the information about sources that traverse link 1; we will
come back to this point in Section V.
With this approximate deadbeat controller the corre-
0-7803-5880-5/00/$10.00 (c) 2000 IEEE
IEEE INFOCOM 2000
sponding optimization algorithm becomes:
where the weights P~(T)
are given by (18-22). The lin-
earized system around the unique equilibrium p* is then
given by, after some algebra,
M(0) - yA(0)
M(Z) - TA@)
linearized systems, the (nonlinear) optimization algorithm
(23-24) is simulated, where the weights ,u~(T) are defined
by the control laws.
The simulation study is carried out for the network in Fig-
ure 2 shared by three connections, with sources Si and desti-
nations Di, i = 1,2,3. Connection S1-D1 spanned all links
1,2; connection S2-D2 spanned link 1; connection S3-D3
spanned link 2. All links have capacity 200 packets/sec.
Source S1 transmitted data from time 7ms to time 300ms.
The start times of the other sources are staggered with S2
starting at time 8Oms, S3 at time 160ms. Once turned on,
sources S2 and S3 remained active until time 240ms. This
enabled us to observe the dynamic behaviour of the algo-
rithm as demand for bandwidth varies. The utility functions
of the sources were set to - 2 (M, - z ~ ) ~ ,
with a, and M,
equal to 1 and 300 respectively for all the sources S132 and
S3. The feedforward and feedback delays between sources
and links are given in table V.
A. BasicOFC
Even though the linearized system (25) may not have all
poles at the origin, we can ensure that the actual optimiza-
tion algorithm (23-24) is globally stable and converges ex-
ponentially to the equilibrium p* locally around p* .
Theorem 2: With the control law (18-22), provided y >
0 is sufficiently small, the optimization algorithm (23-24)
converges globally to p*. Moreover the linearize system
(25) around the unique equilibrium p* has all poles within
the unit disc.
D. Enhanced REM
In this subsection we apply the control law (18-22) to the
REM algorithm. The only modification is in Step 1 of A2:
instead of setting price pl (t) = ybl(t) to be a fraction of its
buffer occupancy, link 1 updates its price according to (23)
with weights pl(7) given by (18-22).
Iv. SIMULATION RESULTS
In this section we illustrate the effectiveness of the con-
trol laws through preliminary simulations. We will present
results that compare the performance of gradient projection
algorithm A1 with the deadbeat control law defined by The-
orem 1, and with its approximation (18-22). We will then
compare the performance of the original REM algorithm A2
with the enhanced version described in Section Ill-D. We
emphasize that though the control laws are derived from
0-7803-5880-5/00/$10.00
(c) 2000 IEEE
In this section we present in Figure 3 three sets of results
on the system dynamics under the basic OFC algorithm Al,
under the deadbeat controller described in equations (12)-
(17), and under the approximation to the deadbeat controller
described by equations (18)-(22). Each set of results con-
sists of a graph of the source transmission rate ss,
link price
pl and buffer occupancy ql .
We can see from Figure 3 that all of the algorithms con-
verge to the theoretically optimum operating point (given in
table I). The major differences are in the degree of oscilla-
tion and speed of convergence. We can see from the figures
that the application of the deadbeat controller (both in ex-
act and approximate forms) can speed up the convergence
significantly. Moreover the buffer requirement under the ap-
proximate deadbeat controller is 25% less than the other two
schemes. However, as noted after Theorem 1 the inability
of the exact deadbeat control law to choose the stepsize (and
indeed the direction) of the optimization algorithm may up-
set global stability. This is illustrated in Figure 3(b) where
the source rate of the first source oscillates around the equi-
librium from time 7ms to 80ms. Furthermore, as noted in
Section ID, when dual optimal prices are nonunique, link
prices may oscillate between two dual optima1 limit points
without ever converging while source rates converge to the
unique primal optimal vector. This is illustrated in figure
3(c) where the link prices oscillate but the source rates have
converged to the unique primal optimal.
B. Random Early Marking
Random Early Marking simplifies greatly communica-
tion between links and sources. In this section we present
IEEE INFOCOM 2000
160-240 33.3 166.6 166.6 133.3 133.3
1 240-300 I 200 1
- 1 50* 1 50* I
EQUILIBRIUM
Fig. 2. Network Topology
the results of our simulations using Random Early Mark-
ing. The simulation scenario is identical to that used for
the results in the previous section. Figure 4 shows the re-
sults for REM: first using the algorithm A2, then with the
exact deadbeat controller, and finally using the approximate
deadbeat controller. The results are similar to those of the
last subsection. While the use of binary feedback introduces
extra oscillation around the equilibrium values, the oscilla-
tions are relatively small in magnitude. Again the use of
the deadbeat controller (both in the exact and approximate
form) speeds up system convergence and reduces the buffer
requirement.
V. CONCLUSION
We have derived an enhanced REM algorithm for Inter-
net flow control and illustrated the performance improve-
ment through simulation. The basic idea is to stabilize the
transient behavior of the optimization algorithm of which
REM is an implementation, by averaging over past prices.
The averaging allows us to place the poles of the linearized
system around the origin, ensuring exponential convergence
locally. Simulation shows significant improvement in con-
vergence and performance (buffering requirement) over the
original REM. More importantly, perhaps, this procedure
demonstrates the advantage of the optimization framework
which allows a systematic refinement of practical flow con-
trol schemes.
We now comment on limitations of this preliminary
work. The control law of Section 111-C, though much sim-
pler than the exact deadbeat controller, still involves signifi-
cant overhead. It requires a link I to know p a (p’) of sources
s going through link 1 and their round trip delays. This may
be impractical for a large network.
may be easy to
determine, e.g., for the quadratic utility functions used in
Section IV, p,(p‘) is (approximately) a constant which can
be communicated to the links during connection setup. We
have also tried simple rules such as choosing
reciprocal of the number of sources at link 1 and it seems
to work fine. We are currently investigating ways to sys-
tematically derive simpler control laws with provably good
performance.
0-7803-5880-5/00/$10.00
(c) 2000 IEEE