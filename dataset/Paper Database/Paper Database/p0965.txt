Effects of high-order correlations on personalized
recommendations for bipartite networks
Jian-Guo Liu a,b,c, Tao Zhou a,b,c, Hong-An Che a,
Bing-Hong Wang a,c, and Yi-Cheng Zhang a,b,c
aResearch Center of Complex Systems Science, University of Shanghai for Science and
Technology, Shanghai 200093, PR China
bDepartment of Physics, University of Fribourg, Chemin du Mus´ee 3, CH-1700 Fribourg,
Switzerland
cDepartment of Modern Physics, University of Science and Technology of China, Hefei
230026, PR China
In this paper, we introduce a modiﬁed collaborative ﬁltering (MCF) algorithm, which has
remarkably higher accuracy than the standard collaborative ﬁltering. In the MCF, instead of
the cosine similarity index, the user-user correlations are obtained by a diffusion process.
Furthermore, by considering the second-order correlations, we design an effective algorithm that depresses the inﬂuence of mainstream preferences. Simulation results show that
the algorithmic accuracy, measured by the average ranking score, is further improved by
20.45% and 33.25% in the optimal cases of MovieLens and Netﬂix data. More importantly,
the optimal value λopt depends approximately monotonously on the sparsity of the training
set. Given a real system, we could estimate the optimal parameter according to the data
sparsity, which makes this algorithm easy to be applied. In addition, two signiﬁcant criteria
of algorithmic performance, diversity and popularity, are also taken into account. Numerical results show that as the sparsity increases the algorithm considered the second-order
correlation can outperform the MCF simultaneously in all three criteria.
Key words: Recommender systems, Bipartite networks, Collaborative ﬁltering.
PACS: 89.75.Hc, 87.23.Ge, 05.70.Ln
Email addresses: (Jian-Guo Liu), 
(Tao Zhou).
 
31 October 2018
Introduction
With the expansion of the Internet services, people are becoming increasingly dependent on the Internet with an information overload. Consequently, how to ef-
ﬁciently help people ﬁnd information that they truly need is a challenging task
nowadays . Being an effective tool to address this problem, the recommender
system has caught increasing attention and become an essential issue in Internet
applications such as e-commerce system and digital library system . Motivated
by the practical signiﬁcance to the e-commerce and society, the design of an efﬁcient recommendation algorithm becomes a joint focus from engineering science to
mathematical and physical community. Various kinds of algorithms have been proposed, such as correlation-based methods , content-based methods ,
spectral analysis , iteratively self-consistent reﬁnement , principle component analysis , network-based methods , and so on. For a review
of current progress, see Ref. and the references therein.
One of the most successful recommendation algorithms, called collaborative ﬁltering (CF), has been developed and extensively investigated over the past decade
 . When predicting the potential interests of a given user, such approach
ﬁrstly identiﬁes a set of similar users from the past records and then makes a prediction based on the weighted combination of those similar users’ opinions. Despite
its wide applications, collaborative ﬁltering suffers from several major limitations
including system scalability and accuracy . Recently, some physical dynamics, including mass diffusion (MD) and heat conduction (HC) , have
found their applications in personalized recommendations. Based on MD and HC,
several effective network-based recommendation algorithms have been proposed
 . These algorithms have been demonstrated to be of both high accuracy and low computational complexity. However, the algorithmic accuracy and
computational complexity may be very sensitive to the statistics of data sets. For
example, the algorithm presented in Ref. runs much faster than the standard CF
if the number of users is much larger than that of objects, while when the number
of objects is huge, the advantage of this algorithm vanishes because its complexity
is mainly determined by the number of objects (see Ref. for details). Since the
CF algorithm has been extensively applied in the real e-commerce systems ,
it’s meaningful to ﬁnd some ways to increase the algorithmic accuracy of CF. We
therefore present a modiﬁed collaborative ﬁltering (MCF) method, in which the
user correlation is deﬁned based on the diffusion process. Recently, Liu et al. 
studied the user and object degree correlation effect to CF, they found that the algorithm accuracy could be remarkably improved by adjusting the user and object
degree correlation. In this paper, we argue that the high-order correlations should
be taken into account to depress the inﬂuence of mainstream preferences and the
accuracy could be improved in this way. The correlation between two users is, in
principle, an integration of many underlying similar tastes. For two arbitrary users,
the very speciﬁc yet common tastes shall contribute more to the similarity mea-
Fig. 1. Illustration of the user correlation network. The users A, B and C are correlated
because they have collected some common objects, where object 1 has been collected by
all of the three users, while object 2 is only collected by user A and C.
sure than those mainstream tastes. Figure 1 shows an illustration of how to ﬁnd
the speciﬁc tastes by eliminating the mainstream preference. To the users A and C,
the commonly selected objects 1 and 2 could reﬂect their tastes, where 1 denotes
the mainstream preference shared by all A, B and C, and 2 is the speciﬁc taste of
A and C. Both 1 and 2 contribute to the correlation between A and C. Since 1 is
the mainstream preference, it also contributes to the correlations between A and
B, as well as B and C. Tracking the path A →B →C, the mainstream preference 1 could be identiﬁed by considering the second-order correlation between
A and C. Statistically speaking, two users sharing many mainstream preferences
should have high second-order correlation, therefore we can depress the inﬂuence
of mainstream preferences by taking into account the second-order correlation. The
numerical results show that the algorithm involving high-order correlations is much
more accurate and provides more diverse recommendations.
Problem description and performance metrics
Denote the object set as O = {o1, o2, · · · , om} and the user set as U = {u1, u2,
· · · , un}, a recommender system can be fully described by an adjacent matrix
A = {aij} ∈Rm,n, where aij = 1 if oi is collected by uj, and aij = 0 otherwise.
For a given user, a recommendation algorithm generates an ordered list of all the
objects he/she has not collected before.
To test the recommendation algorithmic accuracy, we divide the data set into two
parts: one is the training set used as known information for prediction, and the
other one is the probe set, whose information is not allowed to be used. Many
metrics have been proposed to judge the algorithmic accuracy, including precision
 , recall , F-measure , average ranking score , and so on. Since the
average ranking score does not depend on the length of recommendation list, we
adopt it in this paper. Indeed, a recommendation algorithm should provide each
user with an ordered list of all his/her uncollected objects. For an arbitrary user
ui, if the entry ui-oj is in the probe set (according to the training set, oj is an
uncollected object for ui), we measure the position of oj in the ordered list. For
example, if there are Li = 100 uncollected objects for ui, and oj is the 10th from
the top, we say the position of oj is 10/100, denoted by rij = 0.1. Since the probe
entries are actually collected by users, a good algorithm is expected to give high
recommendations, leading to small rij. Therefore, the mean value of the position
rij, ⟨r⟩(called average ranking score ), averaged over all the entries in the
probe, can be used to evaluate the algorithmic accuracy: the smaller the ranking
score, the higher the algorithmic accuracy, and vice verse. For a null model with
randomly generated recommendations, ⟨r⟩= 0.5.
Besides accuracy, the average degree of all recommended objects, ⟨k⟩, and the
mean value of Hamming distance, S, are taken into account to measure the algorithmic popularity and diversity . The smaller average degree, corresponding
to the less popular objects, are preferred since those lower-degree objects are hard
to be found by users themselves. In addition, the personal recommendation algorithm should present different recommendations to different users according to their
tastes and habits. The diversity can be quantiﬁed by the average Hamming distance,
S = ⟨Hij⟩, where Hij = 1 −Qij/L, L is the length of recommendation list, and
Qij is the overlapped number of objects in ui’s and uj’s recommendation lists. The
higher S indicates a more diverse and thus more personalized recommendations.
Modiﬁed collaborative ﬁltering algorithm based on diffusion process
In the standard CF, the correlation between ui and uj can be evaluated directly by
the well-known cosine similarity index
l=1 alialj
k(ui)k(uj)
where k(ui) = Pm
l=1 ali is the degree of user ui. Inspired by the diffusion process
presented by Zhou et al. , the user correlation network can be obtained by
projecting the user-object bipartite network. How to determine the edge weight
is the key issue in this process. We assume a certain amount of resource (e.g.,
recommendation power) is associated with each user, and the weight sij represents
the proportion of the resource uj would like to distribute to ui. This process could
be implemented by applying the network-based resource-allocation process on
a user-object bipartite network where each user distributes his/her initial resource
equally to all the objects he/she has collected, and then each object sends back what
it has received to all the users who collected it, the weight sij (the fraction of initial
resource uj eventually gives to ui) can be expressed as:
Sparsity of the training set
Netflix data
Fig. 2. The optimal λopt and the improvement (IP) vs. the sparsity of the training sets. All
the data points are averaged over ten independent runs with different data-set divisions. The
results corresponding to Netﬂix data are marked.
where k(ol) = Pn
i=1 ali denotes the degree of object ol. For the user-object pair
(ui, oj), if ui has not yet collected oj (i.e., aji = 0), the predicted score, vij, is given
l=1 sliajl
Based on the deﬁnitions of sij and vij, given a target user ui, the MCF algorithm is
given as following
(i) Calculating the user correlation matrix {sij} based on the diffusion process, as
shown in Eq. (2);
(ii) For each user ui, based on Eq. (3), calculating the predicted scores for his/her
uncollected objects;
(iii) Sorting the uncollected objects in descending order of the predicted scores,
and those objects in the top will be recommended.
The standard CF and the MCF have similar process, and their only difference is
that they adopt different measures of user-user correlation (i.e., sc
ij for the standard
CF and sij for MCF).
Fig. 3. Average degree of recommended objects, ⟨k⟩, vs. λ when p = 0.9. Squares, circles
and triangles represent lengths L = 10, 20 and 50, respectively. The black point (•) corresponds to the average degree obtained by the standard CF with L = 20. All the data points
are averaged over ten independent runs with different data-set divisions.
Numerical results of MCF
We use two benchmark data sets, one is MovieLens 1 , which consists of 1682
movies (objects) and 943 users. The other one is Netﬂix 2 , which consists of 3000
movies and 3000 users (we use a random sample of the whole Netﬂix dataset). The
users vote movies by discrete ratings from one to ﬁve. Here we applied a coarsegraining method : A movie is set to be collected by a user only if the giving
rating is larger than 2. In this way, the MovieLens data has 85250 edges, and the
Netﬂix data has 567456 edges. The data sets are randomly divided into two parts:
the training set contains p percent of the data, and the remaining 1 −p part constitutes the probe.
Implementing the standard CF and MCF when p = 0.9, the average ranking scores
on MovieLens and Netﬂix data are improved from from 0.1168 to 0.1038 and from
0.2323 to 0.2151, respectively. Clearly, using the simply diffusion-based simlarity,
subject to the algorithmic accuracy, the MCF outperforms the standard CF. The
corresponding average object degree and diversity are also improved (see Fig.3 and
Fig.4 below).
 
2 
Fig. 4. S vs. λ when p = 0.9. Squares, circles and triangles represent the lengths L = 10, 20
and 50, respectively. The black point (•) corresponds to the diversity obtained by the standard CF with L = 20. All the data points are averaged over ten independent runs with
different data-set divisions.
Improved algorithm
To investigate the effect of second-order user correlation to algorithm performance,
we use a linear form to investigate the effect of the second-order user correlation to
MCF, where the user similarity matrix could be demonstrated as
H = S + λS2,
where H is the newly deﬁned correlation matrix, S = {sij} is the ﬁrst-order correlation deﬁned as Eq. (2), and λ is a tunable parameter. As discussed before, we
expect the algorithmic accuracy can be improved at some negative λ.
When p = 0.9, the algorithmic accuracy curves of MovieLens and Netﬂix have
clear minimums around λ = −0.82 and λ = −0.84, which strongly support the
above discussion. Compared with the routine case (λ = 0), the average ranking
scores can be further reduced to 0.0826 (improved 20.45%) and 0.1436( improved
33.25%) at the optimal values. It is indeed a great improvement for recommendation algorithms. Since the data sparsity can be turned by changing p, we investigate
the effect of the sparsity on the two data sets respectively, and ﬁnd that although we
test the algorithm on two different data sets, the optimal λopt are strongly correlated
with the sparsity in a uniform way for both MovieLens and Netﬂix. Figure 2 shows
that when the sparsity increases, λopt will decrease, and the improvement of the average ranking scores will increase. These results can be treated as a good guideline
for selecting optimal λ of different data sets. Figure 3 reports the average degree
Algorithmic performance for MovieLens data when p = 0.9. The precision, diversity and
popularity are corresponding to L = 50. NBI is an abbreviation of the network-based recommendation algorithm, proposed in Ref. . Heter-NBI is an abbreviation of NBI with
heterogenous initial resource distribution, proposed in Ref. . CB-CF is an abbreviation
of the correlation-based collaborative ﬁltering method, proposed in Ref. . Improved
MCF is an abbreviation of the algorithm presented in this paper. The parameters in Heter-
NBI and IMCF are set as the ones corresponding to the lowest ranking scores (for Heter-
NBI , βopt = −0.80; for CB-CF , λopt = −0.96; for IMCF, λopt = −0.82). Each
number presented in this table is obtained by averaging over ten runs, each of which has an
independently random division of training set and probe.
Algorithms
of all recommended objects as a function of λ. One can see from Fig. 3 that when
p = 0.9 the average object degree is positively correlated with λ, thus to depress
the inﬂuence of mainstream interests gives more opportunity to the less popular
objects, which could bring more information to the users than the popular ones.
When the list length, L, bing equal to 20, at the optimal point λopt = −0.82, the
average degree is reduced by 29.3% compared with the standard CF. When p = 0.9,
Fig. 4 exhibits a negative correlation between S and λ, indicating that to consider
the second-order correlations makes the recommendation lists more diverse. When
L = 20, the diversity S is increased from 0.592 (corresponding to the standard CF)
to 0.880 (corresponding to the case λ = −0.82 in the improved algorithm). Figure
3 and Figure 4 show how the parameter λ affects the average object degree ⟨k⟩and
diversity S, respectively. Clearly, the smaller λ leads to less popularity and higher
diversity, and thus the present algorithm can ﬁnd its advantage in recommending
novel objects with diverse topics to users, compared with the standard CF. Generally speaking, the popular objects must have some attributes ﬁtting the tastes of the
masses of the people. The standard CF may repeatedly count those attributes and
assign more power for the popular objects, which increases the average object degree and reduces the diversity. The present algorithm with negative λ can to some
extent eliminate the redundant correlations and give higher chances to less popular
objects and the objects with diverse topics different from the mainstream .
Conclusions
In this paper, a modiﬁed collaborative ﬁltering algorithm is presented to improve
the algorithmic performance. The numerical results indicate that the usage of diffusion based correlation could enhance the algorithmic accuracy. Furthermore, by
considering the second-order correlations, S2, we presented an effective algorithm
that has remarkably higher accuracy. Indeed, when p = 0.9 the simulation results
show that the algorithmic accuracy can be further improved by 20.45% and 33.25%
on MovieLens and Netﬂix data. Interestingly, we found even for different data sets,
the optimal value of λ exhibits a uniform tendency versus sparsity. Therefore, if
we know the sparsity of the training set, the corresponding optimal λopt could be
approximately conﬁrmed. In addition, when the sparsity gets less than 1%, the improved algorithm wouldn’t be effective any more, while as the sparsity increases,
the improvement of the presented algorithm is enlarged.
Ignoring the degree-degree correlation in user-object entries, The algorithmic complexity of MCF is O(m⟨ku⟩⟨ko⟩+ mn⟨ko⟩), where ⟨ku⟩and ⟨ko⟩denote the average degrees of users and objects. The ﬁrst term accounts for the calculation of
user correlation, and the second term accounts for the one of the predictions. It
approximates to O(mn⟨ko⟩) for n ≫⟨ku⟩. Clearly, the computational complexity of MCF is much less than that of the standard CF especially for the systems
consisted of huge number of objects. In the improved algorithm, in order to calculate the second-order correlations, the diffusion process must ﬂow from the user
to the objects twice, therefore, the algorithmic complexity of the improved algorithm is O(n⟨ku⟩2⟨ko⟩2 + mn⟨ko⟩). Since the magnitude order of the object m is
always much larger than the ones of ⟨ku⟩and ⟨ko⟩, the improved algorithm is also
as comparably fast as the standard CF.
Beside the algorithmic accuracy, two signiﬁcant criteria of algorithmic performance,
average degree of recommended objects and diversity, are taken into account. A
good recommendation algorithm should help the users uncovering the hidden (even
dark) information, corresponding those objects with very low degrees. Therefore,
the average degree is a meaningful measure for a recommendation algorithm. In addition, since a personalized recommendation system should provide different recommendations lists according to the user’s tastes and habits , diversity plays
a crucial role to quantify the personalization . The numerical results show
that the present algorithm outperforms the standard CF in all three criteria. How
to automatically ﬁnd out relevant information for diverse users is a long-standing
challenge in the modern information science, we believe the current work can enlighten readers in this promising direction.
How to automatically ﬁnd out relevant information for diverse users is a longstanding challenge in the modern information science, the presented algorithm also
could be used to ﬁnd the relevant reviewers for the scientiﬁc papers or funding ap-
plications , and the link prediction in social and biological networks .
We believe the current work can enlighten readers in this promising direction.
We acknowledge GroupLens Research Group for providing us the data. This work
is partially supported by and National Basic Research Program of China (No.
2006CB705500), the National Natural Science Foundation of China (Nos. 10905052,
70901010, 60744003), the Swiss National Science Foundation (Project 205120-
113842), and Shanghai Leading Discipline Project (No. S30501). T.Z. acknowledges the National Natural Science Foundation of China under Grant Nos. 10635040
and 60973069.