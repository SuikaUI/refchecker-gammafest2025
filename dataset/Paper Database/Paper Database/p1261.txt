Technological University Dublin
Technological University Dublin
ARROW@TU Dublin
ARROW@TU Dublin
School of Science and Computing (Former ITT)
Performance Comparison of Support Vector Machine, Random
Performance Comparison of Support Vector Machine, Random
Forest, and Extreme Learning Machine for Intrusion Detection
Forest, and Extreme Learning Machine for Intrusion Detection
Iftikhar Ahmad
King Abdulaziz University, Saudi Arabia, 
Muhammad Javed Iqbal
University of Engineering and Technology Taxila, Pakistan
Mohammad Basheri
King Abdulaziz University, Saudi Arabia
See next page for additional authors
Follow this and additional works at: 
Part of the Computer Engineering Commons, and the Computer Sciences Commons
Recommended Citation
Recommended Citation
Ahmad, I. et al. Performance Comparison of Support Vector Machine, Random Forest, and
Extreme Learning Machine for Intrusion Detection, IEEE Access, vol. 6, pp. 33789-33795, 2018. DOI
:10.1109/ACCESS.2018.2841987
This Article is brought to you for free and open access by the School of Science and Computing (Former ITT) at
ARROW@TU Dublin. It has been accepted for inclusion in Articles by an authorized administrator of ARROW@TU
Dublin. For more information, please contact , ,
 .
Iftikhar Ahmad, Muhammad Javed Iqbal, Mohammad Basheri, and Aneel Rahim
This article is available at ARROW@TU Dublin: 
SPECIAL SECTION ON SURVIVABILITY STRATEGIES FOR EMERGING WIRELESS NETWORKS
Received April 15, 2018, accepted May 18, 2018, date of publication May 30, 2018, date of current version July 6, 2018.
Digital Object Identifier 10.1109/ACCESS.2018.2841987
Performance Comparison of Support Vector
Machine, Random Forest, and Extreme Learning
Machine for Intrusion Detection
IFTIKHAR AHMAD
1, MOHAMMAD BASHERI1, MUHAMMAD JAVED IQBAL2,
AND ANEEL RAHIM3
1Department of Information Technology, Faculty of Computing and Information Technology, King Abdulaziz University, Jeddah 21589, Saudi Arabia
2Department of Computer Science, University of Engineering and Technology Taxila, Taxila 47080, Pakistan
3School of Computing, Dublin Institute of Technology, Dublin, D08 X622 Ireland
Corresponding author: Iftikhar Ahmad ( )
This work was supported in part by the IT Department, KAU, Saudi Arabia, and in part by the Deanship of Scientiﬁc Research (DSR) at
King Abdulaziz University, Jeddah. The authors, therefore, acknowledge with thanks DSR for technical and ﬁnancial support.
ABSTRACT Intrusion detection is a fundamental part of security tools, such as adaptive security appliances,
intrusion detection systems, intrusion prevention systems, and ﬁrewalls. Various intrusion detection techniques are used, but their performance is an issue. Intrusion detection performance depends on accuracy,
which needs to improve to decrease false alarms and to increase the detection rate. To resolve concerns
on performance, multilayer perceptron, support vector machine (SVM), and other techniques have been
used in recent work. Such techniques indicate limitations and are not efﬁcient for use in large data sets,
such as system and network data. The intrusion detection system is used in analyzing huge trafﬁc data;
thus, an efﬁcient classiﬁcation technique is necessary to overcome the issue. This problem is considered in
this paper. Well-known machine learning techniques, namely, SVM, random forest, and extreme learning
machine (ELM) are applied. These techniques are well-known because of their capability in classiﬁcation.
The NSL–knowledge discovery and data mining data set is used, which is considered a benchmark in the
evaluation of intrusion detection mechanisms. The results indicate that ELM outperforms other approaches.
INDEX TERMS Detection rate, extreme learning machine, false alarms, NSL–KDD, random forest, support
vector machine.
I. INTRODUCTION
Intrusion is a severe issue in security and a prime problem
of security breach, because a single instance of intrusion can
steal or delete data from computer and network systems in
a few seconds. Intrusion can also damage system hardware.
Furthermore, intrusion can cause huge losses ﬁnancially and
compromise the IT critical infrastructure, thereby leading
to information inferiority in cyber war. Therefore, intrusion
detection is important and its prevention is necessary.
Different intrusion detection techniques are available, but
their accuracy remains an issue; accuracy depends on detection and false alarm rate. The problem on accuracy needs
to be addressed to reduce the false alarms rate and to
increase the detection rate. This notion was the impetus for
this research work. Thus, support vector machine (SVM),
random forest (RF), and extreme learning machine (ELM)
are applied in this work; these methods have been proven
effective in their capability to address the classiﬁcation
Intrusion detection mechanisms are validated on a standard
dataset, KDD. This work used the NSL–knowledge discovery
and data mining (KDD) dataset, which is an improved form
of the KDD and is considered a benchmark in the evaluation
of intrusion detection methods.
The remainder of the paper is organized as detailed below.
The related work is presented in Section II. The proposed
model of intrusion detection to which different machine
learning techniques are applied is described in Section III.
The implementation and results are discussed in Section IV.
The paper is concluded in Section V, which provides a summary and directions for future work.
II. RELATED WORK
Securing computer and network information is important for
organizations and individuals because compromised information can cause considerable damage. To avoid such circumstances, intrusion detection systems are important. Recently,
different machine learning approaches have been proposed
VOLUME 6, 2018
2018 IEEE. Translations and content mining are permitted for academic research only.
Personal use is also permitted, but republication/redistribution requires IEEE permission.
See for more information.
I. Ahmad et al.: Performance Comparison of SVM, RF, and ELM for Intrusion Detection
to improve the performance of intrusion detection systems.
Wang et al. proposed an intrusion detection framework
based on SVM and validated their method on the NSL–KDD
dataset. They claimed that their method, which has 99.92%
effectiveness rate, was superior to other approaches; however,
they did not mention used dataset statistics, number of training, and testing samples. Furthermore, the SVM performance
decreases when large data are involved, and it is not an
ideal choice for analyzing huge network trafﬁc for intrusion
detection.
Kuang et al. applied a hybrid model of SVM and KPCA
with GA to intrusion detection, and their system showed 96%
detection rate. They used the KDD CUP99 dataset for the
veriﬁcation of their system, but this dataset is characterized
by limitations. One example is redundancy, which causes the
classiﬁer to be biased to more frequently occurring records.
They applied KPCA for feature reduction, and it is limited
by the possibility of missing important features because of
selecting top percentages of the principal component from
the principal space. In addition, the SVM is not appropriate
for heavy data such as monitoring the high bandwidth of the
Intrusion detection systems provide assistance in detecting, preventing, and resisting unauthorized access. Thus,
Aburomman and Reaz proposed an ensemble classiﬁer
method, which is a combination of PSO and SVM; this
classiﬁer outperformed other approaches with 92.90% accuracy. They used the knowledge discovery and data mining
1999 (KDD99) dataset, which has the previously mentioned
drawbacks. Furthermore, the SVM is not a good choice for
huge data analyses, because its performance degrades as data
size increases.
Raman et al. proposed an intrusion detection mechanism based on hypergraph genetic algorithm (HG-GA) for
parameter setting and feature selection in SVM. They claimed
that their method outperformed the existing approaches with
a 97.14 % detection rate on an NSL–KDD dataset; it has been
used for experimentation and validation of intrusion detection
The security of network systems is one of the most critical
issues in our daily lives, and intrusion detection systems are
signiﬁcant as prime defense techniques. Thus, Teng et al. 
conducted important work. They developed their model based
on decision trees (DTs) and SVMs, and they tested their
model on a KDD CUP 1999 dataset. The results showed an
accuracy reaching 89.02%. However, SVMs are not preferred
for heavy datasets because of the high computation cost and
poor performance.
Farnaaz and Jabbar developed a model for an intrusion detection system based on RF. They tested the effectiveness of their model on an NSL–KDD dataset, and their
results demonstrated a 99.67% detection rate compared with
J48. The main limitation of the RF algorithm is that many
trees may make the algorithm slow for real-time prediction.
Elbasiony et al. proposed a model of intrusion detection
based on RF and weighted k-means; they validated their
model over the KDD99 dataset. The system demonstrated
results with 98.3% accuracy. The RF is not suitable for
predicting real trafﬁc because of its slowness, which is due
to the formation of a large number of trees. Additionally,
the KDD99 dataset indicates few limitations as aforementioned.
III. PROPOSED MODEL
The key phases of the proposed model include the dataset,
pre-processing, classiﬁcation, and result evaluation. Each
phase of the proposed system is important and adds valuable
inﬂuence on its performance. The core focus of this work is
to investigate the performance of different classiﬁers, namely,
SWM, RF, and ELM in intrusion detection. Figure 1 demonstrates the model of intrusion detection system proposed in
this work.
FIGURE 1. Proposed model of intrusion detection system.
A. DATASET
Dataset selection for experimentation is a signiﬁcant task,
because the performance of the system is based on the correctness of a dataset. The more accurate the data, the greater
the effectiveness of the system. The dataset can be collected by numerous means, such as 1) sanitized dataset,
2) simulated dataset, 3) testbed dataset, and 4) standard
dataset . However, complications occur in the application of the ﬁrst three methodologies. A real trafﬁc method
is expensive, whereas the sanitized method is unsafe. The
development of a simulation system is also complex and
challenging. Additionally, different types of trafﬁc are
required to model various network attacks, which is complex
and costly. To overcome these difﬁculties, the NSL–KDD
dataset is used to validate the proposed system for intrusion
detection.
VOLUME 6, 2018
I. Ahmad et al.: Performance Comparison of SVM, RF, and ELM for Intrusion Detection
B. PRE-PROCESSING
The classiﬁer is unable to process the raw dataset because
of some of its symbolic features. Thus, pre-processing is
essential, in which non-numeric or symbolic features are
eliminated or replaced, because they do not indicate vital
participation in intrusion detection. However, this process
generates overhead including more training time; the classi-
ﬁer’s architecture becomes complex and wastes memory and
computing resources. Therefore, the non-numeric features
are excluded from the raw dataset for improved performance
of intrusion detection systems.
C. CLASSIFICATION
Placing an activity into normal and intrusive categories is
the core function of an intrusion detection system, which
is known as an intrusive analysis engine. Thus, different
classiﬁers have been applied as intrusive analysis engines
in intrusion detection in the literature, such as multilayer
perceptron, SVM, naive Bayes, self-organizing map, and DT.
However, in this study, the three different classiﬁers of
SVM, RF, and ELM are applied based on their proven ability in classiﬁcation problems. Details of each classiﬁcation
approach are provided.
1) SUPPORT VECTOR MACHINE
SVMs were initially proposed by Vapnik for solving
problems of classiﬁcation and regression analysis . SVM
is a supervised learning technique that is trained to classify
different categories of data from various disciplines. These
have been used for two-class classiﬁcation problems and are
applicable on both linear and non-linear data classiﬁcation
tasks. SVM creates a hyperplane or multiple hyperplanes
in a high-dimensional space, and the best hyperplane in
them is the one that optimally divides data into different
classes with the largest separation between the classes. A
non-linear classiﬁer uses various kernel functions to estimate
the margins. The main objective of these kernel functions
(i.e., linear, polynomial, radial basis, and sigmoid) is to maximize margins between hyper-planes. Recently, many highly
promising applications have been developed by researchers
because of the increasing interest in SVMs . SVM has
been widely used in image processing and pattern recognition
applications.
Figure 2 illustrates the architecture of the SVM classi-
ﬁcation model in the proposed intrusion detection system.
We have used the radial basis function (RBF) kernel for
the implementation of the SVM model in the proposed system. The kernel function uses squared Euclidean distance
between two numeric vectors and maps input data to a
high dimensional space to optimally separate the given data
into their respective attack classes. Therefore, kernel RBF
is particularly effective in separating sets of data that share
complex boundaries. In our study, all the simulations have
been conducted using the freely available LibSVM package . Given that the chosen problem is a multiclass
FIGURE 2. Architecture of SVM for intrusion detection.
classiﬁcation problem, it uses the notion of one vs all for
attack classiﬁcation. In this notion, the multiclass problem
is divided into a two-class problem. The radial basis function (RBF) kernel is used in this study, which is represented
as follows:
K (x, y) = e−γ ∥x−y∥2,
For given training samples (xi, yi), i = 1, 2, . . . n, where i is
the maximum number of samples in the training data, xi ∈Rn
and yi ∈{1, −1}, where 1 shows samples from a positive
class and −1 represents sequences from the negative class.
When using SVM, the solution of the following problem is
subject to yi
 wT wφ (xi) + b
Here, φ transforms the training vector xi to the higher dimensional space. Following this, the SVM shows a hyper-plane
having a maximum margin to separate different classes of
The observed results via the SVM model are not signiﬁcantly convincing compared with those from the other
classiﬁers. The advantage of SVM is that minimal parameter
adjustment is required. The disadvantages of it include the
requirements of a Gaussian function for each instance of
the training set, thereby increasing training time and performance degradation on very large datasets with thousands
of instances, as in the case classiﬁcation. In case maximum
margin classiﬁer fails to ﬁnd any separating hyperplane, soft
margin is used to overcome this problem. Soft margin uses
positive slack variables ξi, i = 1, 2, . . . , N in the constraints,
as follows:
(w. xi −b) ≥+1 −ξi
for yi = +1
(w. xi −b) ≥−1 + ξi
for yi = −1
When an error occurs, ξi must exceed unity. Then, P
is an upper bound on the training error. The Lagrange in this
VOLUME 6, 2018
I. Ahmad et al.: Performance Comparison of SVM, RF, and ELM for Intrusion Detection
situation is as follows:
i αi {yi (xi.w −b) −1 + ξi} −
where, µi represents Lagrange multipliers used to obtain the
positive value of ξi.
2) RANDOM FORES
RFs are ensemble classiﬁers, which are used for classiﬁcation and regression analysis on the intrusion detection data.
RF works by creating various decision trees in the training phase and output class labels those have the majority
vote . RF attains high classiﬁcation accuracy and can
handle outliers and noise in the data. RF is used in this
work because it is less susceptible to over-ﬁtting and it has
previously shown good classiﬁcation results.
FIGURE 3. Architecture of the RF for intrusion detection system.
Figure 3 shows the implementation of the random forest
classiﬁcation model in the data classiﬁcation in the proposed system. A pre-processed sample of n samples is fed
to the random forest classiﬁer. RF creates n different trees
by using a number of feature subsets. Each tree produces a
classiﬁcation result, and the result of the classiﬁcation model
depends on the majority voting. The sample is assigned to
the class that obtains highest voting scores. The previously
attained classiﬁcation results indicate that RF is reasonably
suitable in the classiﬁcation of such data because in some
cases, it has obtained better results than have other classiﬁers.
Other advantages of the RF include its higher accuracy than
Adaboost and fewer chances of overﬁtting.
3) EXTREME LEARNING MACHINE
ELM is another name for single or multiple hidden layer
feedforward neural networks . ELM can be used to
solve various classiﬁcation, clustering, regression, and feature engineering problems. This learning algorithm involves
input layer, one or multiple hidden layers and the output layer.
In the traditional neural networks, the tasks of adjustment
of the input and hidden layer weights are very computationally expensive and time-consuming because it requires
multiple rounds to converge. To overcome this problem,
FIGURE 4. Architecture of the extreme learning machine for intrusion
detection.
Huang et al. . proposed an SLFN by arbitrarily selecting
input weights and hidden layer biases to minimize the training time. The comprehensive detail of ELM is available in
Huang et al. . and Qayyum et al. . The authors claim
that these models learn faster and attain higher generalization capability as compared with other feedforward network
models. ELM performance is comparable with SVM or other
state-of-the-art machine learning classiﬁers. ELM has the
greatest ability to perform better in highly complex datasets.
The architecture of the proposed system is shown in Figure 4.
zi = [xi1, xi2, . . . . . . ., xin]T is the ith sample with n different features and yi = [yi1, yi2, . . . . . . ., yim]T describes the
actual labels of xi with traditional SLFN with K hidden
neurons which is deﬁned as follows:
βih (wm.xi + cm) = αi,
i = 1, . . . . . . . . . , N
where wm = [wm1, wm2, . . . . . . ., wmn]T is the chosen
weight vector and indicates an ith hidden neuron connection
with the input nodes. βi = [βi1, βi2, . . . . . . ., βim]T shows
the weight vector with connection of ith hidden neuron and
the output nodes and cm is the threshold of the ith hidden neuron αk = [αk1, αk2, . . . . . . ., αkm]T is the kth output neuron.
h (.) represents the activation function and SLFN used for M
hidden neurons and activation function can approach these
N training samples with zero error. Various other techniques
have been applied to detect and classify intrusion of wired
and wireless environment – .
D. EVALUATION
The designed system is evaluated based on the standard
dataset NSL–KDD, which is randomized and divided into
three parts, namely, the full dataset, the half dataset, and
the 1/4 dataset. The full dataset consists of 65,535 samples,
the half dataset includes 32,767 samples, and the 1/4th dataset
consists of 18,383 samples. Accuracy, precision, and recall
VOLUME 6, 2018
I. Ahmad et al.: Performance Comparison of SVM, RF, and ELM for Intrusion Detection
FIGURE 5. Accuracy of SVM, RF, and ELM (80% training and 20% testing).
are used as evaluation metrics. These metrics are described
here .
Accuracy: Accuracy is computed as ‘‘the total number of
correct prediction, True Positive (TP) + True Negative (TN)
divided by the total number of a dataset Positive (P) + Negative (N)’’.
Accuracy = TP + TN
Precision: Precision is computed as ‘‘the number of correct
positive predictions (TP) divided by the total number of positive predictions (TP + FP)’’. Precision is also known as a
positive predictive value.
Precision =
Recall: Recall is computed as ‘‘the number of correct positive predictions (TP) divided by the total number of positives (P)’’. Recall is also known as the true positive rate or
sensitivity.
Recall = TP
IV. RESULTS
The accuracy of SVM (Linear), SVM (RBF), RF, and ELM
on 20% testing and 80% training data samples is shown
in Figure 5. ELM performs better compared with SVM (Linear), SVM (RBF) and RF on full data samples, whereas SVM
(RBF) indicates improved accuracy over RF and ELM on half
data samples. SVM (Linear) outperforms other techniques on
1/4 data samples, as depicted in Figure 5.
The precision of SVM (Linear), SVM (RBF), RF, and
ELM on 20% testing and 80% training data samples is shown
in Figure 6. The precision of ELM is better than that of
SVM Linear and RBF on the full data samples, and it also
outperforms that of RF. On half data samples, the precision
of SVM (Linear) is higher than that of SVM (RBF), ELM, and
RF. On 1/4th data samples, the precision of SVM (Linear) is
FIGURE 6. Precision of SVM, RF, and ELM (80% training and 20% testing).
FIGURE 7. Recall of SVM, RF, and ELM (80% training and 20% testing).
equal to that of SVM (RBF). Furthermore, the SVM performs
better than ELM and RF in the 1/4 dataset.
The recall of SVM (Linear), SVM (RBF), RF, and ELM
on 20% testing and 80% training data samples is shown
in Figure 7. On full data samples, the recall of ELM performs
better than those of SVM (Linear), SVM (RBF), and RF.
The recall of SVM (Linear) is greater than those of SVM
(RBF), ELM, and RF. The ranking of recall on 1/4 of data
samples is as follows: ﬁrst for SVM (RBF), second for SVM
(Linear), third for RF, and fourth for ELM. The abovementioned discussion indicates that SVM performs better on a
small dataset, whereas EML outperforms others approaches
on large datasets.
The accuracy of SVM (Linear), SVM (RBF), RF, and ELM
on 10% testing and 90% training data samples is shown
in Figure 8. On the full data samples, the accuracy of ELM
is better than that of SVM (linear), SVM (RBF), and RF.
The SVM (RBF) outperforms SVM (Linear), ELM, and RF
VOLUME 6, 2018
I. Ahmad et al.: Performance Comparison of SVM, RF, and ELM for Intrusion Detection
FIGURE 8. Accuracy of SVM, RF, and ELM (90% training and 10% testing).
FIGURE 9. Recall of SVM, RF, and ELM (90% training and 10% testing).
on the half data samples. The SVM (linear) indicates better
performance on 1/4th data samples as compared with SVM
(RBF), RF, and ELM.
The precision of SVM (Linear), SVM (RBF), RF, and ELM
on 10 % testing and 90% training data samples is shown
in Figure 9. The results indicate that the ELM indicates better
precision than RF, SVM (RBF), and SVM (Linear) on full
data samples, whereas SVM (Linear) indicates better precision on the half data samples. Furthermore, SVM (Linear)
performs better than ELM and RF on 1/4th dataset.
The recall of SVM (Linear), SVM (RBF), RF, and RLM
on 10% testing and 90% training data samples is shown
in Figure 10. On full data samples, the recall of ELM outperforms those of SVM (linear), SVM (RBF), and RF, whereas
the recall of SVM (linear) is better than those of SVM
(RBF), ELM, and RF on half data samples. On the 1/4th
data samples, SVM (RBF) is almost equal to SVM (Linear),
whereas it indicates better results over RF and ELM, as shown
in Figure 10.
FIGURE 10. Recall of SVM, RF, and ELM (90% training and 10% testing).
V. CONCLUSION
Intrusion detection and prevention are essential to current and
future networks and information systems, because our daily
activities are heavily dependent on them. Furthermore, future
challenges will become more daunting because of the Internet
of Things. In this respect, intrusion detection systems have
been important in the last few decades. Several techniques
have been used in intrusion detection systems, but machine
learning techniques are common in recent literature. Additionally, different machine learning techniques have been
used, but some techniques are more suitable for analyzing
huge data for intrusion detection of network and information
systems. To address this problem, different machine learning
techniques, namely, SVM, RF, and ELM are investigated and
compared in this work. ELM outperforms other approaches
in accuracy, precision, and recall on the full data samples that
comprise 65,535 records of activities containing normal and
intrusive activities. Furthermore, the SVM indicated better
results than other datasets in half of the data samples and
in 1/4 of the data samples. Therefore, ELM is a suitable
technique for intrusion detection systems that are designed
to analyze a huge amount of data. In future, ELM will be
explored further to investigate its performance in feature
selection and feature transformation techniques.