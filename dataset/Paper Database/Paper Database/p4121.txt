Evaluating the State-of-the-Art of End-to-End Natural
Language Generation: The E2E NLG Challenge
Ondˇrej Duˇseka,b,, Jekaterina Novikovaa,c, Verena Riesera
aInteraction Lab, Heriot-Watt University, Edinburgh, UK
bCharles University, Faculty of Mathematics and Physics, Prague, Czech Republic
cWinterlight Labs, Toronto, Canada
This paper provides a comprehensive analysis of the ﬁrst shared task on End-to-End
Natural Language Generation (NLG) and identiﬁes avenues for future research based
on the results. This shared task aimed to assess whether recent end-to-end NLG systems can generate more complex output by learning from datasets containing higher
lexical richness, syntactic complexity and diverse discourse phenomena. Introducing
novel automatic and human metrics, we compare 62 systems submitted by 17 institutions, covering a wide range of approaches, including machine learning architectures
– with the majority implementing sequence-to-sequence models (seq2seq) – as well
as systems based on grammatical rules and templates. Seq2seq-based systems have
demonstrated a great potential for NLG in the challenge. We ﬁnd that seq2seq systems
generally score high in terms of word-overlap metrics and human evaluations of naturalness – with the winning Slug system being seq2seq-based.
However, vanilla seq2seq models often fail to correctly express a given meaning representation if they lack a strong semantic control mechanism applied during decoding.
Moreover, seq2seq models can be outperformed by hand-engineered systems in terms
of overall quality, as well as complexity, length and diversity of outputs. This research
has inﬂuenced, inspired and motivated a number of recent studies outwith the original
competition, which we also summarise as part of this paper.
Email addresses: (Ondˇrej Duˇsek),
 (Jekaterina Novikova), (Verena Rieser)
 
July 25, 2019
 
1. Introduction
This paper provides a comprehensive ﬁnal report and extended analysis of the ﬁrst
shared task on End-to-End (E2E) Natural Language Generation (NLG), substantially
extending previous reports . In addition to this previous work, we provide a corrected and extended
evaluation of the training dataset, as well as a detailed discussion of how current stateof-the-art systems address E2E generation challenges, including semantic accuracy and
diversity of outputs, and a comparison of techniques used by the submitted systems
with systems outside the competition. We then include a substantially expanded evaluation of the systems using novel automatic metrics, accounting for output complexity,
diversity and semantic correctness. In addition, we provide an analysis of system output similarity and conﬁrm that systems using similar techniques, e.g. seq2seq, produce
similar outputs. We also provide a detailed error analysis with examples of system outputs. This extended evaluation allows us reach some more in-depth insights about the
strength and weaknesses of end-to-end generation systems. Finally, we discuss directions for future work with respect to end-to-end generation, as well as NLG evaluation
in general. In addition, this paper accompanies a release of all the participating systems’ outputs on the test set along with the human ratings collected in the evaluation
Shared challenges have become an established way of pushing research boundaries
in the ﬁeld of Natural Language Processing, with NLG benchmarking tasks running
since 2007 . These previous shared tasks have demonstrated that
large-scale, comparative evaluations are vital for identifying future research challenges
in NLG . The E2E NLG shared task is novel in that it poses
new challenges for recent end-to-end, data-driven NLG systems. This type of systems promises rapid development of NLG components in new domains by reducing
annotation eﬀort: They jointly learn sentence planning and surface realisation from
non-aligned data, e.g. . As such, these approaches do not require costly semantic alignment
between meaning representations (MRs) and the corresponding natural language reference texts (also referred to as “ground truths” or “targets”), but they are trained on
parallel datasets, which can be collected in suﬃcient quality and quantity using eﬀective crowdsourcing techniques, e.g. .
At the start of the E2E NLG Challenge, end-to-end approaches to NLG were limited to small, delexicalised datasets, e.g. BAGEL , SF Hotels/
Restaurants , or RoboCup . Therefore,
end-to-end methods have not been able to replicate the rich dialogue and discourse phenomena targeted by previous rule-based and statistical approaches for language generation in dialogue, e.g. . In this paper, we describe a large-scale shared task
based on a new crowdsourced dataset of 50k instances in the restaurant domain (see
Section 3). In Section 4, we show that the dataset poses new challenges, such as open
vocabulary, complex syntactic structures and diverse discourse phenomena, and that it
inspired multiple extensions and further data collection since its original release.
Our shared task aims to assess whether the novel end-to-end NLG systems are
able to produce more complex outputs given a larger and richer training dataset. We
received 62 system submissions by 17 institutions from 11 countries for the E2E NLG
Challenge, with about 1⁄3 of these submissions coming from industry, as summarised
in Section 5. We consider this level of participation an unexpected success, which
underlines the timeliness of this task1 and allows us to reach general conclusions and
issue recommendations on the suitability of diﬀerent methods.
In Section 6, we analyse how the submitted systems address the challenges posed
by the dataset and show that the competition inspired further work on our dataset. We
evaluate the submitted systems by comparing them to a challenging baseline using
automatic evaluation metrics (including novel text-based measures) as well as human
evaluation (see Section 7). Note that, while there are other concurrent studies comparing a limited number of end-to-end NLG approaches got 31 institutions submitting to a total of 8 tasks .
Example value
verbatim string
The Eagle, ...
dictionary
restaurant, pub, ...
familyFriendly
priceRange
dictionary
cheap, expensive, ...
dictionary
French, Italian, ...
verbatim string
market square, Cafe Adriatic, ...
dictionary
riverside, city center, ...
customerRating
enumerable
1 of 5 (low), 4 of 5 (high), ...
Table 1: Domain ontology of the E2E dataset.
et al., 2017; Gardent et al., 2017a) which emerged during the E2E NLG Challenge, this
is the ﬁrst research to evaluate novel end-to-end generation at scale using human assessment.
Our results in Section 8 show a discrepancy between data-driven seq2seq models
versus template- and rule-based systems. While seq2seq models generally score high
on word-overlap similarity measures and human rankings of naturalness, manually engineered systems score better than some seq2seq systems in terms of overall quality,
as well as diversity and complexity of generated outputs. In Section 9, we conclude by
laying out challenges for future shared tasks in this area. We also release a new dataset
of 36k system outputs paired with user ratings, which will enable novel research on
automatic quality estimation for NLG . All data and scripts associated with
the challenge, as well as technical descriptions of participating systems are available at
the following URL:
 
2. Domain and Task
In general, the task of NLG is to convert an input MR into a natural language utterance consisting of one or more sentences. In this paper, we focus on the case where
an end-to-end data-driven generator is trained from simple pairs of MRs and reference texts, without ﬁne-grained alignments between elements of the MR and words or
name[The Wrestlers], priceRange[cheap], customerRating[1 of 5]
The Wrestlers oﬀers competitive prices, but isn’t rated highly by customers.
Figure 1: Example pair of an MR and a corresponding human-written reference text.
phrases in the reference texts, as in, e.g. .
An example pair of a MR and a reference text is shown in Figure 1. We focus on
restaurant recommendations in our experiments, which, previously, have been widely
explored in dialogue systems research, e.g. . However, our E2E dataset is substantially bigger and more complex and than previous NLG training datasets for this domain (see Section 4), which allows us to assess whether NLG systems
are able to learn to produce more varied and complex utterances given enough training
examples (cf. Section 8).
For the input representation, we use a format commonly found in task-oriented
domain-speciﬁc spoken dialogue systems – unordered sets of attributes (slots) and their
values, e.g. .2 The list
of possible attributes used in the MRs in our dataset with example values is shown in
3. Data Collection Procedure
In order to maximise the chances for data-driven end-to-end systems to produce
high quality output, we aim to provide training data in suﬃcient quality and quantity. We turned to crowdsourcing to collect training data in large enough quantities.
We used the CrowdFlower platform3 to recruit workers. Previously, crowdsourcing
has mainly been used for evaluation in the NLG community, e.g. . Since our task is focussed on recommendations,
this intent would be recommend/inform for all our data, and we can therefore disregard it.
3The CrowdFlower platform was renamed to FigureEight after our study was completed. See https:
//www.figure-eight.com/.
Dethlefs et al., 2012). However, recent eﬀorts in corpus creation via crowdsourcing
have proven to be successful in related tasks. For example, Zaidan and Callison-Burch
 showed that crowdsourcing can result in datasets of comparable quality to those
created by professional translators given appropriate quality control methods. Mairesse
et al. demonstrate that crowd workers can produce aligned natural language descriptions from abstract MRs for NLG, a method which also has shown success in
related NLP tasks, such as spoken dialogue systems or semantic
parsing . More recently, data-driven NLG systems, such as and , have relied on crowdsourcing for collecting training data.
When crowdsourcing corpora for training NLG systems, i.e. eliciting natural language paraphrases for given MRs from workers, the following main challenges arise:
1. How to ensure the required quality of the collected data?
2. What types of meaning representations can elicit spontaneous, natural and varied
data from crowd workers?
In an attempted to address both challenges before collecting the main training
dataset for the E2E NLG challenge, we ran a small-scale pre-study published in . We brieﬂy summarise the results of this study in this section and apply
the successful techniques to the whole data set.
For the pre-study, we prepared a subset of 75 distinct MRs, consisting of three,
ﬁve or eight attributes from our domain (see Table 1) and their corresponding values
in order to evaluate MRs with diﬀerent complexities.4 We then implemented several
automatic validation procedures for ﬁltering the crowdsourced data in order to address
(1), see Section 3.1. To address (2), we explored the trade-oﬀbetween semantic expressiveness of the MR and the quality of crowdsourced utterances elicited for the diﬀerent
semantic representations. In particular, we investigated translating MRs into pictorial
representations as used in, e.g. for
evaluating spoken dialogue systems (see Section 3.2). In the remainder of this section,
4The attributes were selected at random, but we excluded MRs that do not contain the attribute name as
these would not be appropriate for a venue recommendation.
we ﬁrst describe the detailed setup used to crowdsource our data (Section 3.3) and then
ﬁnally evaluate the pre-study by comparing pictorial MRs to text-based MRs used by
previous crowdsourcing work in Section 3.4.
3.1. Automatic Validation Measures
We used two simple methods to check the quality of crowd workers on Crowd-
Flower: First, we only select workers that are likely to be native speakers of English,
following Sprouse and Callison-Burch and Dredze . We use IP addresses
to ensure that workers are located in one of three English-speaking countries – Canada,
the United Kingdom, or the United States. In addition, we included a requirement that
“Participants must be native speakers of British or American English” both in the caption of the task listed on CrowdFlower and in the task instructions. Second, we check
whether workers spend at least 20 seconds to complete a page of work. This is a standard CrowdFlower option to control the quality of contributions, and it ensures that the
contributor is removed from the job if they complete the task too fast.
We also check the quality of the natural language texts produced by crowd workers
for a given MR. In particular, we use three JavaScript validators to ensure that the
submitted utterances are well-formed English sentences:
1. We check if the ready-to-submit utterance only contains legal characters, i.e.
letters, numbers and symbols “, ’ . : ; £”.
2. We check whether the submitted text is not shorter than the required minimal
length, which is an approximation of the total number of characters used for all
attribute values in a given MR, as calculated by Eq. 1:
min. length = # MR characters −# MR attributes × 10
Here, # MR characters is the total number of characters in the given MR; # MR
attributes is the number of attributes in the given MR; and 10 is an average length
of an attribute name plus two associated square brackets.
3. We check that workers do not submit the same utterance several times.
We ensured by manually checking a small number of initial trial tasks that these
automatic validation methods were able to correctly identify and reject 100% of bad
submissions.
3.2. Meaning Representations: Pictures and Text
In previous crowdsourcing tasks involving MRs, these were typically presented to
workers in a textual form of dialogue acts , such as the following:
inform(type=hotel, pricerange=expensive)
However, there is a limit in the semantic complexity that crowd workers can handle
when using this type of textual/logical descriptions of dialogue acts . Also, Wang et al. observed that the chosen semantic formalism inﬂuences the workers’ language, i.e. crowd workers are primed by the words/tokens and
ordering used in the MR. Therefore, in contrast to previous work , we explore the usage of diﬀerent modalities of meaning representation:
• Textual/logical MRs appear as a list of comma-separated attribute-value pairs,
where attribute values are shown in square brackets after each attribute (see Figures 1 and 2). The order of attributes is randomised so that crowd workers are
not primed by the ordering used in the MRs .
• Pictorial MRs are semi-automatically generated pictures with a combination of
icons corresponding to the individual attributes (see Figure 2). The icons are
located on a background showing a map of a city, thus allowing to represent the
meaning of the attributes area and near.
3.3. Data Collection Setup
We set up the data collection tasks on the CrowdFlower platform, using the automatic checks described in Section 3.1 and using both pictorial and textual MRs as
input (see Section 3.2). For this pre-study, we collected 1133 distinct utterances from
the 75 distinct/unique MRs we prepared. 744 utterances were elicited using the textual
name[Loch Fyne],
eatType[restaurant],
familyFriendly[yes],
priceRange[cheap], food[Japanese]
name[The Wrestlers],
familyFriendly[No], area[riverside],
food[Italian], customerRating[5 of 5],
priceRange[expensive],
near[Cafe Adriatic],
eatType[restaurant]
Figure 2: Examples of pictorial MRs (left: logical/textual MR, right: corresponding pictorial MR).
MRs, and 498 utterances were elicited using the pictorial MRs. The data collected in
the pre-study are freely available for download.5 We later used the same CrowdFlower
setup to collect the whole E2E NLG dataset (see Section 4).
In terms of ﬁnancial compensation, crowd workers were paid the standard pay on
CrowdFlower, which is $0.02 per page (where each page contained 1 MR). Workers
were expected to spend about 20 seconds per page. Participants were allowed to complete up to 20 pages, i.e. create utterances for up to 20 MRs. Mason and Watts 
found in their study of ﬁnancial incentives on Mechanical Turk (counter-intuitively)
that increasing the amount of compensation for a particular task does not tend to improve the quality of the results. Furthermore, Callison-Burch and Dredze observed that there can be an inverse relationship between the amount of payment and the
quality of work, because it may be more tempting for crowd workers to cheat on highpaying tasks if they do not have the skills to complete them. Following these ﬁndings,
we did not increase the payment for our task over the standard level.
5See The data is not part of the ﬁnal E2E
NLG dataset.
3.4. Results and Discussion
We analysed the collected natural language reference texts, focussing on textual
versus pictorial MRs and their eﬀects on objective measures, such as time taken to
collect the data and length of an utterance, and human evaluations of the reference
texts collected under the diﬀerent conditions. Results in full detail can be found in
 ; here we only summarise the main ﬁndings. The data analysis
showed that:
• There is no signiﬁcant diﬀerence in the time taken to collect data with pictorial
vs. textual MRs.
• The average length of a collected reference text, both in terms of number of
characters and number of sentences, depends mainly on the number of attributes
associated with the MR, rather than on whether pictures or text were used.
• Compared to textual MRs, pictorial MRs elicit texts that are signiﬁcantly less
similar to the underlying MR in terms of semantic text similarity . We assume that this is because pictorial MRs are less likely to prime the
crowd workers in terms of their lexical choices.
• The human evaluation revealed that reference texts produced from pictorial MRs
are rated as signiﬁcantly (p < 0.01) more informative than textual MRs. Equally,
utterances produced from pictorial MRs were considered to be signiﬁcantly (p <
0.001) more natural and better phrased than utterances collected with textual
This shows that pictorial MRs have speciﬁc beneﬁts for elicitation of NLG data
from crowd workers. This may be because the lack of priming by lexical tokens in the
MRs leads the crowd workers to producing more spontaneous and natural language,
with more variability. As a concrete example of this phenomenon from the collected
data, consider the ﬁrst MR in Figure 2. The textual version of this MR elicited utterances such as “Loch Fyne is a family friendly restaurant serving cheap Japanese food.”
6Please see for a deﬁnition of informativeness, naturalness and phrasing.
whereas the pictorial MR elicited e.g. “Serving low cost Japanese style cuisine, Loch
Fyne caters for everyone, including families with small children.”
Pictorial stimuli have also been used in other, related NLP tasks, such as crowdsourced evaluations of dialogue systems, e.g. . Williams and Young , for example, used pictures to set dialogue goals
for users (e.g. to ﬁnd an expensive Italian restaurant in the town centre). However, no
analysis was performed regarding the suitability of such representations. This experiment therefore has a bearing on the general issue of human natural language responses
to pictorial task stimuli, and shows for example that pictorial task presentations can
elicit more natural variability in user inputs to a dialogue system.
Of course, there is a limit in the meaning complexity that pictures can express.
We observed that pictorial MRs tend to introduce more noise. In particular, crowd
workers tend to omit information, such as eatType = restaurant, which is particularly
hard to visualise. Finally, producing pictorial MRs is a semi-automatic process, which
is expensive to run at large scale.
Based on these ﬁndings, we decided to use pictorial MRs to collect 20% of the full
dataset and textual MRs for the rest of the data in order to keep noise and production
costs low while increasing diversity. To further increase the data quality and diversity,
we collected multiple references per MR to help NLG systems deal with potential noise
in the data.
4. The E2E NLG dataset
Using the procedure described in Section 3, we crowdsourced a large dataset of 50k
instances in the restaurant domain . Our dataset is substantially
bigger than previous NLG datasets for dialogue in the restaurant domain, i.e. BAGEL
 and SF Restaurants (SFRest) , which typically only allowed delexicalised data-driven end-to-end approaches (see Section 4.1).
In addition, we demonstrate that our data is also more challenging given its lexical
richness, syntactic complexity and diverse discourse phenomena. Following an approach suggested by Perez-Beltrachini and Gardent , we describe these diﬀerent
name[Green Man], food[French], priceRange[more than £30], area[city centre], familyFriendly[no],
near[All Bar One]
Green Man is a French restaurant in the city centre. It is not child friendly and is located near All Bar
One. It costs more than thirty pounds.
Delex. X-name is a french restaurant in the city centre . it is not child friendly and is located near X-near . it
costs more than thirty pounds .
inform(name=‘dosa on ﬁllmore’, food=‘indian or indpak’, address=‘1700 ﬁllmore street’,
phone=4154413672)
Dosa on ﬁllmore serves indian and indpak food, the address is 1700 ﬁllmore street, and the phone
number is 4154413672.
Delex. X-name serves indian and indpak food , the address is X-address , and the phone number is X-phone .
inform(name=“Strada”, type=placetoeat, eattype=restaurant, area=citycentre, near=“The Curry
House”, near=“The Bakers”, food=Italian)
Strada is an Italian restaurant located near The Curry House and The Bakers in the city centre.
Delex. X-name is an italian restaurant located near X-near and X-near in the city centre .
Figure 3: Lexicalized and delexicalized examples from all three compared datasets (with slot placeholders
highlighted in delexicalized sentences). Note that the dialogue act for E2E is constant (i.e. “inform”) and as
such not expressed. SFRest is the only dataset which contains multiple dialogue act types (cf. the SFRest-inf
dimensions of our dataset and compare them to the BAGEL and SFRest datasets in
Sections 4.2 and 4.3.7
To ensure a fair comparison, we analyse both fully lexicalised and delexicalised
versions of all datasets. The lexicalised references in all datasets contained full natural
language texts including all restaurant names. This is the default form for the E2E set;
small postprocessing steps were taken for the other two sets to achieve a compatible
format.8 To obtain the delexicalised versions, we replaced with placeholders (e.g. “Xslot”) most slot values from open sets that appear verbatim in the data: restaurant
names, area names, addresses, and numbers (see Figure 3).9
Since the E2E and BAGEL datasets contain only restaurant recommendations,
i.e. cases where the system is providing information (inform dialogue acts), whereas
7The particular versions of the BAGEL and SFRest datasets used for this research are available
from and 
uk/handle/1810/251304, respectively.
8The BAGEL texts are partially delexicalised by default, so we lexicalised them. SFRest texts were
detokenised and adverb/plural markers were postprocessed, e.g. “restaurant -s” changed to “restaurants”.
9This included slot values for name and near in the E2E dataset, name, near, phone, address, postcode,
count and area in the SFRest dataset, and name, near, addr, phone, postcode and area in the BAGEL set. For
BAGEL, the values citycentre and riverside were excluded from delexicalisation as they do not always appear
verbatim in the data. The delexicalised version of BAGEL is equivalent to how the dataset is distributed by
default. SFRest would allow even more delexicalisation in practice – food types and price ranges also appear
verbatim in the references. We decided to keep these values lexicalised since they are not from open sets and
the two other datasets do not allow for easy delexicalisation in this case.
SFRest also includes system questions, conﬁrmations, and greetings, we also created a
subset of SFRest dubbed SFRest-inf with only inform instances for a fairer comparison.
We processed the datasets using the MorphoDiTa part-of-speech tagger to identify tokens, words (as opposed to punctuation tokens) and sentence
boundaries. We used the same tagger to preprocess our data for lexical and syntactic
complexity analysis.
All code we used for dataset processing and comparison in Sections 4.1–4.3 are
freely available for future research under the following URL:
 
The main script downloads all three datasets under comparison, installs and patches
diﬀerent third-party metrics tools, and produces the statistics. The same tools are used
to compare system outputs in Section 8.2.
Table 2 summarises the main size statistics of all three datasets, plus the informonly portion of SFRest. The E2E dataset is signiﬁcantly larger than the other sets in
terms of the total number of diﬀerent MRs, the total number of data instances (i.e.
MR-reference pairs), and especially in terms of the total amount of text in the human
references, which is more than 20 times bigger than the next-biggest SFRest. These
diﬀerences are even more profound if we consider delexicalisation: almost all MRs in
the E2E set are distinct even after delexicalisation, while the number of unique MRs is
reduced signiﬁcantly (by more than half) for the other sets. Delexicalisation also seems
to have a less signiﬁcant eﬀect on the reference texts in the E2E sets than in the other
datasets (cf. the number of delexicalised words vs. the total number of words). The
high number of instances directly translates to the higher average number of human
references per MR, which is 8.27 for the E2E dataset as opposed to less than two for
the other sets.10
10Note that Refs/MR ratio for the SFRest dataset is skewed: the goodbye() MR has up to 101 references,
but the average is less than 2 references per MR. This is apparent in the SFRest-inf section, which has a
much lower maximum number of references.
SFRest-inf
Total instances
Unique delexicalised MRs
Total tokens in all references
1, 166, 000
Total words in all references
1, 051, 093
Total delex. words in all references 957, 205
Slots per MR
References per MR
Tokens per reference
Words per reference
Delexicalised words per reference
Sentences per reference
Tokens per sentence
Words per sentence
Delexicalised words per sentence
Table 2: Overall size statistics for NLG datasets in the restaurant information domain. All statistics for length
of MRs and human references are averages (see Section 4.1 for details). Minimum and maximum numbers
of references per MR and sentences per reference are shown in brackets below the average. Highest values
on each line are typeset in bold.
While having more data with a higher number of references per MR makes the
E2E data more attractive for statistical approaches and enables learning more robust
models, it is also more challenging than previous sets as it contains a larger number
of sentences in the human reference texts (up to 6 in our dataset, with an average of
1.54, compared to typically 1–2 for the other sets, which average below 1.1). The
sentences themselves are also longer than in the other datasets. This is immediately
apparent for SFRest or SFRest-inf, which are up to 40% shorter in terms of words
and tokens. BAGEL’s sentences are slightly longer than E2E’s on average, but this
situation is reversed when the sets are delexicalised. In addition, the input MRs in the
E2E dataset are more complex than in the other sets: the average number of slot-value
pairs in our set is twice that of SFRest (even if only the more complex inform dialogue
acts are considered), and slightly higher than BAGEL.
E2E data part
References
Tokens/Ref
training set
development set
full dataset
Table 3: Total number of MRs and human references in the E2E dataset sections and their complexity
(average numbers of slots per MR and tokens per reference).
The dataset is split into training, validation and test sets (in a 82-9-9 ratio, see Table 3). We ensure that MRs in our test set are all previously unseen, i.e. none of them
overlaps with training/development sets, even when restaurant names are removed, unlike the SFRest data . The test set can be considered
adversarial since the MRs contained there are somewhat longer/more complex than
those in the training set and the references copy this distribution (cf. Table 3).
4.2. Lexical Richness
In order to measure various dimensions of lexical richness in the datasets under
comparison, we computed statistics on token/unigram, bigram and trigram counts, and
we applied the Lexical Complexity Analyser , as shown in Table 4. It is clear
that our dataset has a much larger vocabulary – 2x larger than the second largest SFRest,
but more than 5x larger if delexicalised versions of the datasets are considered. This
directly translates into the number of distinct lemmas and distinct n-grams; the E2E set
has almost 10x more distinct trigrams than SFRest, over 13x more in the delexicalised
versions. While the proportion of n-grams only appearing once in the set is slightly
lower than in the other datasets, it stays relatively high given the dataset size and narrow
domain, and poses a challenging task for end-to-end data-driven approaches.
The traditional measure of lexical diversity is the type-token ratio (TTR):
TTR(text) = # distinct tokens
# total tokens
However, it is not a good ﬁt in our case when datasets of diﬀerent sizes in a narrow
domain are compared because the values are inversely proportional to the dataset size.
Therefore, we complement TTR with the more robust measure of mean segmental TTR
(MSTTR) , which divides the corpus into successive segments of a given
Lexicalised sets
SFRest-inf
Distinct tokens
Distinct tokens occurring once
Distinct lemmas
Distinct bigrams
Distinct bigrams occurring once
Distinct trigrams
Distinct trigrams occurring once
Lexical sophistication (LS2)
Type-token ratio (TTR)
Mean segmental TTR (MSTTR-50)
Unigram entropy
Bigram entropy
Trigram entropy
Bigram next-word conditional entropy
Trigram next-word conditional entropy
Delexicalised sets
SFRest-inf
Distinct tokens
Distinct tokens occurring once
Distinct lemmas
Distinct bigrams
Distinct bigrams occurring once
Distinct trigrams
Distinct trigrams occurring once
Lexical sophistication (LS2)
Type-token ratio (TTR)
Mean segmental TTR (MSTTR-50)
Unigram entropy
Bigram entropy
Trigram entropy
Bigram next-word conditional entropy
Trigram next-word conditional entropy
Table 4: Lexical complexity and diversity statistics for NLG datasets in the restarant information domain.
Counts for n-grams appearing only once are shown as absolute numbers and proportions of the total number
of respective n-grams. Highest values on each line are typeset in bold.
length (50 tokens) and then calculates the average TTR of all segments. The higher the
value of MSTTR, the more diverse is the measured text. Table 4 shows our dataset has
higher MSTTR value (0.71) than the other sets (≤0.65). The diﬀerence is even more
profound if we consider delexicalised versions of the sets and inform-only MRs in the
SFRest data – 0.66 vs. 0.55 for SFRest-inf and 0.48 for BAGEL.
In addition, we measure lexical sophistication (LS2) , also known as
lexical rareness, which is calculated as the proportion of lexical word types not on the
list of 2,000 most frequent words generated from the British National Corpus. Table 4
shows that while the E2E is more sophisticated than SFRest, it is slightly less so compared to BAGEL. However, LS2 numbers on the delexicalised sets show that this is
mainly caused by lexical slot values – the delexicalised E2E dataset is almost twice as
sophisticated as both SFRest and BAGEL.
Following Oraby et al. and Jagfeld et al. , we also use Shannon
entropy as a measure of lexical diversity in the
H(text) = −
len(text) log2
Here, x stands for all unique tokens/n-grams, freq stands for the number of occurrences
in the text, and len for the total number of tokens/n-grams in the text. We computed
entropy over tokens (unigrams), bigrams and trigrams, as shown in Table 4. We can
see that the E2E dataset has slightly lower unigram and bigram entropy than SFRest
and higher trigram entropy than any other set. However, when delexicalised, the E2E
set shows the highest entropy for any n-gram value. Considering that entropy is a
logarithmic measure, the diﬀerence is substantial for trigrams – 12.1 vs. the closest
10.5 for SFRest, which amounts to about 2.98× higher uncertainty.
We further complement Shannon text entropy with n-gram-language-model-style
conditional entropy for next-word prediction ,
given one previous word (bigram) or two previous words (trigram):
Hcond(text) = −
(c,w) ∈text
freq(c, w)
len(text) log2
freq(c, w)
Here, (c, w) stands for all unique n-grams in the text, composed of c (context, all tokens
Figure 4: D-Level sentence distribution of the datasets under comparison.
but the last one) and w (the last token). Conditional next-word entropy gives an additional, novel measure of diversity and repetitiveness: The more diverse a text is, the
less predictable is the next word given previous word(s); on the other hand, the more
repetitive the text, the more predictable is the next word given previous word(s). The
values for all the datasets are again shown in Table 4, and they demonstrate clearly that
E2E data is much more diverse than SFRest or BAGEL. Note also that lexicalisation
has a much smaller eﬀect on this measure. In the delexicalised version, the diﬀerence
against the closest SFRest (2.446 vs. 1.414) indicates about 2.04× more uncertainty on
next-word prediction given two previous words.
4.3. Syntactic Complexity
We used the D-Level Analyser to evaluate the syntactic complexity of
human references in our data using the revised D-Level Scale .
We used the syntactic constituency parser of Collins to preprocess the sentences
for the D-Level Analyser.11 The D-Level scale has eight levels of syntactic complex-
11We used the Model 2 variant of the parser as instructed by the D-Level Analyser website at http:
//www.personal.psu.edu/xxl13/downloads/d-level.html.
ity, where levels 0 and 1 include simple or incomplete sentences and higher levels
include sentences with more complex structures, e.g. sentences joined by a subordinating conjunction, more than one level of embedding etc. Figure 4 shows the D-Level
distribution in all three datasets.
The largest proportion of the datasets is composed of simple sentences (levels 0
and 1), but the proportion of simple texts is much lower for the E2E NLG dataset
(46%) compared to others (59-66%). Examples of simple sentences in our dataset
include: “The Vaults is an Indian restaurant”, or “The Loch Fyne is a moderate priced
family restaurant”.
The majority of our data, however, contains more complex, varied syntactic structures, including phenomena explicitly modelled by early statistical approaches to NLG
 .12 For example, clauses may be joined by a
coordinating conjunction (level 2), e.g. “Cocum is a very expensive restaurant but the
quality is great”. There are 14% level-2 sentences in the E2E dataset; BAGEL only
has 7% and SFRest 9%, but inform MRs in SFRest contain a similar proportion as our
set. Level 3 sentences in our domain are mainly those with object-modifying relative
clauses, e.g. “There is a pub called Strada which serves Italian food.” The E2E dataset
contains 18% level-3 sentences, similar to BAGEL but more than SFRest’s 12% (13%
in inform MRs). The levels 4-5 are not very frequent in any of the datasets. Sentences
may contain verbal gerund (-ing) phrases (level 4), either in addition to previously
discussed structures or separately, e.g. “The coﬀee shop Wildwood has fairly priced
food, while being in the same vicinity as the Ranch” or “The Vaults is a family-friendly
restaurant oﬀering fast food at moderate prices”. Subordinate clauses are marked as
level 5, e.g. “If you like Japanese food, try the Vaults”.
The highest levels of syntactic complexity involve sentences containing referring
expressions (“The Golden Curry provides Chinese food in the high price range. It is
near the Bakers”), non-ﬁnite clauses in adjunct position (“Serving cheap English food,
as well as having a coﬀee shop, the Golden Palace has an average customer rating and
12Some of the systems in the competition as well as multiple follow-up works are speciﬁcally taking
advantage of the added complexity in our dataset to produce more varied outputs (see Sections 6.3 and 6.4).
Fully covered
Missing content
Additional content
Table 5: Coverage of MR attributes in references as measured manually on a random sample of 50 MRreference pairs for each dataset. The numbers indicate the absolute number of instances falling into the given
category, out of 50.
is located along the riverside”) or sentences with multiple embedded structures from
previous levels. As Figure 4 shows, our dataset has a substantially higher proportion
of level-6-7 sentences – 15%, compared to 7% for BAGEL and 8% for SFRest (11%
in inform MRs).
On average, sentences in the E2E dataset are much more syntactically complex
than in the other datasets under comparison: the mean D-Level for E2E data is 2.17,
compared to BAGEL’s 1.32 and SFRest’s 1.25 (1.57 for inform-only MRs).
4.4. Attribute Coverage
Our crowd workers were asked to verbalise all information from the MR; however, they were not penalised if they skip an attribute (cf. Section 3.4). This feature
makes generating text from our dataset more challenging as the NLG systems need to
deal with a certain amount of noise, i.e. attributes not being verbalised in the human
reference texts. In order to measure the extent of this phenomenon, we examined a
random sample of 50 MR-reference pairs in all three datasets under comparison. An
MR-reference pair was considered “fully covered” if all attribute values present in the
MR are verbalised in the reference. It was marked as “additional content” if the reference contains information not present in the MR, and as “missing content” if the MR
contains information not present in the reference.
The results of our sample probe in Table 5 indicate that roughly 40% of our data
contains either additional or omitted information. In order to help NLG systems account for this variation, we collected multiple references per MR (also see Table 2).
This variation often concerns the attribute-value pair eatType=restaurant, which is
either omitted (“Loch Fyne provides French food near The Rice Boat. It is located in
riverside and has a low customer rating”) or added in case eatType is absent from the
MR (“Loch Fyne is a low-rating riverside French restaurant near The Rice Boat”).13 As
discussed in Section 3.4, pictorial MRs might be a possible source of this phenomenon
where eatType=restaurant, eatType=pub, etc. is diﬃcult to illustrate.
4.5. Following-on Datasets
Since the E2E dataset was ﬁrst published in Novikova et al. , it inspired
multiple extensions (cf. also Section 6.4). The work of Juraska and Walker 
adds further automatic annotation of contrast and emphasis to study the style of generation outputs. Oraby et al. used E2E MRs in combination with the Personage
generator Mairesse and Walker to create a synthetic corpus to examine
how neural models can learn various stylistic properties. Reed et al. then combine Personage-generated data for E2E MRs with the original crowdsourced data and
add more supervision speciﬁcally to study how neural generators perform various sentence planning operations (sentence aggregation, distribution of content and discourse
relations). Balakrishnan et al. enhance both MRs and references in the E2E set:
their enhanced tree-structured MRs include explicit ﬁne-grained dialogue acts (inform,
contrast, recommend) automatically obtained from the corresponding references; the
enhanced references mark explicitly these dialogue acts as well as which phrase corresponds to which MR attribute. Roberti et al. present an enhancement of the
E2E of a diﬀerent kind – they include many more restaurant names and food types
than present in the original to make the open vocabulary problem more apparent and
study it in detail. Finally, the recent Yelp restaurant information dataset of Oraby et al.
 is also inspired by E2E, but takes a diﬀerent approach – collecting large-scale
web-based data with automatic annotation.
5. Systems in the Competition
The initial idea of the E2E NLG Challenge was ﬁrst presented in . The interest and active participation in the E2E Challenge has by far
13Note that inclusion of this attribute is mainly due to historical reasons, following SFRest and BAGEL.
Architecture
Delex. slots
Semantic control
augmentation /
♥TGen 
(OpenNMT-py)
enriching MR by
output words
♥Chen 
attention memory
♥Gong 
name, near
MR classiﬁcation
 
coverage penalty
diverse ensembling
♥NLE (Agarwal et al.,
char seq2seq
(tf-seq2seq)
MR classiﬁcation
♥Sheff2 
name, near
slot aligner reranking
using sub-MRs and
aligned sentences
 
(late submission)
name, near
slot aligner reranking
using only complex
training sentences
 
name, near
MR classiﬁcation
using Personage
 
name, near
MR classiﬁcation
shuﬄing MRs
 
(tf-seq2seq)
name, near,
priceRange,
customerRating
 
attention regularisation
♦Sheff1 
RNN language
name, near
SC-LSTM (semantic
gates), MR
classiﬁcation loss +
ﬁrst word control
♦ZHAW2 
RNN language
name, near
(semantic gates)
ﬁrst word control
♣DANGNT 
rule-based
implied by architecture
♣FORGe1 
implied by architecture
♠FORGe3 
implied by architecture
 
implied by architecture
♠TUDA 
implied by architecture
Table 6: A full list of the primary systems participating in the E2E challenge, with their basic architecture
and other properties (list of delexicalised slots, presence of a copy mechanism, control of semantic MR
coverage on the output, data augmentation and output diversity techniques). System architectures are coded
with colours and symbols: ♥seq2seq, ♦other data-driven, ♣rule-based, ♠template-based.
TGen (development set)
Table 7: TGen performance on the development set (see Section 7.1 for a description of the metrics).
outperformed our expectations. We received a total of 62 submitted systems by 17
institutions from 11 countries, with about 1⁄3 of these submissions coming from industry. In accordance with ethical considerations for NLP shared tasks , we allowed researchers to withdraw or anonymise their results after obtaining automatic evaluation metrics results (cf. Section 7.1). Two groups from industry withdrew their submissions and one group asked to be anonymised after obtaining
automatic evaluation results. A full list of all the remaining submissions is given in
Table A.14 in the Appendix (including their automatic metric scores).
We asked each participating team to identify 1-2 primary systems, which resulted
in 20 systems by 14 groups. Each primary system is described in a short technical
paper (available on the E2E NLG Challenge website)14 and was evaluated both by
automatic metrics and human judges (see Section 7). We compare the primary systems
to a baseline system we provided ourselves (see Section 5.1). A detailed overview of
all the primary systems is given in Table 6. In the following, we describe the systems
in terms of diﬀerent architectures; see Sections 5.2–5.5.
5.1. Baseline System
To establish a baseline on the task data, we use TGen .15
TGen is based on the sequence-to-sequence model with attention (seq2seq) , an encoder-decoder recurrent neural network (RNN) architecture. In addition to the standard seq2seq model with LSTM cells , TGen uses beam search for decoding and an LSTM-based reranker over the top
k outputs, penalising those outputs that do not verbalise all attributes from the input
MR. TGen was previously tested on the BAGEL and SFRest datasets, where it reached
state-of-the-art performance .
14 
15TGen is freely available at 
As TGen does not handle unknown vocabulary well, the sparsely occurring string
attributes (see Table 1) name and near are delexicalised (see Section 6.1). The main
seq2seq model is trained by minimising cross entropy using the Adam algorithm in direct token-by-token generation of surface strings; the reranker is
trained to detect the presence of all attributes from the input MR.16 Based on evaluation on the development part of the E2E dataset using automatic metrics (see Table 7),
as well as manual cursory checks, TGen appears to be a strong baseline, capable of
generating ﬂuent and relevant outputs in most cases.
5.2. Seq2seq-based systems
Systems based on the popular sequence-to-sequence architecture represent the biggest group of systems participating in
the challenge (12 out of 20 primary systems). All the seq2seq-based systems use beam
search, and most of them further enhance the basic seq2seq architecture in a number of
Several systems are built on top of previous systems and toolkits. A number of
systems are based on the TGen baseline and aiming to improve it: TNT1 and TNT2 are using TGen with two diﬀerent data augmentation techniques (see Section 6.3). Gong trains TGen with ﬁne-tuning by
the REINFORCE algorithm . Two systems are based on the tf-seq2seq
toolkit : NLE built a character-to-character
seq2seq (using simply characters of the original MR as inputs), TR1 use a regular word-based model. The Adapt system is based
on OpenNMT-py . It uses pointer networks ) and a two-step generation where the ﬁrst step enriches the
input MR for diversity (see Section 6.3).
Several other systems use custom seq2seq implementations. Slug and Slug-alt
 use an ensemble of two bidirectional LSTM encoders and one
16We use a learning rate of 0.0005, cell size 50, batch size 20, beam size 10, maximum encoder and
decoder lengths 10 and 80, respectively, and up to 20 passes through training data with early stopping. The
reranker uses the same parameters, except for a higher learning rate (0.001). See 
for more details.
convolutional encoder, all paired with an attention LSTM decoder (incl. self-attention).
Harv use a seq2seq model with multiple additions for MR coverage and diversity (see Sections 6.2 and 6.3). Sheff2’s model , on
the other hand, is a vanilla seq2seq setup with LSTM cells. Chen presents
a seq2seq model with a custom-tailored input data representation: 2-part input embeddings, which divide into slot name and value token embeddings. Zhang apply a seq2seq model with CAEncoder , which adds a second layer over a bidirectional encoder with GRU cells , summarising
both directional encoders.
5.3. Other data-driven systems
Two groups submitted fully trainable systems that are not based on the seq2seq
architecture. First, ZHAW1 and ZHAW2 use an RNN
language model with semantically conditioned LSTM (SC-LSTM) cells and a 1-hot encoding of input MR slot values. The two system variants diﬀer
in the presence of an additional semantic control mechanism (see Section 6.2).
Sheff1 is the only non-neural fully data-driven system submitted
to the challenge. It is based on imitation learning using linear classiﬁers in a two-level generation approach, where the classiﬁers ﬁrst select the
next slot to be realised and then the corresponding word-by-word realisation of that
slot . The classiﬁers are trained using the Locally
Optimal Learning to Search (LOLS) imitation learning framework ,
optimising for BLEU, ROUGE-L, and slot error (cf. Section 7.1).
5.4. Rule-based systems
There are two rule-based entries in the E2E challenge: First, the DANGNT system uses a two-step rule-based setup, where the ﬁrst step
determines the appropriate phrases to use for a delexicalised sentence; the second step
selects the appropriate phrases to lexicalise slot values. Second, the FORGe1 system
 is a rule-based pipeline using grammars based on the
Meaning-Text Theory . It matches the MR to handcrafted per-slot
semantic templates, applies aggregation rules to build sentences, and realises the aggregated sentence structures into surface text.
5.5. Template-based systems
Three entries in the E2E challenge are based on traditional template ﬁlling. FORGe3
 and TR2 take a very similar approach: They mine templates from data by delexicalising slot values. TUDA , on the other hand, uses templates manually designed by the system authors; the templates are not based on the dataset directly, they are only informed
by the data.
6. Addressing the Challenges
In this section, we focus on how the competing primary systems address speciﬁc
challenges posed by the task: vocabulary unseen in training (Section 6.1), control of
semantic coverage of the input MR (Section 6.2), and producing diverse outputs (Section 6.3). We also include an overview of alternative approaches to addressing these
challenges in Section 6.4.
6.1. Open Vocabulary
All systems in the challenge have a way of addressing the open vocabulary in the
data. In closed-domain setups, slot values are the usually the only part of data where
open vocabulary is present, as e.g. is the case of the name and near slots in our dataset
(see Table 1). The common approach to dealing with open vocabulary in NLG systems is to use delexicalisation , i.e. replacing
slot values with placeholders during training and generation time (both in input MRs
and training sentences). This approach is indeed one of the principles of templatebased systems; accordingly, all template-based entries in the E2E Challenge use full
delexicalisation of all slot values (except, perhaps, the binary-valued familyFriendly;
cf. Table 6). Both rule-based systems also perform full delexicalisation.
The data-driven systems submitted to our challenge mostly opt for partial delexicalisation (see Table 6); the prevailing approach is to delexicalise only the values of the
name and near slots, which allows for very simple pre- and postprocessing since these
values usually appear verbatim in the outputs.17 TR1 is the only data-driven system
to use a stronger delexicalisation, which also includes the priceRange and customer-
Rating slots. Slug and Slug-alt are the only systems to treat values with diﬀerent
morpho-syntactic properties diﬀerently (e.g., a value requiring “an” instead of “a” as
an article).
Five of the seq2seq systems in the challenge opted for using no delexicalisation
and employ alternative ways of addressing open vocabulary: Adapt, Chen and Harv
use a copy mechanism (cf. Section 5.2), which allows the system to copy some of the
tokens from the input instead of generating them anew. Zhang operates over sub-word
units instead of words; these are determined by the byte-pair encoding algorithm and
can combine to create previously unseen words . NLE’s seq2seq
system operates on the character level.
6.2. Semantic Control
Most of the participating systems explicitly attempt to realise all slots and thus
cope with the noise in the training data (cf. Section 4.4). Full realisation is implied
for template and rule-based systems as the templates and rules always relate to speciﬁc
slots and are chosen based on the slots in the input MR. On the other hand, vanilla
seq2seq systems have no way of controlling whether all input slots have been realised.
While attention models certainly have an inﬂuence on this, they
are not explicitly trained to attend exactly once to each slot in a vanilla seq2seq setup.
Therefore, most seq2seq systems include an additional tool checking the realised parts
of the input MR on the output (cf. Table 6).
The most frequent approach among the E2E submissions is a MR classiﬁcation
reranker . Here, the generator ﬁrst produces multiple outputs using beam search, then these are tested for the presence of all slots from the input
MR, and deviations from the input are penalised. Apart from the TGen baseline (using a RNN MR classiﬁer, see Section 5.1), this approach is also taken by all systems
based on TGen (TNT1, TNT2, Gong) as well as NLE, which uses a logistic regression
17Unlike other slot values, e.g., area=riverside might appear as “near the river”. Cf. also our remarks on
delexicalisation in Section 4 and Footnote 9.
classiﬁer. Slug and Slug-alt apply a very similar approach: they use a heuristic slot
aligner (trained on words and phrases from training data and WordNet) to align outputs
to the input MR and penalise for any unaligned slots. Harv do not build a separate
classiﬁer or aligner, but use the sum of weights from the attention model (which should
not exceed 1 for each token of the input MR) in a penalty term for reranking.
Two seq2seq systems use a direct modiﬁcation of the attention mechanism instead
of reranking at decoding time. Chen includes attention memory (sum of attention distributions so far in the generation process) as an additional input to the attention model.
Zhang adds an attention regularisation loss term to the training process, which attempts
to keep the sum of weights close to 1 for each input MR token, similarly to Harv’s
penalty term. Three systems, Adapt, TR1 and Sheff2, do not use any explicit semantic
control mechanism.
The non-seq2seq data-driven systems use speciﬁc mechanisms to maintain input
MR coverage. ZHAW1 and ZHAW2 are based on SC-LSTM cells ,
which include a special gate that keeps track of slots covered so far in the MR. In addition, ZHAW1 uses convolutional MR classiﬁers to rerank beam search outputs similarly to most seq2seq systems; however, this classiﬁcation is also used in an additional
loss term during training. The Sheff1 system explicitly decides which slot to verbalise
next using a separate slot-level classiﬁer, which is optimised to cover the input MR.
6.3. Data Augmentation and Diversity
The design of the E2E dataset attempts to provide higher text diversity (see Section
4), and several challenge participants made use of this. Others modiﬁed the training set
simply to achieve better output quality.
Several systems aim at higher output quality by using data augmentation. TNT1 enriches input MRs by prepending them with the corresponding outputs of the Personage
generator , with the aim to generate more diverse output.
TNT2 aims to boost the robustness of the baseline TGen system by re-shuﬄing slots in
the input MRs. Slug uses single sentences from the training data with corresponding
aligned parts of the original MR. This increases the amount of training data available
and simpliﬁes the task by breaking outputs into smaller (partially) aligned units. Slug-
alt, on the other hand, only uses training instances involving complex sentences in an
attempt to provide more sophisticated outputs. On the other hand, the system of Sheff1
is trained using only one reference text per training MR; the reference text with the
highest average word frequency is selected. While this approach is likely to decrease
output diversity, the authors use it to stabilise system training. Harv takes yet another
approach in order to both stabilise training and increase diversity, called diverse ensembling . In an expectation-maximisation fashion, they split
the training data instances into subsets that exhibit similar structural properties and
style in the natural language references, then train diﬀerent models on these subsets
and deploy them as an ensemble.
Two teams attempt to increase output diversity by directly modifying the generation process. The ZHAW1 and ZHAW2 systems use a ﬁrst word control mechanism:
they generate outputs starting with all (frequent enough) ﬁrst words from the training
set, then select the ﬁnal output by sampling. ZHAW1 only samples among semantically correct outputs (see Section 6.2). Adapt takes a diﬀerent approach, adding a
preprocessing step before the main generator, which decides upon speciﬁc words that
should appear on the output. These are then used to enrich the input MR in the main
generation step, providing more diversity on the input.
6.4. Systems outside the competition and E2E-inspired work
Solving the challenges outlined above is an ongoing eﬀort addressed by many recent systems. Here we brieﬂy summarise other attempts by systems outside the competition for completeness. Note that many of these approaches are very recent and have
been published only after the E2E NLG Challenge ended; some them are even inspired
by the challenge and work with the E2E dataset.
Apart from delexicalisation, which is most often used in the E2E NLG Challenge,
various variants of the copy mechanism are the most prominent approach to address
open vocabulary in NLG . Among works using the E2E dataset, Shimorina and Gardent combine a copy mechanism with delexicalisation. In contrast,
Freitag and Roy use subwords and recast the NLG model as a denoising au-
toencoder, with shared input and output embeddings (starting from slot values and
“ﬁlling in” the rest of the sentence on the output). Roberti et al. explore the
use of character-based models and extend the E2E dataset to include a wider variety of
restaurant names to showcase their approach.
Attempts at improving semantic accuracy of the generated texts show a wider variety of approaches. Kiddon et al. use a “checklist model” – the decoder keeps
a vector of items used so far during the generation; this is similar to semantic gates
of Wen et al. , which have been used by the ZHAW1 and ZHAW2 systems
in our challenge (see Section 6.2). Tran et al. use a two-level attention model
(composed of a standard attention model and a “reﬁner”, an attention-over-attention
module) to improve semantic coverage. Nema et al. combine semantic gating and two-level attention (with attention over slots, slot values, and a combination
thereof). The system of Su et al. and Su and Chen , which is developed
on E2E data, explores using multi-level decoder, adding linguistic complexity gradually to maintain output integrity; this is in fact similar to Freitag and Roy ’s
approach. A follow-up by Su et al. explores using multi-objective optimisation
for both NLG and language understanding, where the latter serves as regularisation for
the former. Other authors working on the E2E dataset explore supplementary inputs for
improving semantic correctness: Reed et al. use an additional supervision signal
indicating the desired number of sentences to generate, Freitag and Roy show
that additional unlabelled training data improves semantic coverage in their denoisingautoencoder-based NLG model and Balakrishnan et al. enhance E2E MRs with
more detail on the target linguistic structure, which they then use to constrain decoding.
Since its initial release in , the E2E dataset has motivated
several authors to explore generating more diverse outputs, mostly with additional supervision signals: The system of Wiseman et al. learns latent templates (sequences of phrases/slots) while learning to generate, thus allowing more controllability
and arguably more diversity of the outputs – the templates serve as an additional, ﬁnegrained way of specifying the desired shape of the generator output. Reed et al. 
explore using the presence of prespeciﬁed contrast markers (e.g. but, although) as additional supervision, while Juraska and Walker investigate other stylistic markers
and use them to generate sentences of speciﬁed type. Oraby et al. and Oraby
et al. attempt to generate outputs showing diﬀerent personality traits (represented by the Big Five model) using additional synthetic training data with personality annotation. In an extension of their E2E competing system , Deriu and Cieliebak add speciﬁc syntactic features to the input MRs
to control not only the ﬁrst word of the output, but also ﬁrst words of all sentences in
multi-sentence outputs and speciﬁc phrasing for expressing each slot in the MR. Jagfeld
et al. do not add more supervision but compare the diversity produced by wordlevel and character-level seq2seq models on E2E data, showing better performance of
the latter.
Using an in-house restaurant dataset, Nayak et al. explore using a basic sentence plan speciﬁcation (slot ordering and sentence grouping) as an additional training
signal to increase output diversity. Working in the transport information domain, Duˇsek
and Jurˇc´ıˇcek and Mangrulkar et al. condition their generators on preceding dialogue context as well as the input MR to obtain greater diversity.
7. Evaluation Setup
We evaluated the systems submitted to the E2E challenge using a range of automatic metrics, which we describe in Section 7.1. This includes a novel application
of textual measures18 and a novel usage of standard word-overlap metrics to assess
similarity among individual systems. Automatic metrics are popular in NLG because they are cheaper and faster to run than human evaluation. However, sole use of automatic metrics is only sensible if they are known to
be suﬃciently correlated with human preferences. Recent studies have demonstrated that this is very often not the case and that automatic metrics only weakly reﬂect human judgements on system outputs as generated
by data-driven NLG. Therefore, we also performed a large-scale crowdsourced human
evaluation, as detailed in Section 7.2. For the human evaluation of the 20 primary sys-
18These measures were previously applied by Perez-Beltrachini and Gardent and this work (see
Section 4) to describe datasets, but not for evaluation of NLG outputs.
tems, we address the problem of how to eﬃciently compare a large number of systems,
1. Extending our previous work on rank-based Magnitude
Estimation (RankME) and verifying the method at scale;19
2. Introducing the data-eﬃcient TrueSkill algorithm to NLG. This allows us to compute an overall ranking by
directly comparing the systems, rather than individually assessing them at higher
cost, as done by previous NLG challenges .
7.1. Automatic Metrics
We apply two types of automatic metrics: One set assessing the similarity between
generated system outputs and natural language references in the corpus using wordoverlap-based measures, and another set assessing the complexity and diversity of system outputs using a variety of textual measures.
Word-overlap metrics
For the ﬁrst set, we selected a range of metrics measuring word-overlap between
system output and references, including BLEU and NIST, which are used as standard
in machine translation evaluation and very common in NLG, and
several others which were applied in the COCO caption generation challenge as well as other NLG experiments :
BLEU is the harmonic mean of n-gram precisions of the system
output with respect to human-authored reference sentences, with n ∈{1, . . . , 4},
lowered by a brevity penalty if the output is shorter than references. The n-gram
precisions are proportions of n-grams in the system output that can be matched
in any of the reference sentences. Repeated n-gram matches are clipped to the
maximum number of times the n-gram occurs in any single reference.
19The original study was limited to comparing 3 similar systems on 100 utterances.
NIST is a version of BLEU with higher weighting for less frequent (i.e., more informative) n-grams and a diﬀerent length penalty. It uses
n ∈{1, . . . , 5}.
METEOR measures both precision and recall of unigrams
by aligning the system output with the individual human references. In addition
to exact word matches, it uses fuzzy matching based on stemming and WordNet
synonyms. It computes matches against multiple references separately and uses
the best-matching one.
ROUGE-L is based on longest common subsequences (LCS) between the
system output and the human references, where a common subsequence requires
the same words in the same order but allows additional, non-covered words in
the middle of either sequence. The ﬁnal ROUGE-L score is an F-measure based
on maximum precision and maximum recall achieved over any of the human
references, where precision and recall are computed as length of the LCS divided
by the length of the system output and the reference, respectively.
CIDEr was primarily designed for generated image captions,
but is also applicable for NLG in general. CIDEr is computed as the average
cosine similarity between the system output and the reference sentences on the
level of n-grams, n ∈{1, . . . , 4}. The importance of the individual n-grams is
given by the Term Frequency Inverse Document Frequency (TF-IDF) measure,
which weighs an n-gram’s frequency in a particular instance against its overall
frequency in the whole dataset.
We provided scripts to the challenge participants to run all of these metrics in a simple,
easy-to-use way. The scripts are freely available at the following URL:20
 
In addition to evaluating all NLG systems individually against human-authored
20The scripts are partially based on COCO caption generation challenge evaluation scripts (https://
github.com/tylin/coco-caption).
reference texts (see Section 8.1), we also apply the same metrics as measures of output
similarity among the systems, comparing each system’s outputs with all other systems’
outputs in place of references (see Section 8.3).
Textual metrics
For the second set of scores, which is intended to measure complexity and diversity
in the system outputs, we use the same automatic textual metrics which we used to
evaluate the E2E NLG dataset itself (see Section 4.2 and 4.3), i.e. dimensions of lexical
richness, such as lexical sophistication (LS2) and mean segmental token-to-type ratio
(MSTTR), and metrics of syntactic complexity, such as levels of the revised D-level
Scale.21 This allows us to both evaluate the diversity and complexity of system outputs
and to establish whether the text characteristics are similar to the training and test sets.
To focus speciﬁcally on the style produced by the individual systems, we delexicalized
restaurant names in the system outputs before computing textual metrics scores, since
restaurant names could skew some of these metrics as they are mostly composed of
infrequent nouns (cf. Section 4.2).
7.2. Human Evaluation
The human evaluation was conducted on the 20 primary systems and the baseline
using Rank-based Magnitude Estimation (RankME) . In an
ordinary (i.e. not rank-based) ME task , subjects provide a relative
rating of an experimental sentence to a reference sentence, which is associated with
a pre-set/ﬁxed number. If the target sentence appears twice as good as the reference
sentence, for instance, subjects are to multiply the reference score by two; if it appears
half as good, they should divide it in half, etc. Rank-based ME extends this idea by
asking subjects to provide a relative ranking of several target sentences, i.e. not only to
the reference sentence, but also to each other.
Rank-based ME was selected for several reasons. First, its use proved to significantly increase the consistency of human ratings, compared to other data collection
21The script used to install all third-party tools required and run the comparison is available at https:
//github.com/tuetschek/e2e-stats.
methods . Second, it implies the use of continuous scales, i.e.
rating scales without numerical labels and without given end points. Recent studies
show that continuous scales allow subjects to give more nuanced judgements . Third, it explores relative ranking
of diﬀerent systems instead of directly assessing quality of each speciﬁc system, which
makes it more reliable in the environment of a challenge.
The evaluation was conducted using crowdsourcing based on the CrowdFlower/
FigureEight platform. Crowd workers were presented with ﬁve randomly selected outputs of diﬀerent systems corresponding to a single MR, and were asked to evaluate
and rank these systems from the best to the worst, ties permitted, using the RankME
The ﬁnal evaluation results were produced using the TrueSkill algorithm . TrueSkill produces system rankings by gradually
updating a Bayesian estimate of each system’s capability according to the “surprisal” of
pairwise comparisons of individual system outputs. This way, fewer direct comparisons
between systems are needed to establish their overall ranking. In , we were able to show that TrueSkill is able to to reduce the amount of collected
human evaluation data without compromising the ﬁnal ranking results.
Since the performance of some systems may be very similar and a total ordering
would not reﬂect this, we adopt the practice used in machine translation of presenting
a partial ordering into signiﬁcance clusters established by bootstrap resampling . The TrueSkill algorithm is run 200 times,
producing slightly diﬀerent rankings each time as pairs of system outputs for comparison are randomly sampled. This way we can determine the range of ranks where each
system is placed 95% of the time or more often. Clusters are then formed of systems
whose rank ranges overlap.
Traditionally, human evaluation aims to assess the naturalness (ﬂuency, readability)
and informativeness (relevance, correctness, adequacy) of an automatically generated
output . Naturalness targets the linguistic quality of the NLG
system output; informativeness targets relevance or correctness of the output relative to
the input MR, showing how well the system reﬂects the MR content. Recent research
often adds a general, overall quality criterion , or even uses only that .
We decided against explicitly evaluating informativeness since our training instances do not always verbalise all MR attributes (cf. Section 4.4). We therefore only
collected separate ranks for quality and naturalness.
Quality: When collecting quality ratings, system outputs were presented to crowd
workers together with the corresponding meaning representation, which implies
that correctness of the NL utterance relative to the MR should also inﬂuence this
ranking. The crowd workers were asked: “How do you judge the overall quality
of the utterance in terms of its grammatical correctness, ﬂuency, adequacy and
other important factors?”
Naturalness: When collecting naturalness ratings, system outputs were presented to
crowd workers without the corresponding meaning representation. The crowd
workers were asked: “Could the utterance have been produced by a native
Ratings of quality and naturalness were collected separately, i.e. in two individual
crowdsourcing tasks. Furthermore, when crowd workers were asked to assess naturalness, the MR was not shown to them since it was not necessary for the task. This
setup allows to minimise the correlation between the ratings of naturalness and quality .
8. Results
In this section, we report on the results of the evaluation of all E2E NLG Challenge primary systems, following the evaluation procedures described in Section 7.
We ﬁrst show the results using automatic metrics: word-overlap-based (Section 8.1)
and textual metrics (Section 8.2), as well as automatically computed output similarity between systems (Section 8.3). We then summarise the human evaluation results
(Section 8.4), comment on the semantic accuracy of system outputs (Section 8.5) and
declare the overall winning system (Section 8.6). Finally, we provide a list of “lessons
METEOR ROUGE-L CIDEr
norm. avg.
♥Slug-alt (late submission)
Table 8: Word-overlap metrics scores (see Section 7.1) for all primary systems, plus the average of all
metrics’ values normalised into the 0-1 range. The list is sorted by the normalised average; any values
higher than the corresponding baseline are marked in bold. System architectures are coded with colours and
symbols: ♥seq2seq, ♦other data-driven, ♣rule-based, ♠template-based.
learnt” in Section 8.7 – observations that we hope will be useful for future NLG system
development.
8.1. Word-overlap Metrics
Table 8 summarises the system scores for word-overlap metrics (cf. Section 7.1). It
is apparent that the TGen baseline is very strong in terms of word-overlap metrics: No
primary system is able to beat it in terms of all metrics, or in terms of the normalised
metrics’ mean – only Slug comes very close. Several other systems manage to beat
TGen in one of the metrics but not in others. Note, however, that many secondary system submissions perform better than the primary ones (and the baseline) with respect
to word-overlap metrics (see Table A.14 in the Appendix).
Overall, seq2seq-based systems show the best word-based metric values, followed
by Sheff1, a data-driven system based on imitation learning. As expected, attempts to
increase output diversity by ZHAW1, ZHAW2, Slug-alt and Adapt result in lowered
scores by word-overlap-based metrics. Template-based and rule-based systems mostly
score at the bottom of the list. The lowest-scoring systems in terms of word-overlap
metrics are the ones of Chen and Sheff2, which tend to produce much shorter outputs
than other systems (cf. Section 8.2). This most likely resulted in severe brevity penalty.
Finally, it must be noted that the results using automatic metrics are quite diﬀerent
from results obtained in human evaluation (see Section 8.4), which conﬁrms previous
ﬁndings .
8.2. Textual Metrics
Table 9 summarises results from a range of textual metrics which aim to assess the
complexity and diversity of primary system outputs (cf. Section 7.1). In addition, we
include a comparison to the human references in the test set in order to assess whether
systems are able to replicate characteristics of human-produced data.22 The results in
Table 9 show the following:
• Seq2seq-based system outputs are less syntactically complex on average than
outputs of other systems (they produce more D-level 0-2 sentences and less Dlevel 6-7 sentences than other architectures).
• The systems seem to show a relatively high variance in syntactic complexity
levels, especially with respect to the higher levels; few systems match the distribution of the training and test data. The diﬀerences in D-level distributions in
the outputs are mostly statistically signiﬁcant (see Figure A.7 in the Appendix).
The only system producing a D-level distribution not signiﬁcantly diﬀerent from
a random test set reference is FORGe3, which is based on template mining from
training data.
22Note that textual metrics have been computed with restaurant names delexicalised (cf. Section 7.1).
% Level0-2
% Level6-7
Avg. length
test set all
test set rand 0.62
test set rand 0.36
♣DANGNT 66.95
test set all
test set rand 17.46
♣DANGNT 24.85
test set all
♣DANGNT 0.54
test set rand 24.39
♣DANGNT 0.21
test set all
test set rand 58.16
test set all
Table 9: Systems sorted according to selected textual metrics (percentage of simple and complex sentences,
lexical sophistication LS2, MSTTR-50, average output length in tokens). For comparison, the table also
includes the same values for the whole test set (test set all) and for a randomly selected subset of the test set,
with one reference text per MR (test set rand). System architectures are coded with colours and symbols:
♥seq2seq, ♦other data-driven, ♣rule-based, ♠template-based.
If we use Bhattacharyya distance to compare the D-level distributions (cf. Figure A.8 in the Appendix), the greatest distances appear in both extremes. Sheff1,
FORGe1 and Slug-alt produce higher-level sentences more frequently and thus
show among the most distant from other systems. The Gong system mostly
produces level 0-2 sentences, and therefore it appears very distant from other
systems as well as the most distant system from human references.
• None of the systems reaches the lexical sophistication of the human-authored
test set references. The diversity-attempting seq2seq-based Adapt system comes
very close, followed by the grammar-based FORGe1 and the TR2 system, which
is based on template mining from data. Data-driven systems aiming at higher
lexical diversity seem to achieve higher sophistication as well; note the lower
Distinct tokens
Distinct trigrams
% Unique trigrams
Entropy tokens
Cond. entropy bigrams
test set all
test set all
test set rand
test set all
test set all
test set rand
test set rand
test set rand 6.37
test set rand 2.70
test set all
♣DANGNT 5.29
♣DANGNT 1.06
Table 10: Systems sorted according to selected textual diversity metrics (number of distinct tokens, number
fo distinct trigrams, proportion of unique trigrams, Shannon entropy over tokens (unigrams), bigram nextword conditional entropy). For comparison, the table also includes the same values for the whole test set
(test set all) and for a randomly selected subset of the test set, with one reference text per MR (test set
rand). System architectures are coded with colours and symbols: ♥seq2seq, ♦other data-driven, ♣rule-based,
♠template-based.
performance of Slug-alt, which aims more at syntactic diversity than lexical.
For rule-based systems, lexical sophistication is a direct result of the system
authors’ decisions.
• In terms of MSTTR, highest scores are achieved by template or rule-based systems and by data-driven systems that explicitly aim at greater output diversity
(ZHAW1, ZHAW2, Adapt, Slug-alt). Note that MSTTR is typically higher
in systems that tend to produce longer outputs, which includes most rule- and
template-based systems. We assume that this is due to MSTTR’s ﬁxed 50-token
window used to segment utterances.
• Most systems produce outputs similar in length to the test set human references.
Outputs of rule- and template-based systems tend to be more verbose than those
of data-driven systems. The outputs of Zhang, Sheff2 and Chen are much shorter
on average than texts in the dataset, which suggests that these systems might not
verbalise all the information contained in the MR (cf. Section 8.5).
Same as for the datasets statistics in Section 4.2, we also computed additional textual measures to assess the diversity/repetitiveness of the generated outputs: number of
distinct n-grams, Shannon entropy, and conditional next-word entropy; a selection of
these metrics is shown in Table 10.23 We compare the outputs against the whole test
set (multiple references) and a randomly selected single reference per MR from the test
set. The results show the following:
• None of the systems is able to produce as much diversity as is contained in a
randomly selected human reference – even the most diverse systems lag behind.
Adapt comes close in vocabulary size, TR2 is the closest system in terms of
entropy and next-word conditional entropy.
• In terms of vocabulary, there is a huge gap between the most diverse Adapt
and TR2 systems, and any other system (e.g., the 3rd-ranking ZHAW1 has 3×
smaller vocabulary than TR2, and 2.4× smaller ratio of unique trigrams).
TR2 demonstrates that mining templates from the training data can lead to very
diverse outputs. FORGe3, which uses the same method, also ranks relatively
high on vocabulary size and entropy. The diversity produced by Adapt’s seq2seq
model indicates that the prepocessing step enriching the MRs works eﬀectively
(cf. Section 6.3).
• All diversity-attempting data-driven systems (Adapt, ZHAW1, ZHAW2, Harv,
TNT1, TNT2, Slug-alt) indeed rank better than most systems not incorporating
diversity measures, with TNT1 and TNT2 showing lower gains than the rest of
23We used system outputs with delexicalised restaurant names for the evaluation, but the lexicalised outputs show the same trends. The values for n-gram lengths not displayed in Table 10 also show very similar
the group. However, template-mining-based systems (TR2, FORGe3) produce
outputs of similar or higher diversity with no concentrated eﬀort.
• Outputs of seq2seq-based systems which do not explicitly model diversity (e.g.
Gong, Sheff1, TR1, Slug, Chen) indeed show lower diversity scores. The rulebased DANGNT system also ranks very low on diversity, and the TUDA system
with handcrafted templates is the least diverse of all.
In summary, few systems are able to approach the complexity and diversity shown
in human-authored data. Seq2seq-based systems tend to favor simpler sentences than
hand-engineered systems unless diversity control is in place. Vanilla seq2seq and handcrafted templates produce the least diverse outputs; highest diversity is achieved by
template mining or explicit diversity control mechanisms.
8.3. System Output Similarity
In order to assess the similarity of outputs produced by the individual systems, we
reused the word-overlap-based metrics applied in the challenge (see Section 7.1). We
created all possible pairs of systems and computed word-overlap metrics between each
of their outputs for every instance in the test set. Same as for textual metrics, restaurant
names were delexicalised in the system outputs. 24
This process resulted in a table for each of the metrics (see Figure A.6 in the Appendix), with reference systems in rows and tested systems in columns. All ﬁve metrics
showed a very similar pattern. Figure 5 therefore summarises the results by taking the
average of all normalised metrics (cf. Table 8). For comparison, we also measure similarity of system outputs against the reference texts in the test set, as well as a subset of
the test set with a single, randomly sampled reference text per MR.
We can see from Figure 5 that all the seq2seq-based system outputs are in general most similar to each other; other data-driven systems also show higher similarity
amongst each other. The exception to this rule in case of the Chen and Sheff2 systems
can be explained by the brevity of their outputs (cf. Sections 8.1 and 8.2). Systems that
24Results with fully lexicalised outputs are very similar, the diﬀerences are just slightly less profound.
test set rand
Figure 5: Similarity of the systems’ outputs as measured by automatic metrics (mean of normalised BLEU,
NIST, METEOR, ROUGE-L and CIDEr where one system output is used as reference). Systems are sorted
by their architecture. For comparison, we also include metrics values against the full test set with multiple
references (test set all) and against a single-reference randomly sampled subset of the test set (test set rand).
The table on the right shows mean values of similarity of each system against all other systems (average
over columns on the left, excluding the 1st line). System architectures are coded with colours and symbols:
♥seq2seq, ♦other data-driven, ♣rule-based, ♠template-based.
aim at output diversity (ZHAW1, ZHAW2, Slug-alt and mainly Adapt) also exhibit
lowered similarity of their outputs to those of other systems, which might indicate that
their outputs are indeed more original. The outputs of rule-based and template-based
systems are markedly less similar to other outputs than that of the data-driven systems.
We can also see that most system outputs, especially those of data-driven methods,
are much more similar to each other than they are to a single randomly selected humanauthored reference text from the test set. This is to be expected since data-driven methods tend to select more frequent phrasing. Some of the system outputs even show a
higher similarity to each other than to the closest matching human references from the
test set. This is mainly the case for systems with very similar architectures, which often
arrive at identical results (e.g. TGen, TNT1 and TNT2).
8.4. Results of Human Evaluation
The results of human evaluation of quality and naturalness are provided in Table 11.
Using the RankME setup described in Section 7.2, we collected 2,979 data points of
partial system rankings for quality, where one data point corresponds to one MR and
ranked outputs of ﬁve randomly selected systems (see Table 13 for examples). From
these rankings, a set of 29,790 pairwise output comparisons were produced to be used
by the TrueSkill algorithm. This resulted in 1,418 pairwise comparisons per system.
For naturalness, 4,239 data points were collected, which resulted in 42,390 pairwise
comparisons, and 2,018 comparisons per system. For each of 630 MRs in the test
set, 9.5 systems on average (with a maximum of 14) were compared based on both
naturalness and quality of their outputs. That is, using TrueSkill, we were able to reduce
the number of required system comparisons to more than half. The CrowdFlower task
for collecting human evaluation data was running for 235 hours and cost USD 314 in
We produced the ﬁnal ranking of all systems for both quality and naturalness using
the TrueSkill algorithm with bootstrap resampling as described in Section 7.2. This
resulted in clusters of systems with signiﬁcantly diﬀerent system rankings for both
naturalness and quality.25 In both cases, there are clear winning systems (i.e., the 1st
25Note that TrueSkill provides a relative ranking of a system in terms of its cluster and rank range (cf. Sec-
♥Slug-alt (late)
Naturalness
♥Slug-alt (late)
Table 11: TrueSkill measurements of quality (left) and naturalness (right) for all primary systems (signiﬁcance cluster number, TrueSkill value, range of ranks where the system falls in 95% of cases or more, system
name). Signiﬁcance clusters are separated by a dotted line. System architectures are coded with colours and
symbols: ♥seq2seq, ♦other data-driven, ♣rule-based, ♠template-based.
Human Ratings
♣DANGNT 74%
Automatic (pattern matching)
♣DANGNT 88%
Table 12: Results of input MR coverage evaluation, with human ratings (left) and using an automatic patternmatching script (right). Columns legend: OK – proportion of outputs covered perfectly, A – proportion of
outputs with added information, M – with missed information, A+M with both missed and added information,
SER – slot/semantic error rate (see Section 8.5). The lists are sorted by the proportion of perfectly covered
MRs. System architectures are colour-coded: seq2seq, other data-driven, rule-based, template-based.
MR / System name and output
name[The Vaults], eatType[restaurant], food[French], priceRange[moderate], area[city centre],
familyFriendly[yes], near[Raja Indian Cuisine]
The Vaults is a french restaurant in the city centre near Raja Indian Cuisine. It is kids
friendly and has a moderate price range.
The Vaults is a moderately priced French restaurant in the city centre near Raja Indian
Family-friendly and moderate, The Vaults restaurant is located near Raja Indian Cuisine,
in the city centre area.
The Vaults is a kid friendly French restaurant in the city centre near Raja Indian Cuisine .
The Vaults is a moderately priced French restaurant near Raja Indian Cuisine in the city
centre is.
name[Cotto], eatType[coﬀee shop], near[The Bakers]
Cotto is a coﬀee shop located near The Bakers.
Cotto is a coﬀee shop and is located near The Bakers
Cotto is a coﬀee shop with a low price range. It is located near The Bakers.
Cotto is a place near The Bakers.
Cotto is a pub near The Bakers.
name[Clowns], eatType[coﬀee shop], customer rating[3 out of 5], near[All Bar One]
Clowns is a coﬀee shop near All Bar One with a customer rating of 3 out of 5.
Clowns is a coﬀee shop near All Bar One with a customer rating of 3 out of 5 .
Clowns is a coﬀee shop near All Bar One with a rating 3 out of 5.
A coﬀee shop near All Bar One is Clowns. It has a customer rating of 3 out of 5.
Clowns is a pub near All Bar One.
name[The Cricketers], eatType[restaurant], customer rating[low], familyFriendly[no], near[Ranch]
The Cricketers is a restaurant near Ranch. It is not family friendly and has a low
customer rating.
Located near Ranch, The Cricketers is a family-friendly restaurant that is not
family-friendly and has a low customer rating.
The Cricketers is a non - family - friendly restaurant located near the Ranch . It has a low
customer satisfaction rating .
The restaurant The Cricketers is near Ranch. The Cricketers, which does not welcome
kids, has a low customer rating.
The Cricketers is a restaurant located near Ranch. It has a low customer rating. It is not
family friendly.
Table 13: Example system outputs with human rankings of quality and a detailed error analysis attempting
to interpret the rankings.
Each example is shown as ranked for quality by a single crowd worker. The raw RankME scores assigned
by the crowd workers are shown; however, note that only relative ranks are used by the TrueSkill algorithm.
The outputs within each example are sorted by the score for clarity. For the purpose of error analysis, the
rankings may be interpreted in the following way (note that quality rankings include both relevance and
1. Gong and FORGe3 verbalise all attributes but the latter is less ﬂuent. Harv misses the familyfriendliness, Zhang misses the price information. Sheff1 misses family-friendliness and is not ﬂuent.
2. TR2 and Slug-alt provide perfect and ﬂuent information but Slug-alt misses the full stop. Gong
does not specify the type of place while TGen adds irrelevant price range information. Sheff2 indicates a wrong venue type.
3. Sheff1 and Zhang provide perfect and ﬂuent information, FORGe3 is less ﬂuent and ZHAW2 even
less than that. Sheff2 indicates a wrong venue type and misses the customer rating information.
4. Slug provides a perfect an ﬂuent information. Slug-alt is repetitive and Adapt was probably penalised for lack of detokenisation. FORGe1 and TUDA provide a complete information but are not
very ﬂuent.
cluster only has one member): Sheff2 for naturalness and Slug for quality. The 2nd
clusters are quite large for both criteria – they contain 13 and 11 systems, respectively,
and they include the baseline TGen system in both cases.
The results indicate that seq2seq systems dominate in terms of naturalness of their
outputs, while most systems of other architectures score lower. The bottom cluster is
ﬁlled with template-based systems. The winning Sheff2 system is seq2seq-based, and
the 2nd cluster mostly includes other seq2seq-based systems. The result also indicates
that diversity-attempting systems are penalised in naturalness, i.e. Slug-alt, ZHAW1,
ZHAW2 placed in the 3rd cluster; Adapt in the 4th.
The results for quality26 are, however, more mixed in terms of architectures, with
none of them clearly prevailing. The 2nd, most populous cluster includes all diﬀerent
architecture types. The winner is the seq2seq-based system Slug. However, the bottom
two clusters are also composed of seq2seq-based systems. This shows the importance
of an explicit semantic control mechanism applied at decoding time in seq2seq systems:
None of the systems in the bottom two clusters apply such mechanism, whereas all
better ranking seq2seq systems do (cf. Section 6.2).27 Note that this also includes the
Sheff2 system, which scored top for naturalness. With the exception of diversityattempting Adapt, these systems tend to produce the shortest outputs (see Table 9),
which indicates that they are penalised for not realising parts of the input MR too often
(cf. Section 8.5).
Finally, we computed the correlation of word-overlap metrics with the human judgements of both quality and naturalness for all the systems. All of the correlations are
weak (< 0.2, see Tables A.16 and A.15 in the Appendix), which conﬁrms earlier ﬁndings of Novikova et al. and explains the discrepancy between system performances in terms of automatic and human evaluation.
tion 7.2), i.e. the numerical scores are not directly interpretable. Other systems in the same cluster are considered to show performance that is not signiﬁcantly diﬀerent. In other words: if a system is part of e.g.
cluster 2, this system can be considered 2nd best, but it is sharing this position with all other systems in the
26Note that our deﬁnition of quality in Section 7.2 also includes semantic completeness and grammaticality.
27While the Chen and Zhang systems do attempt to model the coverage of the input MR, they do not use
explicit beam reranking based on MR coverage.
8.5. Error Analysis: Input MR Coverage
In order to clarify the mixed quality evaluation results, we attempted to estimate the
number of semantic errors produced by the individual systems in two ways: First, we
ran a speciﬁc crowdsourced evaluation of systems’ coverage of the input MR, where
crowd workers were asked to manually annotate missed and added information with
respect to the input MR (see Table 12). We did not check for workers’ correctness
here, and thus we can expect some noise, but the annotations conﬁrm that the systems
rated low on quality, most of which also produce very short outputs, also correspond to
the ones with the lowest proportion of perfectly covered MRs (Chen, Sheff2, Zhang,
TR1 and Adapt).
Second, semantic errors were computed following Reed et al. , where we implemented a script to estimate the coverage automatically based on regular expression
matching.28 This allowed us to produce an independent estimate of the proportion of
outputs with missing or added information (see Table 12). Following Reed et al. ,
we also computed the slot error rate (SER) using this pattern-matching approach and
the following formula:29
SER = # missed + # added + # value errors + # repetitions
Here, missed stands for slot values missing from the realisations, added denotes additional information not present in the MR (hallucinations), value errors denote correctly
realised slots with incorrect values (e.g., specifying low price range instead of high),
and repetitions are values mentioned repeatedly in the outputs; slots is the total number of slots/attributes in the test set. SER thus amounts to a proportion of erroneously
realised slots. While the absolute numbers for perfectly covered MRs are diﬀerent
from those estimated by humans, they mostly follow the same trend. The SER value is
highly correlated with the proportion of perfectly covered MRs.
28We based the patterns for the individual attribute-value pairs on Reed et al. ’s script and manually
enhanced them using the ﬁrst 500 instances of the E2E development set.
29Note that the coverage and SER values produced by the script is only an estimate as the patterns for a
given attribute-value pair will not cover all possible all correct ways to express it. This is diﬀerent from Wen
et al. ’s computation of SER, where full delexicalisation allowed them to directly count placeholders
in the output.
Both evaluations show that template- and rule-based systems, where MR coverage
is implied by the architecture, mostly score high in this regard. However, FORGe3,
which uses template mining from training data, scores below average; here, some
amount of noise was probably carried over from training data. TUDA, on the other
hand, scores high in human ratings and even achieved perfect score by the automatic
script (100% perfect coverage), but this is partly given by its low diversity (cf. Section 8.2) – all its templates are probably covered well by the patterns. The results also
show that some data-driven systems are able to achieve very good coverage (especially
Sheff1, Gong and Slug, with SER estimates below 1.5%), which conﬁrms the eﬃcacy
of their respective semantic control approaches (see Section 6.2). Seq2seq systems
without reranking (Chen, Sheff2, Zhang, Adapt, TR1) score near the bottom of the list
in both evaluations.
Both estimates also indicate that missing information is the most common type
of problem, added (hallucinated) information occurs less frequently, but still poses
a serious problem for utterance generation in task-based dialogue systems.30 It also
appears that both problems are connected – systems hallucinating less fre quently tend
to miss information more often.
Finally, the scores show that attempts at diversity may hurt semantic accuracy. This
is most apparent in Adapt, the most diverse system with no explicit semantic control
mechanism. Other systems with diverse outputs, FORGe3 and Harv, also score lower
on coverage. In case of FORGe3, this is due to the above-mentioned noise in the mined
templates; Harv’s reranking is probably less aggressive than others’. On the other hand,
ZHAW1, ZHAW2 and especially Slug-alt produce diverse outputs while maintaining
good coverage thanks to their very powerful semantic control mechanisms.
8.6. Winning System
We consider the Slug system , a seq2seq-based ensemble system, as the overall winner of this challenge. It received high human ratings for both
30Note that this problem appears to be more general since it has also been reported in related ﬁelds,
including image captioning Rohrbach et al. , machine translation Koehn and Knowles ; Lee
et al. , and question answering Feng et al. .
naturalness and quality, as well as for automatic word-overlap metrics. In contrast
to vanilla seq2seq systems, Slug improves semantic coverage using a heuristic slot
aligner in combination with a data augmentation method producing partially aligned
examples, which places it among the top-scoring systems in terms of MR coverage
(cf. Section 8.5). Slug’s only drawback is the relatively low output diversity; note
that repetitive output is considered to be problematic for task-based dialogue systems.
A variant of the same system, Slug-alt, provides much more output diversity at the
cost of slightly lower quality ratings and MR coverage; it maintains higher quality and
coverage scores than other diversity-attempting approaches.
While the Sheff2 system , a vanilla seq2seq setup, won in terms
of naturalness, it often does not realise all parts of the input MR, which severely affected its quality rating – it placed in the last cluster, ranked 20th–21st out of 21.
Sheff2’s outputs also rank very low on complexity and diversity.
Furthermore, the TGen baseline system turned out hard to beat. It ranked highest
on average in word-overlap-based automatic metrics and placed in the 2nd cluster in
both quality and naturalness (ranks 3–6 and 4–8 out of 21, respectively). TGen also
fared well (albeit not perfectly) in MR coverage evaluations. On the other hand, TGen
only scored in the middle of the pack on output diversity.
8.7. Lessons Learnt and Future Directions
We attempt to formulate some high-level “lessons learnt” for developing future
data-driven NLG systems based on the above results, while we acknowledge that our
data is limited to a single domain, and that comparisons are not strictly controlled, i.e.
models vary in more than one aspect.
• Semantic control: For seq2seq-based systems, a strong semantic control of the
generated content seems crucial – beam reranking based on MR classiﬁcation or
heuristic alignments appears to work well while attention-only models perform
poorly on our data. Correct semantics is regarded by users as more important
than ﬂuency and should be prioritised when training the
models .
• Open vocabulary: For limited domains such as ours, delexicalisation of openset attributes still seem to be the best approach. However, the systems of Harv
and NLE show character-level models and copy mechanisms are viable alternatives. We believe that the low results of Chen, Zhang and Adapt are due to
inferior semantic control, not open-vocabulary handling.
• Complexity and diversity: In general, hand-engineered systems seem to outperform neural systems in terms of output diversity and complexity (see Section 8.2); the most diverse outputs are produced by systems using templates
mined from training data and data-driven systems with explicit diversity mechanisms.
Vanilla seq2seq-based systems produce the least diverse outputs: they are essentially probabilistic language models, which tend to settle for the most frequent
phrasing, thus penalising length and favouring high-frequency word sequences.
Diversity in seq2seq models can be improved by data selection (Slug-alt), diverse ensembling (Harv) or sampling from the generated beam . In contrast, hand-engineered system authors can control the output complexity and diversity directly: here, TUDA’s outputs are very repetitive as its set
of handcrafted templates is small, while FORGe3 and TR2 with templates mined
from data produce some of the most diverse outputs.
In general, any systems attempting output diversity need to impose strong semantic control mechanisms to maintain MR coverage.
• Best method suggestion: Rule-based methods work quite well for limited domains, such as ours. Low-eﬀort handcrafting (as in TUDA) may lead to correct
but repetitive outputs. Seq2seq models with semantic reranking emerge as the
best data-driven option, in combination with controlling for diversity and using
copy mechanisms to minimise preprocessing.
9. Conclusion
This paper presents the ﬁndings of the ﬁrst shared task on End-to-End Natural Language Generation for Spoken Dialogue Systems. The aim of this challenge was to
assess the capabilities of recent end-to-end, fully data-driven NLG systems, which can
be trained from pairs of input meaning representations and corresponding texts, without
the need for ﬁne-grained semantic alignments. In addition to attracting many participants, the challenge has substantially shaped current NLG research, as it has inﬂuenced,
inspired and motivated a number of recent studies outwith the original competition.
As part of this challenge, we have created a novel dataset for NLG benchmarking
in the restaurant information domain, which is an order-of-magnitude bigger than any
previous publicly available dataset for task-oriented NLG and has already been used
and extended by multiple follow-up works since its original release. We also provided
one of the previous state-of-the art seq2seq-based NLG systems, TGen , as a baseline for comparison. The challenge received 62 system submissions by 17 diﬀerent participating institutions. The systems submitted ranged from
complex seq2seq-based setups with diﬀerent additions to the architecture, over other
data-driven methods and rule-based systems, to simple template-based ones. We evaluated all the entries in terms of ﬁve diﬀerent automatic metrics. 20 primary submissions
(as identiﬁed by the participants) were further evaluated using a novel, crowdsourced
evaluation setup. We also include a novel comparison of systems in terms of automatic
textual metrics aimed to assess output complexity and diversity. Our evaluation lets us
include several general recommendations for future NLG system development.
In general, seq2seq-based systems produce very similar outputs (as measured by
word-overlap, cf. Section 8.3), despite their diﬀerent implementations. Seq2seq models tend to score high on word-overlap metrics and human evaluations of naturalness, while the scores for other data-driven, rule-based and template-based systems
are lower. However, these other types of systems often score better in human evaluations of the overall quality. While the winning Slug system is seq2seq-based, the
results also demonstrated possible pitfalls of using seq2seq models:
1. Vanilla seq2seq models tend to produce short outputs of low diversity and syntactic complexity. Low diversity is especially problematic since it causes repetitive
outputs in spoken dialogue systems.
2. Applying a strong semantic control mechanism during decoding is crucial to
preserve the input meaning. The most common semantic mistake for systems
is to miss out information. However, added information (hallucinations) is also
closely linked. Both type of errors can have severe consequences for task-based
dialogue systems, depending on the application domain.
3. Addressing these issues is challenging: Attempts to improve diversity can often
result in lowered semantic accuracy and/or output naturalness.31
In comparison, hand-engineered systems tend to produce more complex and diverse outputs and are able to reach high overall quality, but are mostly rated low on
naturalness. Note that similar ﬁndings have been reported by Wiseman et al. 
for data-to-document generation. This raises the general question regarding eﬃciency,
costs, and performance of purely data-driven versus carefully hand-engineered NLG
To facilitate further research in this domain, we have made the following data and
tools freely available for download:
• The E2E NLG training dataset (including test set with human references),
• A set of word-overlap-based metrics and scripts for running further textual metrics used for automatic evaluation in the challenge,
• Outputs of the baseline TGen system for the development set,
• Outputs for the test set produced by the baseline and all participating systems,
• the corresponding RankME ratings for quality and naturalness collected in the
human evaluation campaign.
All can be accessed under the following URL:
 
In future work, we aim to investigate additional evaluation methods for NLG systems, such as post-edits , or extrinsic evaluation, such as NLG’s
31This ﬁnding is in line with recent follow-up works to the challenge Oraby et al. ; Balakrishnan et al. , which suggests that explicit style supervision is needed to produce both diverse and
accurate outputs.
contribution to task success, e.g. . We also
intend to continue our work on automatic quality estimation for NLG , where the large amount of data obtained in this challenge allows a wider range
of experiments than previously possible.
Acknowledgments
This research received funding from the EPSRC projects DILiGENt (EP/M005429/1)
and MaDrIgAL (EP/N017536/1) and Charles University project PRIMUS/19/SCI/10.
The Titan Xp used for this research was donated by the NVIDIA Corporation. The
authors would like to thank Lena Reed and Shereen Oraby for help with computing
the slot error rate. We would also like to thank the anonymous reviewers for providing
exceptionally helpful comments and Prof. Ehud Reiter, whose blog32 inspired some of
this research.
32