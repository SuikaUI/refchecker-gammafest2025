IEEE International Conference on Computer Vision (ICCV) 2019
EGNet: Edge Guidance Network for Salient Object Detection
Jia-Xing Zhao, Jiang-Jiang Liu, Deng-Ping Fan, Yang Cao, Ju-Feng Yang, Ming-Ming Cheng*
TKLNDST, CS, Nankai University
 
Fully convolutional neural networks (FCNs) have shown
their advantages in the salient object detection task. However, most existing FCNs-based methods still suffer from
coarse object boundaries. In this paper, to solve this problem, we focus on the complementarity between salient edge
information and salient object information. Accordingly,
we present an edge guidance network (EGNet) for salient
object detection with three steps to simultaneously model
these two kinds of complementary information in a single
In the ﬁrst step, we extract the salient object
features by a progressive fusion way. In the second step,
we integrate the local edge information and global location information to obtain the salient edge features.
Finally, to sufﬁciently leverage these complementary features,
we couple the same salient edge features with salient object features at various resolutions.
Beneﬁting from the
rich edge information and location information in salient
edge features, the fused features can help locate salient
objects, especially their boundaries more accurately. Experimental results demonstrate that the proposed method
performs favorably against the state-of-the-art methods on
six widely used datasets without any pre-processing and
post-processing. The source code is available at http:
//mmcheng.net/egnet/.
1. Introduction
The goal of salient object detection (SOD) is to ﬁnd the
most visually distinctive objects in an image. It has received
widespread attention recently and been widely used in many
vision and image processing related areas, such as contentaware image editing , object recognition , photosynth , non-photo-realist rendering , weakly supervised semantic segmentation and image retrieval .
Besides, there are many works focusing on video salient
object detection and RGB-D salient object detection .
Inspired by cognitive studies of visual attention [7, 21,
*M.M. Cheng ( ) is the corresponding author.
Figure 1. Visual examples of our method. After we model and fuse
the salient edge information, the salient object boundaries become
39], early works are mainly based on the fact that contrast
plays the most important role in saliency detection. These
methods beneﬁt mostly from either global or local contrast
cues and their learned fusion weights. Unfortunately, these
hand-crafted features though can locate the most salient
objects sometimes, the produced saliency maps are with
irregular shapes because of the undesirable segmentation
methods and unreliable when the contrast between the foreground and the background is inadequate.
Recently, convolutional neural networks (CNNs) 
have successfully broken the limits of traditional handcrafted features, especially after the emerging of Fully Convolutional Neural Networks (FCNs) .
These CNNbased methods have greatly refreshed the leaderboards on
almost all the widely used benchmarks and are gradually
replacing conventional salient object detection methods because of the efﬁciency as well as high performance. In SOD
approaches based on CNNs architecture, the majority of
them which regard the image patches as input use
the multi-scale or multi-context information to obtain the
ﬁnal saliency map. Since the fully convolutional network
is proposed for pixel labeling problems, several end-to-end
deep architectures for salient
object detection appear. The basic unit of output saliency
map becomes per pixel from the image region. On the one
hand, the result highlights the details because each pixel has
its saliency value. However, on the other hand, it ignores the
structure information which is important for SOD.
 
With the increase of the network receptive ﬁeld, the positioning of salient objects becomes more and more accurate. However, at the same time, spatial coherence is also
Recently, to obtain the ﬁne edge details, some
SOD U-Net based works used a bidirectional or recursive way to reﬁne the high-level features
with the local information.
However, the boundaries of
salient objects are still not explicitly modeled. The complementarity between the salient edge information and salient
object information has not been noticed.
Besides, there
are some methods using pre-processing (Superpixel) 
or post-processing (CRF) to preserve the object
boundaries. The main inconvenience with these approaches
is their low inference speed.
In this paper, we focus on the complementarity between
salient edge information and salient object information. We
aim to leverage the salient edge features to help the salient
object features locate objects, especially their boundaries
more accurately. In summary, this paper makes three major
contributions:
• We propose an EGNet to explicitly model complementary salient object information and salient edge information within the network to preserve the salient object boundaries. At the same time, the salient edge features are also helpful for localization.
• Our model jointly optimizes these two complementary
tasks by allowing them to mutually help each other,
which signiﬁcantly improves the predicted saliency
• We compare the proposed methods with 15 state-ofthe-art approaches on six widely used datasets. Without bells and whistles, our method achieves the best
performance under three evaluation metrics.
2. Related Works
Over the past years, some methods were proposed to detect the salient objects in an image. Early methods predicted the saliency map using a bottom-up pattern by the
hand-craft feature, such as contrast , boundary background , center prior and so on .
More details are introduced in .
Recently, Convolutional neural networks (CNNs) perform their advantages and refresh the state-of-the-art
records in many ﬁelds of computer vision.
Li et al. resized the image regions to three different scales to extract the multi-scale features and then aggregated these multiple saliency maps to obtain the ﬁnal prediction map. Wang et al. designed a neural network to
extract the local estimation for the input patches and integrated these features with the global contrast and geometric
information to describe the image patches. However, the
result is limited by the performance of image patches in
these methods. In , long et al. ﬁrstly proposed a network (FCN) to predict the semantic label for each pixel.
Inspired by FCN, more and more pixel-wise saliency detection methods were proposed. Wang et al. proposed
a recurrent FCN architecture for salient object detection.
Hou et al. proposed a short connection based on
HED to integrate the low-level features and high-level
features to solve the scale-space problem. In , Zhang et
al. introduced a reformulated dropout and an effective hybrid upsampling to learn deep uncertain convolutional features to encourage robustness and accuracy. In , Zhang
et al. explicitly aggregated the multi-level features into multiple resolutions and then combined these feature maps by
a bidirectional aggregation method. Zhang et al. proposed a bi-directional message-passing model to integrate
multi-level features for salient object detection. Wang et
al. leveraged the ﬁxation maps to help the model to
locate the salient object more accurately. In , Luo et
al. proposed a U-Net based architecture which contains an
IOU edge loss to leverage the edge cues to detect the salient
objects. In other saliency-related tasks, some methods of
using edge cues have appeared. In , li et al. generated
the contour of the object to obtain the salient instance segmentation results. In , li et al. leveraged the well-trained
contour detection models to generate the saliency masks to
overcome the limitation caused by manual annotations.
Compared with most of the SOD U-Net based methods
 , we explicitly model edge information within
the network to leverage the edge cues. Compared with the
methods which use the edge cues , the major differences are that we use a single base network and jointly
optimize the salient edge detection and the salient object detection, allowing them to help each other mutually. which
results in better performance. Compared with NLDF ,
they implemented a loss function inspired by the Mumford-
Shah function to penalize errors on the edges. Since
the salient edges are derived from salient objects through
a ﬁxed sober operator, this penalty essentially only affects
the gradient in the neighborhood of salient edges on feature
maps. In this way, the edge details are optimized to some
extent, but the complementarity between salient edge detection and salient object detection is not sufﬁciently utilized.
In our method, we design two modules to extract these two
kinds of features independently. Then we fuse these complementary features by a one-to-one guidance module. In
this way, the salient edge information can not only improve
the quality of edges but also make the localization more accurate. The experimental part veriﬁes our statement.
3. Salient Edge Guidance Network
The overall architecture is shown in Fig. 2. In this section, we begin by describing the motivations in Sec. 3.1,
then introduce the adopted salient object feature extraction
: Conv layer
: Upsample
: Pixel-wise add
Top-down location
propagation
: Saliency Spv.
: Edge Spv.
Figure 2. The pipeline of the proposed approach. We use brown thick lines to represent information ﬂows between the scales. PSFEM:
progressive salient object features extraction module. NLSEM: non-local salient edge features extraction module. O2OGM : one-to-one
guidance module. FF: feature fusion. Spv.: supervision.
module and the proposed non-local salient edge features extraction module in Sec. 3.2, and ﬁnally introduce the proposed one-to-one guidance module in Sec. 3.3.
3.1. Motivation
The pixel-wise salient object detection methods have
shown their advantages compared with region-based methods. However, they ignored the spatial coherence in the
images, resulting in the unsatisﬁed salient object boundaries. Most methods hope to solve this
problem by fusing multi-scale information. Some methods used the post-processing such as CRF to
reﬁne the salient object boundaries. In NLDF , they
proposed an IOU loss to affect the gradient of the location
around the edge. None of them pay attention to the complementarity between salient edge detection and salient object detection. A good salient edge detection result can help
salient object detection task in both segmentation and localization, and vice versa. Based on this idea, we proposed an
EGNet to model and fuse the complementary salient edge
information and salient object information within a single
network in an end-to-end manner.
3.2. Complementary information modeling
Our proposed network is independent of the backbone
network. Here we use the VGG network suggested by other
deep learning based methods to describe the proposed method. First, we truncate the last three fully connected layers. Following DSS , we connect another
side path to the last pooling layer in VGG. Thus from the
backbone network, we obtain six side features Conv1-2,
Conv2-2, Conv3-3, Conv4-3, Conv5-3, Conv6-3. Because
the Conv1-2 is too close to the input and the receptive ﬁeld
is too small, we throw away this side path S(1). There are
ﬁve side paths S(2), S(3), S(4), S(5), S(6) remaining in our
method. For simplicity, these ﬁve features could be denoted
by a backbone features set C:
C = {C(2), C(3), C(4), C(5), C(6)},
where C(2) denotes the Conv2-2 features and so on. Conv2-
2 preserves better edge information . Thus we leverage
the S(2) to extract the edge features and other side paths to
extract the salient object features.
Progressive salient object features extraction
As shown in PSFEM of Fig. 2, to obtain richer context features, we leverage the widely used architecture U-
Net to generate the multi-resolution features. Different from the original U-Net, in order to obtain more robust
salient object features, We add three convolutional layers
(Conv in Fig. 2) on each side path, and after each convolutional layer, a ReLU layer is added to ensure the nonlinearity. To illustrate simply, we use the T (Tab. 1) to denote
these convolutional layers and ReLU layers. Besides, deep
supervision is used on each side path. We adopt a convolutional layer to convert the feature maps to the single-channel
prediction mask and use D (Tab. 1) to denote it. The details
of the convolutional layers could be found in Tab. 1.
Non-local salient edge features extraction
In this module, we aim to model the salient edge information and extract the salient edge features. As mentioned above, the Conv2-2 preserves better edge information. Hence we extract local edge information from Conv2-
2. However, in order to get salient edge features, only local
information is not enough. High-level semantic information
or location information is also needed. When information
Table 1. Details of each side output. T denotes the feature enhance
module (Conv shown in Fig. 2). Each T contains three convolutional layers: T1, T2, T3 and three followed ReLu layers. We show
the kernel size, padding and channel number of each convolutional
layer. For example, 3, 1, 128 denote a convolutional layer whose
kernel size is 3, padding is 1, channel number is 128. D denotes
the transition layer which converts the multi-channel feature map
to one-channel activation map. S denotes the side path.
is progressively returned from the top level to the low level
like the U-Net architecture, the high-level location information is gradually diluted. Besides, the receptive ﬁeld of the
top-level is the largest, and the location is the most accurate.
Thus we design a top-down location propagation to propagate the top-level location information to the side path S(2)
to restrain the non-salient edge. The fused features ¯C(2)
could be denoted as:
¯C(2) = C(2) + Up(φ(Trans( ˆF (6); θ)); C(2)),
where Trans(∗; θ) is a convolutional layer with parameter θ, which aims to change the number of channels of the feature, and φ() denotes a ReLU activation function.
Up(∗; C(2)) is bilinear interpolation operation which aims to up-sample * to the same size as
On the right of the equation, the second term
denotes the features from the higher side path.
To illustrate clearly, we use UpT(ˆF (i); θ, C (j)) to represent
Up(φ(Trans( ˆF (i); θ)); C(j)).
ˆF (6) denotes the enhanced
features in side path S(6). The enhanced features ˆF (6) could
be represented as f(C(6); W (6)
T ), and the enhanced features
in S(3), S(4), S(5) could be computed as:
ˆF (i) = f(C(i) + UpT( ˆF (i+1); θ, C(i)); W (i)
where W (i)
denotes the parameters in T (i) and f(∗; W (i)
denotes a series of convolutional and non-linear operations
with parameters W (i)
After obtaining the guided features ¯C(2), similar with
other side paths, we add a series convolutional layers to enhance the guided feature, then the ﬁnal salient edge features
FE in S(2) could be computed as f( ¯C(2); W (2)
T ). The con-
ﬁguration details could be found in Tab. 1. To model the
salient edge feature explicitly, we add an extra salient edge
supervision to supervise the salient edge features. We use
the cross-entropy loss which could be deﬁned as:
L(2)(FE; W (2)
log Pr(yj = 1|FE; W (2)
log Pr(yj = 0|FE; W (2)
where Z+ and Z−denote the salient edge pixels set and
background pixels set, respectively. WD denotes the parameters of the transition layer as shown in Tab. 1. Pr(yj =
1|FE; W (2)
D ) is the prediction map in which each value denotes the salient edge conﬁdence for the pixel. In addition,
the supervision added on the salient object detection side
path can be represented as:
L(i)( ˆF (i); W (i)
log Pr(yj = 1| ˆ
F (i); W (i)
log Pr(yj = 0| ˆF (i); W (i)
D ), i ∈ ,
where Y+ and Y−denote the salient region pixels set and
non-salient pixels set, respectively. Thus the total loss L in
the complementary information modeling could be denoted
L = L(2)(FE; W (2)
L(i)( ˆF (i); W (i)
3.3. One-to-one guidance module
After obtaining the complementary salient edge features
and salient object features, we aim to leverage the salient
edge features to guide the salient object features to perform
better on both segmentation and localization. The simple
way is to fuse the FE and the ˆF (3). It will be better to sufﬁciently leverage the multi-resolution salient object features.
However, the disadvantage of fusing the salient edge features and multi-resolution salient object features progressively from down to top is that salient edge features are diluted when salient object features are fused. Besides, the
goal is to fuse salient object features and salient edge features to utilize complementary information to obtain better
prediction results. Hence, we propose a one-to-one guidance module. Moreover, experimental parts validate our
Speciﬁcally, we add sub-side paths for S(3), S(4), S(5),
S(6). In each sub-side path, by fusing the salient edge features into enhanced salient object features, we make the location of high-level predictions more accurate, and more
importantly, the segmentation details become better. The
salient edge guidance features (s-features) could be denoted
G(i) = UpT( ˆF (i); θ, FE) + FE, i ∈ .
Then similar to the PSFEM, we adopt a series of convolutional layers T in each sub-side path to further enhance
the s-features and a transition layer D to convert the multichannel feature map to one-channel prediction map. Here
in order to illustrate clearly, we denote the T and D as T ′
and D′ in this module. By Eq. (3), we obtain the enhanced
s-features ˆG(i).
Here we also add deep supervision for these enhanced sfeatures. For each sub-side output prediction map, the loss
can be calculated as:
L(i)′( ˆG(i); W (i)
log Pr(yj = 1| ˆG(i); W (i)
log Pr(yj = 0| ˆG(i); W (i)
D′ ), i ∈ .
Then we fuse the multi-scale reﬁned prediction maps to obtain a fused map. The loss function for the fused map can
be denoted as:
f( ˆG; WD′) = σ(Y,
βif( ˆG(i); W (i)
where the σ(∗, ∗) represents the cross-entropy loss between
prediction map and saliency ground-truth, which has the
same form to Eq. (5). Thus the loss for this part and the
total for the proposed network could be expressed as:
f( ˆG; WD′) +
L(i)′( ˆG(i); W (i)
Lt = L + L′.
4. Experiments
4.1. Implementation Details
We train our model on DUTS dataset followed by
 . For a fair comparison, we use VGG and
ResNet as backbone networks, respectively. Our model
is implemented in PyTorch. All the weights of newly added
convolution layers are initialized randomly with a truncated
normal (σ = 0.01), and the biases are initialized to 0. The
hyper-parameters are set as followed: learning rate = 5e-
5, weight decay = 0.0005, momentum = 0.9, loss weight
for each side output is equal to 1. A back propagation is
processing for each of the ten images. We do not use the
validation dataset during training. We train our model 24
epochs and divide the learning rate by 10 after 15 epochs.
During inference, we are able to obtain a predicted salient
edge map and a set of saliency maps. In our method, we
directly use the fused prediction map as the ﬁnal saliency
4.2. Datasets and Evaluation Metric
We have evaluated the proposed architecture on six
widely used public benchmark datasets:
ECSSD ,
PASCAL-S , DUT-OMRON , SOD , HKU-
IS , DUTS . ECSSD contains 1000 meaningful
semantic images with various complex scenes. PASCAL-
S contains 850 images which are chosen from the validation set of the PASCAL VOC segmentation dataset .
DUT-OMRON contains 5168 high-quality but challenging images. Images in this dataset contain one or more
salient objects with a relatively complex background. SOD
 contains 300 images and is proposed for image segmentation.
Pixel-wise annotations of salient objects are
generated by . It is one of the most challenging datasets
currently. HKU-IS contains 4447 images with highquality annotations, many of which have multiple disconnected salient objects. This dataset is split into 2500 training images, 500 validation images and 2000 test images.
DUTS is the largest salient object detection benchmark. It contains 10553 images for training and 5019 images for testing.
Most images are challenging with various locations and scales.
Following most recent works
 , we use the DUTS dataset to train the proposed
We use three widely used and standard metrics, Fmeasure, mean absolute error (MAE) , and a recently
proposed structure-based metric, namely S-measure ,
to evaluate our model and other state-of-the-art models. Fmeasure is a harmonic mean of average precision and average recall, formulated as:
Fβ = (1 + β2)Precision × Recall
β2 × Precision + Recall ,
we set β2 = 0.3 to weigh precision more than recall as
suggested in . Precision denotes the ratio of detected
salient pixels in the predicted saliency map. Recall denotes
the ratio of detected salient pixels in the ground-truth map.
Precision and recall are computed on binary images. Thus
we should threshold the prediction map to binary map ﬁrst.
There are different precision and recall of different thresholds. We could plot the precision-recall curve at different
thresholds. Here we use the code provided by for
evaluation. Following most salient object detection methods , we report the maximum F-measure from
all precision-recall pairs.
MAE is a metric which evaluates the average difference
between prediction map and ground-truth map. Let P and
Y denote the saliency map and the ground truth that is normalized to . We compute the MAE score by:
|P(x, y) −Y (x, y)|,
where W and H are the width and height of images, respectively.
S-measure focuses on evaluating the structural information of saliency maps, which is closer to the human visual
system than F-measure. Thus we include S-measure for a
more comprehensive evaluation. S-measure could be computed as:
S = γSo + (1 −γ)Sr,
ECSSD 
PASCAL-S 
DUT-O 
HKU-IS 
SOD 
DUTS-TE 
MaxF ↑MAE ↓
MaxF ↑MAE ↓
MaxF ↑MAE ↓
MaxF ↑MAE ↓
MaxF ↑MAE ↓
MaxF ↑MAE ↓
DSS∗ 
Amulet 
ResNet-based
PiCANet∗ 
Table 2. Quantitative comparison including max F-measure, MAE, and S-measure over six widely used datasets. ‘-’ denotes that corresponding methods are trained on that dataset. ↑& ↓denote larger and smaller is better, respectively. ∗means methods using pre-processing
or post-processing. The best three results are marked in red, blue, and green, respectively. Our method achieves the state-of-the-art on
these six widely used datasets under three evaluation metrics.
MaxF ↑MAE ↓S ↑MaxF ↑MAE ↓S ↑
2. B + edge PROG
3. B + edge TDLP
4. B + edge NLDF
5. B + edge TDLP + MRF PROG
6. B + edge TDLP + MRF OTO
Table 3. Ablation analyses on SOD and DUTS-TE .
Here, B denotes the baseline model. edge PROG, edge TDLF,
edge NLDF, MRF PROG, MRF OTO are introduced in the
where So and Sr denotes the region-aware and object-aware
structural similarity and γ is set as 0.5 by default. More
details can be found in .
4.3. Ablation Experiments and Analyses
In this section, with the DUTS-TR as the training
set, we explore the effect of different components in the proposed network over the relatively difﬁcult dataset SOD 
and the recently proposed big dataset DUTS-TE .
The complementary information modeling
In this subsection, we explore the role of salient edge information, which is also our basic idea. The baseline is the
U-Net architecture which integrates the multi-scale features
(From Conv2-2 to Conv6-3) in the way as PSFEM (Fig. 2).
We remove the side path S(2) in the baseline and then fuse
the ﬁnal saliency features ˆF (3) (side path from Conv3-3)
and the local Conv2-2 features to obtain the salient edge
features. Finally, we integrate salient edge features and the
salient object features ˆF (3) to get the prediction mask. We
denote this strategy of using edges as edge PROG. The result is shown in the second row of Tab. 3. It proves that the
salient edge information is very useful for the salient object
detection task.
Top-down location propagation
In this subsection, we explore the role of top-down location propagation. Compared with edge PROG mentioned
in the previous subsection Sec. 4.3.1, we leverage the topdown location propagation to extract more accurate location
information from top-level instead of side path S(3). We
call this strategy of using edges as edge TDLP. By comparing the second and third rows of Tab. 3, the effect of
top-down location propagation could be proved. Besides,
comparing the ﬁrst row and the third row of Tab. 3, we can
ﬁnd that through our explicit modeling of these two kinds
of complementary information within the network, the performance is greatly improved on the datasets (3.1%, 2.4%
under F-measure) without additional time and space consumption.
Mechanism of using edge cues
To demonstrate the advantages over NLDF , in which
an IOU loss is added to the end of the network to punish
the errors of edges. We add the same IOU loss to the baseline. This strategy is called edge NLDF. The performance is
shown in the 4th row of Tab. 3. Compared with the baseline
model, the improvement is limited. This also demonstrates
that the proposed method of using edge information is more
(a) DUTS-TE 
(b) DUT-OMRON 
(c) HKU-IS 
Figure 3. Precision (vertical axis) recall (horizontal axis) curves on three popular salient object datasets. It can be seen that the proposed
method performs favorably against state-of-the-arts.
B+edge NLDFB+edge TDLP
Figure 4. Visual examples before and after adding edge cues. B
denotes the baseline model. edge NLDF and edge TDLP represent the edges penalty used in NLDF and the edge modeling
method proposed in this paper. The details are introduced in the
effective.
The visualization results are shown in Fig. 4.
Compared with the baseline model without edge constraint,
after we add the edge penalty used in NLDF , edge information can only help reﬁne the boundaries. In particular,
this penalty can not help to remove the redundant parts in
saliency prediction mask, nor can it make up for the missing
parts. In contrast, the proposed complementary information
modeling method considers the complementarity between
salient edge information and salient object information, and
performs better on both segmentation and localization.
Besides, in order to further prove that salient edge detection and salient object detection are mutually helpful and
complementary. We compare the salient edges generated
by NLDF with the salient edges generated by us. The pretrained model and code are both provided by the authors.
As shown in Tab. 4, it could be found that the salient edge
generated by our method is much better, especially under
the recall and F-measure metrics. It proves that the edges
are more accurate in our methods.
Precision ↑
Precision ↑
Table 4. Comparisons on the salient edge generated by the NLDF
The complementary features fusion
After we obtain the salient edge features and multiresolution salient object features. We aim to fuse these complementary features. Here we compare three fusion methods. The ﬁrst way is the default way, which integrates the
salient edge features (FE) and the salient object features
ˆF (3) which is on the top of U-Net architecture. The second way is to fuse the multi-resolution features ˆF (3), ˆF (4),
ˆF (5), ˆF (6) progressively, which is called MRF PROG. The
third way is the proposed one-to-one guidance, which is denoted MRF OTO. Here MRF denotes the multi-resolution
fusion. The results are shown in the third, ﬁfth, sixth rows
of Tab. 3, respectively. It can be seen that our proposed
one-to-one guidance method is most suitable for our whole
architecture.
4.4. Comparison with the State-of-the-art
In this section, we compare our proposed EGNet with
15 previous state-of-the-art methods, including DCL ,
DSS , NLDF , MSR , ELD , DHS ,
RFCN , UCF , Amulet , PAGR , Pi-
CANet , SRM , DGRL , RAS and C2S .
Note that all the saliency maps of the above methods are
produced by running source codes or pre-computed by the
authors. The evaluation codes are provided in .
F-measure, MAE, and S-measure. We evaluate and
compare our proposed method with other salient object detection methods in term of F-measure, MAE, and S-measure
as shown in Tab. 2. We could see that different methods
PiCANet PAGR 
Amulet DSS 
Figure 5. Qualitative comparisons with state-of-the-arts.
may use different backbone net. Here for a fair comparison, we train our model on the VGG and ResNet ,
respectively. It can be seen that our model performs favorably against the state-of-the-art methods under all evaluation metrics on all the compared datasets especially on the
relative challenging dataset SOD (2.9% and 1.7%
improvements in F-measure and S-measure) and the largest
dataset DUTS (3.0% and 2.5%). Speciﬁcally, Compared with the current best approach , the average Fmeasure improvement on six datasets is 1.9%. Note that this
is achieved without any pre-processing and post-processing.
Precision-recall curves. Besides the numerical comparisons shown in Tab. 2, we plot the precision-recall curves
of all compared methods over three datasets Fig. 3. As can
be seen that the solid red line which denotes the proposed
method outperforms all other methods at most thresholds.
Due to the help of the complementary salient edge information, the results yield sharp edge information and accurate
localization, which results in a better PR curve.
Visual comparison. In Fig. 5, we show some visualization results. It could be seen that our method performs better
on salient object segmentation and localization. It is worth
mentioning that thank to the salient edge features, our result
could not only highlight the salient region but also produce
coherent edges. For instance, for the ﬁrst sample, due to the
inﬂuence of the complex scene, other methods are not capable of localizing and segmenting salient objects accurately.
However, beneﬁting from the complementary salient edge
features, our method performs better. For the second sample, in which the salient object is relatively small, our result
is still very close to the ground-truth.
5. Conclusion
In this paper, we aim to preserve salient object boundaries well. Different from other methods which integrate the
multi-scale features or leverage the post-processing, we focus on the complementarity between salient edge information and salient object information. Based on this idea, we
propose the EGNet to model these complementary features
within the network. First, we extract the multi-resolution
salient object features based on U-Net. Then, we propose
a non-local salient edge features extraction module which
integrates the local edge information and global location information to get the salient edge features. Finally, we adopt
a one-to-one guidance module to fuse these complementary
features. The salient object boundaries and localization are
improved under the help of salient edge features. Our model
performs favorably against the state-of-the-art methods on
six widely used datasets without any pre-processing or postprocessing. We also provide analyses of the effectiveness of
the EGNet.
Acknowledgments.
by NSFC (61572264), the national youth talent support program, and Tianjin Natural Science Foundation
(17JCJQJC43700, 18ZXZNGX00110).