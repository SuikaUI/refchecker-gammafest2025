MultiResUNet : Rethinking the U-Net Architecture
for Multimodal Biomedical Image Segmentation
Nabil Ibtehaz1 and M. Sohel Rahman1,*
1Department of CSE, BUET,
ECE Building, West Palasi, Dhaka-1205, Bangladesh
*Corresponding author
 , 
February 12, 2019
In recent years Deep Learning has brought about a breakthrough in Medical
Image Segmentation. U-Net is the most prominent deep network in this regard,
which has been the most popular architecture in the medical imaging community.
Despite outstanding overall performance in segmenting multimodal medical images,
from extensive experimentations on challenging datasets, we found out that the
classical U-Net architecture seems to be lacking in certain aspects.
Therefore,
we propose some modiﬁcations to improve upon the already state-of-the-art U-
Net model.
Hence, following the modiﬁcations we develop a novel architecture
MultiResUNet as the potential successor to the successful U-Net architecture. We
have compared our proposed architecture MultiResUNet with the classical U-Net
on a vast repertoire of multimodal medical images. Albeit slight improvements in
the cases of ideal images, a remarkable gain in performance has been attained for
challenging images. We have evaluated our model on ﬁve diﬀerent datasets, each
with their own unique challenges, and have obtained a relative improvement in
performance of 10.15%, 5.07%, 2.63%, 1.41%, and 0.62% respectively.
Index terms— Convolutional Neural Networks, Medical Imaging, Semantic Segmentation, U-Net
 
Introduction
Since the introduction of digital medical imaging equipments, signiﬁcant attention has
been drawn towards applying image processing techniques in analyzing medical images.
Multidisciplinary researchers have been working diligently for decades to develop automated diagnosis systems, and to this day it is one of the most active research areas .
The task of a computer aided medical image analysis tool is twofold: segmentation and
diagnosis. In the general Semantic Segmentation problem, the objective is partitioning
an image into a set of non-overlapping regions, which allows the homogeneous pixels to
be clustered together . However, in the context of medical images the interest often
lies in distinguishing only some interesting areas of the image, like the tumor regions ,
organs etc. This enables the doctors to analyze only the signiﬁcant parts of the otherwise incomprehensible multimodal medical images . Furthermore, often the segmented
images are used to compute various features that may be leveraged in the diagnosis .
Therefore, image segmentation is of utmost importance and application in the domain of
Biomedical Engineering.
Owing to the profound signiﬁcance of medical image segmentation and the complexity
associated with manual segmentation, a vast number of automated medical image segmentation methods have been developed, mostly focused on images of speciﬁc modalities.
In the early days, simple rule-based approaches were followed; however, those methods
failed to maintain robustness when tested on huge variety of data . Consequently,
more adaptive algorithms were developed relying on geometric shape priors with tools
of soft-computing and fuzzy algorithms . Nevertheless, these methods suﬀer from
human biases and can not deal with the amount of variance in real world data.
Recent advancements in deep learning have shwon a lot of promises towards solving such issues. In this regard, Convolutional Neural Networks (CNN) have been the
most ground-breaking addition, which is dominating the ﬁeld of Computer Vision. CNNs
have been responsible for the phenomenal advancements in tasks like object classiﬁcation
 , object localization etc., and the continuous improvements to CNN architectures
are bringing further radical progresses . Semantic Segmentation tasks have
also been revolutionalized by Convolutional Networks. Since CNNs are more intuitive
in performing object classiﬁcation, Ciresan et al. presented a sliding window based
pipeline to perform semantic segmentation using CNN. Long et al. proposed a fully
convolutional network (FCN) to perform end-to-end image segmentation, which surpassed
the existing approaches. Badrinarayanan et al. improved upon FCN, by developing
a novel architecture namely, SegNet. SegNet consists of a 13 layer deep encoder network
that extracts spatial features from the image, and a corresponding 13 layer deep decoder
network that upsamples the feature maps to predict the segmentation masks. Chen et al.
 presented DeepLap and performed semantic segmentation using atrous convolutions.
In spite of initiating a breakthrough in computer vision tasks, a major drawback of the
CNN architectures is that they require massive volumes of training data. Unfortunately,
in the context of medical images, not only the acquisition of images is expensive and
complicated, accurate annotation thereof adds even more to the complexity . Nevertheless, CNNs have shown great promise in medical image segmentation in recent years
 , and most of the credit go to U-Net . The structure of U-Net is quite similar
to SegNet, comprising an encoder and a decoder network. Furthermore, the correspond-
ing layers of the encoder and decoder network are connected by skip connections, prior
to a pooling and subsequent to a deconvolution operation respectively. U-Net has been
showing impressive potential in segmenting medical images, even with a scarce amount
of labeled training data, to an extent that it has become the de-facto standard in medical
image segmentation . U-Net and U-Net like models have been successfully used in
segmenting biomedical images of neuronal structures , liver , skin lesion , colon
histology , kidney , vascular boundary , lung nodule , prostate , etc.
and the list goes on.
In this paper, in parallel to appreciating the capabilities of U-Net, the most popular
and successful deep learning model for biomedical image segmentation, we diligently
scrutinize the network architecture to discover some potential scopes of improvement.
We argue and hypothesize that the U-Net architecture may be lacking in certain criteria
and based on contemporary advancements in deep computer vision we propose some
alterations to it.
In the sequel, we develop a novel model called MultiResUNet, an
enhanced version of U-Net, that we believe will signiﬁcantly advance the state of the art
in the domain of general multimodal biomedical image segmentation. We put our model
to test using a variety of medical images originating from diﬀerent modalities, and even
with 3D medical images. From extensive experimentation with this diverse set of medical
images, it was found that MultiResUNet overshadows the classical U-Net model in all
the cases even with slightly less number of parameters.
The contributions of this paper can be summarized as follows:
• We analyze the U-Net model architecture in depth, and conjecture some potential
opportunities for further enhancements
• Based on the probable scopes for improvement, we propose MultiResUNet, which
is an enhanced version of the standard U-Net architecture.
• We experiment with diﬀerent public medical image datasets of diﬀerent modalities,
and MultiResUNet shows superior accuracy.
• We also experiment with a 3D version of MultiResUNet, and it outperforms the
standard 3D U-Net as well.
• Particularly, we examine some very challenging images and observe a signiﬁcant
improvement in using MultiResUNet over U-Net.
Overview of the UNet Architecture
Similar to FCN and SegNet , U-Net uses a network entirely of convolutional
layers to perform the task of semantic segmentation. The network architecture is symmetric, having an Encoder that extracts spatial features from the image, and a Decoder
that constructs the segmentation map from the encoded features. The Encoder follows
the typical formation of a convolutional network. It involves a sequence of two 3× 3 convolution operations, which is followed by a max pooling operation with a pooling size of
2 × 2 and stride of 2. This sequence is repeated four times, and after each downsampling
the number of ﬁlters in the convolutional layers are doubled. Finally, a progression of
two 3 × 3 convolution operations connects the Encoder to the Decoder.
On the contrary, the Decoder ﬁrst up-samples the feature map using a 2×2 transposed
convolution operation , reducing the feature channels by half. Then again a sequence
of two 3 × 3 convolution operations is performed. Similar to the Encoder, this succession
of up-sampling and two convolution operations is repeated four times, halving the number
of ﬁlters in each stage. Finally, a 1×1 convolution operation is performed to generate the
ﬁnal segmentation map. All convolutional layers in this architecture except for the ﬁnal
one use the ReLU (Rectiﬁed Linear Unit) activation function ; the ﬁnal convolutional
layer uses a Sigmoid activation function.
Perhaps, the most ingenious aspect of the U-Net architecture is the introduction of
skip connections. In all the four levels, the output of the convolutional layer, prior to the
pooling operation of the Encoder is transfered to the Decoder. These feature maps are
then concatenated with the output of the upsampling operation, and the concatenated
feature map is propagated to the successive layers. These skip connections allow the
network to retrieve the spatial information lost by pooling operations . The network
architecture is illustrated in Figure 1.
Figure 1: The U-Net Architecture. The model comprises an encoder and a decoder pathway, with skip
connections between the corresponding layers.
Subsequently, the U-Net architecture was extended through a few modiﬁcations to 3D
U-Net for volumetric segmentation . In particular, the two dimensional convolution,
max pooling, transposed convolution operations were replaced by their three dimensional
counterparts. However, in order to limit the number of parameters, the depth of the
network was reduced by one. Moreover, the number of ﬁlters were doubled before the
pooling layers to avoid bottlenecks . The original U-Net did not use batch normalization , however, they were experimented with in the 3D U-Net and astonishingly
the results revealed that batch normalization may sometime even hurt the performance
Motivations and High Level Considerations
U-Net has been a remarkable and the most popular Deep Network Architecture in medical
imaging community, deﬁning the state of the art in medical image segmentation .
However, thorough contemplation of the U-Net architecture and drawing some parallels
to the recent advancement of deep computer vision leads to some useful observations as
described in the following subsections.
Variation of Scale in Medical Images
In medical image segmentation, we are interested in segmenting cell necluei , organs
 , tumors etc. from images originating from various modalities. However, in most
cases these objects of interest are of irregular and diﬀerent scales. For example, in Figure
2 we have demonstrated that the scale of skin lesions can greatly vary in dermoscopy
images. These situations frequently occur in diﬀerent types medical image segmentation
Figure 2: Variation of Scale in medical images. Fig. 2a, 2b, 2c are examples of dermoscopy images with
small, medium and large size of lesions respectively. The images have been taken from the ISIC-2018
Therefore, a network should be robust enough to analyze objects at diﬀerent scales.
Although this issue has been addressed in several deep computer vision works, to the best
of our knowledge, this issue is still not addressed properly in the domain of medical image
segmentation. Serre et al. employed a sequence of ﬁxed Gabor ﬁlters of varying scales
to acknowledge the variation of scale in the image. Later on, the revolutionary Inception
architecture introduced Inception blocks, that utilizes convolutional layers of varying
kernel sizes in parallel to inspect the points of interest in images from diﬀerent scales.
These perceptions obtained at diﬀerent scales are combined together and passed on deeper
into the network.
In the U-Net architecture, after each pooling layer and transposed convolutional layer
a sequence of two 3 × 3 convolutional layers are used. As explained in , this series
of two 3 × 3 convolutional operation actually resembles a 5 × 5 convolutional operation.
Therefore, following the approach of Inception network, the simplest way to augment
U-Net with multi-resolutional analysis is to incorporate 3 × 3, and 7 × 7 convolution
operations in parallel to the 5 × 5 convolution operation, as shown in Figure 3a.
Therefore, replacing the convolutional layers with Inception-like blocks should facilitate the U-Net architecture to reconcile the features learnt from the image at diﬀerent
scales. Another possible option is to use strided convolutions , but in our experiments it was overshadowed by U-Net using Inception-like blocks. Despite the gain in
performance, the introduction of additional convolutional layers in parallel extravagantly
increases the memory requirement. Therefore, we improvise with the following ideas borrowed from . We factorize the bigger, more demanding 5 × 5 and 7 × 7 convolutional
layers, using a sequence of smaller and lightweight 3 × 3 convolutional blocks, as shown
in Figure 3b. The outputs of the 2nd and 3rd 3 × 3 convolutional blocks eﬀectively approximate the 5 × 5 and 7 × 7 convolution operations respectively. We hence take the
outputs from the three convolutional blocks and concatenate them together to extract
the spatial features from diﬀerent scales. From our experiments, it was seen that the
results of this compact block closely resemble that of the memory intensive Inception-like
block decsribed earlier. This outcome is in line with the ﬁndings of , as the adjacent
layers of a vision network are expected to be correlated.
Despite that this modiﬁcation greatly reduces the memory requirement, it is still quite
demanding. This is mostly due to the fact that in a deep network if two convolutional
layers are present in a succession, then the number of ﬁlters in the ﬁrst one has a quadratic
eﬀect over the memory .
Therefore, instead of keeping all the three consecutive
convolutional layers of equal number of ﬁlters, we gradually increase the ﬁlters in those
(from 1 to 3), to prevent the memory requirement of the earlier layers from exceedingly
propagating to the deeper part of the network. We also add a residual connection because
of their eﬃcacy in biomedical image segmentaion , and for the introduction of the
1 × 1 convolutional layers, which may allow us to comprehend some additional spatial
information. We call this arrangement a ‘MultiRes block’, as shown in Figure 3c.
Figure 3: Devolping the Proposed MultiRes block. We start with a simple Inception like block by using
3×3, 5 ×5 and 7×7 convolutional ﬁlters in parallel and concatenating the generated feature maps (Fig.
3a). This allows us to reconcile spatial features from diﬀerent context size. Instead of using the 3 × 3,
5 × 5 and 7 × 7 ﬁlters in parallel, we factorize the bigger and more expensive 5 × 5 and 7 × 7 ﬁlters as a
succession of 3 × 3 ﬁlters (Fig. 3b) . Fig 3c illustrates the MultiRes block, where we have increased the
number of ﬁlters in the successive three layers gradually and added a residual connection (along with
1 × 1 ﬁlter for conserving dimensions).
Probable Semantic Gap between the Corresponding Levels
of Encoder-Decoder
An ingenious contribution of the U-Net architecture was the introduction of shortcut
connections between the corresponding layers before and after the max-pooling and the
deconvolution layers respectively. This enables the network to propagate from encoder
to decoder, the spatial information that gets lost during the pooling operation.
Despite preserving the dissipated spatial features, a ﬂaw of the skip connections may
be speculated as follows. For instance, the ﬁrst shortcut connection bridges the encoder
before the ﬁrst pooling with the decoder after the last deconvolution operation. Here,
the features coming from the encoder are supposed to be lower level features as they
are computed in the earlier layers of the network. On the contrary, the decoder features
are supposed to be of much more higher level, since they are computed at the very deep
layers of the network. Therefore, they go through more processing. Hence, we observe
a possible semantic gap between the two sets of features being merged. We conjecture
that the fusion of these two arguably incompatible sets of features could cause some
discrepancy throughout the learning and thus adversely aﬀect the prediction procedure.
It may be noted that, the amount of discrepancy is likely to decrease gradually as we
move towards the succeeding shortcut connections. This can be attributed to the fact
that, not only the features from the encoder are going through more processing, but also
we are fusing them with decoder features of much juvenile layers.
Therefore, to alleviate the disparity between the encoder-decoder features, we propose
to incorporate some convolutional layers along the shortcut connections. Our hypothesis
is that these additional non-linear transformations on the features propagating from the
encoder stage should account for the further processing done during the by decoder
stage therein. Furthermore, instead of using the usual convolutional layers we introduce
residual connections to them as they make the learning easier and is proven to be
having great potential in medical image analysis . This idea is inspired from the
image to image conversion using convolutional neural networks , where pooling layers
are not favorable for the loss of information. Thus, instead of simply concatenating the
feature maps from the encoder stage to the decoder stage, we ﬁrst pass them through a
chain of convolutional layers with residual connections, and then concatenate with the
decoder features. We call this proposed shortcut path ‘Res path’, illustrated in Fig. 4.
Speciﬁcally, 3 × 3 ﬁlters are used in the convolutional layers and 1 × 1 ﬁlters accompany
the residual connections.
Figure 4: Proposed Res path. Instead of combining the the encoder feature maps with the decoder
feature in a straight-forward manner, we pass the encoder features through a sequence of convolutional
layers. These additional non-linear operations are expected to reduce the semantic gap between encoder
and decoder features. Furthermore, residual connections are also introduced as they make the learning
easier and are very useful in deep convolutional networks.
Proposed Architecture
In the MultiResUNet model, we replace the sequence of two convolutional layers with the
proposed MultiRes block as introduced in Section 3.2. For each of the MultiRes blocks,
we assign a parameter W, which controls the number of ﬁlters of the convolutional layers
inside that block. To maintain a comparable relation between the numbers of parameters
in original U-Net and the proposed model, we compute the value of W as follows:
Here, U is the number of ﬁlters in the corresponding layer of the U-Net and α is a scaler
coeﬃcient. Decomposing W to U and α provides a convenient way to both controlling
the number of parameters and keeping them comparable to U-Net. We compare our
proposed model with an U-Net, having #filters = along the levels,
which are also the values of U in our model. We selected α = 1.67 as it keeps the number
of parameters in our model slightly below that of the U-Net.
In Section 3.2, we pointed out that it is beneﬁcial to gradually increase the number of
ﬁlters in the successive convolutional layers inside a MultiRes block, instead of keeping
them the same.
Hence, we assign
ﬁlters to the three successive
convolutional layers respectively, as this combination achieved the best results in our
experiments. Also it can be noted that similar to the U-Net architecture, after each
pooling or deconvolution operation the value of W gets doubled.
In addition to introducing the MultiRes blocks, we also replace the ordinary shortcut
connections with the proposed Res paths. Therefore, we apply some convolution operations on the feature maps propagating from the encoder stage to the decoder stage. In
Section 3.1, we hypothesized that the intensity of the semantic gap between the encoder
and decoder feature maps are likely to decrease as we move towards the inner shortcut
paths. Therefore, we also gradually reduce the number of convolutional blocks used along
the Res paths. In particular, we use 4, 3, 2, 1 convolutional blocks respectively along the
four Res paths. Also, in order to account for the number of feature maps in encoderdecoder, we use 32, 64, 128, 256 ﬁlters in the blocks of the four Res paths respectively.
All the convolutional layers except for the output layer, used in this network is activated by the ReLU (Rectiﬁed Linear Unit) activation function , and are batchnormalized . Similar to the U-Net model, the output layer is activated by a Sigmoid
activation function. We present a diagram of the proposed MultiResUNet model in Fig.
5. The architectural details are described in Table 1.
Curation of medical imaging datasets are challenging compared to the traditional computer vision datasets. Expensive imaging equipments, sophisticated image acquisition
pipelines, necessity of expert annotation, issues of privacy-all adds to the complexity of
developing medical imaging datasets . As a result, only a few public medical imaging
benchmark datasets exist, and they only contain a handful of images each. In order to assess the eﬃcacy of the proposed architecture, we tried to evaluate it on a variety of image
modalities. More speciﬁcally, we selected datasets that are as heterogeneous as possible
Figure 5: Proposed MultiResUNet architecture. We replace the sequences of two convolutional layers in
the U-Net architectures with the proposed MultiRes block. Furthermore, instead of using plain shortcut
connections, we use the proposed Res paths.
from each other. Also, each of these datasets poses a unique challenge of their own (more
details are given in Section 7 and Section 8). The datasets used in the experiments are
brieﬂy described below (also see Table 2 for an overview).
Fluorescence Microscopy Image
We used the ﬂuorescence microscopy image dataset developed by Murphy Lab . This
dataset contains 97 ﬂuorescence microscopy images and a total of 4009 cells are contained
in these images. Half of the cells are U2OS cells and the other half comprises NIH3T3
cells. The nuclei were segmented manually by experts. The nuclei are irregular in terms
of brigtness and the imags often contain noticeable debris, making this a challenging
dataset of bright-ﬁeld microscopy images. The original resolution of the images range
from 1349 × 1030 to 1344 × 1024; they have been resized to 256 × 256 for computational
constraints.
Electron Microscopy Image
To observe the eﬀectiveness of the architecture with electron microscopy images, we used
the dataset of the ISBI-2012 : 2D EM segmentation challenge . This dataset contains only 30 images from a serial section Transmission Electron Microscopy (ssTEM) of
the Drosophila ﬁrst instar larva ventral nerve cord . The images face slight alignment
errors, and are corrupted with noises. The resolution of the images is 512×512, but they
have been resized to 256 × 256 due to computational limitations.
Dermoscopy Image
We acquired the dermoscopy images from the ISIC-2018 : Lesion Boundary Segmentation
challenge dataset. The data for this challenge were extracted from the ISIC-2017 dataset
 and the HAM10000 dataset . The compiled dataset contains a total of 2594 images
of diﬀerent types of skin lesions with expert annotation.
The images are of various
Table 1: MultiResUNet Architecture Details
MultiResUNet
Layer(ﬁlter size)
Layer(ﬁlter size)
MultiRes Block 1
MultiRes Block 9
Conv2D(3,3)
Res Path 1
Conv2D(3,3)
Conv2D(3,3)
Conv2D(1,1)
Conv2D(3,3)
Conv2D(3,3)
Conv2D(1,1)
Conv2D(1,1)
MultiRes Block 2
MultiRes Block 8
Conv2D(3,3)
Conv2D(3,3)
Conv2D(3,3)
Conv2D(1,1)
Conv2D(3,3)
Conv2D(3,3)
Conv2D(1,1)
Conv2D(1,1)
MultiRes Block 3
MultiRes Block 7
Conv2D(3,3)
Res Path 2
Conv2D(3,3)
Conv2D(3,3)
Conv2D(1,1)
Conv2D(3,3)
Conv2D(3,3)
Conv2D(1,1)
Conv2D(1,1)
MultiRes Block 4
MultiRes Block 6
Conv2D(3,3)
Conv2D(3,3)
Conv2D(3,3)
Conv2D(1,1)
Conv2D(3,3)
Conv2D(3,3)
Conv2D(1,1)
Conv2D(1,1)
MultiRes Block 5
Conv2D(3,3)
Conv2D(3,3)
Conv2D(3,3)
Conv2D(1,1)
Conv2D(3,3)
Res Path 4
Conv2D(3,3)
Conv2D(1,1)
Conv2D(1,1)
resolutions, but they have all been resized to 256 × 192, maintaining the average aspect
ratio, for computational purposes.
Endoscopy Image
We used the CVC-ClinicDB , a colonoscopy image database for our experiments
with endoscopy images. The images of this dataset were extracted from frames of 29
colonoscopy video sequences. Only the images with polyps were considered, resulting in
a total of 612 images. The images are originally of resolution 384 × 288, but have been
resized to 256 × 192, maintaining the aspect ratio.
Magnetic Resonance Image
All the datasets described previously contains 2D medical images. In order to evaluate
our proposed architecture with 3D medical images, we used the magnetic resonance images (MRI) from the BraTS17 competition database . This dataset contains 210
glioblastoma (HGG) and 75 lower grade glioma (LGG) multimodal MRI scans. These
multimodal scans include native (T1), post-contrast T1-weighted (T1Gd), T2-weighted
(T2) and T2 Fluid Attenuated Inversion Recovery (FLAIR) volumes, which were acquired following diﬀerent clinical protocols and various scanners from 19 institutions.
The images are of dimensions 240 × 240 × 155 but have been resized to 80 × 80 × 48 for
Table 2: Overview of the Datasets.
No. of images
Original Resolution
Input Resolution
Fluorescence Microscopy
Murphy Lab
Electron Microscopy
Dermoscopy
CVC-ClinicDB
240 × 240 × 155
80 × 80 × 48
computational ease. All the four modalities, namely, T1, T1Gd, T2 and FLAIR are used
as four diﬀerent channels in evaluating the 3D variant of our model.
Experiments
We used Python, more speciﬁcally Python3 programming language to conduct the experiments . The network models were implemented using Keras with Tensorﬂow
backend . Our model implementation is available in the following github repository:
 
The experimets were conducted in a desktop computer with intel core i7-7700 processor (3.6 GHz, 8 MB cache) CPU, 16 GB RAM, and NVIDIA TITAN Xp (12 GB, 1582
Baseline Model
Since the proposed architecture, MultiResUNet, is targeted towards improving the state
of the art U-Net architecture for medical image segmentation, we compared its performance with the U-Net architecture as the baseline. To keep the number of parameters
comparable to our proposed MultiResUNet, we implemented the original U-Net having ﬁve layer deep encoder and decoder, with ﬁlter numbers of 32, 64, 128, 256, 512.
Also, as the baseline for 3D image segmentation we used the 3D counterpart of the
U-Net as described in the original paper .
The 3D version of the MultiResUNet
is constructed simply by substituting the 2D convolutional layers, pooling layers and
transposed convolution layers, with their 3D variants respectively, without any further
alterations.
The number of parameters of the models are presented in Table 3. In both the cases
the proposed networks require slightly lesser number of parameters.
Table 3: Models used in our experiments
Parameters
Parameters
U-Net (baseline)
3D U-Net (baseline)
19,078,593
MultiResUNet (proposed)
MultiResUNet 3D (proposed)
18,657,689
Pre-processing / Post-processing
The objective of the experiments is to investigate the superiority of the proposed MultiResUNet architecture over the original U-Net as a general model. Therefore, no domain
speciﬁc pre-processing was performed. The only pre-processing the input images went
through was that they were resized to ﬁt into the GPU memory and the pixel values
were divided by 255 to bring them to the [0 . . . 1] range. Similarly, no application speciﬁc
post-processing was performed. Since, the ﬁnal layer is activated by a Sigmoid function,
it produces outputs in the range [0 . . . 1]. Therefore, we applied a threshold of 0.5 to
obtain the segmentation map of the input images.
Training Methodology
The task of semantic segmentation is to predict the individual pixels whether they represent a point of interest, or are merely a part of the background. Therefore, this problem
ultimately reduces to a pixel-wise binary classiﬁcation problem. Hence, as the loss function of the network we simply took the binary cross-entropy function and minimized
Let, for an image X, the ground truth segmentation mask is Y , and the segmentation
mask predicted by the model is ˆY . For a pixel px, the network predicts ˆypx, whereas, the
ground truth value is ypx. The binay cross-entropy loss for that image is deﬁned as:
Cross Entropy(X, Y, ˆY ) =
−(ypx log(ˆypx) + (1 −ypx) log(1 −ˆypx))
For a batch containing n images the loss function J becomes,
Cross Entropy(Xi, Yi, ˆYi)
We minimized the binary cross-entropy loss, hence trained the model using the Adam
optimizer . Adam adaptively computes diﬀerent learning rates for diﬀerent parameters
from estimates of ﬁrst and second moments of the gradients. This idea, in fact combines
the advantages of both AdaGrad and RMSProp ; therefore Adam has been often
used in benchmarking deep learning models as the default choice . Adam has a number
of parameters including β1 and β2 which control the decay of ﬁrst and second moment
respectively. However, in this work we used Adam with the parameters mentioned in
the original paper. The models were trained for 150 epochs using Adam optimizer. The
reason of selecting 150 as the number of epochs is due to the fact that after 150 epochs
neither of the models were showing any further improvements.
Evaluation Metric
In semantic segmentation, usually the points of interest comprise a small segment of the
entire image. Therefore, metrics like precision, recall are inadequate and often lead to
false sense of superiority, inﬂated by the perfection of detecting the background. Hence,
Jaccard Index has been widely used to evaluate and benchmark image segmentation and
object localization algorithms . Jaccard Index for two sets A and B are deﬁned as the
ratio of the intersection and union of the two sets:
Jaccard Index = Intersection
In our case, the set A represents the ground truth binary segmentation mask Y , and
set B corresponds to the predicted binary segmentation mask ˆY . Therefore, by taking
the Jaccard Index as the metric, we not only emphasize on precise segmentation, but also
penalize under-segmentation and over-segmentation.
k-Fold Cross Validation
Cross-Validation tests estimate the general eﬀectiveness of an algorithm on an independent dataset, ensuring a balance between bias and variance. In a k-Fold cross-validation
test, the dataset D is randomly split into k mutually exclusive subsets D1, D2, · · · , Dk
of equal or near equal size . The algorithm is run k times subsequently, each time
taking one of the k splits as the validation set and the rest as the training set. In order to
evaluate the segmentation accuracy of both the baseline U-Net and proposed MultiResUNet architecture, we performed 5-Fold Cross Validation tests on each of the diﬀerent
Since, this is a deep learning pipeline, the best performing result on the validation set
achieved through the total number of epochs (150 in our case) performed is recorded in
each run. Finally, combining the results of all the k runs gives an overall estimation of
the performance of the algorithm.
MultiResUNet Consistently Outperforms U-Net
As described in Section 5 and Section 6 to evaluate the performance of the proposed
architecture, we performed experiments with diversiﬁed classes of medical images, each
with a unique challenge of its own. In particular, we have performed 5-fold cross validation
and observed the performance of our proposed MultiResUNet and the baseline, U-Net. In
each run the best results obtained on the validation set through the 150 epochs performed
was noted and they were summarised from the 5 runs to obtain the ﬁnal result.
The results of the 5-Fold Cross Validation for both the proposed MultiResUNet model
and baseline U-Net model on the diﬀerent datasets are presented in Table 4. It should be
noted that for better readability the fractional Jaccard Index values have been converted
to percentage ratios (%).
From the table, It can be observed that our proposed model outperforms the U-Net
architecture in segmenting all diﬀerent types of medical images. Most notably, remarkable
improvements are observed for Dermoscopy and Endoscopy images. These images tend to
be a bit less uniform and often they appear confusing even to a trained eye (more details
are discussed in a later section). Therefore, this improvement is of great signiﬁcance. For
Fluorescence Microscopy images our model also achieve a 2.6326% relative improvement
over U-Net, and despite having a lesser number of parameters, still it achieves a relative
Table 4: Results of 5-fold cross validation. Here, we present the best obtained results in the ﬁve folds,
of both U-Net and MultiResUNet, for all the datasets used. We also mention the relative improvement
of MultiResUNet over U-Net. It should be noted that, for better readability the fractional values of
Jaccard Index have been converted to percentage ratios (%).
MultiResUNet (%)
Relative Improvement (%)
Dermoscopy
80.2988 ± 0.3717
76.4277 ± 4.5183
82.0574 ± 1.5953
74.4984 ± 1.4704
Fluorescence Microscopy
91.6537 ± 0.9563
89.3027 ± 2.1950
Electron Microscopy
87.9477 ± 0.7741
87.4092 ± 0.7071
78.1936 ± 0.7868
77.1061 ± 0.7768
improvement of 1.4104% for MRI images. Only for Electron Microscopy images U-Net
seems to be on par with our proposed model, yet in that case the latter obtains slightly
better results (relative improvement of 0.6161%).
MultiResUNet can Obtain Better Results in Less Number
In addition to analyzing the best performing models from each run, we also monitored
how the model performance progressed with epochs. In Figure 6, the performance on the
validation data on each epoch is shown, for all the datasets. We have presented the band
of Jaccard Index values at a certain epoch in the 5-fold cross validation. It can be noted
that for all the cases our proposed model attains convergance much faster. This can
be attributed to the synergy between residual connections and batch normalization .
Moreover, apart from Fig. 6d in all other cases the MultiResUNet model consistently
outperformed the classical U-Net model. In spite of lagging behind the U-Net at the
beginning for the electron microscopy images (Fig. 6d), eventually the MultiResUNet
model converges at a better accuracy than U-Net. Another remarkable observation from
the experiments is that except for some minor ﬂactuations, the standard deviation of the
performance of the MultiResUNet is much smaller; this indicates the reliability and the
robustness of the proposed model.
These results, therefore, suggest that using the proposed MultiResUNet architecture,
we are likely to obtain superior results in less number of training epochs as compared to
the classical U-Net architecture.
MultiResUNet Delineates Faint Boundaries Better
Being the current state of the art model for medical image segmentation, U-Net has
demonstrated quite satisfactory results in our experiments. For instance, in Fig. 7, for
a polyp with clearly distinguishable boundary the U-Net model manages to segment it
with a high value of Jaccard Index; our proposed model however performs better albeit
only slightly.
But as we study more and more challenging images, especially with not so much
conspicuous boundaries, U-Net seems to be struggling a bit (Fig. 8). The colon polyp
images often suﬀer from the lack of clear boundaries. On such cases, the U-Net model
(a) Dermatoscopy
(b) Endoscopy
(c) Fluorescence Microscopy
(d) Electron Microscopy
Figure 6: Progress of the validation performance with the number of epochs. We record the value of
Jacard Index on validation data after each epoch.
It can be observed that not only MultiResUNet
outperforms the U-Net model, but also the standard deviation of MultiResUNet is much smaller.
Figure 7: Segmenting a polyp with clearly visiable boundary. U-Net manages to segment the polyp with
a high level of performance (J.I. = 0.9678). MultiResUNet segments just slightly better (J.I. = 0.9697)
either under-segmented (Fig. 8a) or over-segmented (Fig. 8b) the polyps. Our proposed
MultiResUNet, on the other hand, performed considerably better in both the cases.
However, there are some images where both the models faced complications, but in those
cases MultiResUNet’s performance was superior(Fig.
Dermoscopic images have
comparatively clearer deﬁned boundaries; still in those cases MultiResUNet delineats
the boundaries better (Fig.
Same was observed for other types of images.
hypothesize that the use of multiple ﬁlter sizes allows MultiResUNet to perform better
pixel perfect segmentation.
MultiResUNet is More Immune to Perturbations
The core concept of semantic segmentation is to cluster the homologous regions of an
image together. However, often in real world medical images the homologous regions
get deviated due to various types of noises, artifacts and irregularities in general. This
Figure 8: Segmenting images with vague boundaries. This issue is more prominent for Colon Endoscopy
images. U-Net seems to either under-segment (8a), or over-segment (8b) the polyps. MultiResUNet
manages to segment polyps of such situation much better. However, some images are too problematic
even for MultiResUNet, but in those cases as well it performs beter than U-Net (8c). Even in dermoscopy
images, where there exists a clear boundary, U-Net sometimes produced some irregularities along the
boundaries, but MultiResUNet was much more robust (8d).
makes it challenging to distinguish between the region of interest and background in
medical images. As a result, instead of obtaining a continuous segmented region, we are
often left with a collection of fractured segmented regions. At the other extreme, due to
textures and perturbations the plain background sometimes appear similar to the region of
interest. These two cases lead to loss of information and false classiﬁcations respectively.
Fortunately, the Dermatoscopy image dataset we have used contains images with such
confusing cases, allowing us to analyze and compare the behaviour and performance of
the two models.
In spite of segmenting the images with near consistent background and approximately
undeviating foreground with almost perfection, the baseline U-Net model seems to struggle quite a bit in the presence of perturbations in images (Fig. 9). In images where the
foreground object tend to vary a bit therein, U-Net, was unable to segment the forground
as a continuous region. It rather predicted a set of scattered regions (Fig. 9a), confusing
the forground as background and thus caused the loss of some valuable information. On
the other hand, for images where the background is not uniform, the U-Net model seems
to make some false predictions (Fig. 9b). The more rough the background becomes, the
more false predictions are made (Fig. 9c). Furthermore, in some dreadfully adverse situations, where due to irregularity the diﬀerence between background and forground are
too subtle, the U-Net model failed to make any predictions at all (Fig. 9d). Although in
such challenging cases the segmentation of MultiResUNet is not perfect, it performs far
superior than the classical U-Net model as shown in Fig. 9. It is worth noting here that
in the initial stages of our experiments, prior to using the ResPaths, our proposed model
was also being aﬀected by such perturbations. Therefore, we conjecture that applying
additional non-linear operations on the encoder feature maps makes it robust against
perturbations.
MultiResUNet is More Reliable Against Outliers
Often in medical images some outliers are present, which in spite of being visually quite
similar, are diﬀerent from what we are interested in segmenting. Particularly, in the
Fluorescence Microscopy image dataset, there exist some images with bright objects,
that are apparently almost indistinguishable from the actual nuclei. Such an example is
Figure 9: Segmenting images with irregularities.
For images where the foreground is not consistent
throughout, instead of segmenting it as a continuous region, U-Net seems to have predicted a set of
small regions (9a). For images with rough backgrounds U-Net classiﬁed them as the foreground (9b),
the more irregular the background, the more false predictions were made (9c). To the other extreme, for
images where diﬀerence between foreground and background is too subtle, U-Net missed the foreground
completely (9d). Though the segmentations produced by MultiResUNet in these challenging cases are
not perfect, they were consistently better than that of the U-Net.
shown in Fig. 10.
Figure 10: Segmenting images containing outliers. In the ﬂuorescence microscopy images, the exist some
bright particles, visually very similar to the cell nuclei under analysis. Although MultiResUNet can
identify and reject those outliers, U-Net seems to have missclassiﬁed them.
It can be observed that the input image is infected with some small particles that
are not actual cell nuclei. However, if we study the segmentation mask generated from
U-Net, it turns out that U-Net has mistakenly predicted those outlier particles to be
cell nuclei. On the other hand, our proposed MultiResUNet seems to be able to reject
those outliers. Since the outliers are pretty tiny, false predictions made by the U-Net
model does not hurt the value of Jaccard Index that much (0.9317 instead of 0.9643,
when outliers are ﬁltered out). Nevertheless, being able to segregate these outliers are
of substantial signiﬁcance. It can be noted that, similar types of visually similar outliers
were present in other datasets as well, and MultiResUNet was able to segment the images
reliably without making false predictions.
Note on Segmenting the Majority Class
The Electron Microscopy dataset we used in our experiments is quite interesting and
unorthodox as in this dataset the region of interest under consideration actually comprises
the majority of the images. This is a rare incident since usually the region of interest
consists of a small portion of the image. This brings a diﬀerent type of challenge as in
such a case the models tend to over-segment the images unnecessarily to minimize the
losses during training. A relevant example is presented in Fig. 11.
Figure 11: Segmenting the Majority Class. Here we can observe that the region of interest comprises
most part of the image.
Despite the values of Jacard Index for both U-Net and MultiResUNet are
quite similar, visually the segmentation mask are very diﬀerent. It can be seen that segmentation mask
generated from MultiResUNet captures most of the ﬁne separating lines, but U-Net tends to miss them.
Moreover, there are some clusters of background pixels which although are missed by U-Net, have been
roughly identiﬁed by MultiResUNet. Since the class being segmented is the majority class, the values of
Jacard Index are inﬂated.
Here, it can be observed quite astonishingly that the majority of the image is actually
forground (Fig. 11b), with some narrow separations among them by the background, i.e.,
membranes in this context. If we analyze the segmentation predicted by U-Net, it appears
that those ﬁne lines of separation have often been missed (Fig. 11d). MultiResUNet, on
the other hand, have managed to segment the regions with properly deﬁned separations
among them (Fig. 11c). Also, it can be observed that there are some small clusters of
background pixels, which have been captured with some success in the segmentation mask
predicted by MultiResUNet, but are almost non-existent in the segmentation performed
by U-Net. Furthermore, the result generated by MultiResUNet seems to be more immune
to the noises present in the image.
Despite the two segmentations (i.e. the results of MultiResUNet and U-Net) are very
diﬀerent from each other, the values of the respective Jaccard Index are quite alike (0.8914
and 0.8841 as shown in Fig. 11). This is due to the fact that, the metric Jaccard Index has
been inﬂated with the results of segmenting the majority class of the image. Therefore,
the value of Jaccard Index is not that much of a proper representative of accuracy while
segmenting the majority class. Despite predicting much inferior segmentations, for this
reason the Jaccard Index of U-Net are very close to that of MultiResUNet. Thus, among
all the diﬀerent datasets, the improvement in terms of metric has been underwhelming
in this dataset but the predicted segmentations are more accurate visually.
Conclusion
In this work, we started by analyzing the U-Net architecture diligently, with the hope
of ﬁnding potential rooms for improvement. We anticipated some discrepancy between
the features passed from the encoder network and the features propagating through the
decoder network. To reconcile these two incompatible sets of features, we proposed Res
paths, that introduce some additional processing to make the two feature maps more homogeneous. Furthermore, to augment U-Net with the ability of multi-resolutiona analysis,
we proposed MultiRes blocks. We took inspirations from Inception blocks and formulated a compact analogous structure, that was lightweight and demanded less memory.
Incorporating these modiﬁcations, we developed a novel architecture, MultiResUNet.
Among the handful publicly available biomedical image datasets, we selected the ones
that were drastically diﬀerent from each other. Additionally each of these datasets poses
a separate challenge of its own. The Murphy Lab Fluorescence Microscopy dataset is
possibly the simplest dataset for performing segmentation, having an acute diﬀerence in
contrast between the forground, i.e., the cell nuclei and the background, but contains
some outliers. The CVC-ClinicDB dataset contains colon endoscopy images where the
boundaries between the polyps and the background are so vague that often it becomes
diﬃcult to distinguish even for a trained operator. In addition, the polyps are diverse in
terms of shape, size, structure, orientation etc., making this dataset indeed a challenging
On the other hand, the dermoscopy dataset of ISIC-2018 competition contains
images of poor contrast to the extent that sometimes the skin lesions seem identical
to the background and vice versa. Moreover, various types of textures present in both
the background and the foreground make pattern recognition quite diﬃcult. ISBI-2012
electron microscopy dataset presents a diﬀerent type of challenge. In this dataset the
region being segmented covers the majority of the image; thus a tendency is observed
to over-segment the images. The BraTS17 MRI dataset, on the other hand contains
multimodal 3D images, which is a diﬀerent problem alltogether.
For perfect or near perfect images U-Net manages to perform segmentation with
remarkable accuracy. Our proposed architecture performs only slightly better than U-
Net in those cases. However, for intricate images suﬀering from noises, perturbations, lack
of clear boundaries etc., the gain in performance by MultiResUNet dramatically increases.
More speciﬁcally, for the ﬁve datasets a relative improvement in performance of 10.15%,
5.07%, 2.63%, 1.41%, and 0.62% were observed in using MultiResUNet over U-Net (Table
4). Not only the segmentations generated by MultiResUNet attain higher score in the
evaluation metric, they are also visually more similar to the ground truth. Furthermore,
on the very challenging images U-Net tended to over-segment, under-segment, make false
predictions and even miss the objects completely. On the contrary, in the experiments
MultiResUNet appeared to be more reliable and robust.
MultiResUNet managed to
detect even the most subtle boundaries, was resilient in segmenting images with a lot
of perturbations, and was rejectable to the outliers. Even in segmenting the majority
class, where the U-Net tended to over-segment, MultiResUNet managed to capture the
ﬁne details. Furthermore, the 3D adaptation of MultiResUNet performed better than
3D U-Net, which is not just a straightforward 3D implementation of the U-Net, but an
enhanced and improved version. It should be noted that, the segmentations generated by
the proposed MultiResUNet were not perfect, but in most of the cases it outperformed
the classical U-Net by a large margin.
Therefore, we believe our proposed MultiResUNet architecture can be the potential
successor to the classical U-Net architecture. The future direction of this research has
several branches. In this work, we have been motivated to keep the number of parameters
of our model comparable to that of the U-Net model. However, in future we wish to
conduct experiments to determine the best set of hyperparameters for the model more
exhaustively. Moreover, we would like to evaluate our model performance on medical
images originating from other modalities as well.
Furthermore, we are interested in
experimenting by applying several domain and application speciﬁc pre-processing and
post-processing schemes to our model. We believe fusing our model to a domain speciﬁc
expert knowledge based pipeline, and coupling it with proper post-processing stages will
improve our model performance further, and allow us to develop better segmentation
methods for diversiﬁed applications.
Acknowledgements
The Titan Xp GPU used for this research was the generous donation of NVIDIA Corporation.
Supplementary information
Supplementary Material 1: contains the links to the weights and parameters of the
best performing models in each fold for all the datasets.
Supplementary Material 2: provides the random data splits of the datasets obtained
using standard methods of Scikit-learn .
Supplementary Material 3: presents the detailed experimental results.