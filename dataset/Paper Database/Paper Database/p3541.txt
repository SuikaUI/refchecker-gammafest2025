Learning Object Categories from Google’s Image Search
R. Fergus1
L. Fei-Fei2
P. Perona2
A. Zisserman1
1Dept. of Engineering Science
2Dept. of Electrical Engineering
University of Oxford
California Institute of Technology
Parks Road, Oxford
MC 136–93, Pasadena
OX1 3PJ, U.K.
CA 91125, U.S.A.
{fergus,az}@robots.ox.ac.uk
{feifeili,perona}@vision.caltech.edu
Current approaches to object category recognition require
datasets of training images to be manually prepared, with
varying degrees of supervision. We present an approach
that can learn an object category from just its name, by utilizing the raw output of image search engines available on
the Internet. We develop a new model, TSI-pLSA, which
extends pLSA (as applied to visual words) to include spatial information in a translation and scale invariant manner. Our approach can handle the high intra-class variability and large proportion of unrelated images returned
by search engines. We evaluate the models on standard test
sets, showing performance competitive with existing methods trained on hand prepared datasets.
1. Introduction
The recognition of object categories is a challenging problem within computer vision. The current paradigm consists of manually collecting
a large training set of good exemplars of the desired object category; training a classiﬁer on them and then evaluating it on novel images, possibly of a more challenging
nature. The assumption is that training is a hard task that
only needs to be performed once, hence the allocation of
human resources to collecting a training set is justiﬁable.
However, a constraint to current progress is the effort in obtaining large enough training sets of all the objects we wish
to recognize. This effort varies with the size of the training
set required, and the level of supervision required for each
image. Examples range from 50 images (with segmentation) , through hundreds (with no segmentation) ,
to thousands of images .
In this paper we propose a different perspective on the
problem. There is a plentiful supply of images available at
the typing of a single word using Internet image search engines such as Google, and we propose to learn visual models directly from this source. However, as can be seen in
Fig. 1, this is not a source of pure training images: as many
as 85% of the returned images may be visually unrelated to
the intended category, perhaps arising from polysemes (e.g.
“iris” can be iris-ﬂower, iris-eye, Iris-Murdoch). Even the
15% subset which do correspond to the category are substantially more demanding than images in typical training
sets – the number of objects in each image is unknown
and variable, and the pose (visual aspect) and scale are uncontrolled. However, if one can succeed in learning from
such noisy contaminated data the reward is tremendous: it
enables us to automatically learn a classiﬁer for whatever
visual category we wish. In our previous work we have
considered this source of images for training , but only
for the purpose of re-ranking the images returned by the
Google search (so that the category of interest has a higher
rank than the noise) since the classiﬁer models learnt were
too weak to be used in a more general setting, away from
the dataset collected for a given keyword.
Figure 1: Images returned from Google’s image search using the
keyword “airplane”. This is a representative sample of our training
data. Note the large proportion of visually unrelated images and
the wide pose variation.
Proceedings of the Tenth IEEE International Conference on Computer Vision (ICCV’05)
1550-5499/05 $20.00 © 2005 IEEE
Google returns
training images
category model
Motorbike Wrist Watch
Figure 2: (a) A summary of our approach. Given the keywords:
airplane, car rear, face, guitar, leopard, motorbike, wrist watch we
train models from Google’s image search with no supervision. We
test them on a collection of 2148 images from the Caltech datasets
and others, showing the top 5 images returned for each keyword
The problem of extracting coherent components from a
large corpus of data in an unsupervised manner has many
parallels with problems in the ﬁeld of textual analysis. A
leading approach in this ﬁeld is that of probabilistic Latent Semantic Analysis (pLSA) and its hierarchical
Bayesian form, Latent Dirichlet Allocation (LDA) . Recently, these two approaches have been applied to the computer vision: Fei-Fei and Perona applied LDA to scene
classiﬁcation and Sivic et al. applied pLSA to unsupervised object categorisation. In the latter work, the Caltech
datasets used by Fergus et al. were combined into one
large collection and the different objects extracted automatically using pLSA.
In this paper, we adopt and extend pLSA methods to
incorporate spatial information in a translation and scaleinvariant manner and apply them to the more challenging
problem of learning from search engine images. To enable
comparison with existing object recognition approaches, we
test the learnt models on standard datasets.
2. Approach
Before outlining our approaches, we ﬁrst review pLSA and
its adaption to visual data, following Sivic et al.
We describe the model using the terminology of the text
literature, while giving the equivalence in our application.
We have a set of D documents (images), each containing
regions found by interest operator(s) whose appearance has
been vector quantized into W visual words . The corpus
of documents is represented by a co-occurrence matrix of
size W ×D, with entry n(w, d) listing the number of words
w in document d. Document d has Nd regions in total. The
model has a single latent topic variable, z, associating the
occurrence of word w to document d. More formally:
P(w|z)P(z|d)P(d)
Thus we are decomposing a W × D matrix into a W × Z
matrix and a Z × W one. Each image is modeled as a mixture of topics, with P(w|z) capturing the co-occurrence of
words within a topic. There is no concept of spatial location within the model. The densities of the model, P(w|z)
and P(z|d), are learnt using EM. The E-step computes the
posterior over the topic, P(z|w, d) and then the M-step updates the densities. This maximizes the log-likelihood of
the model over the data:
P(w, d)n(w,d)
In recognition, we lock P(w|z) and iterate with EM, to estimate the P(z|d) for the query images. Fig. 4(a)-(c) shows
the results of a two topic model trained on a collection
of images of which 50% were airplanes from the Caltech
datasets and the other 50% were background scenes from
the Caltech datasets. The regions are coloured according to
the most likely topic of their visual word (using P(w|z)):
red for the ﬁrst topic (which happens to pick out the airplane image) and green for the second (which picks out
background images). P(z|d) is shown above each image.
2.1. Absolute position pLSA (ABS-pLSA)
Previous work with pLSA applied to images did not use location information and we now extend the pLSA model to
incorporate it. A straightforward way to do this is to quantize the location within the image into one of X bins and
then to have a joint density on the appearance and location
of each region. Thus P(w|z) in pLSA becomes P(w, x|z),
a discrete density of size (W × X) × Z:
P(w, x, d) =
P(w, x|z)P(z|d)P(d)
The same pLSA update equations outlined above can be
easily applied to this model in learning and recognition. The
problem with this representation is that it is not translation
or scale invariant at all, since x is an absolute coordinate
frame. However, it will provide a useful comparison with
our next approach.
Proceedings of the Tenth IEEE International Conference on Computer Vision (ICCV’05)
1550-5499/05 $20.00 © 2005 IEEE
Translation and Scale invariant pLSA
(TSI-pLSA)
The shortcomings of the above model are addressed by introducing a second latent variable, c, which represents the
position of the centroid of the object within the image, as
well as its x-scale and y-scale, making it a 4-vector specifying a bounding box. As illustrated in Fig. 3(c), location x is
p(x,w|c,z)
Figure 3: (a) Graphical model of pLSA. (b) Graphical model of
ABS-pLSA. (c) The sub-window plus background location model.
(d) Graphical model for translation and scale invariant pLSA (TSIpLSA).
now modeled relative to the centroid c, over a sub-window
of the image. Within the sub-window, there are Xfg location bins and one large background bin, xbg, giving a total of
X = Xfg + 1 locations a word can occur in. The word and
location variables are then modeled jointly, as in section 2.1.
This approach means that we conﬁne our modeling of location to only the object itself where dependencies are likely
to be present and not the background, where such correlations are unlikely. The graphical model of this approach is
shown in Fig. 3(d).
We do not model an explicit P(w, x|c, z), since that
would require establishing correspondence between images
as c remains in an absolute coordinate frame.
we marginalize out over c, meaning that we only model
P(w, x|z):
P(w, x|z) =
P(w, x, c|z) =
P(w, x|c, z)P(c)
P(c) here is a multinomial density over possible locations
and scales, making for straightforward adaptations of the
standard pLSA learning equations: P(w, x|z) in (3) is substituted with the expression in (4). In learning we aggregate
the results of moving the sub-window over the locations c.
Due to the high dimensionality of the space of c, it is not
possible to marginalize exhaustively over scale and location
within the image. Instead we use a small set of c, proposed
in a bottom up manner for each topic.
Proposing object centroids within an image
We ﬁrst run a standard pLSA model on the corpus and then
ﬁt a mixture of Gaussians with k = {1, 2, . . . , K} components to the location of the regions, weighted by P(w|z) for
the given topic. The idea is to ﬁnd clumps of regions that
belong strongly to a particular topic, since these may be the
object we are trying to model. The mean of the component
gives the centroid location while its axis-aligned variance
gives the scale of the sub-window in the x and y directions.
We try different number of components, since there may be
clumps of regions in the background separate from the object, requiring more than one component to ﬁt. This process
gives us a small set (of size C = K(K + 1)/2) of values
of c to sum over for each topic in each frame. We use a
ﬂat density for P(c) since we have no more conﬁdence in
any one of the c being the actual object than any other. Fig.
4(a)-(c) shows the pLSA model using to propose centroids
for the TSI-pLSA model, which are shown as dashed lines
in Fig. 4(d)-(f). In the example, K = 2 and Z = 2.
p(z1|d) = 0.990
p(z2|d) = 0.010
p(z1|d) = 1.000
p(z2|d) = 0.000
p(z1|d) = 0.250
p(z2|d) = 0.750
Figure 4: (a)-(c) Two airplane and one background image, with regions superimposed, coloured according to topic of a learnt pLSA
model. Only a subset of regions are shown for clarity. (d)-(f)
The same images as in (a)-(c) but showing the bounding boxes
proposed by the pLSA model with dashed lines. The solid rectangle shows the centroid with highest likelihood under a TSI-pLSA
model, with the colour indicating topic (the red topic appears to
select airplanes). (d) shows multiple instances being handled correctly. (e) shows the object being localized correctly in the presence of background clutter.
Proceedings of the Tenth IEEE International Conference on Computer Vision (ICCV’05)
1550-5499/05 $20.00 © 2005 IEEE
In recognition, there is no need to learn a standard pLSA
model ﬁrst to propose different values of c. Instead, the
average word density over the sub-window ( ˆP(w|z) =
xfg P(w, x|z)) can be used to weight each region and then
compute putative centroids in the manner above. Having
obtained a set of centroids using ˆP(w|z), recognition proceeds by locking P(w, x|z) and iterating to ﬁnd P(z|d) for
the novel images. In estimating P(z|d), all states of c are
summed over, thus once convergence is reached, we ﬁnd c∗,
the value of c within a frame which has the highest likelihood (shown in Fig. 4(d)-(f) as a solid box).
Observations about TSI-pLSA
• Multiple object instances in a frame can be captured
with k > 1, with their information being combined
by the marginalisation process. See Fig. 4(d) for an
• The model is entirely discrete, consisting of WXZ +
DZ parameters, thus is able to cope with multi-modal
non-Gaussian distributions. This enables the model to
handle multiple aspects of the object since the different
word-locations densities for each aspect will appear as
different modes within the P(w, x|z) density.
• Since all three approaches use histograms, unless the
object occupies a reasonably large proportion of the
image, it will not have a sufﬁcient number of detections to compete with regions on the background,
meaning that the image is misclassiﬁed as background.
While the sub-window approach of TSI-pLSA will
help, it cannot overcome this effect entirely, so the object must still occupy a reasonable proportion of the
image (1/4 to 1/5 of image area).
3. Implementation details
Having outlined the three approaches that we will investigate (pLSA; ABS-pLSA and TSI-pLSA), we now give speciﬁc details. All images are ﬁrst converted to grayscale and
resized to a moderate width (300 pixels in our experiments).
No further normalization of any kind was carried out.
In view of the large number of parameters in our models, it is vital to have a large number of data points in each
frame. We therefore use four different types of circular region detector to give a complete coverage of the image: (i)
Kadir & Brady saliency operator ; (ii) Multi-scale Harris detector ; (iii) Difference of Gaussians, as used by
Lowe and (iv) Edge based operator, detailed below.
For certain categories, edge information is important and
is not adequately captured by the ﬁrst three region detectors.
Inspired by the approach of Berg et al. , we ﬁrst ﬁnd
edgels in the image and then locate a region at points drawn
at random from the edgel set. The scale of the region is chosen by drawing from a uniform distribution over a sensible
scale range (a radius range of 5-30 pixels). The total number
of regions sampled is capped to give a number similar to the
other three types of detector. On average, around N = 700
regions per image were found, with Kadir & Brady and the
difference of Gaussians giving around 100 per image; the
edge based detector 175, and multi-scale Harris 350.
Having found a large set of regions, we represent them
by a SIFT descriptor, using 72 dimensions rather than the
usual 128, resulting in larger histogram bins which are more
appropriate for object categorization. The regions did not
have their orientation normalised before histogramming,
making them orientation variant. The descriptors are then
vector quantized using a ﬁxed codebooks of visual words,
pre-computed using k-means from a large set of images
drawn from the training sets of a large number of different categories. A separate codebook was formed for each
feature type and then combined to give W visual words in
total. In our experiments, we used W = 350. Regions could
be quantized to any word, e.g. we did not restrict edge regions to only be allocated to the sub-section of the codebook
formed from edge regions alone.
The two approaches with spatial densities used a grid of
moderate coarseness, mindful of the need to keep the number of parameters to a reasonable level. The sub-window
used in the experiments had a 6 × 6 grid, giving X = 37.
Training a TSI-pLSA model with Z = 8, D ∼500 and the
aforementioned parameters takes roughly 30 minutes using
a Matlab implementation. ABS-pLSA takes approximately
the same time. pLSA takes around half a minute. 100 iterations of EM were used. Assuming X = 37, W = 350,
D = 500, N = 700, Z = 8, we have 109, 200 parameters
in the model which are estimated from 350, 000 data points,
giving a data/parameter ratio of just over 3, the minimum
sensible level.
4. Datasets
The experiments used 7 different object categories in 9 datesets. 5 of these were the Caltech datasets : Airplane;
Car (Rear); Leopard; Face and Motorbike. Additionally,
more challenging datasets for the car and motorbike classes
were taken from PASCAL , using the test2 set of foreground/background training and test images. Finally, Guitar and Wrist watch were the two remaining categories. For
each category four subsets of data were compiled: two hand
gathered sets, where each image contains at least one instance of the object and two automatically gathered sets
with may be contaminated with images unrelated to the category.
1. Prepared training set (PT):
frames. In the case of the Caltech datasets, the training
frames from were used. The pose of the object is quite
constrained within these frames.
The PASCAL datasets
contained large viewpoint and pose variation.
2. Prepared test set (P): Manually gathered frames, disjoint although statistically similar to (PT). For the Caltech
datasets, the test frames from were used. Again, the
Proceedings of the Tenth IEEE International Conference on Computer Vision (ICCV’05)
1550-5499/05 $20.00 © 2005 IEEE
pose is fairly constrained. In contrast, the PASCAL datasets
contained large viewpoint and pose variation.
3. Raw Google set (G): A set of images automatically
downloaded from Google’s Image Search1, using the category name. See Fig. 1 for typical images downloaded using
“airplane”. Duplicates images were discarded and Google’s
SafeSearch ﬁlter was left on, to reduce the proportion of unrelated images returned. For assessment purposes, the images returned by Google were divided into 3 distinct groups:
i Good images: these are good examples of the keyword category,
lacking major occlusion, although there may be a variety of viewpoints, scalings and orientations.
ii Intermediate images: these are in some way related to the keyword
category, but are of lower quality than the good images. They may
have extensive occlusion; substantial image noise; be a caricature or
cartoon of the category; or the object is rather insigniﬁcant in the image, or some other fault.
iii Junk images: these are totally unrelated to the keyword category.
The labeling was performed by an individual who was not
connected with the experiments in anyway, possessing no
knowledge of our algorithms.
Fig. 5 shows the recallprecision curves of the raw Google sets for each category.
1Recall precision of raw Google Images (Good vs. Inter+Bad)
wrist_watch
Figure 5: Recall precision curves of the raw output of Google’s
image search for the 7 keywords. Good labels count as positive examples while Intermediate and Junk labels are negative examples.
Note the precision drops rapidly as the recall increases, leveling
out at 20–30% for most categories.
4. Google validation set (V): An empirical observation
(as seen in Fig. 5) is that the ﬁrst few pages returned by
Google tend to contain more good images than those returned later on. The idea is that we assume the images from
these ﬁrst pages are positive examples, and hence may be
used as a validation set to make model selection choices in
our experiments. The catch is that the drop off in quality of
Google’s search is so steep that only the ﬁrst few images of
the ﬁrst page are likely to be good examples.
Using Google’s automatic translation tool2 we obtain
the translations of the users keyword in the following languages: German, French, Spanish, Italian, Portugese and
Chinese. Since each translation returns a different set of
1While in this paper Google’s image search was used exclusively
( any other image search engine
may be used provided that the images can be gathered in an automated
2 
images, albeit with the same drop off in quality, we automatically download the ﬁrst few images from each different
language, and combine to give a validation set of a reasonable size without a degradation in quality.
Using 7 different languages (including English), taking
the ﬁrst 5 images we can obtain a validation set of up to
35 images (since languages may share the same word for
a category and we reject duplicate images). Note that this
scheme does not require any supervision. Fig. 6 shows the
validation set for “airplane”. All datasets used are summarized in Table 1.
Figure 6: The entire validation set for “airplane” obtained automatically using Google’s translation tool and Google’s image
search. The text by each row shows the translated keyword used
to gather that particular row. The quality of the images is noticeably higher than those in Fig. 1.
Size of Dataset
Distrib. of Google Images (%)
Wrist watch
PASCAL Cars
PASCAL Cars Bg.
PASCAL Motorbike
PASCAL Motorbike Bg.
Caltech Bg.
Cars Rear Bg.
Table 1: Statistics of the datasets used in experiments. Columns 2
& 3: Size of the hand prepared training (PT) and test (P) datasets.
Column 4: The number of validation (V) images automatically
obtained. Column 5: The number of images automatically downloaded from Google’s image search (G). The last 3 columns show
the breakdown (for evaluation purposes) of the raw Google images for each category. Note the low proportion of good examples
present in the majority of categories.
5. Selection of the ﬁnal classiﬁer
There are two issues to consider when training our models: (i) the optimal number of topics, Z ; (ii) which subset
of these topics should be used to form a classiﬁer for use
Proceedings of the Tenth IEEE International Conference on Computer Vision (ICCV’05)
1550-5499/05 $20.00 © 2005 IEEE
in testing. A larger number of topics will result in more
homogeneous topics at the expense of their ability to generalize. Given the varied nature of images obtained from
Google, a large number of topics might seem appropriate,
but this raises the issue of how to pick the topics corresponding to the good images, while ignoring topics which model
the junk images within the dataset.
The number of topics to use in experiments was determined empirically: the performance of the face and airplane
categories was recorded as the number of topics was varied when training from Google and a stable peak picked at
Z = 8 (see Fig. 8(b)). This value was then used for all experiments involving Google data. Having trained an 8 topic
model, each topic is run across the validation set and single
topic that performed best is picked to be the classiﬁer used
in testing.
6. Experiments
Several sets of experiments were performed:
A Caltech experiments. Training on a 50-50 mix of prepared data (PT) from the Caltech datasets (including
watch and guitar) and data from the Caltech background
dataset. Testing, in classiﬁcation setting, on prepared
data (P) and test data from the Caltech background. In
the case of Cars Rear, the Caltech background was substituted for the Cars Rear Background for a more realistic
experiment. All 3 methods (pLSA, ABS-pLSA and TSIpLSA) were run with 2 topics (reﬂecting the true number
of components in the training and test data).
B PASCAL experiments. Training on prepared data (PT)
of the two PASCAL datasets (cars, motorbikes) and their
background images.
Testing on prepared data (P) of
PASCAL. Training was unsupervised, in the manner of
 , with the foreground and background data combined
into one training set. All 3 methods (pLSA, ABS-pLSA
and TSI-pLSA) were run with 6 topics and the best topic
or equally weighted pair of topics chosen based on their
performance on (PT). These experiments are designed to
investigate the difference between ABS-pLSA and TSIpLSA and measure localisation as well as detection performance.
C Google experiments. Training on raw Google data (G);
the best topic is then picked using the validation set (V),
which is then tested on prepared data (P), measuring
classiﬁcation performance. All 3 methods were evaluated with 8 topics. The ability of our algorithm to train
directly from Google data is evaluated.
D Search engine improvement experiments. In the manner of . Training on raw Google data (G); picking the
best topic using (V) and using it to re-rank the Google
images (G). The idea is that the recall-precision curve of
good images should be improved by the models learnt.
(A)irplane
(C)ars Rear
(M)otorbike
(W)rist watch
PASCAL Car
PASCAL Motorbike
Table 2: Comparison of different methods trained on: prepared
data (ﬁrst three columns) and raw Google data (rightmost three
columns). All methods were tested on prepared data. The task is
classiﬁcation, with the ﬁgures being the error rate at point of equalerror on an ROC curve. The error margins are roughly +/−2%.
6.1. Caltech and PASCAL experiments
The results of experiments A, B in a classiﬁcation setting
are given in Table 2, columns 2–4. The results on the Caltech datasets show that (except for the leopard and guitar
categories), the incorporation of location information gives
a signiﬁcant reduction in error rate. However, due to the
constrained pose of instances within the images, the ABSpLSA model often does as well if not better than the TSIpLSA model (e.g. wrist watch and guitar).
By contrast,
when testing on the PASCAL datasets which contain far
greater pose variability, the TSI-pLSA model shows a clear
improvement over ABS-pLSA. See Fig. 7 for some examples of the TSI-pLSA model correctly detecting and localising cars in PASCAL test images. See Table 3 for a comparison between TSI-pLSA and other current approaches on the
PASCAL datasets.
Figure 7: Examples of the TSI-pLSA model, trained on the prepared PASCAL Cars data, correctly localising test instances. The
ground truth bounding box is shown in magenta, while the proposed bounding box, c∗, is shown in blue.
6.2. Google experiments
The results of experiment C in a classiﬁcation setting are
given in the last 3 columns of Table 2. As expected, training
directly on Google data gives higher error rates than training on prepared data. For around half the categories, the use
of location information reduces the error signiﬁcantly, although only in the case of motorbikes and airplanes is TSIpLSA better their either of the other two approaches.
Both ABS-pLSA and TSI-pLSA perform notably poorly
on the guitar dataset. This may be explained by the fact
that all the prepared data has the guitar in a vertical position
while guitars appear at a seemingly random orientation in
Proceedings of the Tenth IEEE International Conference on Computer Vision (ICCV’05)
1550-5499/05 $20.00 © 2005 IEEE
the Google training data. Since neither of the models using
location can handle rotation they perform badly, in contrast
to pLSA which still performs respectably. An example of a
TSI-pLSA model learnt from Google data is shown in Fig.
9. In the case of Motorbikes, the common words correspond
to parts of the wheels of the bike and the exhaust/tail structure. In the case of Leopards, the textured fur of the animal
is captured by the most common regions. However, their location densities are spread out, reﬂecting the diffuse spatial
representation of the animal.
The confusion table of the seven classes is shown in
Fig. 8(a). For the majority of classes the performance is
respectable. Notable confusions include: airplanes being
classiﬁed as cars rear (both have lots of horizontal edges);
the guitar model misclassifying faces and wrist watches
(due to the weak guitar model). See also Fig. 2 for the TSIpLSA models used in a retrieval application.
Classified category
Mean diagonal − 72.0
Ground Truth category
Number of topics
1− ROC EER
Figure 8: (a) Confusion table for the 7 classes. The row is the
ground truth label; the column indicates the classiﬁcation. (b)
“Face” keyword. Performance of models trained on Google data,
tested on prepared data, with a varying number of topics. Red pLSA; Green - ABS-pLSA; Blue - TSI-pLSA. Solid lines indicate
performance of automatically chosen topic within model. Dashed
lines indicate performance of best topic within model.
In Table 3 we compare our performance to existing approaches to object recognition for experiments B and C,
noting their degree of supervision.
Img. labels
Img. labels
Img. labels
PASCAL Car
25.8 / 0.062
34.2 / 0.181
PASCAL Motorbike
25.7 / 0.249
31.7 / 0.341
Img. labels
Img. labels
Table 3: Comparison of performance and supervision with other
weakly supervised training approaches for experiments B and C.
The ﬁrst value is the ROC EER classiﬁcation rate; the second
(where given) is the average precision in localisation. In PAS-
CAL experiments (B), the classiﬁcation performance is better than
 , but is less good at localisation. In Google experiments (C),
the results for Leopard and Motorbike are comparable to other approaches. Airplane and Cars Rear are around 10% worse. However the supervision requirements of the other methods are greater.
Figure 9: (a) Watches from the prepared dataset, with regions superimposed that belong to the 4 most common visual words (irrespective of location) from the automatically chosen topic of the
Google-trained TSI-pLSA watch model. Each colour shows regions quantized to a different visual word. The circular bezel of
the watch face is picked out. Due to the rotation sensitivity of our
region presentation, different parts of the bezel are quantized to
different words. (b) The location densities of the 4 most common
words shown in (a). White corresponds to a high probability, black
to a low one. Note their tightly constrained, multi-modal, nature.
6.3. Investigation of number of topics
In Fig. 8(b) we vary the number of topics in a face model
trained on Google data and evaluate: (a) the automatically
chosen topic, and (b) the actual best topic on the prepared
test set. The performance of all three methods does not
seem to increase too much beyond 10 topics. This is due
to the selection of a single topic – picking a combination
of topics is likely to yield superior results. The difﬁculty is
in deciding which ones to pick: the validation set picks the
best topic (or close to it) reliably up to 8 topics or so. Beyond this its performance drops off signiﬁcantly. For small
numbers of topics, the models are unreliable, while it is dif-
ﬁcult to pick the correct topic from very large models. The
point of compromise seems to be in region of 5-10 topics
(the curves are very similar for different categories), hence
the use of Z = 8.
6.4. Improving Google’s image search
As in Fergus et al. , the models learnt from Google data
may be directly employed to improve the quality of the image search by re-ranking the images using the topic chosen
from the validation set. As can be seen in Fig. 5, the native performance of Google’s search is quite poor. Fig. 10
shows the improvement in precision achieved by using the
best topic chosen from an 8 topic model trained on the raw
data. Figs. 11 and 12 show the top ranked images for each
topic for the pLSA and TSI-pLSA approaches respectively,
using the “motorbike” keyword.
Proceedings of the Tenth IEEE International Conference on Computer Vision (ICCV’05)
1550-5499/05 $20.00 © 2005 IEEE
Leopard Motorbike Wrist Watch
Raw Google
Precision performances
Figure 10: Improvement in the precision at 15% recall obtained
with an 8 topic TSI-pLSA model (blue) over the raw Google ranking (yellow). This level of recall corresponds to a couple of web
pages worth of images.
Figure 11: Top ranked images for each topic of an 8 topic pLSA
model trained on Google data (G), using the keyword “motorbike”.
Topic selected by validation set (V) was topic 7. The coloured dots
in the top-left corner of each image show the ground truth labels
(Green = Good; Yellow = Intermediate and Red = Junk).
7. Summary and Conclusions
We have proposed the idea of training using just the objects
name by bootstrapping with an image search engine. The
training sets are extremely noisy yet, for the most part, the
results are competitive (or close to) existing methods requiring hand gathered collections of images. This was achieved
by improving state-of-the-art pLSA models with spatial information. It would be interesting to compare our methods
to , trained from the Google Validation set. However
there are many open issues: the choice of features; better
centroid proposals; the use of ﬁxed background densities to
assist learning; how to pick the most informative topics; the
number of topics to use; the introduction of more sophisticated LDA models using priors.
Acknowledgements
Financial support was provided by: EC Project CogViSys;
UK EPSRC; Caltech CNSE and the NSF. This work was
supported in part by the IST Programme of the European
Community, under the PASCAL Network of Excellence,
IST-2002-506778.
This publication only reﬂects the authors’ views. Thanks to Rebecca Hoath and Veronica Robles for image labelling. We are indebted to Josef Sivic for
his considerable help with many aspects of the paper.
Figure 12: As per Fig. 11 but for an 8 topic TSI-pLSA model.
Topic 7 was again the automatically selected topic. Note the increased consistency of each topic compared to pLSA.