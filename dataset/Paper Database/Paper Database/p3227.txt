BULLETIN OF THE POLISH ACADEMY OF SCIENCES
TECHNICAL SCIENCES, Vol. 60, No. 2, 2012
DOI: 10.2478/v10175-012-0049-y
Fireﬂy algorithm in optimization of queueing systems
J. KWIECIEŃ∗and B. FILIPOWICZ
AGH University of Science and Technology, Department of Automatics, 30 Mickiewicza Ave., 30-059 Krakow, Poland
Abstract. Queueing theory provides methods for analysis of complex service systems in computer systems, communications, transportation
networks and manufacturing. It incorporates Markovian systems with exponential service times and a Poisson arrival process. Two queueing
systems with losses are also brieﬂy characterized. The article describes ﬁreﬂy algorithm, which is successfully used for optimization of these
queueing systems. The results of experiments performed for selected queueing systems have been also presented.
Key words: queueing systems, ﬁreﬂy algorithm.
1. Introduction
Nature-inspired metaheuristics are currently among the most
powerful tools for optimization of many NP-hard combinatorial problems. These methods are based on existing mechanisms
of a biological phenomenon of nature. The natural systems
are the ones of the most interesting inspiration for designing
new techniques dedicated to solve many optimization problems. The ant systems, particle swarm optimization and bee
algorithms are the methods inspired from observing nature.
These algorithms use the behavior of swarm intelligence. So
they are based on alive insects or simple interactions among
individual entities . These metaheuristics are becoming
more and more popular.
The ﬁreﬂy algorithm (FA), proposed by Xin-She Yang at
Cambridge University, is a novel metaheuristic, which is inspired by the behavior of ﬁreﬂies. Their population is estimated about two thousand ﬁreﬂy species. Most of them produce
short and rhythmic ﬂashes. Their ﬂashing light generated by
a process of bioluminescence may serve as an element of
courtship rituals or warning signals .
The rest of the paper is organized as follows. In Sec. 2 we
brieﬂy describe the ﬁreﬂy algorithm. Section 3 presents two
queueing systems with losses. Section 4 gives description of
optimization problems in queueing systems and experimental
results based on the ﬁreﬂy algorithm, which is used to solve
selected optimization problems. Finally, Sec. 5 summarizes
the conclusions.
2. Fireﬂy algorithm
In the ﬁreﬂy algorithm, the objective function of a given optimization problem is based on diﬀerences in light intensity. It
helps the ﬁreﬂies to move towards brighter and more attractive locations in order to obtain optimal solutions. All ﬁreﬂies
are characterized by their light intensity associated with the
objective function. Each ﬁreﬂy is changing its position iteratively. The ﬁreﬂy algorithm has three rules :
• All ﬁreﬂies are unisex, and they will move towards more
attractive and brighter ones.
• The attractiveness of a ﬁreﬂy is proportional to its brightness which decreases as the distance from the other ﬁreﬂy
increases. If there is not a more attractive ﬁreﬂy than a
particular one, it will move randomly.
• The brightness of a ﬁreﬂy is determined by the value of the
objective function. For maximization problems, the brightness is proportional to the value of the objective function.
Each ﬁreﬂy has its attractiveness β described by monotonically decreasing function of the distance r between two any
ﬁreﬂies :
β(r) = β0e−γrm,
where β0 denotes the maximum attractiveness (at r = 0) and
γ is the light absorption coeﬃcient, which controls the decrease of the light intensity.
The distance between two ﬁreﬂies i and j at positions xi
and xj can be deﬁned as follows :
rij = ∥xi −xj∥=
(xi,k −xj,k)2,
where xi,k is the k-th component of the spatial coordinate xi
of i-th ﬁreﬂy and d denotes the number of dimensions.
The movement of a ﬁreﬂy i is determined by the following
xi = xi + β0e−γr2
ij(xj −xi) + α
where the ﬁrst term is the current position of a ﬁreﬂy i, the
second term denotes a ﬁreﬂy’s attractiveness and the last term
is used for the random movement if there are not any brighter
ﬁreﬂy (rand is a random number generator uniformly distributed in the range < 0, 1 >). For most cases α ∈(0, 1),
β0 = 1. In practice the light absorption coeﬃcient γ varies
from 0.1 to 10. This parameter describes the variation of the
attractiveness and its value is responsible for the speed of FA
convergence .
∗e-mail: 
J. Kwiecień and B. Filipowicz
The ﬁreﬂy algorithm can be presented in the following
pseudo-code form :
1. Initialize algorithm’s parameters:
– number of ﬁreﬂies (n),
– β0, γ, α,
– maximum number of generations (iterations, Max-
Deﬁne the objective function f(x), x = (x1, . . . , xd)T .
Generate initial population of ﬁreﬂies xi (i = 1, 2, . . ., n)
//generate n initial solutions
Light intensity of ﬁreﬂy Ii at xi is determined by value of
objective function f(xi)
2. While k < MaxGen//(k = 1 : MaxGen)
For i = 1:n//all n ﬁreﬂies
For j = 1:n
If (Ij > Ii) move ﬁreﬂy i towards ﬁreﬂy j in
d-dimension according to Eq. (3); End if
Obtain attractiveness, which varies with
distance r according to Eq. (1)
Find new solutions and update light intensity
Rank the ﬁreﬂies and ﬁnd the current best
3. Find the ﬁreﬂy with the highest light intensity, visualization
The initial population of ﬁreﬂies is generated in the following form:
xi = LB + rand · (UB −LB),
where LB and UB denote the lower and the upper bounds of
i-th ﬁreﬂy.
After the evaluation of the initial population the ﬁreﬂy algorithm enters its main loop, which represents the maximum
number of generations of the ﬁreﬂies (iterations). For each
generation the ﬁreﬂy with the maximum light intensity (the
solution with the best value of objective function) is chosen
as the potential optimal solution). The ﬁreﬂy algorithm simulates a parallel run strategy. The population of n ﬁreﬂies
generates n solutions.
Using the ﬁreﬂy algorithm we can solve many optimization problems . Assume that example function, which
describes the optimization problem is:
max →f(x, y) = sin(x) + cos(y), (x, y) ∈⟨−2π, 2π⟩. (5)
Figure 1 shows the surface of a given objective function.
The results of ﬁreﬂy algorithm and the location of ﬁreﬂies
are shown in Figs. 2–4.
The ﬁreﬂy algorithm is very eﬃcient metaheuristic in ﬁnding the global optima . In the eﬃciency of the ﬁre-
ﬂy algorithm was demonstrated for continuous constrained
optimization task. The classic ﬁreﬂy algorithm works in the
continuous space. It can be modiﬁed to seek optimum of discrete optimization landscapes. A binary version of the ﬁreﬂy
algorithm was used in for makespan optimization of permutation ﬂowshop problem. After updating the ﬁreﬂy’s position according to Eq. (3), it is changed from real numbers by
applying a probabilistic rule based on sigmoid function.
Fig. 1. Example function
Fig. 2. The initial locations of 50 ﬁreﬂies
Fig. 3. The locations of ﬁreﬂies after 50 iterations
Bull. Pol. Ac.: Tech. 60(2) 2012
Fireﬂy algorithm in optimization of queueing systems
Fig. 4. The relationship of the objective function with iterationsm
(generations)
3. Queueing systems
Here we consider the models with exponential service times,
in which the arrival process is a Poisson one . The mean
arrival rate (per unit of time) at each system is denoted by λ
and the parameter of the service time is denoted by µ. Traﬃc
intensity ρ is the ratio of arrival λ to service rate µ. If the
stationary probabilities are known, it is possible to derive all
performance characteristics, for example the mean number of
jobs in a system and in a queue, mean holding time or mean
number of busy servers.
3.1. The M/M/m/-m queueing system with losses. In this
subsection we analyze the model with exponential interarrival times, exponential service times and m parallel identical
servers. In this system arriving customer is served if at least
one server is available. When all servers are occupied the newly arriving customer departs the queueing systems without being served. These customers are lost. The steady-state probability of the system being empty has the following form :
The steady-state probability of k jobs in the system is as follows:
The steady-state probability that the newly arriving customers
3.2. The M/M/m/FIFO/m+N queueing system with ﬁnite
capacity and impatient customers. In some situations, it
may occur that the customers should be served before their
respective deadlines. Therefore, to describe the problem we
will consider the m-server queueing system with limited waiting room with FIFO queueing discipline and limited waiting
time in the queue. In this system the maximum number of
customers amounts to m + N, so there is a limited waiting
room (N). Each job arriving to the system has its own maximal waiting time Tw. This time is assumed to be with an
exponential distribution with parameter δ. If the time, which
a job would have to wait for accessing a server exceeds Tw,
then it departs from the system after time Tw. If newly arriving customers ﬁnd m + N customers in systems, they are
lost. The state diagram for this system is shown in Fig. 5.
Fig. 5. State diagram for M/M/m/FIFO/m+N (Ei denotes state with
i customers in system)
Let πi denotes the probability that system is in state Ei.
In the stationary case, we obtain the following set of linear algebraic equations derived according to the Chapman-
Kolmogorov equations:
0 = −λπ0 + µπ1
0 = λπ0 −(λ + µ)π1 + 2µπ2
0 = λπm−1 −(λ + mµ)πm + (mµ + δ)πm+1
0 = λπm+N−1 −(mµ + Nδ)πm+N.
These probabilities also satisfy the normalization equation:
Solving Eq. (9) we obtain the steady-state probabilities of this
The stationary probability of no jobs in a system is given by:
The probability that jobs will be lost because of exceeding
the time limit is the following:
Bull. Pol. Ac.: Tech. 60(2) 2012
J. Kwiecień and B. Filipowicz
The steady-state probability that the newly arriving customers
are lost because m+N jobs exists in system has the following
The probability that jobs will be lost is given by:
πl = πw · πm+N.
4. Optimization of queueing systems
by ﬁreﬂy algorithm
To formulate optimization problems we need to determine parameters that can be decision variables. Many of the system
parameters may be the components of various optimization
problems. There are some types of optimization, for example:
minimization of cost for given throughput by changing of the
service rate, maximization of throughput, minimization of the
mean response time . We may consider the problem of
optimizing costs controlled by e.g. the number of servers, the
service rate, the capacity of the queue and the maximal waiting time.
In the case of M/M/m/-/m queueing systems with losses we seek the number of servers that maximizes the overall
proﬁts. Here we get the following objective function :
max →f(m) = r λ
where r denotes the cost related to jobs in system and c denotes the cost of server depreciation.
For M/M/m/FIFO/m+N queueing system with impatient
customers we consider the maximization of proﬁts subject to
the number of servers and the number of waiting places. The
objective function is given as follows:
max →f(m, N) = c1λ(1 −πl) −c2(m + N),
where πl is obtained using Eq. (14), c1 is the proﬁt on job
service and c2 denotes the cost of server depreciation.
The optimization of queueing systems introduced above is
diﬃcult. These are discrete optimization problems, and there
is not any general method to solve these problems. These
problems are known in literature, but according to our knowledge, they were not solved by these nature-inspired metaheuristics. It should be noted that there are studies on the
use of the genetic algorithms to solve various problems of
optimization of some queuing systems, for example .
To identify parameters of objective function we use the
ﬁreﬂy algorithm. For this purpose, we specially prepared test
instances with known solutions in advance (obtained by using
genetic algorithms and a complete review).
In order to solve the optimization problem we implemented it in Matlab under Windows XP operating system with
help of ﬁles presented in . The values of ﬁreﬂy algorithm
parameters were: α = 0.1, β0 = 0.1, γ = 1. In the case
of M/M/m/-/m system the number of ﬁreﬂies is 20 and the
maximum generation of ﬁreﬂies is 50, so the total number
of functions evaluation is 1000. The results of computational
experiments for this system are shown in Table 1 and Fig. 6.
The results of FA optimization for m ∈⟨1, 100⟩
M/M/m/-/m, r = 2, c = 1
The optimum value of m
Fig. 6. The relationship of the objective function with iterations;
(case: λ = 60, µ = 2)
For optimization of M/M/m/FIFO/m+N queueing system
with impatient customers we use 40 ﬁreﬂies and 50 generations. Table 2 shows the experimental results for this system,
if decision variable is only the number of servers.
The results of FA optimization for m ∈⟨1, 100⟩
M/M/m/FIFO/m+N, c1 = c2 = 5 , δ = 5
The optimum value of m
Figures 7–9 show the changes of the objective function
during solving optimization problems by FA.
Bull. Pol. Ac.: Tech. 60(2) 2012
Fireﬂy algorithm in optimization of queueing systems
Fig. 7. The relationship of the objective function with iterations;
(case: λ = 100, µ = 2, N = 10)
Fig. 8. The relationship of the objective function with iterations;
(case: λ = 200, µ = 2, N = 10)
Fig. 9. The relationship of the objective function with iterations;
(case: λ = 100, µ = 20, N = 10)
Results of all experiments show that the ﬁreﬂy algorithm
converges to the optimal solution very quickly. We can ﬁnd
the maximum value of the objective function in about 18 iterations.
In order to test the eﬃciency of ﬁreﬂy algorithm we consider another case, that is the problem with two decision variables: the number of identical servers m and the number of
waiting places N. Initial parameters of FA are identical as in
the previous case. The results of conducted experiments are
shown in Table 3 and Fig. 10–12. The results show that the
ﬁreﬂy algorithm is very eﬃcient. Using this algorithm we can
reach the maximum value of the objective function and the
optimum of unknown parameters within 20 generations.
The results of FA optimization for m ∈⟨1, 100⟩and N ∈⟨1, 50⟩
M/M/m/FIFO/m+N, c1 = c2 = 5, δ = 5
The optimum value
The optimum value
Fig. 10. The relationship of the objective function with iterations,
λ = 100, µ = 2
Fig. 11. The relationship of the objective function with iterations,
λ = 200, µ = 2
Bull. Pol. Ac.: Tech. 60(2) 2012
J. Kwiecień and B. Filipowicz
Fig. 12. The relationship of the objective function with iterations,
λ = 100, µ = 20
In all cases presented in this section we generate the initial
position using round(xi).
5. Conclusions
The ﬁreﬂy algorithm is a very powerful technique used to
solve the problems of queueing systems optimization. It is a
simple method and easy to implement. In this paper we have
tested this algorithm to the multiobjective maximization problem of cost function. The parameters of ﬁreﬂy algorithm such
as the absorption coeﬃcient, the population of ﬁreﬂies and the
number of iterations depend on the optimized problem. Our
goal is to test the tools that in future research will be used
for diﬀerent optimization of queueing systems and queueing
networks, including various types of blocking mechanisms
 . Future work will focus on application of other
metaheuristics such as the bee algorithm and particle swarm
optimization in queueing optimization problems.