Explainable Artiﬁcial Intelligence (XAI): Concepts, Taxonomies,
Opportunities and Challenges toward Responsible AI
Alejandro Barredo Arrietaa, Natalia D´ıaz-Rodr´ıguezb, Javier Del Sera,c,d, Adrien Bennetotb,e,f,
Siham Tabikg, Alberto Barbadoh, Salvador Garciag, Sergio Gil-Lopeza, Daniel Molinag,
Richard Benjaminsh, Raja Chatilaf, and Francisco Herrerag
aTECNALIA, 48160 Derio, Spain
bENSTA, Institute Polytechnique Paris and INRIA Flowers Team, Palaiseau, France
cUniversity of the Basque Country (UPV/EHU), 48013 Bilbao, Spain
dBasque Center for Applied Mathematics (BCAM), 48009 Bilbao, Bizkaia, Spain
eSegula Technologies, Parc d’activit´e de Pissaloup, Trappes, France
fInstitut des Syst`emes Intelligents et de Robotique, Sorbonne Universit`e, France
gDaSCI Andalusian Institute of Data Science and Computational Intelligence, University of Granada, 18071 Granada, Spain
hTelefonica, 28050 Madrid, Spain
In the last few years, Artiﬁcial Intelligence (AI) has achieved a notable momentum that, if harnessed
appropriately, may deliver the best of expectations over many application sectors across the ﬁeld. For this
to occur shortly in Machine Learning, the entire community stands in front of the barrier of explainability,
an inherent problem of the latest techniques brought by sub-symbolism (e.g. ensembles or Deep Neural
Networks) that were not present in the last hype of AI (namely, expert systems and rule based models).
Paradigms underlying this problem fall within the so-called eXplainable AI (XAI) ﬁeld, which is widely
acknowledged as a crucial feature for the practical deployment of AI models. The overview presented in
this article examines the existing literature and contributions already done in the ﬁeld of XAI, including a
prospect toward what is yet to be reached. For this purpose we summarize previous efforts made to deﬁne
explainability in Machine Learning, establishing a novel deﬁnition of explainable Machine Learning that
covers such prior conceptual propositions with a major focus on the audience for which the explainability
is sought. Departing from this deﬁnition, we propose and discuss about a taxonomy of recent contributions
related to the explainability of different Machine Learning models, including those aimed at explaining
Deep Learning methods for which a second dedicated taxonomy is built and examined in detail. This
critical literature analysis serves as the motivating background for a series of challenges faced by XAI,
such as the interesting crossroads of data fusion and explainability. Our prospects lead toward the concept
of Responsible Artiﬁcial Intelligence, namely, a methodology for the large-scale implementation of AI
methods in real organizations with fairness, model explainability and accountability at its core. Our
ultimate goal is to provide newcomers to the ﬁeld of XAI with a thorough taxonomy that can serve
as reference material in order to stimulate future research advances, but also to encourage experts and
professionals from other disciplines to embrace the beneﬁts of AI in their activity sectors, without any
prior bias for its lack of interpretability.
Keywords: Explainable Artiﬁcial Intelligence, Machine Learning, Deep Learning, Data Fusion,
Interpretability, Comprehensibility, Transparency, Privacy, Fairness, Accountability, Responsible
Artiﬁcial Intelligence.
∗Corresponding author. TECNALIA. P. Tecnologico, Ed. 700. 48170 Derio (Bizkaia), Spain. E-mail: 
 
December 26, 2019
1. Introduction
Artiﬁcial Intelligence (AI) lies at the core of many activity sectors that have embraced new information
technologies . While the roots of AI trace back to several decades ago, there is a clear consensus on the
paramount importance featured nowadays by intelligent machines endowed with learning, reasoning and
adaptation capabilities. It is by virtue of these capabilities that AI methods are achieving unprecedented
levels of performance when learning to solve increasingly complex computational tasks, making them
pivotal for the future development of the human society . The sophistication of AI-powered systems
has lately increased to such an extent that almost no human intervention is required for their design
and deployment. When decisions derived from such systems ultimately affect humans’ lives (as in e.g.
medicine, law or defense), there is an emerging need for understanding how such decisions are furnished
by AI methods .
While the very ﬁrst AI systems were easily interpretable, the last years have witnessed the rise of
opaque decision systems such as Deep Neural Networks (DNNs). The empirical success of Deep Learning
(DL) models such as DNNs stems from a combination of efﬁcient learning algorithms and their huge
parametric space. The latter space comprises hundreds of layers and millions of parameters, which makes
DNNs be considered as complex black-box models . The opposite of black-box-ness is transparency,
i.e., the search for a direct understanding of the mechanism by which a model works .
As black-box Machine Learning (ML) models are increasingly being employed to make important
predictions in critical contexts, the demand for transparency is increasing from the various stakeholders in
AI . The danger is on creating and using decisions that are not justiﬁable, legitimate, or that simply do
not allow obtaining detailed explanations of their behaviour . Explanations supporting the output of a
model are crucial, e.g., in precision medicine, where experts require far more information from the model
than a simple binary prediction for supporting their diagnosis . Other examples include autonomous
vehicles in transportation, security, and ﬁnance, among others.
In general, humans are reticent to adopt techniques that are not directly interpretable, tractable and
trustworthy , given the increasing demand for ethical AI . It is customary to think that by focusing
solely on performance, the systems will be increasingly opaque. This is true in the sense that there is a
trade-off between the performance of a model and its transparency . However, an improvement in the
understanding of a system can lead to the correction of its deﬁciencies. When developing a ML model,
the consideration of interpretability as an additional design driver can improve its implementability for 3
• Interpretability helps ensure impartiality in decision-making, i.e. to detect, and consequently, correct
from bias in the training dataset.
• Interpretability facilitates the provision of robustness by highlighting potential adversarial perturbations
that could change the prediction.
• Interpretability can act as an insurance that only meaningful variables infer the output, i.e., guaranteeing
that an underlying truthful causality exists in the model reasoning.
All these means that the interpretation of the system should, in order to be considered practical,
provide either an understanding of the model mechanisms and predictions, a visualization of the model’s
discrimination rules, or hints on what could perturb the model .
In order to avoid limiting the effectiveness of the current generation of AI systems, eXplainable AI
(XAI) proposes creating a suite of ML techniques that 1) produce more explainable models while
maintaining a high level of learning performance (e.g., prediction accuracy), and 2) enable humans to
understand, appropriately trust, and effectively manage the emerging generation of artiﬁcially intelligent
partners. XAI draws as well insights from the Social Sciences and considers the psychology of
explanation.
(December 10th)
# of contributed works in the literature
Interpretable Artiﬁcial Intelligence
Explainable Artiﬁcial Intelligence
Figure 1: Evolution of the number of total publications whose title, abstract and/or keywords refer to the ﬁeld of XAI during
the last years. Data retrieved from Scopus R
⃝ by using the search terms indicated in the legend when
querying this database. It is interesting to note the latent need for interpretable AI models over time (which conforms to intuition, as
interpretability is a requirement in many scenarios), yet it has not been until 2017 when the interest in techniques to explain AI
models has permeated throughout the research community.
Figure 1 displays the rising trend of contributions on XAI and related concepts. This literature
outbreak shares its rationale with the research agendas of national governments and agencies. Although
some recent surveys summarize the upsurge of activity in XAI across sectors
and disciplines, this overview aims to cover the creation of a complete uniﬁed framework of categories
and concepts that allow for scrutiny and understanding of the ﬁeld of XAI methods. Furthermore, we pose
intriguing thoughts around the explainability of AI models in data fusion contexts with regards to data
privacy and model conﬁdentiality. This, along with other research opportunities and challenges identiﬁed
throughout our study, serve as the pull factor toward Responsible Artiﬁcial Intelligence, term by which
we refer to a series of AI principles to be necessarily met when deploying AI in real applications. As we
will later show in detail, model explainability is among the most crucial aspects to be ensured within this
methodological framework. All in all, the novel contributions of this overview can be summarized as
1. Grounded on a ﬁrst elaboration of concepts and terms used in XAI-related research, we propose a
novel deﬁnition of explainability that places audience (Figure 2) as a key aspect to be considered when
explaining a ML model. We also elaborate on the diverse purposes sought when using XAI techniques,
from trustworthiness to privacy awareness, which round up the claimed importance of purpose and
targeted audience in model explainability.
2. We deﬁne and examine the different levels of transparency that a ML model can feature by itself, as
well as the diverse approaches to post-hoc explainability, namely, the explanation of ML models that
are not transparent by design.
3. We thoroughly analyze the literature on XAI and related concepts published to date, covering approximately 400 contributions arranged into two different taxonomies. The ﬁrst taxonomy addresses
the explainability of ML models using the previously made distinction between transparency and
post-hoc explainability, including models that are transparent by themselves, Deep and non-Deep (i.e.,
shallow) learning models. The second taxonomy deals with XAI methods suited for the explanation of
Deep Learning models, using classiﬁcation criteria closely linked to this family of ML methods (e.g.
layerwise explanations, representation vectors, attention).
4. We enumerate a series of challenges of XAI that still remain insufﬁciently addressed to date. Speciﬁcally, we identify research needs around the concepts and metrics to evaluate the explainability of ML
models, and outline research directions toward making Deep Learning models more understandable.
We further augment the scope of our prospects toward the implications of XAI techniques in regards
to conﬁdentiality, robustness in adversarial settings, data diversity, and other areas intersecting with
explainability.
5. After the previous prospective discussion, we arrive at the concept of Responsible Artiﬁcial Intelligence,
a manifold concept that imposes the systematic adoption of several AI principles for AI models to
be of practical use. In addition to explainability, the guidelines behind Responsible AI establish that
fairness, accountability and privacy should also be considered when implementing AI models in real
environments.
6. Since Responsible AI blends together model explainability and privacy/security by design, we call
for a profound reﬂection around the beneﬁts and risks of XAI techniques in scenarios dealing with
sensitive information and/or conﬁdential ML models. As we will later show, the regulatory push
toward data privacy, quality, integrity and governance demands more efforts to assess the role of XAI
in this arena. In this regard, we provide an insight on the implications of XAI in terms of privacy and
security under different data fusion paradigms.
The remainder of this overview is structured as follows: ﬁrst, Section 2 and subsections therein open a
discussion on the terminology and concepts revolving around explainability and interpretability in AI,
ending up with the aforementioned novel deﬁnition of interpretability (Subsections 2.1 and 2.2), and a
general criterion to categorize and analyze ML models from the XAI perspective. Sections 3 and 4 proceed
by reviewing recent ﬁndings on XAI for ML models (on transparent models and post-hoc techniques
respectively) that comprise the main division in the aforementioned taxonomy. We also include a review
on hybrid approaches among the two, to attain XAI. Beneﬁts and caveats of the synergies among the
families of methods are discussed in Section 5, where we present a prospect of general challenges and
some consequences to be cautious about. Finally, Section 6 elaborates on the concept of Responsible
Artiﬁcial Intelligence. Section 7 concludes the survey with an outlook aimed at engaging the community
around this vibrant research area, which has the potential to impact society, in particular those sectors that
have progressively embraced ML as a core technology of their activity.
2. Explainability: What, Why, What For and How?
Before proceeding with our literature study, it is convenient to ﬁrst establish a common point of
understanding on what the term explainability stands for in the context of AI and, more speciﬁcally,
ML. This is indeed the purpose of this section, namely, to pause at the numerous deﬁnitions that have
been done in regards to this concept (what?), to argue why explainability is an important issue in AI and
ML (why? what for?) and to introduce the general classiﬁcation of XAI approaches that will drive the
literature study thereafter (how?).
2.1. Terminology Clariﬁcation
One of the issues that hinders the establishment of common grounds is the interchangeable misuse of
interpretability and explainability in the literature. There are notable differences among these concepts.
To begin with, interpretability refers to a passive characteristic of a model referring to the level at which
a given model makes sense for a human observer. This feature is also expressed as transparency. By
contrast, explainability can be viewed as an active characteristic of a model, denoting any action or
procedure taken by a model with the intent of clarifying or detailing its internal functions.
To summarize the most commonly used nomenclature, in this section we clarify the distinction and
similarities among terms often used in the ethical AI and XAI communities.
• Understandability (or equivalently, intelligibility) denotes the characteristic of a model to make a
human understand its function – how the model works – without any need for explaining its internal
structure or the algorithmic means by which the model processes data internally .
• Comprehensibility: when conceived for ML models, comprehensibility refers to the ability of a
learning algorithm to represent its learned knowledge in a human understandable fashion .
This notion of model comprehensibility stems from the postulates of Michalski , which stated that
“the results of computer induction should be symbolic descriptions of given entities, semantically and
structurally similar to those a human expert might produce observing the same entities. Components of
these descriptions should be comprehensible as single ‘chunks’ of information, directly interpretable in
natural language, and should relate quantitative and qualitative concepts in an integrated fashion”.
Given its difﬁcult quantiﬁcation, comprehensibility is normally tied to the evaluation of the model
complexity .
• Interpretability: it is deﬁned as the ability to explain or to provide the meaning in understandable
terms to a human.
• Explainability: explainability is associated with the notion of explanation as an interface between
humans and a decision maker that is, at the same time, both an accurate proxy of the decision maker
and comprehensible to humans .
• Transparency: a model is considered to be transparent if by itself it is understandable. Since a model
can feature different degrees of understandability, transparent models in Section 3 are divided into three
categories: simulatable models, decomposable models and algorithmically transparent models .
In all the above deﬁnitions, understandability emerges as the most essential concept in XAI. Both
transparency and interpretability are strongly tied to this concept: while transparency refers to the
characteristic of a model to be, on its own, understandable for a human, understandability measures the
degree to which a human can understand a decision made by a model. Comprehensibility is also connected
to understandability in that it relies on the capability of the audience to understand the knowledge contained
in the model. All in all, understandability is a two-sided matter: model understandability and human
understandability. This is the reason why the deﬁnition of XAI given in Section 2.2 refers to the concept
of audience, as the cognitive skills and pursued goal of the users of the model have to be taken into
account jointly with the intelligibility and comprehensibility of the model in use. This prominent role
taken by understandability makes the concept of audience the cornerstone of XAI, as we next elaborate in
further detail.
2.2. What?
Although it might be considered to be beyond the scope of this paper, it is worth noting the discussion
held around general theories of explanation in the realm of philosophy . Many proposals have been
done in this regard, suggesting the need for a general, uniﬁed theory that approximates the structure and
intent of an explanation. However, nobody has stood the critique when presenting such a general theory.
For the time being, the most agreed-upon thought blends together different approaches to explanation
drawn from diverse knowledge disciplines. A similar problem is found when addressing interpretability
in AI. It appears from the literature that there is not yet a common point of understanding on what
interpretability or explainability are. However, many contributions claim the achievement of interpretable
models and techniques that empower explainability.
To shed some light on this lack of consensus, it might be interesting to place the reference starting
point at the deﬁnition of the term Explainable Artiﬁcial Intelligence (XAI) given by D. Gunning in :
“XAI will create a suite of machine learning techniques that enables human users to understand,
appropriately trust, and effectively manage the emerging generation of artiﬁcially intelligent partners”
This deﬁnition brings together two concepts (understanding and trust) that need to be addressed in
advance. However, it misses to consider other purposes motivating the need for interpretable AI models,
such as causality, transferability, informativeness, fairness and conﬁdence . We will later
delve into these topics, mentioning them here as a supporting example of the incompleteness of the above
deﬁnition.
As exempliﬁed by the deﬁnition above, a thorough, complete deﬁnition of explainability in AI
still slips from our ﬁngers. A broader reformulation of this deﬁnition (e.g. “An explainable Artiﬁcial
Intelligence is one that produces explanations about its functioning”) would fail to fully characterize the
term in question, leaving aside important aspects such as its purpose. To build upon the completeness, a
deﬁnition of explanation is ﬁrst required.
As extracted from the Cambridge Dictionary of English Language, an explanation is “the details or
reasons that someone gives to make something clear or easy to understand” . In the context of an
ML model, this can be rephrased as: ”the details or reasons a model gives to make its functioning clear
or easy to understand”. It is at this point where opinions start to diverge. Inherently stemming from the
previous deﬁnitions, two ambiguities can be pointed out. First, the details or the reasons used to explain,
are completely dependent of the audience to which they are presented. Second, whether the explanation
has left the concept clear or easy to understand also depends completely on the audience. Therefore, the
deﬁnition must be rephrased to reﬂect explicitly the dependence of the explainability of the model on the
audience. To this end, a reworked deﬁnition could read as:
Given a certain audience, explainability refers to the details and reasons a model gives to make its
functioning clear or easy to understand.
Since explaining, as argumenting, may involve weighting, comparing or convincing an audience with
logic-based formalizations of (counter) arguments , explainability might convey us into the realm of
cognitive psychology and the psychology of explanations , since measuring whether something has
been understood or put clearly is a hard task to be gauged objectively. However, measuring to which
extent the internals of a model can be explained could be tackled objectively. Any means to reduce the
complexity of the model or to simplify its outputs should be considered as an XAI approach. How big
this leap is in terms of complexity or simplicity will correspond to how explainable the resulting model
is. An underlying problem that remains unsolved is that the interpretability gain provided by such XAI
approaches may not be straightforward to quantify: for instance, a model simpliﬁcation can be evaluated
based on the reduction of the number of architectural elements or number of parameters of the model
itself (as often made, for instance, for DNNs). On the contrary, the use of visualization methods or natural
language for the same purpose does not favor a clear quantiﬁcation of the improvements gained in terms
of interpretability. The derivation of general metrics to assess the quality of XAI approaches remain as
an open challenge that should be under the spotlight of the ﬁeld in forthcoming years. We will further
discuss on this research direction in Section 5.
Explainability is linked to post-hoc explainability since it covers the techniques used to convert a
non-interpretable model into a explainable one. In the remaining of this manuscript, explainability will be
considered as the main design objective, since it represents a broader concept. A model can be explained,
but the interpretability of the model is something that comes from the design of the model itself. Bearing
these observations in mind, explainable AI can be deﬁned as follows:
Given an audience, an explainable Artiﬁcial Intelligence is one that produces details or reasons to
make its functioning clear or easy to understand.
This deﬁnition is posed here as a ﬁrst contribution of the present overview, implicitly assumes that the
ease of understanding and clarity targeted by XAI techniques for the model at hand reverts on different
application purposes, such as a better trustworthiness of the model’s output by the audience.
As stated in the introduction, explainability is one of the main barriers AI is facing nowadays in
regards to its practical implementation. The inability to explain or to fully understand the reasons by
which state-of-the-art ML algorithms perform as well as they do, is a problem that ﬁnd its roots in two
different causes, which are conceptually illustrated in Figure 2.
Without a doubt, the ﬁrst cause is the gap between the research community and business sectors,
impeding the full penetration of the newest ML models in sectors that have traditionally lagged behind
in the digital transformation of their processes, such as banking, ﬁnances, security and health, among
many others. In general this issue occurs in strictly regulated sectors with some reluctance to implement
techniques that may put at risk their assets.
The second axis is that of knowledge. AI has helped research across the world with the task of
inferring relations that were far beyond the human cognitive reach. Every ﬁeld dealing with huge amounts
of reliable data has largely beneﬁted from the adoption of AI and ML techniques. However, we are
entering an era in which results and performance metrics are the only interest shown up in research
studies. Although for certain disciplines this might be the fair case, science and society are far from being
concerned just by performance. The search for understanding is what opens the door for further model
improvement and its practical utility.
Target audience
Who? Domain experts/users of the model (e.g. medical doctors, insurance agents)
Why? Trust the model itself, gain scientiﬁc knowledge
Who? Regulatory entities/agencies
Why? Certify model compliance with the
Who? Users aﬀected by model decisions
Why? Understand their situation, verify
Who? Managers and executive board members
Why? Assess regulatory compliance, understand
Who? Data scientists, developers, product owners...
Why? Ensure/improve product eﬃciency, research,
corporate AI applications...
new functionalities...
fair decisions...
legislation in force, audits, ...
Figure 2: Diagram showing the different purposes of explainability in ML models sought by different audience proﬁles. Two goals
occur to prevail across them: need for model understanding, and regulatory compliance. Image partly inspired by the one presented
in , used with permission from IBM.
The following section develops these ideas further by analyzing the goals motivating the search for
explainable AI models.
2.4. What for?
The research activity around XAI has so far exposed different goals to draw from the achievement
of an explainable model. Almost none of the papers reviewed completely agrees in the goals required
to describe what an explainable model should compel. However, all these different goals might help
discriminate the purpose for which a given exercise of ML explainability is performed. Unfortunately,
scarce contributions have attempted to deﬁne such goals from a conceptual perspective .
We now synthesize and enumerate deﬁnitions for these XAI goals, so as to settle a ﬁrst classiﬁcation
criteria for the full suit of papers covered in this review:
Main target audience (Fig. 2)
References
Trustworthiness
Domain experts, users of the model
affected by decisions
 
Domain experts, managers and
executive board members,
regulatory entities/agencies
 
Transferability
Domain experts, data scientists
 
Informativeness
 
Domain experts, developers,
managers, regulatory
entities/agencies
[5, 45, 35, 46, 48, 54, 61, 72, 88, 89, 96, 108, 117,
Users affected by model decisions,
regulatory entities/agencies
[5, 24, 45, 35, 47, 99, 100, 101, 120, 121, 128, 156,
Accessibility
Product owners, managers, users
affected by model decisions
 
Interactivity
Domain experts, users affected by
model decisions
 
Privacy awareness
Users affected by model decisions,
regulatory entities/agencies
Table 1: Goals pursued in the reviewed literature toward reaching explainability, and their main target audience.
• Trustworthiness: several authors agree upon the search for trustworthiness as the primary aim of an
explainable AI model . However, declaring a model as explainable as per its capabilities of
inducing trust might not be fully compliant with the requirement of model explainability. Trustworthiness might be considered as the conﬁdence of whether a model will act as intended when facing a
given problem. Although it should most certainly be a property of any explainable model, it does not
imply that every trustworthy model can be considered explainable on its own, nor is trustworthiness
a property easy to quantify. Trust might be far from being the only purpose of an explainable model
since the relation among the two, if agreed upon, is not reciprocal. Part of the reviewed papers mention
the concept of trust when stating their purpose for achieving explainability. However, as seen in Table
1, they do not amount to a large share of the recent contributions related to XAI.
• Causality: another common goal for explainability is that of ﬁnding causality among data variables.
Several authors argue that explainable models might ease the task of ﬁnding relationships that, should
they occur, could be tested further for a stronger causal link between the involved variables .
The inference of causal relationships from observational data is a ﬁeld that has been broadly studied
over time . As widely acknowledged by the community working on this topic, causality requires a
wide frame of prior knowledge to prove that observed effects are causal. A ML model only discovers
correlations among the data it learns from, and therefore might not sufﬁce for unveiling a cause-effect
relationship. However, causation involves correlation, so an explainable ML model could validate
the results provided by causality inference techniques, or provide a ﬁrst intuition of possible causal
relationships within the available data. Again, Table 1 reveals that causality is not among the most
important goals if we attend to the amount of papers that state it explicitly as their goal.
• Transferability: models are always bounded by constraints that should allow for their seamless
transferability. This is the main reason why a training-testing approach is used when dealing with
ML problems . Explainability is also an advocate for transferability, since it may ease the
task of elucidating the boundaries that might affect a model, allowing for a better understanding and
implementation. Similarly, the mere understanding of the inner relations taking place within a model
facilitates the ability of a user to reuse this knowledge in another problem. There are cases in which the
lack of a proper understanding of the model might drive the user toward incorrect assumptions and
fatal consequences . Transferability should also fall between the resulting properties of an
explainable model, but again, not every transferable model should be considered as explainable. As
observed in Table 1, the amount of papers stating that the ability of rendering a model explainable is to
better understand the concepts needed to reuse it or to improve its performance is the second most used
reason for pursuing model explainability.
• Informativeness: ML models are used with the ultimate intention of supporting decision making .
However, it should not be forgotten that the problem being solved by the model is not equal to that
being faced by its human counterpart. Hence, a great deal of information is needed in order to be able
to relate the user’s decision to the solution given by the model, and to avoid falling in misconception
pitfalls. For this purpose, explainable ML models should give information about the problem being
tackled. Most of the reasons found among the papers reviewed is that of extracting information about
the inner relations of a model. Almost all rule extraction techniques substantiate their approach on
the search for a simpler understanding of what the model internally does, stating that the knowledge
(information) can be expressed in these simpler proxies that they consider explaining the antecedent.
This is the most used argument found among the reviewed papers to back up what they expect from
reaching explainable models.
• Conﬁdence: as a generalization of robustness and stability, conﬁdence should always be assessed
on a model in which reliability is expected. The methods to maintain conﬁdence under control are
different depending on the model. As stated in , stability is a must-have when drawing
interpretations from a certain model. Trustworthy interpretations should not be produced by models
that are not stable. Hence, an explainable model should contain information about the conﬁdence of its
working regime.
• Fairness: from a social standpoint, explainability can be considered as the capacity to reach and
guarantee fairness in ML models. In a certain literature strand, an explainable ML model suggests a
clear visualization of the relations affecting a result, allowing for a fairness or ethical analysis of the
model at hand . Likewise, a related objective of XAI is highlighting bias in the data a model
was exposed to . The support of algorithms and models is growing fast in ﬁelds that involve
human lives, hence explainability should be considered as a bridge to avoid the unfair or unethical use
of algorithm’s outputs.
• Accessibility: a minor subset of the reviewed contributions argues for explainability as the property
that allows end users to get more involved in the process of improving and developing a certain ML
model . It seems clear that explainable models will ease the burden felt by non-technical or
non-expert users when having to deal with algorithms that seem incomprehensible at ﬁrst sight. This
concept is expressed as the third most considered goal among the surveyed literature.
• Interactivity: some contributions include the ability of a model to be interactive with the user
as one of the goals targeted by an explainable ML model. Once again, this goal is related to ﬁelds in
which the end users are of great importance, and their ability to tweak and interact with the models is
what ensures success.
• Privacy awareness: almost forgotten in the reviewed literature, one of the byproducts enabled by explainability in ML models is its ability to assess privacy. ML models may have complex representations
of their learned patterns. Not being able to understand what has been captured by the model and
stored in its internal representation may entail a privacy breach. Contrarily, the ability to explain the
inner relations of a trained model by non-authorized third parties may also compromise the differential
privacy of the data origin. Due to its criticality in sectors where XAI is foreseen to play a crucial role,
conﬁdentiality and privacy issues will be covered further in Subsections 5.4 and 6.3, respectively.
This subsection has reviewed the goals encountered among the broad scope of the reviewed papers.
All these goals are clearly under the surface of the concept of explainability introduced before in this
section. To round up this prior analysis on the concept of explainability, the last subsection deals with
different strategies followed by the community to address explainability in ML models.
The literature makes a clear distinction among models that are interpretable by design, and those
that can be explained by means of external XAI techniques. This duality could also be regarded as the
difference between interpretable models and model interpretability techniques; a more widely accepted
classiﬁcation is that of transparent models and post-hoc explainability. This same duality also appears
in the paper presented in in which the distinction its authors make refers to the methods to solve
the transparent box design problem against the problem of explaining the black-box problem. This
work, further extends the distinction made among transparent models including the different levels of
transparency considered.
Within transparency, three levels are contemplated: algorithmic transparency, decomposability and
simulatability1. Among post-hoc techniques we may distinguish among text explanations, visualizations,
local explanations, explanations by example, explanations by simpliﬁcation and feature relevance. In this
context, there is a broader distinction proposed by discerning between 1) opaque systems, where
the mappings from input to output are invisible to the user; 2) interpretable systems, in which users can
mathematically analyze the mappings; and 3) comprehensible systems, in which the models should output
symbols or rules along with their speciﬁc output to aid in the understanding process of the rationale
behind the mappings being made. This last classiﬁcation criterion could be considered included within
the one proposed earlier, hence this paper will attempt at following the more speciﬁc one.
2.5.1. Levels of Transparency in Machine Learning Models
Transparent models convey some degree of interpretability by themselves. Models belonging to
this category can be also approached in terms of the domain in which they are interpretable, namely,
algorithmic transparency, decomposability and simulatability. As we elaborate next in connection to
Figure 3, each of these classes contains its predecessors, e.g. a simulatable model is at the same time a
model that is decomposable and algorithmically transparent:
• Simulatability denotes the ability of a model of being simulated or thought about strictly by a human,
hence complexity takes a dominant place in this class. This being said, simple but extensive (i.e., with
too large amount of rules) rule based systems fall out of this characteristic, whereas a single perceptron
neural network falls within. This aspect aligns with the claim that sparse linear models are more
interpretable than dense ones , and that an interpretable model is one that can be easily presented
1The alternative term simulability is also used in the literature to refer to the capacity of a system or process to be simulated.
However, we note that this term does not appear in current English dictionaries.
to a human by means of text and visualizations . Again, endowing a decomposable model with
simulatability requires that the model has to be self-contained enough for a human to think and reason
about it as a whole.
• Decomposability stands for the ability to explain each of the parts of a model (input, parameter and
calculation). It can be considered as intelligibility as stated in . This characteristic might empower
the ability to understand, interpret or explain the behavior of a model. However, as occurs with
algorithmic transparency, not every model can fulﬁll this property. Decomposability requires every
input to be readily interpretable (e.g. cumbersome features will not ﬁt the premise). The added
constraint for an algorithmically transparent model to become decomposable is that every part of the
model must be understandable by a human without the need for additional tools.
• Algorithmic Transparency can be seen in different ways. It deals with the ability of the user to
understand the process followed by the model to produce any given output from its input data. Put
it differently, a linear model is deemed transparent because its error surface can be understood and
reasoned about, allowing the user to understand how the model will act in every situation it may
face . Contrarily, it is not possible to understand it in deep architectures as the loss landscape
might be opaque since it cannot be fully observed and the solution has to be approximated
through heuristic optimization (e.g. through stochastic gradient descent). The main constraint for
algorithmically transparent models is that the model has to be fully explorable by means of mathematical
analysis and methods.
If x2 > 180 then y = 1
Else if x1 + x3 > 150 then y = 1
Else y = 0
If g(fA(x1), fB(x2)) > 5
then y = 1, else y = 0
fA(x1) = 1/x2
1, fB(x2) = log x2
g(f, g) = 1/(f + g)
x1: weight, x2: height, x3: age
95% of the positive training samples
have x2 > 180 7→Rule 1
90% of the positive training samples
have x1 + x3 > 150 7→Rule 2
Figure 3: Conceptual diagram exemplifying the different levels of transparency characterizing a ML model Mϕ, with ϕ denoting
the parameter set of the model at hand: (a) simulatability; (b) decomposability; (c) algorithmic transparency. Without loss of
generality, the example focuses on the ML model as the explanation target. However, other targets for explainability may include a
given example, the output classes or the dataset itself.
2.5.2. Post-hoc Explainability Techniques for Machine Learning Models
Post-hoc explainability targets models that are not readily interpretable by design by resorting to
diverse means to enhance their interpretability, such as text explanations, visual explanations, local
explanations, explanations by example, explanations by simpliﬁcation and feature relevance explanations
techniques. Each of these techniques covers one of the most common ways humans explain systems and
processes by themselves.
Further along this river, actual techniques, or better put, actual group of techniques are speciﬁed
to ease the future work of any researcher that intends to look up for an speciﬁc technique that suits its
knowledge. Not ending there, the classiﬁcation also includes the type of data in which the techniques has
been applied. Note that many techniques might be suitable for many different types of data, although
the categorization only considers the type used by the authors that proposed such technique. Overall,
post-hoc explainability techniques are divided ﬁrst by the intention of the author (explanation technique
e.g. Explanation by simpliﬁcation), then, by the method utilized (actual technique e.g. sensitivity analysis)
and ﬁnally by the type of data in which it was applied (e.g. images).
• Text explanations deal with the problem of bringing explainability for a model by means of learning to
generate text explanations that help explaining the results from the model . Text explanations also
include every method generating symbols that represent the functioning of the model. These symbols
may portrait the rationale of the algorithm by means of a semantic mapping from model to symbols.
• Visual explanation techniques for post-hoc explainability aim at visualizing the model’s behavior.
Many of the visualization methods existing in the literature come along with dimensionality reduction
techniques that allow for a human interpretable simple visualization. Visualizations may be coupled
with other techniques to improve their understanding, and are considered as the most suitable way to
introduce complex interactions within the variables involved in the model to users not acquainted to
ML modeling.
• Local explanations tackle explainability by segmenting the solution space and giving explanations
to less complex solution subspaces that are relevant for the whole model. These explanations can be
formed by means of techniques with the differentiating property that these only explain part of the
whole system’s functioning.
• Explanations by example consider the extraction of data examples that relate to the result generated by
a certain model, enabling to get a better understanding of the model itself. Similarly to how humans
behave when attempting to explain a given process, explanations by example are mainly centered in
extracting representative examples that grasp the inner relationships and correlations found by the
model being analyzed.
• Explanations by simpliﬁcation collectively denote those techniques in which a whole new system is
rebuilt based on the trained model to be explained. This new, simpliﬁed model usually attempts at
optimizing its resemblance to its antecedent functioning, while reducing its complexity, and keeping a
similar performance score. An interesting byproduct of this family of post-hoc techniques is that the
simpliﬁed model is, in general, easier to be implemented due to its reduced complexity with respect to
the model it represents.
• Finally, feature relevance explanation methods for post-hoc explainability clarify the inner functioning
of a model by computing a relevance score for its managed variables. These scores quantify the affection
(sensitivity) a feature has upon the output of the model. A comparison of the scores among different
variables unveils the importance granted by the model to each of such variables when producing its
output. Feature relevance methods can be thought to be an indirect method to explain a model.
The above classiﬁcation (portrayed graphically in Figure 4) will be used when reviewing speciﬁc/agnostic XAI techniques for ML models in the following sections (Table 2). For each ML model, a
distinction of the propositions to each of these categories is presented in order to pose an overall image of
the ﬁeld’s trends.
3. Transparent Machine Learning Models
The previous section introduced the concept of transparent models. A model is considered to be
transparent if by itself it is understandable. The models surveyed in this section are a suit of transparent
models that can fall in one or all of the levels of model transparency described previously (namely,
simulatability, decomposability and algorithmic transparency). In what follows we provide reasons for
this statement, with graphical support given in Figure 5.
x = (x1, ... , xn)
“Feature x2 has a
90% importance in y”
explanations
“What happens with the prediction yi if
we change slightly the features of xi?”
xi: input instance
Visualization
x1 x2 x3 x4
simpliﬁcation
explanations
“The output for xi is
yi because x3 > γ ”
by example
Explanations
”Explanatory examples
for the model:”
Figure 4: Conceptual diagram showing the different post-hoc explainability approaches available for a ML model Mϕ.
3.1. Linear/Logistic Regression
Logistic Regression (LR) is a classiﬁcation model to predict a dependent variable (category) that is
dichotomous (binary). However, when the dependent variable is continuous, linear regression would
be its homonym. This model takes the assumption of linear dependence between the predictors and the
predicted variables, impeding a ﬂexible ﬁt to the data. This speciﬁc reason (stiffness of the model) is the
one that maintains the model under the umbrella of transparent methods. However, as stated in Section 2,
explainability is linked to a certain audience, which makes a model fall under both categories depending
who is to interpret it. This way, logistic and linear regression, although clearly meeting the characteristics
of transparent models (algorithmic transparency, decomposability and simulatability), may also demand
post-hoc explainability techniques (mainly, visualization), particularly when the model is to be explained
to non-expert audiences.
The usage of this model has been largely applied within Social Sciences for quite a long time,
which has pushed researchers to create ways of explaining the results of the models to non-expert
users. Most authors agree on the different techniques used to analyze and express the soundness of LR
 , including the overall model evaluation, statistical tests of individual predictors,
goodness-of-ﬁt statistics and validation of the predicted probabilities. The overall model evaluation
shows the improvement of the applied model over a baseline, showing if it is in fact improving the model
without predictions. The statistical signiﬁcance of single predictors is shown by calculating the Wald
chi-square statistic. The goodness-of-ﬁt statistics show the quality of ﬁtness of the model to the data
and how signiﬁcant this is. This can be achieved by resorting to different techniques e.g. the so-called
Hosmer-Lemeshow (H-L) statistic. The validation of predicted probabilities involves testing whether the
output of the model corresponds to what is shown by the data. These techniques show mathematical ways
of representing the ﬁtness of the model and its behavior.
Other techniques from other disciplines besides Statistics can be adopted for explaining these re-
Transparent ML Models
Simulatability
Decomposability
Algorithmic Transparency
Linear/Logistic Regression
Predictors are human readable and
interactions among them are kept to a
Variables are still readable, but the number
of interactions and predictors involved in
them have grown to force decomposition
Variables and interactions are too complex
to be analyzed without mathematical tools
Not needed
Decision Trees
A human can simulate and obtain the
prediction of a decision tree on his/her own,
without requiring any mathematical
background
The model comprises rules that do not alter
data whatsoever, and preserves their
readability
Human-readable rules that explain the
knowledge learned from data and allows
for a direct understanding of the prediction
Not needed
K-Nearest Neighbors
The complexity of the model (number of
variables, their understandability and the
similarity measure under use) matches
human naive capabilities for simulation
The amount of variables is too high and/or
the similarity measure is too complex to be
able to simulate the model completely, but
the similarity measure and the set of
variables can be decomposed and analyzed
separately
The similarity measure cannot be
decomposed and/or the number of
variables is so high that the user has to rely
on mathematical and statistical tools to
analyze the model
Not needed
Rule Based Learners
Variables included in rules are readable,
and the size of the rule set is manageable
by a human user without external help
The size of the rule set becomes too large
to be analyzed without decomposing it into
small rule chunks
Rules have become so complicated (and
the rule set size has grown so much) that
mathematical tools are needed for
inspecting the model behaviour
Not needed
General Additive Models
Variables and the interaction among them
as per the smooth functions involved in the
model must be constrained within human
capabilities for understanding
Interactions become too complex to be
simulated, so decomposition techniques are
required for analyzing the model
Due to their complexity, variables and
interactions cannot be analyzed without the
application of mathematical and statistical
Not needed
Bayesian Models
Statistical relationships modeled among
variables and the variables themselves
should be directly understandable by the
target audience
Statistical relationships involve so many
variables that they must be decomposed in
marginals so as to ease their analysis
Statistical relationships cannot be
interpreted even if already decomposed,
and predictors are so complex that model
can be only analyzed with mathematical
Not needed
Tree Ensembles
Needed: Usually Model simpliﬁcation or
Feature relevance techniques
Support Vector Machines
Needed: Usually Model simpliﬁcation or
Local explanations techniques
Multi–layer Neural Network
Needed: Usually Model simpliﬁcation,
Feature relevance or Visualization
techniques
Convolutional Neural Network
Needed: Usually Feature relevance or
Visualization techniques
Recurrent Neural Network
Needed: Usually Feature relevance
techniques
Table 2: Overall picture of the classiﬁcation of ML models attending to their level of explainability.
gression models. Visualization techniques are very powerful when presenting statistical conclusions to
users not well-versed in statistics. For instance, the work in shows that the usage of probabilities to
communicate the results, implied that the users where able to estimate the outcomes correctly in 10% of
the cases, as opposed to 46% of the cases when using natural frequencies. Although logistic regression is
among the simplest classiﬁcation models in supervised learning, there are concepts that must be taken
In this line of reasoning, the authors of unveil some concerns with the interpretations derived
from LR. They ﬁrst mention how dangerous it might be to interpret log odds ratios and odd ratios as
substantive effects, since they also represent unobserved heterogeneity. Linked to this ﬁrst concern,
 also states that a comparison between these ratios across models with different variables might be
problematic, since the unobserved heterogeneity is likely to vary, thereby invalidating the comparison.
Finally they also mention that the comparison of these odds across different samples, groups and time is
also risky, since the variation of the heterogeneity is not known across samples, groups and time points.
This last paper serves the purpose of visualizing the problems a model’s interpretation might entail, even
when its construction is as simple as that of LR.
Also interesting is to note that, for a model such as logistic or linear regression to maintain decomposability and simulatability, its size must be limited, and the variables used must be understandable by their
users. As stated in Section 2, if inputs to the model are highly engineered features that are complex or
difﬁcult to understand, the model at hand will be far from being decomposable. Similarly, if the model is
so large that a human cannot think of the model as a whole, its simulatability will be put to question.
3.2. Decision Trees
Decision trees are another example of a model that can easily fulﬁll every constraint for transparency.
Decision trees are hierarchical structures for decision making used to support regression and classiﬁcation
problems . In the simplest of their ﬂavors, decision trees are simulatable models. However,
their properties can render them decomposable or algorithmically transparent.
Support: 70%
Impurity: 0.1
Straightforward what-if testing
Simple univariate thresholds
Simulatable, decomposable
Direct support and impurity measures
wi: increase in y if xi
w0 (intercept): y for a test instance
with average normalized features
increases by one unit
Prediction by majority voting
K similar training instances
Simulatable, decomposable
Algorithmic transparency (lazy training)
Linguistic rules: easy to interpret
−If x1 is high then y =
−If x1 is low and x2 is
high then y =
−If x2 is low then y =
Simulatable if ruleset coverage and
speciﬁty are kept constrained
Fuzziness improves interpretability
y = w1x1 + w2x2 + w0
g(E(y)) = w1f1(x1) + w2f2(x2)
E(y): expected value
Simulatable, decomposable
Interpretability depends on link
function g(z), the selected fi(xi)
and the sparseness of [w1, . . . , wN]
p(y|x1, x2) ∝p(y|x1)p(y|x2)
to assess the contribution of each variable
The independence assumption permits
Simulatable, decomposable
Algorithmic transparency (distribution ﬁtting)
Figure 5: Graphical illustration of the levels of transparency of different ML models considered in this overview: (a) Linear
regression; (b) Decision trees; (c) K-Nearest Neighbors; (d) Rule-based Learners; (e) Generalized Additive Models; (f) Bayesian
Decision trees have always lingered in between the different categories of transparent models. Their
utilization has been closely linked to decision making contexts, being the reason why their complexity
and understandability have always been considered a paramount matter. A proof of this relevance can
be found in the upsurge of contributions to the literature dealing with decision tree simpliﬁcation and
generation . As noted above, although being capable of ﬁtting every category within
transparent models, the individual characteristics of decision trees can push them toward the category of
algorithmically transparent models. A simulatable decision tree is one that is manageable by a human
user. This means its size is somewhat small and the amount of features and their meaning are easily
understandable. An increment in size transforms the model into a decomposable one since its size impedes
its full evaluation (simulation) by a human. Finally, further increasing its size and using complex feature
relations will make the model algorithmically transparent loosing the previous characteristics.
Decision trees have long been used in decision support contexts due to their off-the-shelf transparency.
Many applications of these models fall out of the ﬁelds of computation and AI (even information
technologies), meaning that experts from other ﬁelds usually feel comfortable interpreting the outputs of
these models . However, their poor generalization properties in comparison with other
models make this model family less interesting for their application to scenarios where a balance between
predictive performance is a design driver of utmost importance. Tree ensembles aim at overcoming such
a poor performance by aggregating the predictions performed by trees learned on different subsets of
training data. Unfortunately, the combination of decision trees looses every transparent property, calling
for the adoption of post-hoc explainability techniques as the ones reviewed later in the manuscript.
3.3. K-Nearest Neighbors
Another method that falls within transparent models is that of K-Nearest Neighbors (KNN), which
deals with classiﬁcation problems in a methodologically simple way: it predicts the class of a test sample
by voting the classes of its K nearest neighbors (where the neighborhood relation is induced by a measure
of distance between samples). When used in the context of regression problems, the voting is replaced by
an aggregation (e.g. average) of the target values associated with the nearest neighbors.
In terms of model explainability, it is important to observe that predictions generated by KNN models
rely on the notion of distance and similarity between examples, which can be tailored depending on the
speciﬁc problem being tackled. Interestingly, this prediction approach resembles that of experience-based
human decision making, which decides upon the result of past similar cases. There lies the rationale
of why KNN has also been adopted widely in contexts in which model interpretability is a requirement
 . Furthermore, aside from being simple to explain, the ability to inspect the reasons
by which a new sample has been classiﬁed inside a group and to examine how these predictions evolve
when the number of neighbors K is increased or decreased empowers the interaction between the users
and the model.
One must keep in mind that as mentioned before, KNN’s class of transparency depends on the features,
the number of neighbors and the distance function used to measure the similarity between data instances.
A very high K impedes a full simulation of the model performance by a human user. Similarly, the usage
of complex features and/or distance functions would hinder the decomposability of the model, restricting
its interpretability solely to the transparency of its algorithmic operations.
3.4. Rule-based Learning
Rule-based learning refers to every model that generates rules to characterize the data it is intended to
learn from. Rules can take the form of simple conditional if-then rules or more complex combinations of
simple rules to form their knowledge. Also connected to this general family of models, fuzzy rule based
systems are designed for a broader scope of action, allowing for the deﬁnition of verbally formulated
rules over imprecise domains. Fuzzy systems improve two main axis relevant for this paper. First, they
empower more understandable models since they operate in linguistic terms. Second, they perform better
that classic rule systems in contexts with certain degrees of uncertainty. Rule based learners are clearly
transparent models that have been often used to explain complex models by generating rules that explain
their predictions .
Rule learning approaches have been extensively used for knowledge representation in expert systems
 . However, a central problem with rule generation approaches is the coverage (amount) and the
speciﬁcity (length) of the rules generated. This problem relates directly to the intention for their use in
the ﬁrst place. When building a rule database, a typical design goal sought by the user is to be able to
analyze and understand the model. The amount of rules in a model will clearly improve the performance
of the model at the stake of compromising its intepretability. Similarly, the speciﬁcity of the rules plays
also against interpretability, since a rule with a high number of antecedents an/or consequences might
become difﬁcult to interpret. In this same line of reasoning, these two features of a rule based learner
play along with the classes of transparent models presented in Section 2. The greater the coverage or
the speciﬁcity is, the closer the model will be to being just algorithmically transparent. Sometimes, the
reason to transition from classical rules to fuzzy rules is to relax the constraints of rule sizes, since a
greater range can be covered with less stress on interpretability.
Rule based learners are great models in terms of interpretability across ﬁelds. Their natural and
seamless relation to human behaviour makes them very suitable to understand and explain other models.
If a certain threshold of coverage is acquired, a rule wrapper can be thought to contain enough information
about a model to explain its behavior to a non-expert user, without forfeiting the possibility of using the
generated rules as an standalone prediction model.
3.5. General Additive Models
In statistics, a Generalized Additive Model (GAM) is a linear model in which the value of the
variable to be predicted is given by the aggregation of a number of unknown smooth functions deﬁned
for the predictor variables. The purpose of such model is to infer the smooth functions whose aggregate
composition approximates the predicted variable. This structure is easily interpretable, since it allows the
user to verify the importance of each variable, namely, how it affects (through its corresponding function)
the predicted output.
Similarly to every other transparent model, the literature is replete with case studies where GAMs
are in use, specially in ﬁelds related to risk assessment. When compared to other models, these are
understandable enough to make users feel conﬁdent on using them for practical applications in ﬁnance
 , environmental studies , geology , healthcare , biology and
energy . Most of these contributions use visualization methods to further ease the interpretation of
the model. GAMs might be also considered as simulatable and decomposable models if the properties
mentioned in its deﬁnitions are fulﬁlled, but to an extent that depends roughly on eventual modiﬁcations
to the baseline GAM model, such as the introduction of link functions to relate the aggregation with the
predicted output, or the consideration of interactions between predictors.
All in all, applications of GAMs like the ones exempliﬁed above share one common factor: understandability. The main driver for conducting these studies with GAMs is to understand the underlying
relationships that build up the cases for scrutiny. In those cases the research goal is not accuracy for its
own sake, but rather the need for understanding the problem behind and the relationship underneath the
variables involved in data. This is why GAMs have been accepted in certain communities as their de facto
modeling choice, despite their acknowledged misperforming behavior when compared to more complex
counterparts.
3.6. Bayesian Models
A Bayesian model usually takes the form of a probabilistic directed acyclic graphical model whose
links represent the conditional dependencies between a set of variables. For example, a Bayesian network
could represent the probabilistic relationships between diseases and symptoms. Given symptoms, the
network can be used to compute the probabilities of the presence of various diseases. Similar to GAMs,
these models also convey a clear representation of the relationships between features and the target, which
in this case are given explicitly by the connections linking variables to each other.
Once again, Bayesian models fall below the ceiling of Transparent models. Its categorization leaves
it under simulatable, decomposable and algorithmically transparent. However, it is worth noting that
under certain circumstances (overly complex or cumbersome variables), a model may loose these ﬁrst
two properties. Bayesian models have been shown to lead to great insights in assorted applications such
as cognitive modeling , ﬁshery , gaming , climate , econometrics or
robotics . Furthermore, they have also been utilized to explain other models, such as averaging tree
ensembles .
4. Post-hoc Explainability Techniques for Machile Learning Models: Taxonomy, Shallow Models
and Deep Learning
When ML models do not meet any of the criteria imposed to declare them transparent, a separate
method must be devised and applied to the model to explain its decisions. This is the purpose of post-hoc
explainability techniques (also referred to as post-modeling explainability), which aim at communicating
understandable information about how an already developed model produces its predictions for any given
input. In this section we categorize and review different algorithmic approaches for post-hoc explainability,
discriminating among 1) those that are designed for their application to ML models of any kind; and 2)
those that are designed for a speciﬁc ML model and thus, can not be directly extrapolated to any other
learner. We now elaborate on the trends identiﬁed around post-hoc explainability for different ML models,
which are illustrated in Figure 6 in the form of hierarchical bibliographic categories and summarized next:
• Model-agnostic techniques for post-hoc explainability (Subsection 4.1), which can be applied seamlessly to any ML model disregarding its inner processing or internal representations.
• Post-hoc explainability that are tailored or speciﬁcally designed to explain certain ML models. We
divide our literature analysis into two main branches: contributions dealing with post-hoc explainability
of shallow ML models, which collectively refers to all ML models that do not hinge on layered
structures of neural processing units (Subsection 4.2); and techniques devised for deep learning models,
which correspondingly denote the family of neural networks and related variants, such as convolutional
neural networks, recurrent neural networks (Subsection 4.3) and hybrid schemes encompassing deep
neural networks and transparent models. For each model we perform a thorough review of the latest
post-hoc methods proposed by the research community, along with a identiﬁcation of trends followed
by such contributions.
• We end our literature analysis with Subsection 4.4, where we present a second taxonomy that complements the more general one in Figure 6 by classifying contributions dealing with the post-hoc
explanation of Deep Learning models. To this end we focus on particular aspects related to this family
of black-box ML methods, and expose how they link to the classiﬁcation criteria used in the ﬁrst
4.1. Model-agnostic Techniques for Post-hoc Explainability
Model-agnostic techniques for post-hoc explainability are designed to be plugged to any model
with the intent of extracting some information from its prediction procedure. Sometimes, simpliﬁcation
techniques are used to generate proxies that mimic their antecedents with the purpose of having something
tractable and of reduced complexity. Other times, the intent focuses on extracting knowledge directly
from the models or simply visualizing them to ease the interpretation of their behavior. Following the
taxonomy introduced in Section 2, model-agnostic techniques may rely on model simpliﬁcation, feature
relevance estimation and visualization techniques:
• Explanation by simpliﬁcation. They are arguably the broadest technique under the category of model
agnostic post-hoc methods. Local explanations are also present within this category, since sometimes,
simpliﬁed models are only representative of certain sections of a model. Almost all techniques taking
this path for model simpliﬁcation are based on rule extraction techniques. Among the most known
contributions to this approach we encounter the technique of Local Interpretable Model-Agnostic
Explanations (LIME) and all its variations . LIME builds locally linear models around
the predictions of an opaque model to explain it. These contributions fall under explanations by
simpliﬁcation as well as under local explanations. Besides LIME and related ﬂavors, another approach
to rule extraction is G-REX . Although it was not originally intended for extracting rules from
opaque models, the generic proposition of G-REX has been extended to also account for model
explainability purposes . In line with rule extraction methods, the work in presents a
novel approach to learn rules in CNF (Conjunctive Normal Form) or DNF (Disjunctive Normal Form)
to bridge from a complex model to a human-interpretable model. Another contribution that falls off the
same branch is that in , where the authors formulate model simpliﬁcation as a model extraction
process by approximating a transparent model to the complex one. Simpliﬁcation is approached from a
different perspective in , where an approach to distill and audit black box models is presented. In
it, two main ideas are exposed: a method for model distillation and comparison to audit black-box risk
scoring models; and an statistical test to check if the auditing data is missing key features it was trained
with. The popularity of model simpliﬁcation is evident, given it temporally coincides with the most
Transparent Models
Logistic / Linear Regression
Decision Trees
K-Nearest Neighbors
Rule-base Learners
General Additive Models:
Bayesian Models:
 
Post-Hoc Explainability
Model-Agnostic
Explanation by simpliﬁcation
Rule-based learner:
 
Decision Tree:
 
Feature relevance explanation
Inﬂuence functions:
 
Sensitivity:
 
Game theory inspired:
 
Interaction based:
 
 
Local Explanations
Rule-based learner:
Decision Tree:
 
 
Visual explanation
Conditional / Dependence / Shapley plots:
 
Sensitivity / Saliency:
 
 
Model-Speciﬁc
Ensembles and Multiple Classiﬁer Systems
Explanation by simpliﬁcation
Decision Tree/Prototype:
 
Feature relevance explanation
Feature importance / contribution:
 
Visual explanation
Variable importance / attribution:
 
Support Vector Machines
Explanation by simpliﬁcation
Rule-based learner:
 
Probabilistic:
 
Feature relevance explanation
Feature Contribution / Statistics:
 
Visual explanation
Internal visualization:
 
Multi-Layer Neural Networks
Explanation by simpliﬁcation
Rule-based learner:
 
Decision Tree:
 
Feature relevance explanation
Importance/Contribution:
 
Sensitivity / Saliency:
Local explanation
Decision Tree / Sensitivity:
 
Explanation by Example
Activation clusters:
 
Text explanation
Caption generation:
 
Visual explanation
Saliency / Weights:
Architecture modiﬁcation
 
Convolutional Neural Networks
Explanation by simpliﬁcation
Decision Tree:
Feature relevance explanation
Activations:
 
Feature Extraction:
Visual explanation
Filter / Activation:
 
Sensitivity / Saliency:
 
Architecture modiﬁcation
Layer modiﬁcation:
 
Model combination:
 
Attention networks:
 
Loss modiﬁcation:
 
Recurrent Neural Networks
Explanation by simpliﬁcation
Rule-based learner:
Feature relevance explanation
Activation propagation:
Visual explanation
Activations:
Arquitecture modiﬁcation
Loss / Layer modiﬁcation:
 
 
Figure 6: Taxonomy of the reviewed literature and trends identiﬁed for explainability techniques related to different ML models.
References boxed in blue, green and red correspond to XAI techniques using image, text or tabular data, respectively. In order
to build this taxonomy, the literature has been analyzed in depth to discriminate whether a post-hoc technique can be seamlessly
applied to any ML model, even if, e.g., explicitly mentions Deep Learning in its title and/or abstract.
recent literature on XAI, including techniques such as LIME or G-REX. This symptomatically reveals
that this post-hoc explainability approach is envisaged to continue playing a central role on XAI.
• Feature relevance explanation techniques aim to describe the functioning of an opaque model by
ranking or measuring the inﬂuence, relevance or importance each feature has in the prediction output by
the model to be explained. An amalgam of propositions are found within this category, each resorting
to different algorithmic approaches with the same targeted goal. One fruitful contribution to this path
is that of called SHAP (SHapley Additive exPlanations). Its authors presented a method to
calculate an additive feature importance score for each particular prediction with a set of desirable
properties (local accuracy, missingness and consistency) that its antecedents lacked. Another approach
to tackle the contribution of each feature to predictions has been coalitional Game Theory and
local gradients . Similarly, by means of local gradients test the changes needed in each
feature to produce a change in the output of the model. In the authors analyze the relations and
dependencies found in the model by grouping features, that combined, bring insights about the data.
The work in presents a broad variety of measures to tackle the quantiﬁcation of the degree of
inﬂuence of inputs on outputs of systems. Their QII (Quantitative Input Inﬂuence) measures account
for correlated inputs while measuring inﬂuence. In contrast, in the authors build upon the existing
SA (Sensitivity Analysis) to construct a Global SA which extends the applicability of the existing
methods. In a real-time image saliency method is proposed, which is applicable to differentiable
image classiﬁers. The study in presents the so-called Automatic STRucture IDentiﬁcation method
(ASTRID) to inspect which attributes are exploited by a classiﬁer to generate a prediction. This method
ﬁnds the largest subset of features such that the accuracy of a classiﬁer trained with this subset of
features cannot be distinguished in terms of accuracy from a classiﬁer built on the original feature set.
In the authors use inﬂuence functions to trace a model’s prediction back to the training data, by
only requiring an oracle version of the model with access to gradients and Hessian-vector products.
Heuristics for creating counterfactual examples by modifying the input of the model have been also
found to contribute to its explainability . Compared to those attempting explanations by
simpliﬁcation, a similar amount of publications were found tackling explainability by means of feature
relevance techniques. Many of the contributions date from 2017 and some from 2018, implying that as
with model simpliﬁcation techniques, feature relevance has also become a vibrant subject study in the
current XAI landscape.
• Visual explanation techniques are a vehicle to achieve model-agnostic explanations. Representative
works in this area can be found in , which present a portfolio of visualization techniques to help in
the explanation of a black-box ML model built upon the set of extended techniques mentioned earlier
(Global SA). Another set of visualization techniques is presented in . The authors present three
novel SA methods (data based SA, Monte-Carlo SA, cluster-based SA) and one novel input importance
measure (Average Absolute Deviation). Finally, presents ICE (Individual Conditional Expectation) plots as a tool for visualizing the model estimated by any supervised learning algorithm. Visual
explanations are less common in the ﬁeld of model-agnostic techniques for post-hoc explainability.
Since the design of these methods must ensure that they can be seamlessly applied to any ML model
disregarding its inner structure, creating visualizations from just inputs and outputs from an opaque
model is a complex task. This is why almost all visualization methods falling in this category work
along with feature relevance techniques, which provide the information that is eventually displayed to
the end user.
Several trends emerge from our literature analysis. To begin with, rule extraction techniques prevail
in model-agnostic contributions under the umbrella of post-hoc explainability. This could have been
intuitively expected if we bear in mind the wide use of rule based learning as explainability wrappers
anticipated in Section 3.4, and the complexity imposed by not being able to get into the model itself.
Similarly, another large group of contributions deals with feature relevance. Lately these techniques are
gathering much attention by the community when dealing with DL models, with hybrid approaches that
utilize particular aspects of this class of models and therefore, compromise the independence of the feature
relevance method on the model being explained. Finally, visualization techniques propose interesting
ways for visualizing the output of feature relevance techniques to ease the task of model’s interpretation.
By contrast, visualization techniques for other aspects of the trained model (e.g. its structure, operations,
etc) are tightly linked to the speciﬁc model to be explained.
4.2. Post-hoc Explainability in Shallow ML Models
Shallow ML covers a diversity of supervised learning models. Within these models, there are strictly
interpretable (transparent) approaches (e.g. KNN and Decision Trees, already discussed in Section 3).
However, other shallow ML models rely on more sophisticated learning algorithms that require additional
layers of explanation. Given their prominence and notable performance in predictive tasks, this section
concentrates on two popular shallow ML models (tree ensembles and Support Vector Machines, SVMs)
that require the adoption of post-hoc explainability techniques for explaining their decisions.
4.2.1. Tree Ensembles, Random Forests and Multiple Classiﬁer Systems
Tree ensembles are arguably among the most accurate ML models in use nowadays. Their advent
came as an efﬁcient means to improve the generalization capability of single decision trees, which are
usually prone to overﬁtting. To circumvent this issue, tree ensembles combine different trees to obtain an
aggregated prediction/regression. While it results to be effective against overﬁtting, the combination of
models makes the interpretation of the overall ensemble more complex than each of its compounding tree
learners, forcing the user to draw from post-hoc explainability techniques. For tree ensembles, techniques
found in the literature are explanation by simpliﬁcation and feature relevance techniques; we next examine
recent advances in these techniques.
To begin with, many contributions have been presented to simplify tree ensembles while maintaining
part of the accuracy accounted for the added complexity. The author from poses the idea of training
a single albeit less complex model from a set of random samples from the data (ideally following the real
data distribution) labeled by the ensemble model. Another approach for simpliﬁcation is that in , in
which authors create a Simpliﬁed Tree Ensemble Learner (STEL). Likewise, presents the usage
of two models (simple and complex) being the former the one in charge of interpretation and the latter
of prediction by means of Expectation-Maximization and Kullback-Leibler divergence. As opposed to
what was seen in model-agnostic techniques, not that many techniques to board explainability in tree
ensembles by means of model simpliﬁcation. It derives from this that either the proposed techniques are
good enough, or model-agnostic techniques do cover the scope of simpliﬁcation already.
Following simpliﬁcation procedures, feature relevance techniques are also used in the ﬁeld of tree
ensembles. Breiman was the ﬁrst to analyze the variable importance within Random Forests. His
method is based on measuring MDA (Mean Decrease Accuracy) or MIE (Mean Increase Error) of the
forest when a certain variable is randomly permuted in the out-of-bag samples. Following this contribution
 shows, in an real setting, how the usage of variable importance reﬂects the underlying relationships
of a complex system modeled by a Random Forest. Finally, a crosswise technique among post-hoc
explainability, proposes a framework that poses recommendations that, if taken, would convert
an example from one class to another. This idea attempts to disentangle the variables importance in a
way that is further descriptive. In the article, the authors show how these methods can be used to elevate
recommendations to improve malicious online ads to make them rank higher in paying rates.
Similar to the trend shown in model-agnostic techniques, for tree ensembles again, simpliﬁcation and
feature relevance techniques seem to be the most used schemes. However, contrarily to what was observed
before, most papers date back from 2017 and place their focus mostly on bagging ensembles. When
shifting the focus towards other ensemble strategies, scarce activity has been recently noted around the
explainability of boosting and stacking classiﬁers. Among the latter, it is worth highlighting the connection
between the reason why a compounding learner of the ensemble produces an speciﬁc prediction on a given
data, and its contribution to the output of the ensemble. The so-called Stacking With Auxiliary Features
(SWAF) approach proposed in points in this direction by harnessing and integrating explanations in
stacking ensembles to improve their generalization. This strategy allows not only relying on the output
of the compounding learners, but also on the origin of that output and its consensus across the entire
ensemble. Other interesting studies on the explainability of ensemble techniques include model-agnostic
schemes such as DeepSHAP , put into practice with stacking ensembles and multiple classiﬁer
systems in addition to Deep Learning models; the combination of explanation maps of multiple classiﬁers
to produce improved explanations of the ensemble to which they belong ; and recent insights dealing
with traditional and gradient boosting ensembles .
4.2.2. Support Vector Machines
Another shallow ML model with historical presence in the literature is the SVM. SVM models are
more complex than tree ensembles, with a much opaquer structure. Many implementations of post-hoc
explainability techniques have been proposed to relate what is mathematically described internally in
these models, to what different authors considered explanations about the problem at hand. Technically,
an SVM constructs a hyper-plane or set of hyper-planes in a high or inﬁnite-dimensional space, which
can be used for classiﬁcation, regression, or other tasks such as outlier detection. Intuitively, a good
separation is achieved by the hyperplane that has the largest distance (so-called functional margin) to the
nearest training-data point of any class, since in general, the larger the margin, the lower the generalization
error of the classiﬁer. SVMs are among the most used ML models due to their excellent prediction
and generalization capabilities. From the techniques stated in Section 2, post-hoc explainability applied
to SVMs covers explanation by simpliﬁcation, local explanations, visualizations and explanations by
Among explanation by simpliﬁcation, four classes of simpliﬁcations are made. Each of them differentiates from the other by how deep they go into the algorithm inner structure. First, some authors
propose techniques to build rule based models only from the support vectors of a trained model. This is
the approach of , which proposes a method that extracts rules directly from the support vectors of a
trained SVM using a modiﬁed sequential covering algorithm. In the same authors propose eclectic
rule extraction, still considering only the support vectors of a trained model. The work in generates
fuzzy rules instead of classical propositional rules. Here, the authors argue that long antecedents reduce
comprehensibility, hence, a fuzzy approach allows for a more linguistically understandable result. The
second class of simpliﬁcations can be exempliﬁed by , which proposed the addition of the SVM’s
hyperplane, along with the support vectors, to the components in charge of creating the rules. His method
relies on the creation of hyper-rectangles from the intersections between the support vectors and the
hyper-plane. In a third approach to model simpliﬁcation, another group of authors considered adding
the actual training data as a component for building the rules. In the authors proposed a
clustering method to group prototype vectors for each class. By combining them with the support vectors,
it allowed deﬁning ellipsoids and hyper-rectangles in the input space. Similarly in , the authors
proposed the so-called Hyper-rectangle Rule Extraction, an algorithm based on SVC (Support Vector
Clustering) to ﬁnd prototype vectors for each class and then deﬁne small hyper-rectangles around. In
 , the authors formulate the rule extraction problem as a multi-constrained optimization to create a
set of non-overlapping rules. Each rule conveys a non-empty hyper-cube with a shared edge with the
hyper-plane. In a similar study conducted in , extracting rules for gene expression data, the authors
presented a novel technique as a component of a multi-kernel SVM. This multi-kernel method consists
of feature selection, prediction modeling and rule extraction. Finally, the study in makes use of a
growing SVC to give an interpretation to SVM decisions in terms of linear rules that deﬁne the space in
Voronoi sections from the extracted prototypes.
Leaving aside rule extraction, the literature has also contemplated some other techniques to contribute
to the interpretation of SVMs. Three of them (visualization techniques) are clearly used toward explaining
SVM models when used for concrete applications. For instance, presents an innovative approach to
visualize trained SVM to extract the information content from the kernel matrix. They center the study
on Support Vector Regression models. They show the ability of the algorithm to visualize which of the
input variables are actually related with the associated output data. In a visual way combines the
output of the SVM with heatmaps to guide the modiﬁcation of compounds in late stages of drug discovery.
They assign colors to atoms based on the weights of a trained linear SVM that allows for a much more
comprehensive way of debugging the process. In the authors argue that many of the presented
studies for interpreting SVMs only account for the weight vectors, leaving the margin aside. In their study
they show how this margin is important, and they create an statistic that explicitly accounts for the SVM
margin. The authors show how this statistic is speciﬁc enough to explain the multivariate patterns shown
in neuroimaging.
Noteworthy is also the intersection between SVMs and Bayesian systems, the latter being adopted
as a post-hoc technique to explain decisions made by the SVM model. This is the case of and
 , which are studies where SVMs are interpreted as MAP (Maximum A Posteriori) solutions to
inference problems with Gaussian Process priors. This framework makes tuning the hyper-parameters
comprehensible and gives the capability of predicting class probabilities instead of the classical binary
classiﬁcation of SVMs. Interpretability of SVM models becomes even more involved when dealing
with non-CPD (Conditional Positive Deﬁnite) kernels that are usually harder to interpret due to missing
geometrical and theoretical understanding. The work in revolves around this issue with a geometrical
interpretation of indeﬁnite kernel SVMs, showing that these do not classify by hyper-plane margin
optimization. Instead, they minimize the distance between convex hulls in pseudo-Euclidean spaces.
A difference might be appreciated between the post-hoc techniques applied to other models and those
noted for SVMs. In previous models, model simpliﬁcation in a broad sense was the prominent method
for post-hoc explainability. In SVMs, local explanations have started to take some weight among the
propositions. However, simpliﬁcation based methods are, on average, much older than local explanations.
As a ﬁnal remark, none of the reviewed methods treating SVM explainability are dated beyond 2017,
which might be due to the progressive proliferation of DL models in almost all disciplines. Another
plausible reason is that these models are already understood, so it is hard to improve upon what has
already been done.
4.3. Explainability in Deep Learning
Post-hoc local explanations and feature relevance techniques are increasingly the most adopted
methods for explaining DNNs. This section reviews explainability studies proposed for the most used
DL models, namely multi-layer neural networks, Convolutional Neural Networks (CNN) and Recurrent
Neural Networks (RNN).
4.3.1. Multi-layer Neural Networks
From their inception, multi-layer neural networks (also known as multi-layer perceptrons) have been
warmly welcomed by the academic community due to their huge ability to infer complex relations among
variables. However, as stated in the introduction, developers and engineers in charge of deploying these
models in real-life production ﬁnd in their questionable explainability a common reason for reluctance.
That is why neural networks have been always considered as black-box models. The fact that explainability
is often a must for the model to be of practical value, forced the community to generate multiple
explainability techniques for multi-layer neural networks, including model simpliﬁcation approaches,
feature relevance estimators, text explanations, local explanations and model visualizations.
Several model simpliﬁcation techniques have been proposed for neural networks with one single
hidden layer, however very few works have been presented for neural networks with multiple hidden
layers. One of these few works is DeepRED algorithm , which extends the decompositional approach
to rule extraction (splitting at neuron level) presented in for multi-layer neural network by adding
more decision trees and rules.
Some other works use model simpliﬁcation as a post-hoc explainability approach. For instance, 
presents a simple distillation method called Interpretable Mimic Learning to extract an interpretable model
by means of gradient boosting trees. In the same direction, the authors in propose a hierarchical
partitioning of the feature space that reveals the iterative rejection of unlikely class labels, until association
is predicted. In addition, several works addressed the distillation of knowledge from an ensemble of
models into a single model .
Given the fact that the simpliﬁcation of multi-layer neural networks is more complex as the number of
layers increases, explaining these models by feature relevance methods has become progressively more
popular. One of the representative works in this area is , which presents a method to decompose the
network classiﬁcation decision into contributions of its input elements. They consider each neuron as an
object that can be decomposed and expanded then aggregate and back-propagate these decompositions
through the network, resulting in a deep Taylor decomposition. In the same direction, the authors in 
proposed DeepLIFT, an approach for computing importance scores in a multi-layer neural network. Their
method compares the activation of a neuron to the reference activation and assigns the score according to
the difference.
On the other hand, some works try to verify the theoretical soundness of current explainability methods.
For example, the authors in , bring up a fundamental problem of most feature relevance techniques,
designed for multi-layer networks. They showed that two axioms that such techniques ought to fulﬁll
namely, sensitivity and implementation invariance, are violated in practice by most approaches. Following
these axioms, the authors of created integrated gradients, a new feature relevance method proven
to meet the aforementioned axioms. Similarly, the authors in analyzed the correctness of current
feature relevance explanation approaches designed for Deep Neural Networks, e,g., DeConvNet, Guided
BackProp and LRP, on simple linear neural networks. Their analysis showed that these methods do not
produce the theoretically correct explanation and presented two new explanation methods PatternNet and
PatternAttribution that are more theoretically sound for both, simple and deep neural networks.
4.3.2. Convolutional Neural Networks
Currently, CNNs constitute the state-of-art models in all fundamental computer vision tasks, from
image classiﬁcation and object detection to instance segmentation. Typically, these models are built as
a sequence of convolutional layers and pooling layers to automatically learn increasingly higher level
features. At the end of the sequence, one or multiple fully connected layers are used to map the output
features map into scores. This structure entails extremely complex internal relations that are very difﬁcult
to explain. Fortunately, the road to explainability for CNNs is easier than for other types of models, as the
human cognitive skills favors the understanding of visual data.
Existing works that aim at understanding what CNNs learn can be divided into two broad categories:
1) those that try to understand the decision process by mapping back the output in the input space to
see which parts of the input were discriminative for the output; and 2) those that try to delve inside the
network and interpret how the intermediate layers see the external world, not necessarily related to any
speciﬁc input, but in general.
One of the seminal works in the ﬁrst category was . When an input image runs feed-forward
through a CNN, each layer outputs a number of feature maps with strong and soft activations. The authors
in used Deconvnet, a network designed previously by the same authors that, when fed with a
feature map from a selected layer, reconstructs the maximum activations. These reconstructions can give
an idea about the parts of the image that produced that effect. To visualize these strongest activations in
the input image, the same authors used the occlusion sensitivity method to generate a saliency map ,
which consists of iteratively forwarding the same image through the network occluding a different region
at a time.
To improve the quality of the mapping on the input space, several subsequent papers proposed
simplifying both the CNN architecture and the visualization method. In particular, included a global
average pooling layer between the last convolutional layer of the CNN and the fully-connected layer that
predicts the object class. With this simple architectural modiﬁcation of the CNN, the authors built a class
activation map that helps identify the image regions that were particularly important for a speciﬁc object
class by projecting back the weights of the output layer on the convolutional feature maps. Later, in ,
the authors showed that max-pooling layers can be used to replace convolutional layers with a large stride
without loss in accuracy on several image recognition benchmarks. They obtained a cleaner visualization
than Deconvnet by using a guided backpropagation method.
To increase the interpretability of classical CNNs, the authors in used a loss for each ﬁlter in
high level convolutional layers to force each ﬁlter to learn very speciﬁc object components. The obtained
activation patterns are much more interpretable for their exclusiveness with respect to the different labels
to be predicted. The authors in proposed visualizing the contribution to the prediction of each single
pixel of the input image in the form of a heatmap. They used a Layer-wise Relevance Propagation (LRP)
technique, which relies on a Taylor series close to the prediction point rather than partial derivatives at
the prediction point itself. To further improve the quality of the visualization, attribution methods such
as heatmaps, saliency maps or class activation methods (GradCAM ) are used (see Figure 7). In
particular, the authors in proposed a Gradient-weighted Class Activation Mapping (Grad-CAM),
which uses the gradients of any target concept, ﬂowing into the ﬁnal convolutional layer to produce a
coarse localization map, highlighting the important regions in the image for predicting the concept.
(a) Heatmap 
(b) Attribution 
(c) Grad-CAM 
Figure 7: Examples of rendering for different XAI visualization techniques on images.
In addition to the aforementioned feature relevance and visual explanation methods, some works
proposed generating text explanations of the visual content of the image. For example, the authors in 
combined a CNN feature extractor with an RNN attention model to automatically learn to describe the
content of images. In the same line, presented a three-level attention model to perform a ﬁne-grained
classiﬁcation task. The general model is a pipeline that integrates three types of attention: the object
level attention model proposes candidate image regions or patches from the input image, the part-level
attention model ﬁlters out non-relevant patches to a certain object, and the last attention model localizes
discriminative patches. In the task of video captioning, the authors in use a CNN model combined
with a bi-directional LSTM model as encoder to extract video features and then feed these features to an
LSTM decoder to generate textual descriptions.
One of the seminal works in the second category is . In order to analyse the visual information
contained inside the CNN, the authors proposed a general framework that reconstruct an image from the
CNN internal representations and showed that several layers retain photographically accurate information
about the image, with different degrees of geometric and photometric invariance. To visualize the notion
of a class captured by a CNN, the same authors created an image that maximizes the class score based on
computing the gradient of the class score with respect to the input image . In the same direction,
the authors in introduced a Deep Generator Network (DGN) that generates the most representative
image for a given output neuron in a CNN.
For quantifying the interpretability of the latent representations of CNNs, the authors in used a
different approach called network dissection. They run a large number of images through a CNN and then
analyze the top activated images by considering each unit as a concept detector to further evaluate each
unit for semantic segmentation. This paper also examines the effects of classical training techniques on
the interpretability of the learned model.
Although many of the techniques examined above utilize local explanations to achieve an overall
explanation of a CNN model, others explicitly focus on building global explanations based on locally found
prototypes. In , the authors empirically showed how local explanations in deep networks are
strongly dominated by their lower level features. They demonstrated that deep architectures provide strong
priors that prevent the altering of how these low-level representations are captured. All in all, visualization
mixed with feature relevance methods are arguably the most adopted approach to explainability in CNNs.
Instead of using one single interpretability technique, the framework proposed in combines
several methods to provide much more information about the network. For example, combining feature
visualization (what is a neuron looking for?) with attribution (how does it affect the output?) allows
exploring how the network decides between labels. This visual interpretability interface displays different
blocks such as feature visualization and attribution depending on the visualization goal. This interface
can be thought of as a union of individual elements that belong to layers (input, hidden, output), atoms (a
neuron, channel, spatial or neuron group), content (activations – the amount a neuron ﬁres, attribution –
which classes a spatial position most contributes to, which tends to be more meaningful in later layers), and
presentation (information visualization, feature visualization). Figure 8 shows some examples. Attribution
methods normally rely on pixel association, displaying what part of an input example is responsible for
the network activating in a particular way .
(a) Neuron
(b) Channel
Figure 8: Feature visualization at different levels of a certain network .
(a) Original image
(b) Explaining electric guitar
(c) Explaining acoustic guitar
Figure 9: Examples of explanation when using LIME on images .
A much simpler approach to all the previously cited methods was proposed in LIME framework
 , as was described in Subsection 4.1 LIME perturbs the input and sees how the predictions change.
In image classiﬁcation, LIME creates a set of perturbed instances by dividing the input image into
interpretable components (contiguous superpixels), and runs each perturbed instance through the model
to get a probability. A simple linear model learns on this data set, which is locally weighted. At the end of
the process, LIME presents the superpixels with highest positive weights as an explanation (see Figure 9).
A completely different explainability approach is proposed in adversarial detection. To understand
model failures in detecting adversarial examples, the authors in apply the k-nearest neighbors
algorithm on the representations of the data learned by each layer of the CNN. A test input image is
considered as adversarial if its representations are far from the representations of the training images.
4.3.3. Recurrent Neural Networks
As occurs with CNNs in the visual domain, RNNs have lately been used extensively for predictive
problems deﬁned over inherently sequential data, with a notable presence in natural language processing
and time series analysis. These types of data exhibit long-term dependencies that are complex to be
captured by a ML model. RNNs are able to retrieve such time-dependent relationships by formulating the
retention of knowledge in the neuron as another parametric characteristic that can be learned from data.
Few contributions have been made for explaining RNN models. These studies can be divided into two
groups: 1) explainability by understanding what a RNN model has learned (mainly via feature relevance
methods); and 2) explainability by modifying RNN architectures to provide insights about the decisions
they make (local explanations).
In the ﬁrst group, the authors in extend the usage of LRP to RNNs. They propose a speciﬁc
propagation rule that works with multiplicative connections as those in LSTMs (Long Short Term Memory)
units and GRUs (Gated Recurrent Units). The authors in propose a visualization technique based on
ﬁnite horizon n-grams that discriminates interpretable cells within LSTM and GRU networks. Following
the premise of not altering the architecture, extends the interpretable mimic learning distillation
method used for CNN models to LSTM networks, so that interpretable features are learned by ﬁtting
Gradient Boosting Trees to the trained LSTM network under focus.
Aside from the approaches that do not change the inner workings of the RNNs, presents RETAIN
(REverse Time AttentIoN) model, which detects inﬂuential past patterns by means of a two-level neural
attention model. To create an interpretable RNN, the authors in propose an RNN based on SISTA
(Sequential Iterative Soft-Thresholding Algorithm) that models a sequence of correlated observations
with a sequence of sparse latent vectors, making its weights interpretable as the parameters of a principled
statistical model. Finally, constructs a combination of an HMM (Hidden Markov Model) and an
RNN, so that the overall model approach harnesses the interpretability of the HMM and the accuracy of
the RNN model.
4.3.4. Hybrid Transparent and Black-box Methods
The use of background knowledge in the form of logical statements or constraints in Knowledge
Bases (KBs) has shown to not only improve explainability but also performance with respect to purely
data-driven approaches . A positive side effect shown is that this hybrid approach provides
robustness to the learning system when errors are present in the training data labels. Other approaches
have shown to be able to jointly learn and reason with both symbolic and sub-symbolic representations
and inference. The interesting aspect is that this blend allows for expressive probabilistic-logical reasoning
in an end-to-end fashion . A successful use case is on dietary recommendations, where explanations
are extracted from the reasoning behind (non-deep but KB-based) models .
Future data fusion approaches may thus consider endowing DL models with explainability by externalizing other domain information sources. Deep formulation of classical ML models has been done, e.g. in
Deep Kalman ﬁlters (DKFs) , Deep Variational Bayes Filters (DVBFs) , Structural Variational
Autoencoders (SVAE) , or conditional random ﬁelds as RNNs . These approaches provide
deep models with the interpretability inherent to probabilistic graphical models. For instance, SVAE
combines probabilistic graphical models in the embedding space with neural networks to enhance the
interpretability of DKFs. A particular example of classical ML model enhanced with its DL counterpart is
Deep Nearest Neighbors DkNN , where the neighbors constitute human-interpretable explanations
of predictions. The intuition is based on the rationalization of a DNN prediction based on evidence.
This evidence consists of a characterization of conﬁdence termed credibility that spans the hierarchy of
representations within a DNN, that must be supported by the training data .
Transparent design methods
• Decision Tree
• (Fuzzy) rule-based learning
Prediction
Explanation
Figure 10: Pictorial representation of a hybrid model. A neural network considered as a black-box can be explained by associating
it to a more interpretable model such as a Decision Tree , a (fuzzy) rule-based system or KNN .
A different perspective on hybrid XAI models consists of enriching black-box models knowledge
with that one of transparent ones, as proposed in and further reﬁned in and . In particular,
this can be done by constraining the neural network thanks to a semantic KB and bias-prone concepts
 , or by stacking ensembles jointly encompassing white- and black-box models .
Other examples of hybrid symbolic and sub-symbolic methods where a knowledge-base tool or
graph-perspective enhances the neural (e.g., language ) model are in . In reinforcement
learning, very few examples of symbolic (graphical or relational ) hybrid models exist,
while in recommendation systems, for instance, explainable autoencoders are proposed . A speciﬁc
transformer architecture symbolic visualization method (applied to music) pictorially shows how soft-max
attention works . By visualizing self-reference, i.e., the last layer of attention weights, arcs show
which notes in the past are informing the future and how attention is skip over less relevant sections.
Transformers can also help explain image captions visually .
Another hybrid approach consists of mapping an uninterpretable black-box system to a white-box twin
that is more interpretable. For example, an opaque neural network can be combined with a transparent
Case Based Reasoning (CBR) system . In , the DNN and the CBR (in this case a kNN) are
paired in order to improve interpretability while keeping the same accuracy. The explanation by example
consists of analyzing the feature weights of the DNN which are then used in the CBR, in order to retrieve
nearest-neighbor cases to explain the DNN’s prediction.
4.4. Alternative Taxonomy of Post-hoc Explainability Techniques for Deep Learning
DL is the model family where most research has been concentrated in recent times and they have
become central for most of the recent literature on XAI. While the division between model-agnostic
and model-speciﬁc is the most common distinction made, the community has not only relied on this
criteria to classify XAI methods. For instance, some model-agnostic methods such as SHAP are
widely used to explain DL models. That is why several XAI methods can be easily categorized in
different taxonomy branches depending on the angle the method is looked at. An example is LIME
which can also be used over CNNs, despite not being exclusive to deal with images. Searching within
the alternative DL taxonomy shows us that LIME can explicitly be used for Explaining a Deep Network
Processing, as a kind of Linear Proxy Model. Another type of classiﬁcation is indeed proposed in 
with a segmentation based on 3 categories. The ﬁrst category groups methods explaining the processing of
data by the network, thus answering to the question “why does this particular input leads to this particular
output?”. The second one concerns methods explaining the representation of data inside the network, i.e.,
answering to the question “what information does the network contain?”. The third approach concerns
models speciﬁcally designed to simplify the interpretation of their own behavior. Such a multiplicity of
classiﬁcation possibilities leads to different ways of constructing XAI taxonomies.
Explanation of Deep
Network Processing
Linear Proxy Models
Decision Trees
 
Automatic-Rule Extraction
 
Salience Mapping
 
Explanation of Deep
Network Representation
Role of Layers
 
Role of IndividualUnits
 
Role of RepresentationVectors
Explanation Producing
Attention Networks
 
Representation Disentanglement
 
Explanation Generation
 
Hybrid Transparent
and Black-box Methods
Neural-symbolic Systems
 
KB-enhanced Systems
 
Deep Formulation
 
Relational Reasoning
 
Case-base Reasoning
 
Explanation of Deep
Explanation Producing
Learning Representation
Explanation of Deep
Network Processing
Simpliﬁcation
Local Explanation
Text Explanation
Feature Relevance
Architecture Modiﬁcation
Visual explanation
Hybrid Transparent and
Black-box Methods
Transparent Models
(Fig. 11.a)
Explanation by Example
Figure 11: (a) Alternative Deep Learning speciﬁc taxonomy extended from the categorization from ; and (b) its connection to
the taxonomy in Figure 6.
Figure 11 shows the alternative Deep Learning taxonomy inferred from . From the latter, it can be
deduced the complementarity and overlapping of this taxonomy to Figure 6 as:
• Some methods classiﬁed in distinct categories (namely feature relevance for CNN and
feature relevance for RNN) in Figure 6 are included in a single category (Explanation of Deep Network
Processing with Salience Mapping) when considering the classiﬁcation from .
• Some methods are classiﬁed on a single category (Explanation by simpliﬁcation for Multi-
Layer Neural Network) in Figure 6 while being in 2 different categories (namely, Explanation of Deep
Network Processing with Decision Trees and Explanation of Deep Network Representation with the
Role of Representation Vectors) in , as shown in Figure 11.
A classiﬁcation based on explanations of model processing and explanations of model representation
is relevant, as it leads to a differentiation between the execution trace of the model and its internal data
structure. This means that depending of the failure reasons of a complex model, it would be possible to
pick-up the right XAI method according to the information needed: the execution trace or the data structure.
This idea is analogous to testing and debugging methods used in regular programming paradigms .
5. XAI: Opportunities, Challenges and Future Research Needs
We now capitalize on the performed literature review to put forward a critique of the achievements,
trends and challenges that are still to be addressed in the ﬁeld of explainability of ML and data fusion
models. Actually our discussion on the advances taken so far in this ﬁeld has already anticipated some
of these challenges. In this section we revisit them and explore new research opportunities for XAI,
identifying possible research paths that can be followed to address them effectively in years to come:
• When introducing the overview in Section 1 we already mentioned the existence of a tradeoff between
model interpretability and performance, in the sense that making a ML model more understandable
could eventually degrade the quality of its produced decisions. In Subsection 5.1 we will stress on the
potential of XAI developments to effectively achieve an optimal balance between the interpretability
and performance of ML models.
• In Subsection 2.2 we stressed on the imperative need for reaching a consensus on what explainability
entails within the AI realm. Reasons for pursuing explainability are also assorted and, under our
own assessment of the literature so far, not unambiguously mentioned throughout related works. In
Subsection 5.2 we will further delve into this important issue.
• Given its notable prevalence in the XAI literature, Subsections 4.3 and 4.4 revolved on the explainability
of Deep Learning models, examining advances reported so far around a speciﬁc bibliographic taxonomy.
We go in this same direction with Subsection 5.3, which exposes several challenges that hold in regards
to the explainability of this family of models.
• Finally, we close up this prospective discussion with Subsections 5.4 to 5.8, which place on the table
several research niches that despite its connection to model explainability, remain insufﬁciently studied
by the community.
Before delving into these identiﬁed challenges, it is important to bear in mind that this prospective
section is complemented by Section 6, which enumerates research needs and open questions related to
XAI within a broader context: the need for responsible AI.
5.1. On the Tradeoff between Interpretability and Performance
The matter of interpretability versus performance is one that repeats itself through time, but as any
other big statement, has its surroundings ﬁlled with myths and misconceptions.
As perfectly stated in , it is not necessarily true that models that are more complex are inherently
more accurate. This statement is false in cases in which the data is well structured and features at our
disposal are of great quality and value. This case is somewhat common in some industry environments,
since features being analyzed are constrained within very controlled physical problems, in which all of
the features are highly correlated, and not much of the possible landscape of values can be explored in
the data . What can be hold as true, is that more complex models enjoy much more ﬂexibility than
their simpler counterparts, allowing for more complex functions to be approximated. Now, returning to
the statement “models that are more complex are more accurate”, given the premise that the function
to be approximated entails certain complexity, that the data available for study is greatly widespread
among the world of suitable values for each variable and that there is enough data to harness a complex
model, the statement presents itself as a true statement. It is in this situation that the trade-off between
performance and interpretability can be observed. It should be noted that the attempt at solving problems
that do not respect the aforementioned premises will fall on the trap of attempting to solve a problem that
does not provide enough data diversity (variance). Hence, the added complexity of the model will only
ﬁght against the task of accurately solving the problem.
In this path toward performance, when the performance comes hand in hand with complexity, interpretability encounters itself on a downwards slope that until now appeared unavoidable. However,
the apparition of more sophisticated methods for explainability could invert or at least cancel that slope.
Figure 12 shows a tentative representation inspired by previous works , in which XAI shows its
power to improve the common trade-off between model interpretability and performance. Another aspect
worth mentioning at this point due to its close link to model interpretability and performance is the
approximation dilemma: explanations made for a ML model must be made drastic and approximate
enough to match the requirements of the audience for which they are sought, ensuring that explanations
are representative of the studied model and do not oversimplify its essential features.
Model interpretability
Bayesian Models
Decision Trees
Generalized
Linear/Logistic
Regression
Rule-based
Model accuracy
Post-hoc explainability techniques
Interpretability-driven model designs
Hybrid modelling approaches
New explainability-preserving modelling approaches
Interpretable feature engineering
XAI’s future
research arena
Figure 12: Trade-off between model interpretability and performance, and a representation of the area of improvement where the
potential of XAI techniques and tools resides.
5.2. On the Concept and Metrics
The literature clearly asks for an uniﬁed concept of explainability. In order for the ﬁeld to thrive,
it is imperative to place a common ground upon which the community is enabled to contribute new
techniques and methods. A common concept must convey the needs expressed in the ﬁeld. It should
propose a common structure for every XAI system. This paper attempted a new proposition of a concept
of explainability that is built upon that from Gunning . In that proposition and the following strokes to
complete it (Subsection 2.2), explainability is deﬁned as the ability a model has to make its functioning
clearer to an audience. To address it, post-hoc type methods exist. The concept portrayed in this survey
might not be complete but as it stands, allows for a ﬁrst common ground and reference point to sustain
a proﬁtable discussion in this matter. It is paramount that the ﬁeld of XAI reaches an agreement in this
respect combining the shattered efforts of a widespread ﬁeld behind the same banner.
Another key feature needed to relate a certain model to this concrete concept is the existence of a
metric. A metric, or group of them should allow for a meaningful comparison of how well a model ﬁts
the deﬁnition of explainable. Without such tool, any claim in this respect dilutes among the literature, not
providing a solid ground on which to stand. These metrics, as the classic ones (accuracy, F1, sensitivity...),
should express how well the model performs in a certain aspect of explainability. Some attempts have been
done recently around the measurement of XAI, as reviewed thoroughly in . In general, XAI
measurements should evaluate the goodness, usefulness and satisfaction of explanations, the improvement
of the mental model of the audience induced by model explanations, and the impact of explanations on the
performance of the model and on the trust and reliance of the audience. Measurement techniques surveyed
in and (e.g., goodness checklist, explanation satisfaction scale, elicitation methods for mental
models, computational measures for explainer ﬁdelity, explanation trustworthiness and model reliability)
seem to be a good push in the direction of evaluating XAI techniques. Unfortunately, conclusions drawn
from these overviews are aligned with our prospects on the ﬁeld: more quantiﬁable, general XAI metrics
are really needed to support the existing measurement procedures and tools proposed by the community.
This survey does not tackle the problem of designing such a suite of metrics, since such a task should
be approached by the community as a whole prior acceptance of the broader concept of explainability, which on the other hand, is one of the aims of the current work. Nevertheless, we advocate for
further efforts towards new proposals to evaluate the performance of XAI techniques, as well as comparison methodologies among XAI approaches that allow contrasting them quantitatively under different
application context, models and purposes.
5.3. Challenges to achieve Explainable Deep Learning
While many efforts are currently being made in the area of XAI, there are still many challenges to be
faced before being able to obtain explainability in DL models. First, as explained in Subsection 2.2, there
is a lack of agreement on the vocabulary and the different deﬁnitions surrounding XAI. As an example,
we often see the terms feature importance and feature relevance referring to the same concept. This is
even more obvious for visualization methods, where there is absolutely no consistency behind what is
known as saliency maps, salient masks, heatmaps, neuron activations, attribution, and other approaches
alike. As XAI is a relatively young ﬁeld, the community does not have a standardized terminology yet.
As it has been commented in Subsection 5.1, there is a trade-off between interpretability and accuracy
 , i.e., between the simplicity of the information given by the system on its internal functioning, and
the exhaustiveness of this description. Whether the observer is an expert in the ﬁeld, a policy-maker or a
user without machine learning knowledge, intelligibility does not have to be at the same level in order
to provide the audience an understanding . This is one of the reasons why, as mentioned above, a
challenge in XAI is establishing objective metrics on what constitutes a good explanation. A possibility
to reduce this subjectivity is taking inspiration from experiments on human psychology, sociology or
cognitive sciences to create objectively convincing explanations. Relevant ﬁndings to be considered when
creating an explainable AI model are highlighted in : First, explanations are better when constrictive,
meaning that a prerequisite for a good explanation is that it does not only indicate why the model made a
decision X, but also why it made decision X rather than decision Y. It is also explained that probabilities
are not as important as causal links in order to provide a satisfying explanation. Considering that black box
models tend to process data in a quantitative manner, it would be necessary to translate the probabilistic
results into qualitative notions containing causal links. In addition, they state that explanations are
selective, meaning that focusing solely on the main causes of a decision-making process is sufﬁcient. It
was also shown that the use of counterfactual explanations can help the user to understand the decision of
a model .
Combining connectionist and symbolic paradigms seems a favourable way to address this challenge
 . On one hand, connectionist methods are more precise but opaque. On the other
hand, symbolic methods are popularly considered less efﬁcient, while they offer a greater explainability
thus respecting the conditions mentioned above:
• The ability to refer to established reasoning rules allows symbolic methods to be constrictive.
• The use of a KB formalized e.g. by an ontology can allow data to be processed directly in a qualitative
• Being selective is less straightforward for connectionist models than for symbolic ones.
Recalling that a good explanation needs to inﬂuence the mental model of the user, i.e. the representation of the external reality using, among other things, symbols, it seems obvious that the use of
the symbolic learning paradigm is appropriate to produce an explanation. Therefore, neural-symbolic
interpretability could provide convincing explanations while keeping or improving generic performance
As stated in , a truly explainable model should not leave explanation generation to the users as
different explanations may be deduced depending on their background knowledge. Having a semantic
representation of the knowledge can help a model to have the ability to produce explanations (e.g., in
natural language ) combining common sense reasoning and human-understandable features.
Furthermore, until an objective metric has been adopted, it appears necessary to make an effort to
rigorously formalize evaluation methods. One way may be drawing inspiration from the social sciences,
e.g., by being consistent when choosing the evaluation questions and the population sample used .
A ﬁnal challenge XAI methods for DL need to address is providing explanations that are accessible
for society, policy makers and the law as a whole. In particular, conveying explanations that require
non-technical expertise will be paramount to both handle ambiguities, and to develop the social right to
the (not-yet available) right for explanation in the EU General Data Protection Regulation (GDPR) .
5.4. Explanations for AI Security: XAI and Adversarial Machine Learning
Nothing has been said about conﬁdentiality concerns linked to XAI. One of the last surveys very
brieﬂy introduced the idea of algorithm property and trade secrets . However, not much attention
has been payed to these concepts. If conﬁdential is the property that makes something secret, in the
AI context many aspects involved in a model may hold this property. For example, imagine a model
that some company has developed through many years of research in a speciﬁc ﬁeld. The knowledge
synthesized in the model built might be considered to be conﬁdential, and it may be compromised even
by providing only input and output access . The latter shows that, under minimal assumptions,
data model functionality stealing is possible. An approach that has served to make DL models more
robust against intellectual property exposure based on a sequence of non accessible queries is in .
This recent work exposes the need for further research toward the development of XAI tools capable of
explaining ML models while keeping the model’s conﬁdentiality in mind.
Ideally, XAI should be able to explain the knowledge within an AI model and it should be able to
reason about what the model acts upon. However, the information revealed by XAI techniques can be used
both to generate more effective attacks in adversarial contexts aimed at confusing the model, at the same
time as to develop techniques to better protect against private content exposure by using such information.
Adversarial attacks try to manipulate a ML algorithm after learning what is the speciﬁc information
that should be fed to the system so as to lead it to a speciﬁc output. For instance, regarding a supervised
ML classiﬁcation model, adversarial attacks try to discover the minimum changes that should be applied
to the input data in order to cause a different classiﬁcation. This has happened regarding computer vision
systems of autonomous vehicles; a minimal change in a stop signal, imperceptible to the human eye, led
vehicles to detect it as a 45 mph signal . For the particular case of DL models, available solutions
such as Cleverhans seek to detect adversarial vulnerabilities, and provide different approaches
to harden the model against them. Other examples include AlfaSVMLib for SVM models, and
AdversarialLib for evasion attacks. There are even available solutions for unsupervised ML, like
clustering algorithms .
While XAI techniques can be used to furnish more effective adversarial attacks or to reveal conﬁdential
aspects of the model itself, some recent contributions have capitalized on the possibilities of Generative
Adversarial Networks (GANs ), Variational Autoencoders and other generative models towards
explaining data-based decisions. Once trained, generative models can generate instances of what they
have learned based on a noise input vector that can be interpreted as a latent representation of the data at
hand. By manipulating this latent representation and examining its impact on the output of the generative
model, it is possible to draw insights and discover speciﬁc patterns related to the class to be predicted.
This generative framework has been adopted by several recent studies mainly as an attribution
method to relate a particular output of a Deep Learning model to their input variables. Another interesting
research direction is the use of generative models for the creation of counterfactuals, i.e., modiﬁcations
to the input data that could eventually alter the original prediction of the model . Counterfactual
prototypes help the user understand the performance boundaries of the model under consideration for
his/her improved trust and informed criticism. In light of this recent trend, we deﬁnitely believe that there
is road ahead for generative ML models to take their part in scenarios demanding understandable machine
decisions.
5.5. XAI and Output Conﬁdence
Safety issues have also been studied in regards to processes that depend on the output of AI models,
such as vehicular perception and self-driving in autonomous vehicles, automated surgery, data-based
support for medical diagnosis, insurance risk assessment and cyber-physical systems in manufacturing,
among others . In all these scenarios erroneous model outputs can lead to harmful consequences,
which has yielded comprehensive regulatory efforts aimed at ensuring that no decision is made solely on
the basis of data processing .
In parallel, research has been conducted towards minimizing both risk and uncertainty of harms
derived from decisions made on the output of a ML model. As a result, many techniques have been
reported to reduce such a risk, among which we pause at the evaluation of the model’s output conﬁdence
to decide upon. In this case, the inspection of the share of epistemic uncertainty (namely, the uncertainty
due to lack of knowledge) of the input data and its correspondence with the model’s output conﬁdence
can inform the user and eventually trigger his/her rejection of the model’s output . To this end,
explaining via XAI techniques which region of the input data the model is focused on when producing a
given output can discriminate possible sources of epistemic uncertainty within the input domain.
5.6. XAI, Rationale Explanation, and Critical Data Studies
When shifting the focus to the research practices seen in Data Science, it has been noted that
reproducibility is stringently subject not only to the mere sharing of data, models and results to the
community, but also to the availability of information about the full discourse around data collection,
understanding, assumptions held and insights drawn from model construction and results’ analyses .
In other words, in order to transform data into a valuable actionable asset, individuals must engage in
collaborative sense-making by sharing the context producing their ﬁndings, wherein context refers to sets
of narrative stories around how data were processed, cleaned, modeled and analyzed. In this discourse
we ﬁnd also an interesting space for the adoption of XAI techniques due to their powerful ability to
describe black-box models in an understandable, hence conveyable fashion towards colleagues from
Social Science, Politics, Humanities and Legal ﬁelds.
XAI can effectively ease the process of explaining the reasons why a model reached a decision in an
accessible way to non-expert users, i.e. the rationale explanation. This conﬂuence of multi-disciplinary
teams in projects related to Data Science and the search for methodologies to make them appraise the
ethical implications of their data-based choices has been lately coined as Critical Data studies . It
is in this ﬁeld where XAI can signiﬁcantly boost the exchange of information among heterogeneous
audiences about the knowledge learned by models.
5.7. XAI and Theory-guided Data Science
We envision an exciting synergy between the XAI realm and Theory-guided Data Science, a paradigm
exposed in that merges both Data Science and the classic theoretical principles underlying the
application/context where data are produced. The rationale behind this rising paradigm is the need for databased models to generate knowledge that is the prior knowledge brought by the ﬁeld in which it operates.
This means that the model type should be chosen according to the type of relations we intend to encounter.
The structure should also follow what is previously known. Similarly, the training approach should not
allow for the optimization process to enter regions that are not plausible. Accordingly, regularization
terms should stand the prior premises of the ﬁeld, avoiding the elimination of badly represented true
relations for spurious and deceptive false relations. Finally, the output of the model should inform about
everything the model has come to learn, allowing to reason and merge the new knowledge with what was
already known in the ﬁeld.
Many examples of the implementation of this approach are currently available with promising results.
The studies in - were carried out in diverse ﬁelds, showcasing the potential of this new paradigm
for data science. Above all, it is relevant to notice the resemblance that all concepts and requirements of
Theory-guided Data Science share with XAI. All the additions presented in push toward techniques
that would eventually render a model explainable, and furthermore, knowledge consistent. The concept
of knowledge from the beginning, central to Theory-guided Data Science, must also consider how
the knowledge captured by a model should be explained for assessing its compliance with theoretical
principles known beforehand. This, again, opens a magniﬁcent window of opportunity for XAI.
5.8. Guidelines for ensuring Interpretable AI Models
Recent surveys have emphasized on the multidisciplinary, inclusive nature of the process of making
an AI-based model interpretable. Along this process, it is of utmost importance to scrutinize and take into
proper account the interests, demands and requirements of all stakeholders interacting with the system to
be explained, from the designers of the system to the decision makers consuming its produced outputs
and users undergoing the consequences of decisions made therefrom.
Given the conﬂuence of multiple criteria and the need for having the human in the loop, some
attempts at establishing the procedural guidelines to implement and explain AI systems have been recently
contributed. Among them, we pause at the thorough study in , which suggests that the incorporation
and consideration of explainability in practical AI design and deployment workﬂows should comprise
four major methodological steps:
1. Contextual factors, potential impacts and domain-speciﬁc needs must be taken into account when
devising an approach to interpretability: These include a thorough understanding of the purpose for
which the AI model is built, the complexity of explanations that are required by the audience, and the
performance and interpretability levels of existing technology, models and methods. The latter pose a
reference point for the AI system to be deployed in lieu thereof.
2. Interpretable techniques should be preferred when possible: when considering explainability in the
development of an AI system, the decision of which XAI approach should be chosen should gauge
domain-speciﬁc risks and needs, the available data resources and existing domain knowledge, and the
suitability of the ML model to meet the requirements of the computational task to be addressed. It is in
the conﬂuence of these three design drivers where the guidelines postulated in (and other studies
in this same line of thinking ) recommend ﬁrst the consideration of standard interpretable models
rather than sophisticated yet opaque modeling methods. In practice, the aforementioned aspects
(contextual factors, impacts and domain-speciﬁc needs) can make transparent models preferable
over complex modeling alternatives whose interpretability require the application of post-hoc XAI
techniques. By contrast, black-box models such as those reviewed in this work (namely, support
vector machines, ensemble methods and neural networks) should be selected only when their superior
modeling capabilities ﬁt best the characteristics of the problem at hand.
3. If a black-box model has been chosen, the third guideline establishes that ethics-, fairness- and safetyrelated impacts should be weighed. Speciﬁcally, responsibility in the design and implementation of
the AI system should be ensured by checking whether such identiﬁed impacts can be mitigated and
counteracted by supplementing the system with XAI tools that provide the level of explainability
required by the domain in which it is deployed. To this end, the third guideline suggests 1) a detailed
articulation, examination and evaluation of the applicable explanatory strategies, 2) the analysis of
whether the coverage and scope of the available explanatory approaches match the requirements of
the domain and application context where the model is to be deployed; and 3) the formulation of
an interpretability action plan that sets forth the explanation delivery strategy, including a detailed
time frame for the execution of the plan, and a clearance of the roles and responsibilities of the team
involved in the workﬂow.
4. Finally, the fourth guideline encourages to rethink interpretability in terms of the cognitive skills,
capacities and limitations of the individual human. This is an important question on which studies
on measures of explainability are intensively revolving by considering human mental models, the
accessibility of the audience to vocabularies of explanatory outcomes, and other means to involve the
expertise of the audience into the decision of what explanations should provide.
We foresee that the set of guidelines proposed in and summarized above will be complemented
and enriched further by future methodological studies, ultimately heading to a more responsible use of AI.
Methodological principles ensure that the purpose for which explainability is pursued is met by bringing
the manifold of requirements of all participants into the process, along with other universal aspects of
equal relevance such as no discrimination, sustainability, privacy or accountability. A challenge remains
in harnessing the potential of XAI to realize a Responsible AI, as we discuss in the next section.
6. Toward Responsible AI: Principles of Artiﬁcial Intelligence, Fairness, Privacy and Data Fusion
Over the years many organizations, both private and public, have published guidelines to indicate
how AI should be developed and used. These guidelines are commonly referred to as AI principles, and
they tackle issues related to potential AI threats to both individuals and to the society as a whole. This
section presents some of the most important and widely recognized principles in order to link XAI –
which normally appears inside its own principle – to all of them. Should a responsible implementation
and use of AI models be sought in practice, it is our ﬁrm claim that XAI does not sufﬁce on its own. Other
important principles of Artiﬁcial Intelligence such as privacy and fairness must be carefully addressed
in practice. In the following sections we elaborate on the concept of Responsible AI, along with the
implications of XAI and data fusion in the fulﬁllment of its postulated principles.
6.1. Principles of Artiﬁcial Intelligence
A recent review of some of the main AI principles published since 2016 appears in . In this
work, the authors show a visual framework where different organizations are classiﬁed according to the
following parameters:
• Nature, which could be private sector, government, inter-governmental organization, civil society or
multistakeholder.
• Content of the principles: eight possible principles such as privacy, explainability, or fairness. They
also consider the coverage that the document grants for each of the considered principles.
• Target audience: to whom the principles are aimed. They are normally for the organization that
developed them, but they could also be destined for another audience (see Figure 2).
• Whether or not they are rooted on the International Human Rights, as well as whether they explicitly
talk about them.
For instance, is an illustrative example of a document of AI principles for the purpose of
this overview, since it accounts for some of the most common principles, and deals explicitly with
explainability. Here, the authors propose ﬁve principles mainly to guide the development of AI within
their company, while also indicating that they could also be used within other organizations and businesses.
The authors of those principles aim to develop AI in a way that it directly reinforces inclusion, gives
equal opportunities for everyone, and contributes to the common good. To this end, the following aspects
should be considered:
• The outputs after using AI systems should not lead to any kind of discrimination against individuals
or collectives in relation to race, religion, gender, sexual orientation, disability, ethnic, origin or any
other personal condition. Thus, a fundamental criteria to consider while optimizing the results of an AI
system is not only their outputs in terms of error optimization, but also how the system deals with those
groups. This deﬁnes the principle of Fair AI.
• People should always know when they are communicating with a person, and when they are communicating with an AI system. People should also be aware if their personal information is being used
by the AI system and for what purpose. It is crucial to ensure a certain level of understanding about
the decisions taken by an AI system. This can be achieved through the usage of XAI techniques. It
is important that the generated explanations consider the proﬁle of the user that will receive those
explanations (the so-called audience as per the deﬁnition given in Subsection 2.2) in order to adjust the
transparency level, as indicated in . This deﬁnes the principle of Transparent and Explainable AI.
• AI products and services should always be aligned with the United Nation’s Sustainable Development
Goals and contribute to them in a positive and tangible way. Thus, AI should always generate
a beneﬁt for humanity and the common good. This deﬁnes the principle of Human-centric AI (also
referred to as AI for Social Good ).
• AI systems, specially when they are fed by data, should always consider privacy and security standards
during all of its life cycle. This principle is not exclusive of AI systems since it is shared with many
other software products. Thus, it can be inherited from processes that already exist within a company.
This deﬁnes the principle of Privacy and Security by Design, which was also identiﬁed as one of
the core ethical and societal challenges faced by Smart Information Systems under the Responsible
Research and Innovation paradigm (RRI, ). RRI refers to a package of methodological guidelines
and recommendations aimed at considering a wider context for scientiﬁc research, from the perspective
of the lab to global societal challenges such as sustainability, public engagement, ethics, science
education, gender equality, open access, and governance. Interestingly, RRI also requires openness and
transparency to be ensured in projects embracing its principles, which links directly to the principle of
Transparent and Explainable AI mentioned previously.
• The authors emphasize that all these principles should always be extended to any third-party (providers,
consultants, partners...).
Going beyond the scope of these ﬁve AI principles, the European Commission (EC) has recently
published ethical guidelines for Trustworthy AI through an assessment checklist that can be
completed by different proﬁles related to AI systems (namely, product managers, developers and other
roles). The assessment is based in a series of principles: 1) human agency and oversight; 2) technical
robustness and safety; 3) privacy and data governance; 4) transparency, diversity, non-discrimination and
fairness; 5) societal and environmental well-being; 6) accountability. These principles are aligned with
the ones detailed in this section, though the scope for the EC principles is more general, including any
type of organization involved in the development of AI.
It is worth mentioning that most of these AI principles guides directly approach XAI as a key aspect
to consider and include in AI systems. In fact, the overview for these principles introduced before ,
indicates that 28 out of the 32 AI principles guides covered in the analysis, explicitly include XAI as a
crucial component. Thus, the work and scope of this article deals directly with one of the most important
aspects regarding AI at a worldwide level.
6.2. Fairness and Accountability
As mentioned in the previous section, there are many critical aspects, beyond XAI, included within
the different AI principles guidelines published during the last decade. However, those aspects are not
completely detached from XAI; in fact, they are intertwined. This section presents two key components
with a huge relevance within the AI principles guides, Fairness and Accountability. It also highlights how
they are connected to XAI.
6.2.1. Fairness and Discrimination
It is in the identiﬁcation of implicit correlations between protected and unprotected features where
XAI techniques ﬁnd their place within discrimination-aware data mining methods. By analyzing how
the output of the model behaves with respect to the input feature, the model designer may unveil hidden
correlations between the input variables amenable to cause discrimination. XAI techniques such as SHAP
 could be used to generate counterfactual outcomes explaining the decisions of a ML model when
fed with protected and unprotected variables.
Recalling the Fair AI principle introduced in the previous section, reminds that fairness is a
discipline that generally includes proposals for bias detection within datasets regarding sensitive data that
affect protected groups (through variables like gender, race...). Indeed, ethical concerns with black-box
models arise from their tendency to unintentionally create unfair decisions by considering sensitive factors
such as the individual’s race, age or gender . Unfortunately, such unfair decisions can give rise to
discriminatory issues, either by explicitly considering sensitive attributes or implicitly by using factors
that correlate with sensitive data. In fact, an attribute may implicitly encode a protected factor, as occurs
with postal code in credit rating . The aforementioned proposals centered on fairness aspects permit
to discover correlations between non-sensitive variables and sensitive ones, detect imbalanced outcomes
from the algorithms that penalize a speciﬁc subgroup of people (discrimination), and mitigate the effect
of bias on the model’s decisions. These approaches can deal with:
• Individual fairness: here, fairness is analyzed by modeling the differences between each subject and the
rest of the population.
• Group fairness: it deals with fairness from the perspective of all individuals.
• Counterfactual fairness: it tries to interpret the causes of bias using, for example, causal graphs.
The sources for bias, as indicated in , can be traced to:
• Skewed data: bias within the data acquisition process.
• Tainted data: errors in the data modelling deﬁnition, wrong feature labelling, and other possible causes.
• Limited features: using too few features could lead to an inference of false feature relationships that
can lead to bias.
• Sample size disparities: when using sensitive features, disparities between different subgroups can
induce bias.
• Proxy features: there may be correlated features with sensitive ones that can induce bias even when the
sensitive features are not present in the dataset.
The next question that can be asked is what criteria could be used to deﬁne when AI is not biased. For
supervised ML, presents a framework that uses three criteria to evaluate group fairness when there
is a sensitive feature present within the dataset:
• Independence: this criterion is fulﬁlled when the model predictions are independent of the sensitive
feature. Thus, the proportion of positive samples (namely, those ones belonging to the class of interest)
given by the model is the same for all the subgroups within the sensitive feature.
• Separation: it is met when the model predictions are independent of the sensitive feature given the
target variable. For instance, in classiﬁcation models, the True Positive (TP) rate and the False Positive
(FP) rate are the same in all the subgroups within the sensitive feature. This criteria is also known as
Equalized Odds.
• Sufﬁciency: it is accomplished when the target variable is independent of the sensitive feature given
the model output. Thus, the Positive Predictive Value is the same for all subgroups within the sensitive
feature. This criteria is also known as Predictive Rate Parity.
Although not all of the criteria can be fulﬁlled at the same time, they can be optimized together in
order to minimize the bias within the ML model.
There are two possible actions that could be used in order to achieve those criteria. On one hand,
evaluation includes measuring the amount of bias present within the model (regarding one of the criteria
aforementioned). There are many different metrics that can be used, depending on the criteria considered.
Regarding independence criterion, possible metrics are statistical parity difference or disparate impact.
In case of the separation criterion, possible metrics are equal opportunity difference and average odds
difference . Another possible metric is the Theil index , which measures inequality both in
terms of individual and group fairness.
On the other hand, mitigation refers to the process of ﬁxing some aspects in the model in order to
remove the effect of the bias in terms of one or several sensitive features. Several techniques exist within
the literature, classiﬁed in the following categories:
• Pre-processing: these groups of techniques are applied before the ML model is trained, looking to
remove the bias at the ﬁrst step of the learning process. An example is Reweighing , which
modiﬁes the weights of the features in order to remove discrimination in sensitive attributes. Another
example is , which hinges on transforming the input data in order to ﬁnd a good representation
that obfuscates information about membership in sensitive features.
• In-processing: these techniques are applied during the training process of the ML model. Normally,
they include Fairness optimization constraints along with cost functions of the ML model. An example
is Adversarial Debiasing, . This technique optimizes jointly the ability of predicting the target
variable while minimizing the ability of predicting sensitive features using a GAN.
• Post-processing: these techniques are applied after the ML model is trained. They are less intrusive
because they do not modify the input data or the ML model. An example is Equalized Odds . This
techniques allows to adjust the thresholds in the classiﬁcation model in order to reduce the differences
between the TP rate and the FP rate for each sensitive subgroup.
Even though these references apparently address an AI principle that appears to be independent of
XAI, the literature shows that they are intertwined. For instance, the survey in evinces that 26 out
of the 28 AI principles that deal with XAI, also talk about fairness explicitly. This fact elucidates that
organizations usually consider both aspects together when implementing Responsible AI.
The literature also exploses that XAI proposals can be used for bias detection. For example, 
proposes a framework to visually analyze the bias present in a model (both for individual and group
fairness). Thus, the fairness report is shown just like the visual summaries used within XAI. This
explainability approach eases the understanding and measurement of bias. The system must report that
there is bias, justify it quantitatively, indicate the degree of fairness, and explain why a user or group
would be treated unfairly with the available data. Similarly, XAI techniques such as SHAP could be
used to generate counterfactual outcomes explaining the decisions of a ML model when fed with protected
and unprotected variables. By identifying implicit correlations between protected and unprotected features
through XAI techniques, the model designer may unveil hidden correlations between the input variables
amenable to cause discrimination.
Another example is , where the authors propose a fair-by-design approach in order to develop
ML models that jointly have less bias and include as explanations human comprehensible rules. The
proposal is based in self-learning locally generative models that use only a small part of the whole
dataset available (weak supervision). It ﬁrst ﬁnds recursively relevant prototypes within the dataset, and
extracts the empirical distribution and density of the points around them. Then it generates rules in an
IF/THEN format that explain that a data point is classiﬁed within a speciﬁc category because it is similar
to some prototypes. The proposal then includes an algorithm that both generates explanations and reduces
bias, as it is demonstrated for the use case of recidivism using the Correctional Offender Management
Proﬁling for Alternative Sanctions (COMPAS) dataset . The same goal has been recently pursued in
 , showing that post-hoc XAI techniques can forge fairer explanations from truly unfair black-box
models. Finally, CERTIFAI (Counterfactual Explanations for Robustness, Transparency, Interpretability,
and Fairness of Artiﬁcial Intelligence models) uses a customized genetic algorithm to generate
counterfactuals that can help to see the robustness of a ML model, generate explanations, and examine
fairness (both at the individual level and at the group level) at the same time.
Strongly linked to the concept of fairness, much attention has been lately devoted to the concept of
data diversity, which essentially refers to the capability of an algorithmic model to ensure that all different
types of objects are represented in its output . Therefore, diversity can be thought to be an indicator
of the quality of a collection of items that, when taking the form of a model’s output, can quantify the
proneness of the model to produce diverse results rather than highly accurate predictions. Diversity comes
into play in human-centered applications with ethical restrictions that permeate to the AI modeling phase
 . Likewise, certain AI problems (such as content recommendation or information retrieval) also
aim at producing diverse recommendations rather than highly-scoring yet similar results . In
these scenarios, dissecting the internals of a black-box model via XAI techniques can help identifying the
capability of the model to maintain the input data diversity at its output. Learning strategies to endow a
model with diversity keeping capabilities could be complemented with XAI techniques in order to shed
transparency over the model internals, and assess the effectiveness of such strategies with respect to the
diversity of the data from which the model was trained. Conversely, XAI could help to discriminate which
parts of the model are compromising its overall ability to preserve diversity.
6.2.2. Accountability
Regarding accountability, the EC deﬁnes the following aspects to consider:
• Auditability: it includes the assessment of algorithms, data and design processes, but preserving the
intellectual property related to the AI systems. Performing the assessment by both internal and external
auditors, and making the reports available, could contribute to the trustworthiness of the technology.
When the AI system affects fundamental rights, including safety-critical applications, it should always
be audited by an external third party.
• Minimization and reporting of negative impacts: it consists of reporting actions or decisions that yield
a certain outcome by the system. It also comprises the assessment of those outcomes and how to
respond to them. To address that, the development of AI systems should also consider the identiﬁcation,
assessment, documentation and minimization of their potential negative impacts. In order to minimize
the potential negative impact, impact assessments should be carried out both prior to and during the
development, deployment and use of AI systems. It is also important to guarantee protection for anyone
who raises concerns about an AI system (e.g., whistle-blowers). All assessments must be proportionate
to the risk that the AI systems pose.
• Trade-offs: in case any tension arises due to the implementation of the above requirements, trade-offs
could be considered but only if they are ethically acceptable. Such trade-offs should be reasoned,
explicitly acknowledged and documented, and they must be evaluated in terms of their risk to ethical
principles. The decision maker must be accountable for the manner in which the appropriate trade-off
is being made, and the trade-off decided should be continually reviewed to ensure the appropriateness
of the decision. If there is no ethically acceptable trade-off, the development, deployment and use of
the AI system should not proceed in that form.
• Redress: it includes mechanisms that ensure an adequate redress for situations when unforeseen unjust
adverse impacts take place. Guaranteeing a redress for those non-predicted scenarios is a key to ensure
trust. Special attention should be paid to vulnerable persons or groups.
These aspects addressed by the EC highlight different connections of XAI with accountability. First,
XAI contributes to auditability as it can help explaining AI systems for different proﬁles, including
regulatory ones. Also, since there is a connection between fairness and XAI as stated before, XAI can
also contribute to the minimization and report of negative impacts.
6.3. Privacy and Data Fusion
The ever-growing number of information sources that nowadays coexist in almost all domains of
activity calls for data fusion approaches aimed at exploiting them simultaneously toward solving a learning
task. By merging heterogeneous information, data fusion has been proven to improve the performance of
ML models in many applications, such as industrial prognosis , cyber-physical social systems 
or the Internet of Things , among others. This section speculates with the potential of data fusion
techniques to enrich the explainability of ML models, and to compromise the privacy of the data from
which ML models are learned. To this end, we brieﬂy overview different data fusion paradigms, and later
analyze them from the perspective of data privacy. As we will later, despite its relevance in the context of
Responsible AI, the conﬂuence between XAI and data fusion is an uncharted research area in the current
research mainstream.
6.3.1. Basic Levels of Data Fusion
We depart from the different levels of data fusion that have been identiﬁed in comprehensive surveys
on the matter . In the context of this subsection, we will distinguish among fusion at
data level, fusion at model level and fusion at knowledge level. Furthermore, a parallel categorization can
be established depending on where such data is processed and fused, yielding centralized and distributed
methods for data fusion. In a centralized approach, nodes deliver their locally captured data to a centralized
processing system to merge them together. In contrast, in a distributed approach, each of the nodes merges
its locally captured information, eventually sharing the result of the local fusion with its counterparts.
Fusion through the information generation process has properties and peculiarities depending on
the level at which the fusion is performed. At the so-called data level, fusion deals with raw data. As
schematically shown in Figure 13, a fusion model at this stage receives raw data from different information
sources, and combines them to create a more coherent, compliant, robust or simply representative data
ﬂow. On the other hand, fusion at the model level aggregates models, each learned from a subset of the
data sets that were to be fused. Finally, at the knowledge level the fusion approach deals with knowledge in
the form of rules, ontologies or other knowledge representation techniques with the intention of merging
them to create new, better or more complete knowledge from what was originally provided. Structured
knowledge information is extracted from each data source and for every item in the data set using multiple
knowledge extractors (e.g. a reasoning engine operating on an open semantic database). All produced
information is then fused to further ensure the quality, correctness and manageability of the produced
knowledge about the items in the data set.
Other data fusion approaches exist beyonds the ones represented in Figure 13. As such, data-level
fusion can be performed either by a technique speciﬁcally devoted to this end (as depicted in Figure 13.b)
or, instead, performed along the learning process of the ML model (as done in e.g. DL models). Similarly,
model-level data fusion can be made by combining the decisions of different models (as done in tree
ensembles).
6.3.2. Emerging Data Fusion Approaches
In the next subsection we examine other data fusion approaches that have recently come into scene
due to their implications in terms of data privacy:
Aggregation
Client-server
: encrypted model
: model update
information (e.g.
Server side
Remote clients
gradients)
Wn: n-th worker node
R: reducer node
Joint optimization
Data Fusion technique
Model Fusion
Knowledge Fusion
: Predictions
: Knowledge Base
: Fused data
: i-th dataset
Figure 13: Diagrams showing different levels at which data fusion can be performed: (a) data level; (b) model level; (c) knowledge
level; (d) Big Data fusion; (e) Federated Learning and (f) Multiview Learning.
• In Big Data fusion (Figure 13.d), local models are learned on a split of the original data sources, each
submitted to a Worker node in charge of performing this learning process (Map task). Then, a Reduce
node (or several Reduce nodes, depending on the application) combines the outputs produced by each
Map task. Therefore, Big Data fusion can be conceived as a means to distribute the complexity of learning a ML model over a pool of Worker nodes, wherein the strategy to design how information/models
are fused together between the Map and the Reduce tasks is what deﬁnes the quality of the ﬁnally
generated outcome .
• By contrast, in Federated Learning , the computation of ML models is made on data
captured locally by remote client devices (Figure 13.e). Upon local model training, clients transmit
encrypted information about their learned knowledge to a central server, which can take the form of
layer-wise gradients (in the case of neural ML models) or any other model-dependent content alike. The
central server aggregates (fuses) the knowledge contributions received from all clients to yield a shared
model harnessing the collected information from the pool of clients. It is important to observe that no
client data is delivered to the central server, which elicits the privacy-preserving nature of Federated
Learning. Furthermore, computation is set closer to the collected data, which reduces the processing
latency and alleviates the computational burden of the central server.
• Finally, Multiview Learning constructs different views of the object as per the information
contained in the different data sources (Figure 13.f). These views can be produced from multiple
sources of information and/or different feature subsets . Multiview Learning devises strategies
to jointly optimize ML models learned from the aforementioned views to enhance the generalization
performance, specially in those applications with weak data supervision and hence, prone to model
overﬁtting. This joint optimization resorts to different algorithmic means, from co-training to coregularization .
6.3.3. Opportunities and Challenges in Privacy and Data Fusion under the Responsible AI Paradigm
AI systems, specially when dealing with multiple data sources, need to explicitly include privacy
considerations during the system’s life cycle. This is specially critical when working with personal data,
because respecting people’s right to privacy should always be addressed. The EC highlights that privacy
should also address data governance, covering the quality and integrity of the used data . It should
also include the deﬁnition of access protocols and the capability to process data in a way that ensures
privacy. The EC guide breaks down the privacy principle into three aspects:
• Privacy and data protection: they should be guaranteed in AI systems throughout its entire lifecycle. It
includes both information provided by users and information generated about those users derived from
their interactions with the system. Since digital information about a user could be used in a negative
way against them (discrimination due to sensitive features, unfair treatment...), it is crucial to ensure
proper usage of all the data collected.
• Quality and integrity of data: quality of data sets is fundamental to reach good performance with AI
systems that are fueled with data, like ML. However, sometimes the data collected contains socially
constructed biases, inaccuracies, errors and mistakes. This should be tackled before training any model
with the data collected. Additionally, the integrity of the data sets should be ensured.
• Access to data: if there is individual personal data, there should always be data protocols for data
governance. These protocols should indicate who may access data and under which circumstances.
The aforementioned examples from the EC shows how data fusion is directly intertwined with privacy
and with fairness, regardless of the technique employed for it.
Notwithstanding this explicit concern from regulatory bodies, loss of privacy has been compromised
by DL methods in scenarios where no data fusion is performed. For instance, a few images are enough
to threaten users’ privacy even in the presence of image obfuscation , and the model parameters of
a DNN can be exposed by simply performing input queries on the model . An approach to
explain loss of privacy is by using privacy loss and intent loss subjective scores. The former provides a
subjective measure of the severity of the privacy violation depending on the role of a face in the image,
while the latter captures the intent of the bystanders to appear in the picture. These kind of explanations
have motivated, for instance, secure matching cryptographic protocols for photographer and bystanders to
preserve privacy . We deﬁnite advocate for more efforts invested in this direction, namely,
in ensuring that XAI methods do not pose a threat in regards to the privacy of the data used for training
the ML model under target.
When data fusion enters the picture, different implications arise with the context of explainability
covered in this survey. To begin with, classical techniques for fusion at the data level only deal with data
and have no connection to the ML model, so they have little to do with explainability. However, the
advent of DL models has blurred the distinction between information fusion and predictive modeling. The
ﬁrst layers of DL architectures are in charge of learning high-level features from raw data that possess
relevance for the task at hand. This learning process can be thought to aim at solving a data level fusion
problem, yet in a directed learning fashion that makes the fusion process tightly coupled to the task to be
In this context, many techniques in the ﬁeld of XAI have been proposed to deal with the analysis of
correlation between features. This paves the way to explaining how data sources are actually fused through
the DL model, which can yield interesting insights on how the predictive task at hand induces correlations
among the data sources over the spatial and/or time domain. Ultimately, this gained information on the
fusion could not only improve the usability of the model as a result of its enhanced understanding by the
user, but could also help identifying other data sources of potential interest that could be incorporated to
the model, or even contribute to a more efﬁcient data fusion in other contexts.
Unfortunately, this previously mentioned concept of fusion at data level contemplates data under
certain constraints of known form and source origin. As presented in , the Big Data era presents
an environment in which these premises cannot be taken for granted, and methods to board Big Data
fusion (as that illustrated in Figure 13.d) have to be thought. Conversely, a concern with model fusion
context emerges in the possibility that XAI techniques could be explanatory enough to compromise the
conﬁdentiality of private data. This could eventually occur if sensitive information (e.g. ownership) could
be inferred from the explained fusion among protected and unprotected features.
When turning our prospects to data fusion at model level, we have already argued that the fusion of the
outputs of several transparent models (as in tree ensembles) could make the overall model opaque, thereby
making it necessary to resort to post-hoc explainability solutions. However, model fusion may entail other
drawbacks when endowed with powerful post-hoc XAI techniques. Let us imagine that relationships of
a model’s input features have been discovered by means of a post-hoc technique) and that one of those
features is hidden or unknown. Will it be possible to infer another model’s features if that previous feature
was known to be used in that model? Would this possibility uncover a problem as privacy breaches in
cases in which related protected input variables are not even shared in the ﬁrst place?
To get the example clearer, in a multiview perspective is utilized in which different single views
(representing the sources they attend to) models are fused. These models contain among others, cell-phone
data, transportation data, etc. which might introduce the problem that information that is not even shared
can be discovered through other sources that are actually shared. In the example above, what if instead of
features, a model shares with another a layer or part of its architecture as in Federated Learning? Would
this sharing make possible to infer information from that exchanged part of its model, to the extent of
allowing for the design of adversarial attacks with better success rate upon the antecedent model?
If focused at knowledge level fusion, a similar reasoning holds: XAI comprises techniques that extract
knowledge from ML model(s). This ability to explain models could have an impact on the necessity of
discovering new knowledge through the complex interactions formed within ML models. If so, XAI might
enrich knowledge fusion paradigms, bringing the possibility of discovering new knowledge extractors
of relevance for the task at hand. For this purpose, it is of paramount importance that the knowledge
extracted from a model by means of XAI techniques can be understood and extrapolated to the domain
in which knowledge extractors operate. The concept matches with ease with that of transfer learning
portrayed in . Although XAI is not contemplated in the surveyed processes of extracting knowledge
from models trained in certain feature spaces and distributions, to then be utilized in environments where
previous conditions do not hold, when deployed, XAI can pose a threat if the explanations given about the
model can be reversely engineered through the knowledge fusion paradigm to eventually compromise, for
instance, the differential privacy of the overall model.
The distinction between centralized and distributed data fusion also spurs further challenges in
regards to privacy and explainability. The centralized approach does not bring any further concerns
that those presented above. However, distributed fusion does arise new problems. Distributed fusion
might be applied for different reasons, mainly due to environmental constraints or due to security or
privacy issues. The latter context may indulge some dangers. Among other goals (e.g. computational
efﬁciency), model-level data fusion is performed in a distributed fashion to ensure that no actual data is
actually shared, but rather parts of an ML model trained on local data. This rationale lies at the heart
of Federated Learning, where models exchange locally learned information among nodes. Since data
do not leave the local device, only the transmission of model updates is required across distributed
devices. This lightens the training process for network-compromised settings and guarantees data privacy
 . Upon the use of post-hoc explainability techniques, a node could disguise sensitive information
about the local context in which the received ML model part was trained. In fact, it was shown that a
black-box model based on a DNN from which an input/output query interface is given can be used to
accurately predict every single hyperparameter value used for training, allowing for potential privacyrelated consequences . This relates to studies showing that blurring images does not
guarantee privacy preservation.
Data fusion, privacy and model explainability are concepts that have not been analysed together so far.
From the above discussion it is clear that there are unsolved concerns and caveats that demand further
study by the community in forthcoming times.
6.4. Implementing Responsible AI Principles in an Organization
While increasingly more organizations are publishing AI principles to declare that they care about
avoiding unintended negative consequences, there is much less experience on how to actually implement
the principles into an organization. Looking at several examples of principles declared by different
organizations , we can divide them into two groups:
• AI-speciﬁc principles that focus on aspects that are speciﬁc to AI, such as explainability, fairness and
human agency.
• End-to-end principles that cover all aspects involved in AI, including also privacy, security and safety.
The EC Guidelines for Trustworthy AI are an example of end-to-end principles , while those of
Telefonica (a large Spanish ICT company operating worldwide) are more AI-speciﬁc . For example,
safety and security are relevant for any connected IT system, and therefore also for AI systems. The
same holds for privacy, but it is probably true that privacy in the context of AI systems is even more
important than for general IT systems, due to the fact that ML models need huge amounts of data and
most importantly, because XAI tools and data fusion techniques pose new challenges to preserve the
privacy of protected records.
When it comes to implement the AI Principles into an organization, it is important to operationalize
the AI-speciﬁc parts and, at the same time, leverage the processes already existing for the more generic
principles. Indeed, in many organizations there already exist norms and procedures for privacy, security
and safety. Implementing AI principles requires a methodology such as that presented in that breaks
down the process into different parts. The ingredients of such a methodology should include, at least:
• AI principles (already discussed earlier), which set the values and boundaries.
• Awareness and training about the potential issues, both technical and non-technical.
• A questionnaire that forces people to think about certain impacts of the AI system (impact explanation).
This questionnaire should give concrete guidance on what to do if certain undesired impacts are
• Tools that help answering some of the questions, and help mitigating any problems identiﬁed. XAI
tools and fairness tools fall in this category, as well as other recent proposals such as model cards .
• A governance model assigning responsibilities and accountabilities (responsibility explanation). There
are two philosophies for governance: 1) based on committees that review and approve AI developments,
and 2) based on the self-responsibility of the employees. While both are possible, given the fact
that agility is key for being successful in the digital world, it seems wiser to focus on awareness and
employee responsibility, and only use committees when there are speciﬁc, but important issues.
From the above elaborations, it is clear that the implementation of Responsible AI principles in
companies should balance between two requirements: 1) major cultural and organizational changes
needed to enforce such principles over processes endowed with AI functionalities; and 2) the feasibility
and compliance of the implementation of such principles with the IT assets, policies and resources already
available at the company. It is in the gradual process of rising corporate awareness around the principles
and values of Responsible AI where we envision that XAI will make its place and create huge impact.
7. Conclusions and Outlook
This overview has revolved around eXplainable Artiﬁcial Intelligence (XAI), which has been identiﬁed
in recent times as an utmost need for the adoption of ML methods in real-life applications. Our study
has elaborated on this topic by ﬁrst clarifying different concepts underlying model explainability, as well
as by showing the diverse purposes that motivate the search for more interpretable ML methods. These
conceptual remarks have served as a solid baseline for a systematic review of recent literature dealing with
explainability, which has been approached from two different perspectives: 1) ML models that feature
some degree of transparency, thereby interpretable to an extent by themselves; and 2) post-hoc XAI
techniques devised to make ML models more interpretable. This literature analysis has yielded a global
taxonomy of different proposals reported by the community, classifying them under uniform criteria.
Given the prevalence of contributions dealing with the explainability of Deep Learning models, we have
inspected in depth the literature dealing with this family of models, giving rise to an alternative taxonomy
that connects more closely with the speciﬁc domains in which explainability can be realized for Deep
Learning models.
We have moved our discussions beyond what has been made so far in the XAI realm toward the concept
of Responsible AI, a paradigm that imposes a series of AI principles to be met when implementing AI
models in practice, including fairness, transparency, and privacy. We have also discussed the implications
of adopting XAI techniques in the context of data fusion, unveiling the potential of XAI to compromise
the privacy of protected data involved in the fusion process. Implications of XAI in fairness have also
been discussed in detail. This vision of XAI as a core concept to ensure the aforementioned principles for
Responsible AI is summarized graphically in Figure 14.
Interpretability
Performance
and Metrics
Explainability
Adversarial
Explanation
& Critical
guided Data
Implementation
& Guidelines
Confidence
XAI & Data
Accountability
Transparency
Security &
Responsible
Figure 14: Summary of XAI challenges discussed in this overview and its impact on the principles for Responsible AI.
Our reﬂections about the future of XAI, conveyed in the discussions held throughout this work,
agree on the compelling need for a proper understanding of the potentiality and caveats opened up by
XAI techniques. It is our vision that model interpretability must be addressed jointly with requirements
and constraints related to data privacy, model conﬁdentiality, fairness and accountability. A responsible
implementation and use of AI methods in organizations and institutions worldwide will be only guaranteed
if all these AI principles are studied jointly.
Acknowledgments
Alejandro Barredo-Arrieta, Javier Del Ser and Sergio Gil-Lopez would like to thank the Basque
Government for the funding support received through the EMAITEK and ELKARTEK programs. Javier
Del Ser also acknowledges funding support from the Consolidated Research Group MATHMODE
(IT1294-19) granted by the Department of Education of the Basque Government. Siham Tabik, Salvador
Garcia, Daniel Molina and Francisco Herrera would like to thank the Spanish Government for its funding
support (SMART-DaSCI project, TIN2017-89517-P), as well as the BBVA Foundation through its Ayudas
Fundaci´on BBVA a Equipos de Investigaci´on Cient´ıﬁca 2018 call (DeepSCOP project). This work was
also funded in part by the European Union’s Horizon 2020 research and innovation programme AI4EU
under grant agreement 825619. We also thank Chris Olah, Alexander Mordvintsev and Ludwig Schubert
for borrowing images for illustration purposes. Part of this overview is inspired by a preliminary work of
the concept of Responsible AI: R. Benjamins, A. Barbado, D. Sierra, “Responsible AI by Design”, to
appear in the Proceedings of the Human-Centered AI: Trustworthiness of AI Models & Data (HAI) track
at AAAI Fall Symposium, DC, November 7-9, 2019 .