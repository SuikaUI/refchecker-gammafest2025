SummaRuNNer: A Recurrent Neural Network Based
Sequence Model for Extractive Summarization of Documents
Ramesh Nallapati, Feifei Zhai,∗Bowen Zhou
 , , 
IBM Watson
1011 Kitchawan Road, Yorktown Heights, NY 10598
We present SummaRuNNer, a Recurrent Neural Network
(RNN) based sequence model for extractive summarization
of documents and show that it achieves performance better
than or comparable to state-of-the-art. Our model has the additional advantage of being very interpretable, since it allows
visualization of its predictions broken up by abstract features
such as information content, salience and novelty. Another
novel contribution of our work is abstractive training of our
extractive model that can train on human generated reference
summaries alone, eliminating the need for sentence-level extractive labels.
Introduction
Document summarization is an important problem that has
many applications in information retrieval and natural language understanding. Summarization techniques are mainly
classiﬁed into two categories: extractive and abstractive. Extractive methods aim to select salient snippets, sentences or
passages from documents, while abstractive summarization
techniques aim to concisely paraphrase the information content in the documents.
A vast majority of the literature on document summarization is devoted to extractive summarization. Traditional
methods for extractive summarization can be broadly classi-
ﬁed into greedy approaches ), graph based approaches ) and constraint optimization based approaches ).
Recently, neural network based approaches have become popular for extractive summarization. For example,
 employed the recursive autoencoder
 to summarize documents, producing
best performance on the Opinosis dataset . applied Convolutional
Neural Networks (CNN) to project sentences to continuous
vector space and then select sentences by minimizing the
cost based on their ‘prestige’ and ‘diverseness’, on the task
of multi-document extractive summarization. Another related work is that of , who address the problem of query-focused multi-document summarization using
∗Work was done while the author was an employee at IBM.
Copyright c⃝2017, Association for the Advancement of Artiﬁcial
Intelligence (www.aaai.org). All rights reserved.
CNNs, where they use weighted-sum pooling over sentence
representations to represent documents. The weights are
learned from attention over sentence representations based
on the query.
Recently, with the emergence of strong generative neural
models for text , abstractive techniques are also becoming increasingly popular. For
example, proposed an attentional feed-forward network for abstractive summarization of sentences into short headlines. Further developing on
their work, propose a set
of recurrent neural network based encoder-decoder models
that focus on various aspects of summarization like handling
out-of-vocabulary words and modeling syntactic features of
words in the sentence. In a follow-up work , they also propose abstractive techniques for summarization of large documents into multi-sentence summaries,
using the CNN/DailyMail corpus1.
Despite the emergence of abstractive techniques, extractive techniques are still attractive as they are less complex,
less expensive, and generate grammatically and semantically correct summaries most of the time. In a very recent work, Cheng and Lapata proposed an attentional
encoder-decoder for extractive single-document summarization and applied to the CNN/Daily Mail corpus.
Like , our work also focuses
only on sentential extractive summarization of single documents using neural networks. We use the same corpus used
by and for
our experiments, since its large size makes it attractive for
training deep neural networks such as ours, with several
thousands of parameters.
Our main contributions are as follows: (a) we propose
SummaRuNNer, a simple recurrent network based sequence
classiﬁer that outperforms or matches state-of-the-art models for extractive summarization; (b) the simple formulation
of our model facilitates interpretable visualization of its decisions; and (c) we present a novel training mechanism that
allows our extractive model to be trained end-to-end using
abstractive summaries.
1 
Proceedings of the Thirty-First AAAI Conference on Artificial Intelligence (AAAI-17)
SummaRuNNer
In this work, we treat extractive summarization as a sequence classiﬁcation problem wherein, each sentence is visited sequentially in the original document order and a binary decision is made (taking into account previous decisions made) in terms of whether or not it should be included
in the summary. We use a GRU based Recurrent Neural Network as the basic building block of our
sequence classiﬁer. A GRU-RNN is a recurrent network with
two gates, u called the update gate and r , the reset gate, and
can be described by the following equations:
σ(Wuxxj + Wuhhj−1 + bu)
σ(Wrxxj + Wrhhj−1 + br)
tanh(Whxxj + Whh(rj ⊙hj−1) + bh) (3)
(1 −uj) ⊙h′
j + uj ⊙hj−1
where the W’s and b’s are the parameters of the GRU-RNN
and hj is the real-valued hidden-state vector at timestep j
and xj is the corresponding input vector, and ⊙represents
the Hadamard product.
Our model consists of a two-layer bi-directional GRU-
RNN, whose graphical representation is presented in Figure
1. The ﬁrst layer of the RNN runs at the word level, and
computes hidden state representations at each word position
sequentially, based on the current word embeddings and the
previous hidden state. We also use another RNN at the word
level that runs backwards from the last word to the ﬁrst, and
we refer to the pair of forward and backward RNNs as a bidirectional RNN. The model also consists of a second layer
of bi-directional RNN that runs at the sentence-level and accepts the average-pooled, concatenated hidden states of the
bi-directional word-level RNNs as input. The hidden states
of the second layer RNN encode the representations of the
sentences in the document. The representation of the entire
document is then modeled as a non-linear transformation of
the average pooling of the concatenated hidden states of the
bi-directional sentence-level RNN, as shown below.
d = tanh(Wd
j are the hidden states corresponding to the
jth sentence of the forward and backward sentence-level
RNNs respectively, Nd is the number of sentences in the
document and ‘[]’ represents vector concatenation.
For classiﬁcation, each sentence is revisited sequentially
in a second pass, where a logistic layer makes a binary decision as to whether that sentence belongs to the summary, as
shown below.
P(yj = 1|hj, sj, d) = σ(Wchj
#(content)
#(salience)
j Wr tanh(sj)
#(novelty)
#(abs. pos. imp.)
#(rel. pos. imp.)
#(bias term)
Figure 1: SummaRuNNer: A two-layer RNN based sequence classiﬁer: the bottom layer operates at word level
within each sentence, while the top layer runs over sentences. Double-pointed arrows indicate a bi-directional
RNN. The top layer with 1’s and 0’s is the sigmoid activation based classiﬁcation layer that decides whether or not
each sentence belongs to the summary. The decision at each
sentence depends on the content richness of the sentence, its
salience with respect to the document, its novelty with respect to the accumulated summary representation and other
positional features.
where yj is a binary variable indicating whether the jth
sentence is part of the summary, hj, the representation of
the sentence is given by a non-linear transformation of the
concatenated hidden states at the jth time step of the bidirectional sentence-level RNN, and sj is the dynamic representation of the summary at the jth sentence position, given
hiP(yi = 1|hi, si, d).
In other words, the summary representation is simply a running weighted summation of all the sentence-level hidden
states visited till sentence j, where the weights are given by
their respective probabilities of summary membership.
In Eqn. (6), the term Wchj represents the information
content of the jth sentence, hT
j Wsd denotes the salience of
the sentence with respect to the document, hT
j Wr tanh(sj)
captures the redundancy of the sentence with respect to the
current state of the summary2, while the next two terms
model the notion of the importance of the absolute and relative position of the sentence with respect to the document.3
We consider pa and pr, the absolute and relative positional
embeddings respectively, as model parameters as well.
2We squash the summary representation using the tanh operation so that the magnitude of summary remains the same for all
time-steps.
3The absolute position denotes the actual sentence number,
whereas the relative position refers to a quantized representation
that divides each document into a ﬁxed number of segments and
computes the segment ID of a given sentence.
We minimize the negative log-likelihood of the observed
labels at training time.
j log P(yd
j ) log(1 −P(yd
where x is the document representation and y is the vector
of its binary summary labels. At test time, the model emits
probability of summary membership P(yj) at each sentence
sequentially, which is used as the model’s soft prediction of
the extractive summary.
Extractive Training
In order to train our extractive model, we need ground truth
in the form of sentence-level binary labels for each document, representing their membership in the summary. However, most summarization corpora only contain human written abstractive summaries as ground truth. To solve this
problem, we use an unsupervised approach to convert the
abstractive summaries to extractive labels. Our approach is
based on the idea that the selected sentences from the document should be the ones that maximize the Rouge score
with respect to gold summaries. Since it is computationally
expensive to ﬁnd a globally optimal subset of sentences that
maximizes the Rouge score, we employ a greedy approach,
where we add one sentence at a time incrementally to the
summary, such that the Rouge score of the current set of selected sentences is maximized with respect to the entire gold
summary . We stop when none of the remaining candidate
sentences improves the Rouge score upon addition to the
current summary set. We return this subset of sentences as
the extractive ground-truth, which is used to train our RNN
based sequence classiﬁer.
Abstractive Training
In this section, we propose a novel training technique to train
SummaRuNNer abstractively, thus eliminating the need
to generate approximate extractive labels. To train SummaRuNNer using reference summaries, we couple it with
an RNN decoder that models the generation of abstractive
summaries at training time only. The RNN decoder uses the
summary representation at the last time-step of SummaRuN-
Ner as context, which modiﬁes Eqs. 1 through 3 as follows:
uhhk−1 + W′
ucs−1 + b′
rhhk−1 + W′
rcs−1 + b′
hh(rk ⊙hk−1) +
hcs−1 + b′
where s−1 is the summary representation as computed at
the last sentence of the sentence-level bidirectional RNN of
SummaRuNNer as shown in Eq. 7. The parameters of the
decoder are distinguished from those of SummaRuNNer using the ‘prime’ notation, and the time-steps of the decoder
use index k to distinguish word positions in the summary
from sentence indices j in the original document. For each
time-step of the decoder, the embedding of the word from
the previous time-step is treated as its input xk.
Further, the decoder is equipped with a soft-max layer to
emit a word at each time-step. The emission at each timestep is determined by a feed-forward layer f followed by a
softmax layer that assigns pk, probabilities over the entire
vocabulary at each time-step, as shown below.
fcs−1 + b′
softmax(W′
Instead of optimizing the log-likelihood of the extractive
ground truth as shown in Eq. 8, we minimize the negative
log-likelihood of the words in the reference summary as follows.
l(W, b, W′, b′) = −
log(Pv(wk))
where Ns is the number of words in the reference summary.
At test time, we uncouple the decoder from SummaRuN-
Ner and emit only the sentence-level extractive probabilities
p(yj) of Eq. 6.
Intuitively, since the summary representation s−1 acts as
the only information channel between the SummaRuNNer
model and the decoder, maximizing the probability of abstractive summary words as computed by the decoder will
require the model to learn a good summary representation
which in turn depends on accurate estimates of extractive
probabilities p(yj).
Related Work
Treating document summarization as a sequence classiﬁcation model has been considered by earlier researchers. For
example, used Conditional Random Fields
to binary-classify sentences sequentially. Our approach is
different from theirs in the sense that we use RNNs in our
model that do not require any handcrafted features for representing sentences and documents.
Since the sequence classiﬁer requires sentence-level summary membership labels to train on, we used a simple greedy
approach to convert the abstractive summaries to extractive
labels. Similar approaches have been employed by other researchers such as .
Further, recently propose an ILP based approach to solve this problem optimally.
Most single-document summarization datasets available
for research such as DUC corpora are not large enough
to train deep learning models. Two recent papers and ) solve this
problem by proposing a new corpus based on news stories
from CNN and Daily Mail that consist of around 280,000
documents and human generated summaries. Of these, the
work of is the closest to our work
since they also employ an extractive approach for summarization. Their model is based on an encoder-decoder approach where the encoder learns the representation of sentences and documents while the decoder classiﬁes each sentence based on encoder’s representations using an attention
mechanism. Our model, when extractively trained, employs
a single sequence model with no decoder, and therefore may
have fewer parameters. Our abstractively trained model has
a decoder too, but it is different from that of since our decoder is used to model the likelihood of abstractive gold summaries at training time, so as
to eliminate the need for extractive labels. Their model, on
the other hand, requires extractive labels even with the decoder. In fact, unlike our unsupervised greedy approach to
convert abstractive summaries to extractive labels, chose to train a separate supervised classiﬁer using manually created labels on a subset of the data.
This may yield more accurate gold extractive labels, but incurs additional annotation costs.
The work of also uses an encoderdecoder approach, but is fully abstractive in the sense that
it generates its own summaries at test time. Our abstractive trainer comes close to their work, but only generates
sentence-extraction probabilities at test time. We include
comparison numbers with this work too, in the following
Experiments and Results
For our experiments, we used the CNN/DailyMail corpus
originally constructed by for the task
of passage-based question answering, and re-purposed for
the task of document summarization as proposed in for extractive summarization and for abstractive summarization. In order
to make a fair comparison with the former, we left out the
CNN subset of the corpus, as done by them. To compare
with the latter, we used the joint CNN/Daily Mail corpora.
Overall, we have 196,557 training documents, 12,147 validation documents and 10,396 test documents from the Daily
Mail corpus. If we also include the CNN subset, we have
286,722 training documents, 13,362 validation documents
and 11,480 test documents. On average, there are about 28
sentences per document in the training set, and an average of
3-4 sentences in the reference summaries. The average word
count per document in the training set is 802.
We also used the DUC 2002 single-document summarization dataset4 consisting of 567 documents as an additional
out-of-domain test set to evaluate our models.
Evaluation
In our experiments below, we evaluate the performance of
SummaRuNNer using different variants of the Rouge metric
5 computed with respect to the gold summaries. To compare
with on the Daily Mail corpus, we
use limited length Rouge recall and 75 bytes and 275 bytes
as reported by them. To compare with 
on the CNN/Daily Mail corpus, we use the same full-length
Rouge F1 metric used by the authors. On DUC 2002 corpus,
following the ofﬁcial guidelines, we use the limited length
4 
5 
Rouge recall metric at 75 words. We report the scores from
Rouge-1, Rouge-2 and Rouge-L, which are computed using
the matches of unigrams, bigrams and longest common subsequences respectively, with the ground truth summaries.
On all datasets, we use Lead-3 model, which simply produces the leading three sentences of the document as the
summary as a baseline. On the Daily Mail and DUC 2002
corpora, we also report performance of LReg, a feature-rich
logistic classiﬁer used as a baseline by . On DUC 2002 corpus, we report several baselines
such as Integer Linear Programming based approach , and graph based approaches such as
TGRAPH and URANK
 which achieve very high performance on this
corpus. In addition, we also compare with the state-of-the
art deep learning models from and
 .
SummaRuNNer Settings
We used 100-dimensional word2vec 
embeddings trained on the CNN/Daily Mail corpus as our
embedding initialization. We limited the vocabulary size
to 150K and the maximum number of sentences per document to 100, and the maximum sentence length to 50
words, to speed up computation. We ﬁxed the model hidden state size at 200. We used a batch size of 64 at training time, and adadelta to train our model. We
employed gradient clipping to regularize our model and an
early stopping criterion based on validation cost. We trained
SummaRuNNer both extractively as well as abstractively.
When the model is abstractively trained, we denote it as
SummaRuNNer-abs in the results.
At test time, picking all sentences with P(y = 1) ≥0.5
may not be an optimal strategy since the training data is very
imbalanced in terms of summary-membership of sentences.
Instead, we pick sentences sorted by the predicted probabilites until we exceed the length limit when limited-length
Rouge is used for evaluation. When full-length F1 is used
as the metric, we ﬁxed the number of top sentences to be
selected based on the validation set.
Results on Daily Mail corpus
Table 1 shows the performance comparison of SummaRuN-
Ner with state-of-the-art model of 
and other baselines on the DailyMail corpus using Rouge
recall with summary length restricted to 75 bytes. While the
abstractively trained SummaRuNNer performs on par with
the state-of-the-art model, the extractively trained model signiﬁcantly improves over their model.
In Table 2, we report the performance of our model with
respect to Rouge recall at 275 bytes of summary length.
In this case, our abstractively trained model underperforms
the extractive model of while the
extractively trained model is statistically indistinguishable
from their model. This shows that the SummaRuNNer is better at picking the best sentence for summarization than the
subsequent ones.
Figure 2: Visualization of SummaRuNNer output on a representative document. Each row is a sentence in the document, while
the shading-color intensity is proportional to its probability of being in the summary, as estimated by the RNN-based sequence
classiﬁer. In the columns are the normalized scores from each of the abstract features in Eqn. (6) as well as the ﬁnal prediction
probability (last column). Sentence 2 is estimated to be the most salient, while the longest one, sentence 4, is considered the
most content-rich, and not surprisingly, the ﬁrst sentence the most novel. The third sentence gets the best position based score.
Cheng et al ’16
SummaRuNNer-abs
SummaRuNNer
Table 1: Performance of various models on the entire Daily
Mail test set using the limited length recall variants of
Rouge with respect to the abstractive ground truth at 75
bytes. Entries with asterisk are statistically signiﬁcant using
95% conﬁdence interval with respect to the nearest model,
as estimated by the Rouge script.
One potential reason SummaRuNNer does not consistently outperform the extractive model of is the additional supervised training they used to create sentence-level extractive labels to train their model. Our
model instead uses an unsupervised greedy approximation
to create extractive labels from abstractive summaries, and
as a result, may be more noisy than their ground truth.
We also notice that the abstractively trained SummaRuN-
Ner underperforms its extractive counterpart. Abstractive
training is more difﬁcult since the sequence classiﬁer is
trained implicitly through the decoder which in turn depends
only on the summary representation. In the future, we will
investigate better design and training mechanism for the abstractive version.
Results on CNN/Daily Mail corpus
We also report the performance of SummaRuNNer on the
joint CNN/Daily Mail corpus. The only other work that reports performance on this dataset is the abstractive encoderdecoder based model of , in which
Cheng et al ’16
SummaRuNNer-abs
SummaRuNNer
Table 2: Performance of various models on the entire Daily
Mail test set using the limited length recall variants of
Rouge at 275 bytes. SummaRuNNer is statistically indistinguishable from the model of at
95% C.I. on Rouge-1 and Rouge-2.
they use full-length F1 as the metric since neural abstractive approaches can learn when to stop generating words in
the summary. In order to do a fair comparison with their
work, we use the same metric as them. On this dataset, SummaRuNNer signiﬁcantly outperforms their model as shown
in Table 3. The superior performance of our model is not entirely surprising since abstractive summarization is a much
harder problem, but the table serves to quantify the current performance gap between extractive and abstractive approaches to summarization. The results also demonstrate the
difﬁculty of using the F1 metric for extractive summarization since SummaRuNNer, with its top three sentences with
highest prediction probability as the summary, errs on the
side of high recall at the expense of precision. Dynamically
adjusting the summary length based on predicted probability
distribution may help balance precision and recall and may
further boost F1 performance, but we have not experimented
with it in this work.
 
SummaRuNNer-abs
SummaRuNNer
Table 3: Performance comparison of abstractive and extractive models on the entire CNN/Daily Mail test set using fulllength F1 variants of Rouge. SummaRuNNer is able to signiﬁcantly outperform the abstractive state-of-the-art as well
as the Lead-3 baseline (on Rouge-1 and Rouge-2).
Cheng et al ’16
SummaRuNNer-abs
SummaRuNNer
43.03 ±0.8
Table 4: Performance of various models on the DUC 2002
set using the limited length recall variants of Rouge at 75
words. SummaRuNNer is statistically within the margin of
error at 95% C.I. with respect to ,
but both are lower than state-of-the-art results.
Results on the Out-of-Domain DUC 2002
We also evaluated the models trained on the DailyMail corpus on the out-of-domain DUC 2002 set as shown in Table 4.
SummaRuNNer is again statistically on par with the model
of . However, both models perform
worse than graph-based TGRAPH and URANK algorithms, which
are the state-of-the-art models on this corpus. Deep learning
based supervised models such as SummaRuNNer and that of
 perform very well on the domain
they are trained on, but may suffer from domain adaptation
issues when tested on a different corpus such as DUC 2002.
Graph based unsupervised approaches, on the other hand,
may be more robust to domain variations.
Qualitative Analysis
In addition to being a state-of-the-art performer, SummaRuNNer has the additional advantage of being very interpretable. The clearly separated terms in the classiﬁcation
layer (see Eqn. 6) allow us to tease out various factors responsible for the classiﬁcation of each sentence. This is illustrated in Figure 2, where we display a representative document from our validation set along with normalized scores
from each abstract feature responsible for its ﬁnal classiﬁcation. Such visualization is especially useful in explaining to
the end-user the decisions made by the system.
We also display a couple of example documents from
the Daily Mail and DUC corpora highlighting the sentences
chosen by SummaRuNNer and comparing them with the
gold summary in Table 5. The examples demonstrate quali-
Document: @entity0 have an interest in @entity3 defender @entity2 but are unlikely to make a move until january . the 00 year - old @entity6 captain has yet to open talks over a new
contract at @entity3 and his current deal runs out in 0000 .
@entity3 defender @entity2 could be targeted by @entity0 in the
january transfer window @entity0 like @entity2 but do n’t expect
@entity3 to sell yet they know he will be free to talk to foreign clubs
from january . @entity12 will make a 0million offer for @entity3
goalkeeper @entity14 this summer . the 00 - year - old is poised
to leave @entity16 and wants to play for a @entity18 contender .
@entity12 are set to make a 0million bid for @entity2 ’s @entity3 team - mate @entity14 in the summer
Gold Summary: @entity2 ’s contract at @entity3 expires at the end
of next season . 00 - year - old has yet to open talks over a new deal
at @entity16 . @entity14 is poised to leave @entity3 at the end of
the season
Document: today , the foreign ministry said that control operations carried out by the corvette spiro against a korean-ﬂagged
as received ship ﬁshing illegally in argentine waters were carried out “ in accordance with international law and in coordination with the foreign ministry ” . the foreign ministry thus approved the intervention by the argentine corvette when it discovered
the korean ship chin yuan hsing violating argentine jurisdictional
waters on 00 may . ... the korean ship , which had been ﬁshing
illegally in argentine waters , was sunk by its own crew after
failing to answer to the argentine ship ’s warnings . the crew was
transferred to the chin chuan hsing , which was sailing nearby and
approached to rescue the crew of the sinking ship .....
Gold Summary: the korean-ﬂagged ﬁshing vessel chin yuan hsing was scuttled in waters off argentina on 00 may 0000 . adverse
weather conditions prevailed when the argentine corvette spiro spotted the korean ship ﬁshing illegally in restricted argentine waters .
the korean vessel did not respond to the corvette ’s warning . instead
, the korean crew sank their ship , and transferred to another korean
ship sailing nearby . in accordance with a uk-argentine agreement ,
the argentine navy turned the surveillance of the second korean vessel over to the british when it approached within 00 nautical miles
of the malvinas ( falkland ) islands .
Table 5: Example documents and gold summaries from
Daily Mail (top) and DUC 2002 (bottom) corpora. The sentences chosen by SummaRuNNer for extractive summarization are highlighted in bold.
tatively that SummaRuNNer performs a reasonably good job
in identifying the key points of the document.
Conclusion
In this work, we propose a very interpretable neural sequence model for extractive document summarization that
allows intuitive visualization, and show that it is better performing than or is comparable to the state-of-the-art deep
learning models.
We also propose a novel abstractive training mechanism
to eliminate the need for extractive labels at training time,
but this approach is still a couple of Rouge points below
our extractive training on most datasets. We plan to further
explore combining extractive and abstractive approaches as
part of our future work. One simple approach could be
to pre-train the extractive model using abstractive training.
Further, we plan to construct a joint extractive-abstractive
model where the predictions of our extractive component
form stochastic intermediate units to be consumed by the
abstractive component.