Variational Adversarial Active Learning
Samarth Sinha*
University of Toronto
 
Sayna Ebrahimi*
UC Berkeley
 
Trevor Darrell
UC Berkeley
 
Active learning aims to develop label-efﬁcient algorithms by sampling the most representative queries to be
labeled by an oracle.
We describe a pool-based semisupervised active learning algorithm that implicitly learns
this sampling mechanism in an adversarial manner. Unlike conventional active learning algorithms, our approach
is task agnostic, i.e., it does not depend on the performance
of the task for which we are trying to acquire labeled data.
Our method learns a latent space using a variational autoencoder (VAE) and an adversarial network trained to discriminate between unlabeled and labeled data. The minimax game between the VAE and the adversarial network is
played such that while the VAE tries to trick the adversarial
network into predicting that all data points are from the labeled pool, the adversarial network learns how to discriminate between dissimilarities in the latent space. We extensively evaluate our method on various image classiﬁcation
and semantic segmentation benchmark datasets and establish a new state of the art on CIFAR10/100, Caltech-256,
ImageNet, Cityscapes, and BDD100K. Our results demonstrate that our adversarial approach learns an effective low
dimensional latent space in large-scale settings and provides for a computationally efﬁcient sampling method.1
1. Introduction
The recent success of learning-based computer vision
methods relies heavily on abundant annotated training examples, which may be prohibitively costly to label or impossible to obtain at large scale . In order to mitigate
this drawback, active learning algorithms aim to incrementally select samples for annotation that result in high
classiﬁcation performance with low labeling cost. Active
learning has been shown to require relatively fewer training
instances when applied to computer vision tasks such as im-
*Authors contributed equally, listed alphabetically.
1Our code and data are available at 
sinhasam/vaal.
latent space
unlabeled?
unlabeled set
labeled set
Discriminator
Task learner
Figure 1. Our model (VAAL) learns the distribution of labeled data
in a latent space using a VAE optimized using both reconstruction
and adversarial losses. A binary adversarial classiﬁer (discriminator) predicts unlabeled examples and sends them to an oracle
for annotations. The VAE is trained to fool the adversarial network to believe that all the examples are from the labeled data
while the discriminator is trained to differentiate labeled from unlabeled samples. Sample selection is entirely separate from the
main-stream task for which we are labeling data inputs, making
our method to be task-agnostic
age classiﬁcation and semantic segmentation
 .
This paper introduces a pool-based active learning strategy which learns a low dimensional latent space from labeled and unlabeled data using Variational Autoencoders
(VAEs). VAEs have been well-studied and valued for both
their generative properties as well as their ability to learn
rich latent spaces. Our method, Variational Adversarial Active Learning (VAAL), selects instances for labeling from
the unlabeled pool that are sufﬁciently different in the latent
space learned by the VAE to maximize the performance of
the representation learned on the newly labeled data. Sample selection in our method is performed by an adversarial
network which classiﬁes which pool the instances belong to
(labeled or unlabeled) and does not depend on the task or
tasks for which are trying to collect labels.
Our VAE learns a latent representation in which the sets
of labeled and unlabeled data are mapped into a common
 
embedding. We use an adversarial network in this space
to correctly classify one from another. The VAE and the
discriminator are framed as a two-player mini-max game,
similar to GANs such that the VAE is trained to learn a
feature space to trick the adversarial network into predicting
that all datapoints, from both the labeled and unlabeled sets,
are from the labeled pool while the discriminator network
learns how to discriminate between them. The strategy follows the intuition that once the active learner is trained, the
probability associated with discriminator’s predictions effectively estimates how representative each sample is from
the pool that it has been deemed to be from. Therefore, instead of explicitly measuring uncertainty on the main task,
we aim to choose points that would yield high uncertainty
and thus are samples that are not well represented in the
labeled set. We additionally consider oracles with different levels of labeling noise and demonstrate the robustness
of our method to such noisy labels. In our experiments,
we demonstrate superior performance on a variety of large
scale image classiﬁcation and segmentation datasets, and
outperform current state of the art methods both in performance and computational cost.
2. Related Work
Active learning: Current approaches can be categorized as
query-acquiring (pool-based) or query-synthesizing methods. Query-synthesizing approaches use generative models
to generate informative samples whereas poolbased algorithms use different sampling strategies to determine how to select the most informative samples. Since our
work lies in the latter line of research, we will mainly focus
on previous work in this direction.
Pool-based methods can be grouped into three major
categories as follows: uncertainty-based methods , representation-based models , and their combination .
Pool-based methods have been theoretically proven to be effective and achieve better performance
than the random sampling of points .
Sampling strategies in pool-based algorithms have been built
upon several methods, which are surveyed in , such
as information-theoretic methods , ensembles methods and uncertainty heuristics such as distance
to the decision boundary and conditional entropy
 . Uncertainty-based pool-based models are proposed
in both Bayesian and non-Bayesian frameworks. In
the realm of Bayesian frameworks, probabilistic models
such as Gaussian processes or Bayesian neural networks are used to estimate uncertainty. Gal & Gharamani , also showed the relationship between uncertainty and dropout to estimate uncertainty in prediction in
neural networks and applied it for active learning in small
image datasets using shallow and deep neural
In non-Bayesian classical active learning approaches, uncertainty heuristics such as distance from the
decision boundary, highest entropy, and expected risk minimization have been widely investigated . However, it was shown in that such classical techniques
do not scale well to deep neural networks and large image
datasets. Instead, they proposed to use Core-sets, where
they minimize the Euclidean distance between the sampled
points and the points that were not sampled in the feature
space of the trained model . Using an ensemble of models to represent uncertainty was proposed by , but
 showed that using ensembles does not always yield
high diversity in predictions which results in sampling redundant instances.
Representation-based methods rely on selecting few examples by increasing diversity in a given batch . The
Core-set technique was shown to be an effective representation learning method for large scale image classiﬁcation
tasks and was theoretically proven to work best when
the number of classes is small. However, as the number
of classes grows, it deteriorates in performance. Moreover,
for high-dimensional data, using distance-based representation methods, like Core-set, appears to be ineffective because in high-dimensions p-norms suffer from the curse of
dimensionality which is referred to as the distance concentration phenomenon in the computational learning literature
 . We overcome this limitation by utilizing VAEs which
have been shown to be effective in unsupervised and semisupervised representation learning of high dimensional data
Methods that aim to combine uncertainty and representativeness use a two-step process to select the points with
high uncertainty as of the most representative points in a
batch. A hybrid framework combining uncertainty using
conditional entropy and representation learning using information density was proposed in for classiﬁcation tasks.
A weakly supervised learning strategy was introduced in
 that trains the model with pseudo labels obtained for
instances with high conﬁdence in predictions. However, for
a ﬁxed performance goal, they often need to sample more
instances per batch compared to other methods. Furthermore, in it was shown that having the representation
step may not be necessary followed by suggesting an ensemble method that outperformed competitive approaches
such as which uses uncertainty together with Core-sets.
While we show that our model outperforms both and
 , we argue that VAAL achieves this by learning the representation and uncertainty together such that they act in
favor of each other while being independent from the mainstream task, resulting in better active learning performance.
Variational autoencoders: Autoencoders have long been
used to effectively learn a feature space and representation
 . A Variational AutoEncoder is an example of a
latent variable model that follows an encoder-decoder architecture of classical autoencoders which places a prior distribution on the feature space distribution and uses an Expected Lower Bound to optimize the learned posterior. Adversarial autoencoders are a family of autoencoders which
minimize the adversarial loss in the latent space between
a sample from the prior and the posterior distribution .
Prior work has investigated uncertainty modeling using a
VAE for sequence generation in language applications ,
Active learning for semantic segmentation: Segmentation labeling is one of the most expensive annotations to
collect. Active learning in the literature has been broadly
investigated for labeling medical images as it is one of the
most prevailing applications of AL where only human experts with sophisticated knowledge are capable of providing
labels and therefore, improving this process would reduce a
lot of time and effort for them. Suggestive Annotation (SA)
 uses uncertainty obtained from an ensemble of models trained on the labeled data and Core-sets for choosing
representative data points in a two-step strategy. also
proposed an active learning algorithm for image segmentation using an ensemble of models, but they empirically
showed their proposed information-theoretic heuristic for
uncertainty is equal in performance to SA, without using
Core-sets. extended the work by and proposed
using Monte-Carlo dropout masks on the unlabeled images
using a trained model and calculating the uncertainty on the
predicted labels of the unlabeled images. Some active learning strategies developed for image classiﬁcation can also be
used for semantic segmentation. Core-sets and max-entropy
strategies can both be used for active learning in semantic
segmentation .
Adversarial learning: Adversarial learning has been used
for different problems such as generative models , representation learning , domain adaptation ,
deep learning robustness and security etc.
use of an adversarial network enables the model to train
in a fully-differentiable by adjusting to solving the minimax optimization problem . The adversarial network
used in the feature space has been extensively researched
in the representation learning and domain adaptation literature to efﬁciently learn a useful feature space for the task
 .
3. Adversarial Learning of Variational Autoencoders for Active Learning
Let (xL, yL) be a sample pair belonging to the pool of
labeled data (XL, YL).
XU denotes a much larger pool
of samples (xU) which are not yet labeled. The goal of
the active learner is to train the most label-efﬁcient model
by iteratively querying a ﬁxed sampling budget, b number
of the most informative samples from the unlabeled pool
(xU ∼XU), using an acquisition function to be annotated
by the oracle such that the expected loss is minimized.
3.1. Transductive representation learning.
We use a β-variational autoencoder for representation
learning in which the encoder learns a low dimensional
space for the underlying distribution using a Gaussian prior
and the decoder reconstructs the input data.
In order to
capture the features that are missing in the representation
learned on the labeled pool, we can beneﬁt from using the
unlabeled data and perform transductive learning. The objective function of the β-VAE is minimizing the variational
lower bound on the marginal likelihood of a given sample
formulated as
E[log pθ(xL|zL)] −β DKL(qφ(zL|xL)||p(z))
+E[log pθ(xU|zU)] −β DKL(qφ(zU|xU)||p(z)) (1)
where qφ and pθ are the encooder and decoder parameterized by φ and θ, respectively. p(z) is the prior chosen as
a unit Gaussian, and β is the Lagrangian parameter for the
optimization problem. The reparameterization trick is used
for proper calculation of the gradients .
3.2. Adversarial representation learning
The representation learned by the VAE is a mixture of
the latent features associated with both labeled and unlabeled data. An ideal active learning agent is assumed to
have a perfect sampling strategy that is capable of sending
the most informative unlabeled data to the oracle. Most of
the sampling strategies rely on the model’s uncertainty, i.e,
the more uncertain the model is on the prediction, the more
informative that speciﬁc unlabeled data must be. However,
this introduces vulnerability to the outliers. In contrast we
train an adversarial network for our sampling strategy to
learn how to distinguish between the encoded features in
the latent space. This adversarial network is analogous to
discriminators in GANs where their role is to discriminate
between fake and real images created by the generator. In
VAAL, the adversarial network is trained to map the latent
representation of zL ∪zU to a binary label which is 1 if
the sample belongs to XL and is 0, otherwise. The key to
our approach is that the VAE and the adversarial network
are learned together in an adversarial fashion. While the
VAE maps the labeled and unlabeled data into the same latent space with similar probability distribution qφ(zL|xL)
and qφ(zU|xU), it fools the discriminator to classify all the
inputs as labeled. On the other hand, the discriminator attempts to effectively estimate the probability that the data
comes from the unlabeled data. We can formulate the objective function for the adversarial role of the VAE as a binary
cross-entropy loss as below
VAE = −E[log(D(qφ(zL|xL)))] −E[log(D(qφ(zU|xU)))]
The objective function to train the discriminator is also
given as below
LD = −E[log(D(qφ(zL|xL)))] −E[log(1 −D(qφ(zU|xU)))]
By combining Eq. (1) and Eq. (2) we obtain the full objective function for the VAE in VAAL as below
LVAE = λ1Ltrd
VAE + λ2Ladv
where λ1 and λ2 are hyperparameters that determine the
effect of each component to learn an effective variational
adversarial representation.
The task module denoted as T in Fig. (1), learns the task
for which the active learner is being trained. T is trained
separately from the active learner as they do not depend
on each other at any step. We report results below on image classiﬁcation and semantic segmentation tasks, using
VGG16 and dilated residual network (DRN) architecture with an unweighted cross-entropy cost function.
Our full algorithm is shown in Alg. 1.
3.3. Sampling strategies and noisy-oracles
The labels provided by the oracles might vary in how
accurate they are depending on the quality of available human resources. For instance, medical images annotated by
expert humans are assumed to be more accurate than crowdsourced data collected by non-expert humans and/or available information on the cloud. We consider two types of
oracles: an ideal oracle which always provides correct labels for the active learner, and a noisy oracle which nonadversarially provides erroneous labels for some speciﬁc
classes. This might occur due to similarities across some
classes causing ambiguity for the labeler. In order to present
this oracle realistically, we have applied a targeted noise on
visually similar classes. The sampling strategy in VAAL
is shown in Alg. (2). We use the probability associated
with the discriminator’s predictions as a score to collect b
number of samples in every batch predicted as “unlabeled”
with the lowest conﬁdence to be sent to the oracle. Note
that the closer the probability is to zero, the more likely it is
that it comes from the unlabeled pool. The key idea to our
approach is that instead of relying on the performance of
the training alforithm on the main-stream task, which suffers from being inaccurate specially in the beginning, we
select samples based on the likelihood of their representativeness with respect to other samples which discriminator
thinks belong to the unlabeled pool.
4. Experiments
We begin our experiments with an initial labeled pool
with 10% of the training set labeled. The budget size per
batch is equal to 5% of the training dataset. The pool of unlabeled data contains the rest of the training set from which
samples are selected to be annotated by the oracle. Once
labeled, they will be added to the initial training set and
training is repeated on the new training set. We assume the
Algorithm 1 Variational Adversarial Active Learning
Input: Labeled pool (XL, YL), Unlabeled pool (XU), Initialized models for θT , θV AE, and θD
Input: Hyperparameters: epochs, λ1, λ2, α1, α2, α3
1: for e = 1 to epochs do
sample (xL, yL) ∼(XL, YL)
sample xU ∼XU
Compute Ltrd
VAE by using Eq. 1
Compute Ladv
VAE by using Eq. 2
LVAE ←λ1Ltrd
VAE + λ2Ladv
Update VAE by descending stochastic gradients:
V AE ←θV AE −α1∇LVAE
Compute LD by using Eq. 3
Update D by descending its stochastic gradient:
D ←θD −α2∇LD
Train and update T:
T ←θT −α3∇LT
14: end for
15: return Trained θT , θV AE, θD
Algorithm 2 Sampling Strategy in VAAL
Input: b, XL, XU
Output: XL, XU
1: Select samples (Xs) with minb{θD(zU)}
2: Yo ←ORACLE(Xs)
3: (XL, YL) ←(XL, YL) ∪(Xs, Yo)
4: XU ←XU −Xs
5: return XL, XU
oracle is ideal unless stated otherwise. 2
Datasets. We have evaluated VAAL on two common vision tasks. For image classiﬁcation we have used CIFAR10
 and CIFAR100 both with 60K images of size
32 × 32, and Caltech-256 which has 30607 images of
size 224 × 224 including 256 object categories. For a better
understanding of the scalability of VAAL we have also experimented with ImageNet with more than 1.2M images
of 1000 classes. For semantic segmentation, we evaluate
our method on BDD100K and Cityscapes datasets
both of which have 19 classes. BDD100K is a diverse driving video dataset with 10K images with full-frame instance
segmentation annotations collected from distinct locations
in the United State. Cityscapes is also another large scale
driving video dataset containing 3475 frames with instance
segmentation annotations recorded in street scenes from 50
different cities in Europe. The statistics of these datasets are
summarized in Table 2 in the appendix.
Performance measurement. We evaluate the performance
2Data and code required to reproduce all plots are provided at
 
plots/plots.ipynb.
% of Labeled Data
Mean Accuracy (%)
Top-1 = 90.16 ± 0.25
Ensembles w. VarR
MC-Dropout
% of Labeled Data
Mean Accuracy (%)
Top-1 = 63.14 ± 0.2
Ensembles w. VarR
MC-Dropout
% of Labeled Data
Mean Accuracy (%)
Caltech-256
Top-1 = 90.81 ± 0.4
Ensembles w. VarR
MC-Dropout
% of Labeled Data
Mean Accuracy (%)
Top-1 = 61.47 ± 0.3
Ensembles w. VarR
MC-Dropout
Figure 2. VAAL performance on classiﬁcation tasks using CIFAR10, CIFAR100, Caltech-256, and ImageNet compared to Core-set ,
Ensembles w. VarR , MC-Dropout , DBAL , and Random Sampling. Best visible in color. Data and code required to reproduce
are provided in our code repository
of VAAL in image classiﬁcation and segmentation by measuring the accuracy and mean IoU, respectively achieved by
T trained with 10%, 15%, 20%, 25%, 30%, 35%, 40% of
the total training set as it becomes available with labels provided by the oracle. Results for all our experiments, except
for ImageNet, are averaged over 5 runs. ImageNet results
however, are obtained by averaging over 2 repetitions using
10%, 15%, 20%, 25%, 30% of the training data.
4.1. VAAL on image classiﬁcation benchmarks
Baselines. We compare our results using VAAL for image
classiﬁcation against various approaches including Core-set
 , Monte-Carlo Dropout , and Ensembles using Variation Ratios (Ensembles w. VarR) . We also show
the performance of deep Bayesian AL (DBAL) by following and perform sampling using their proposed maxentropy scheme to measure uncertainty . We also show
the results using random sampling in which samples are
uniformly sampled at random from the unlabeled pool. This
method still serves as a competitive baseline in active learning. Moreover, we use the mean accuracy achieved on the
entire dataset as an upper bound which does not adhere to
the active learning scenario.
Implementation details. We used random horizontal ﬂips
for data augmentation. The architecture used in the task
module for image classiﬁcation is VGG16 with Xavier
initialization and β-VAE has the same architecture as
the Wasserstein autoencoder with latent dimensionality
given in Table 3 in the appendix. The discriminator is a 5layer multilayer perceptron (MLP) and Adam is used
as the optimizer for all these three modules with an equal
learning rate of 5×10−4 and batch size of 64. However, for
ImageNet, learning rate varies across the modules such that
the task learner has a learning rate of 1 × 10−1 while the
VAE and the discriminator have a learning rate of 5×10−3.
Training continues for 100 epochs in ImageNet and for 100
epochs in all other datasets. The budget size for classiﬁcation experiments is chosen to be 5% of the full training
set, which is equivalent to 2500, 2500, 1530, and 64060 for
CIFAR10, CIFAR100, Caltech-256, and ImageNet, respectively in VAAL and all other baselines. A complete list of
hyperparameters used in our model are found through a grid
search and are tabulated in Table 3 in the appendix.
VAAL performance CIFAR10/100 and Caltech-256.
Figure 2 shows performance of VAAL compared to prior
works. On CIFAR10, our method achieves mean accuracy
of 80.9% by using 40% of the data whereas using the entire dataset yields accuracy of 90.16%, denoted as Top-1
accuracy in Fig. 2. Comparing the mean accuracy values
for data ratios above 15% shows that VAAL evidently outperforms random sampling, DBAL, and MC-Dropout while
beating Ensembles by a smaller margin and becoming onpar with Core-set. On CIFAR100, VAAL remains competitive with Ensembles w. VarR and Core-set, and outperforms
all other baselines. The maximum achievable mean accuracy is 63.14% on CIFAR100 using 100% of the data while
VAAL achieves 47.95% by only using 40% of it. Moreover,
for data ratios above 20% of labeled data, VAAL consistently requires ∼2.5% less number of labels compared to
Core-set or Ensembles w. VarR in order to achieve the same
accuracy, which is equal to 1250 labels. On Caltech-256,
which has real images of object categories, VAAL consistently outperforms all baselines by an average margin of
1.78% from random sampling and 1.01% from the most
competitive baseline, Core-set.
DBAL method performs
nearly identical to random sampling while MC-Dropout
yields lower accuracies than random sampling. By looking at the number of labels required to reach a ﬁxed performance, for instance, 83.6%, VAAL needs 25% of data
(7651 images) to be labeled whereas this number is approximately 9200 and 9500 for Core-set and Ensemble w. VarR,
respectively. Random sampling, DBAL, and MC-Dropout
all need more than 12200 images.
As can be seen in Fig. 2, VAAL outperforms Core-set
with higher margins as the number of classes increases from
10 to 100 to 256. The theoretical analysis shown in 
conﬁrms that Core-set is more effective when fewer classes
are present due to the negative impact of high dimensionality on p-norms in the Core-set method.
VAAL performance on ImageNet. ImageNet is a challenging large scale dataset which we use to show scalability
of our approach. Fig. 2 shows that we improve the state-ofthe-art by 100% increase in the gap between the accuracy
achieved by the previous state-of-the-art methods (Core-set
and Ensemble) and random sampling. As can be seen in
Fig. 2, this improvement can be also viewed in the number
of samples required to achieve a speciﬁc accuracy. For instance, the accuracy of 48.61% is achieved by VAAL using
256K number of images whereas Core-set and Ensembles
w. VarR should be provided with almost 32K more labeled
images to obtain the same performance. Random sampling
remains as a competitive baseline as both DBAL and MC-
Dropout perform below that.
% of Labeled Data
Cityscapes
Top mIoU = 62.95 ± 0.70
MC-Dropout
% of Labeled Data
Top mIoU = 44.96 ± 0.40
MC-Dropout
Figure 3. VAAL performance on segmentation tasks using
Cityscapes and BDD100K compared to QBC , Core-set ,
MC-Dropout , and Random Sampling. Data and code required
to reproduce are provided in our code repository
4.2. VAAL on image segmentation benchmarks
Baselines. We evaluate VAAL against state-of-the-art AL
approaches for image segmentation including Core-set ,
MC-Dropout , Query-By-Committee (QBC) , and
suggestive annotation (SA) . SA is a hybrid ensemble
method that uses bootstrapping for uncertainty estimation
 and core-set for measuring representativeness.
Implementation details. Similar to the image classiﬁcation
setup, we used random horizontal ﬂips for data augmentation. The β-VAE is a Wasserstein autoencoder , and the
discriminator is also a 5-layer MLP. The architecture used
in the task module for image segmentation is DRN and
Adam with a learning rate of 5 × 10−4 is chosen as the optimizer for all three modules. The batch size is set as 8 and
training stops after 50 epochs in both datasets. The budget
size used in VAAL and all baselines is set as 400 and 150
for BDD100K and Cityscapes, respectively. All hyperparameteres are shown in Table 3 in the appendix
VAAL performance on Cityscapes and BDD100K. Figure 3 demonstrates our results on the driving datasets compared with four other baselines as well as the reference
random sampling.
As we also observed in section 4.1
Core-set performs better with fewer number of classes
in image classiﬁcation tasks .
However, the large
gap between VAAL and Core-set, despite only having 19
classes, suggests that Core-set and Ensemble-based methods (QBC in here) suffer from high dimensionality in the
inputs (688 × 688 as opposed to thumbnail 32 × 32 images
used in CIFAR10/100). QBC and Core-set, and SA (Coreset + QBC) perform nearly identical, while MC-Dropout
remains less effective than random sampling. VAAL consistently demonstrate signiﬁcantly better performance by
achieving the highest mean IoU on both Cityscapes and
BDD100K across different labeled data ratios. VAAL is
able to achieve %mIoU of 57.2 and 42.3 using only 40%
labeled data while the maximum mIoU we obtained using
100% of these datasetes is 62.95 and 44.95 on Cityscapes
and BDD100K, respectively. In terms of required labels
by each method, on Cityscapes VAAL needs 743 annotations to reach 54.1% of mIoU whereas QBC, Core-set,
SA, random sampling, MC-Dropout demand nearly 800,
890, 910, 960, and 1041 labels, respectively. Similarly on
BDD100K in order to reach 41% of mIoU, other baselines
need 5%−10% more annotations than VAAL requires only
30%. Considering the difﬁculties in full frame instance segmentation, VAAL is able to effectively reduce the required
time and effort for such dense annotations.
5. Analyzing VAAL in Detail
In this section, we take a deeper look into our model by
ﬁrst performing ablation and then evaluating the effect of
possible biases and noise on its performance. Sensitivity of
VAAL to budget size is also explored in 5.2.
5.1. Ablation study
Figure 4 presents our ablation study to inspect the contribution of the key modules in VAAL including the VAE, and
the discriminator (D). We perform ablation on the segmentation task which is more challenging than classiﬁcation and
we use BDD100K as it is larger than Cityscapes. The variants of ablations we consider are: 1) eliminating VAE, 2)
Frozen VAE with D, 3) eliminating D. In the ﬁrst ablation,
we explore the role of the VAE as the representation learner
by having only a discriminator trained on the image space to
discriminate between labeled and unlabeled pool. As shown
in Fig. 4, this setting results in the discriminator to only
memorize the data and yields the lowest performance. Also,
it reveals the key role of the VAE in not only learning a rich
latent space but also playing an effective mini-max game
with the discriminator to avoid overﬁtting. In the second
ablation scenario, we add a VAE to the previous setting to
encode-decode a lower dimensional space for training D.
However, here we avoid training the VAE and hence merely
explore its role as an autoencoder. This setting performs
better than having only the D trained in a high dimensional
% of Labeled Data
Ablation on BDD100K
VAAL (VAE + Dis)
Fixed VAE + Dis
Figure 4. Ablation results on analyzing the effect of the VAE and
the discriminator denoted as Dis here. Data and code required to
reproduce are provided in our code repository
space, but yet performs similar or worse than random sampling suggesting that discriminator failed at learning representativeness of the samples in the unlabeled pool. In the
last ablation, we explore the role of the discriminator by
training only a VAE that uses 2-Wasserstein distance from
the cluster-centroid of the labeled dataset as a heuristic to
explicitly measure uncertainty. For a multivariate isotropic
Gaussian distribution, the closed-form solution for the 2-
Wasserstein distance between two probability distributions
 can be written as
||µi −µj||2
where ||.||F represents the Frobenius norm and µi, Σi denote the µ, Σ predicted by the encoder and µj, Σj are the
mean and variance for the normal distribution over the labeled data from which the latent variable z is generated. In
this setting, we see an improvement over random sampling
which shows the effect of explicitly measuring the uncertainty in the learned latent space. However, VAAL appears
to outperform all these scenarios by implicitly learning the
uncertainty over the adversarial game between the discriminator and the VAE.
5.2. VAAL’s Robustness
Effect of biased initial labels in VAAL. We investigate
here how bias in the initial labeled pool affect VAAL’s performance as well as other baselines on CIFAR100 dataset.
Intuitively, bias can affect the training such that it causes
the initially labeled samples to be not representative of the
underlying data distribution by being inadequate to cover
most of the regions in the latent space. We model a possible form of bias in the labeled pool by not providing labels
for m chosen classes at random and we compare it to the
case where samples are randomly selected from all classes.
% of Labeled Data
Mean Accuracy (%)
Biased initial labeled pool
VAAL (m=10)
Core-set (m=10)
Random (m=10)
VAAL (m=20)
Core-set (m=20)
Random (m=20)
% of Labeled Data
Mean Accuracy (%)
Various budgets
VAAL (b=5%)
Core-set (b=5%)
Ensemble (b=5%)
Random (b=10%)
VAAL (b=10%)
Core-set (b=10%)
Ensemble (b=10%)
% of Labeled Data
Mean Accuracy (%)
Noisy oracle
VAAL (ε = 10%)
Core-set (ε = 10%)
Random (ε = 10%)
VAAL (ε = 20%)
Core-set (ε = 20%)
Random (ε = 20%)
VAAL (ε = 30%)
Core-set (ε = 30%)
Random (ε = 30%)
Figure 5. Analyzing robustness of VAAL to noisy labels, budget size, and biased initial labeled pool using CIFAR100. Best viewed in
color. Data and code required to reproduce are provided in our code repository
We exclude the data for m = 10 and m = 20 classes at
random in the initial labeled pool to explore how it affects
the performance of the model. Figure 5 shows for m = 10
and m = 20, VAAL is superior to Core-set and random
sampling in selecting informative samples from the classes
that were underrepresented in the initial labeled set. We
also observe that VAAL with m = 20 missing classes performs nearly identical to Core-Set and signiﬁcantly better
than random sampling where each has half number of missing classes.
Effect of budget size on performance. Figure 5 illustrates
the effect of the budget size on our model compared to the
most competitive baselines on CIFAR100.
We repeated
our experiments in section 4.1 for a lower budget size of
b = 5%. We observed that VAAL outperforms Core-Set
and Ensemble w. VarR, as well as random sampling, on
both budget sizes of b = 5% and b = 10%. Core-set comes
at the second best method followed by Ensemble in Fig 5.
We note that b = 5% for all methods, including VAAL, has
a slightly better performance compared to when b = 10%
which is expected to happen because a larger sampled batch
results in adding redundant samples instead of more informative ones.
Noisy vs. ideal oracle in VAAL. In this analysis we investigate the performance of VAAL in the presence of noisy
data caused by an inaccurate oracle. We assume the erroneous labels are due to the ambiguity between some classes
and are not adversarial attacks. We model the noise as targeted noise on speciﬁc classes that are meaningful to be
mislabeled by a human labeler. We used CIFAR100 for
this analysis because of its hierarchical structure in which
100 classes in CIFAR100 are grouped into 20 super-classes.
Each image comes with a ﬁne label (the class to which it
belongs) and a coarse label (the super-class to which it belongs). We randomly change the ground truth labels for
10%, 20% and 30% of the training set to have an incorrect label within the same super-class. Figure 5 shows how
a noisy oracle effects the performance of VAAL, Core-set,
and random sampling. Because both Core-set and VAAL
Time (sec)
MC-Dropout 
Core-set 
Ensembles w. VarR 
DBAL. 
VAAL (ours)
Table 1. Time taken to sample, for one sampling iteration, from
the unlabeled pool on CIFAR10 dataset. For a fair comparison we
use the same PyTorch data-loader across VAAL and baselines.
do not depend on the task learner, we see that the relative
performance is comparable to the ideal oracle presented in
Section 4.1. Intuitively, as the percentage of noisy labels
increases, all of the active learning strategies converge to
random sampling.
Choice of the network architecture in T. In order to assure VAAL is insensitive to the VGG16 architecture used
in our classiﬁcation experiments, we also used ResNet18
 in VAAL and the most competitive baseline (Core-set).
Figure 6 in the appendix shows the choice of the architecture does not affect the performance gap between VAAL
and Core-set.
5.3. Sampling time analysis
The sampling strategy of an active learner has to select samples in a time-efﬁcient manner. In other words, it
should be as close as possible to random sampling, considering the fact that random sampling is still an effective
baseline. Table 1 shows our comparison for VAAL and all
our baselines on CIFAR10 using a single NVIDIA TITAN
Xp. Table 1 shows the time needed to sample a ﬁxed budget of images from the unlabeled pool for all the methods.
MC-Dropout performs multiple forward passes to measure
the uncertainty from 10 dropout masks which explains why
it appears to be very slow in sample selection. Core-set and
Ensembles w. VarR, are the most competitive baselines to
VAAL in terms of their achieved mean accuracy. However,
in sampling time, VAAL takes 10.59 seconds while Coreset requires 75.33 sec and Ensembles w. VarR needs 20.48
sec. DBAL is on-par in sampling time with VAAL,
however, DBAL is outperformed in accuracy by all other
methods including random sampling which can sample in
only a few milliseconds. The signiﬁcant difference between
Core-set and VAAL is due to the fact that Core-set needs
to solve an optimization problem for sample selection as
opposed to VAAL which only needs to perform inference
on the discriminator and rank its output probabilities. The
Ensembles w. VarR method uses 5 models to measure the
uncertainty resulting in better computational efﬁciency but
it does not yet perform as fast as VAAL.
6. Conclusion
In this paper we proposed a new batch mode taskagnostic active learning algorithm, VAAL, that learns a
latent representation on both labeled and unlabeled data
in an adversarial game between a VAE and a discriminator, and implicitly learns the uncertainty for the samples
deemed to be from the unlabeled pool. We demonstrate
state-of-the-art results, both in terms of accuracy and sampling time, on small and large-scale image classiﬁcation
(CIFAR10, CIFAR100, Caltech-256, ImageNet) and segmentation datasets (Cityscapes, BDD100K).
We further
showed that VAAL is robust to noisy labels and biased initial labeled data, and it performs consistently well, given
different oracle budgets.